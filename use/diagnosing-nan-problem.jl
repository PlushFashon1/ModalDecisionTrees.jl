best_attributes_idxs = [1, 4, 25, 9, 10]

X = X[:,best_attributes_idxs,:]
Y = Y[:]

train_idXs = [5633, 4199, 5606, 909, 3982, 6025, 1708, 2576, 3868, 6923, 5418, 2248, 5541, 3089, 21, 2692, 246, 5945, 226, 2924, 5429, 5804, 1772, 7046, 3940, 3457, 5467, 3542, 4116, 934, 24, 6644, 178, 3410, 3936, 6046, 213, 4940, 3924, 3321, 146, 6751, 15, 6525, 59, 1240, 5566, 6499, 137, 1046, 1970, 3332, 3917, 4203, 142, 4805, 5663, 4951, 5499, 6156, 1728, 3484, 231, 971, 1856, 3738, 3899, 3537, 5404, 6473, 282, 5170, 4091, 1459, 11, 2502, 1677, 4686, 121, 834, 5599, 6937, 1883, 2907, 156, 7105, 5490, 6232, 1667, 2588, 87, 2956, 33, 3762, 154, 2300, 4106, 6248, 3872, 674, 3998, 2937, 1759, 4216, 68, 1201, 5414, 966, 5632, 5151, 3912, 2046, 1685, 2320, 180, 6309, 2010, 4696, 2, 1048, 5401, 4889, 245, 365, 165, 2900, 5581, 3659, 4087, 2512, 1915, 2416, 5629, 2238, 3915, 5145, 5389, 4539, 1760, 6416, 14, 5221, 2016, 4630, 4038, 4540, 285, 4217, 5512, 6138, 5403, 3682, 5406, 2796, 3943, 2771, 135, 496, 4045, 1197, 1791, 1274, 242, 373, 103, 4953, 1974, 1445, 134, 4810, 5679, 4870, 5549, 542, 5579, 4893, 1712, 3012, 1730, 3158, 133, 833, 187, 513, 5575, 837, 1771, 4952, 5505, 1456, 2034, 3040, 1808, 5326, 37, 7048, 1786, 2650, 128, 4619, 2033, 4613, 2002, 6284, 1978, 7074, 3949, 3243, 5497, 5342, 1852, 1475, 273, 1070, 4102, 5986, 5674, 2664, 3866, 6745, 3973, 408, 1755, 2418, 4094, 5727, 196, 4614, 5682, 1236, 1916, 6455, 1898, 3851, 4115, 1584, 1751, 5366, 16, 3126, 58, 439, 5637, 822, 3948, 6604, 5543, 4351, 1767, 3303, 212, 4583, 3888, 6237, 2000, 643, 101, 4246, 1992, 4295, 4042, 2885, 5680, 1033, 5450, 4589, 1784, 1088, 5527, 2263, 1932, 2302, 3961, 6192, 1729, 4609, 209, 1159, 3946, 6537, 1657, 4786, 5424, 6978, 2038, 3461, 1843, 3496, 3939, 6863, 1754, 6971, 1678, 3618, 1930, 2446, 114, 4437, 5570, 2840, 1981, 2737, 1869, 3812, 219, 4373, 1888, 6864, 4016, 4535, 3932, 5798, 1857, 2386, 4086, 3116, 5478, 3718, 162, 6887, 1757, 669, 4059, 1431, 287, 3689, 1743, 3254, 3978, 2774, 1811, 5989, 1702, 3426, 277, 2680, 3913, 6895, 5530, 4306, 1658, 5720, 274, 4300, 5546, 6381, 27, 404, 1686, 1001, 4097, 2953, 1921, 6611, 82, 1329, 3885, 6275, 183, 2274, 5648, 3199, 1991, 5165, 143, 770, 4101, 507, 3992, 3373, 106, 4730, 3931, 6120, 4108, 6908, 5590, 4244, 5427, 1494, 5660, 6931, 1837, 4867, 4099, 5811, 18, 6544, 1879, 2464, 1864, 2428, 5518, 415, 5, 1645, 5472, 3796, 5635, 881, 141, 2897, 3910, 7138, 3900, 2904, 3930, 1478, 4063, 4887, 96, 4138, 5626, 3101, 138, 4142, 4090, 3514, 4093, 476, 4111, 7031, 1969, 4813, 5440, 6776, 1738, 1460, 3890, 3487, 239, 2530, 1662, 5210, 5542, 437, 20, 2405, 220, 6042, 176, 5922, 179, 1376, 157, 462, 5580, 6815, 5642, 5100, 288, 3545, 3920, 5084, 1703, 4352, 119, 5704, 4034, 5313, 94, 1453, 4003, 2998, 5484, 6553, 4012, 2923, 4022, 5037, 276, 3656, 79, 2194, 4006, 5077, 1953, 3285, 3970, 5268, 3903, 3739, 5601, 2756, 93, 5364, 1905, 4257, 2026, 1585, 4032, 6153, 1684, 3241, 4041, 4333, 5560, 4748, 35, 2999, 5411, 1510, 5498, 2677, 1989, 6008, 3976, 2934, 1920, 5355, 184, 636, 263, 2720, 116, 6818, 55, 2179, 206, 5929, 1973, 6471, 5562, 4314, 5600, 3438, 1687, 6301, 23, 6402, 5591, 3790, 5567, 5380, 5513, 994, 4036, 2732, 110, 6290, 194, 790, 5479, 2252, 132, 4303, 1880, 4512, 5563, 6562, 1725, 1022, 88, 3844, 5547, 677, 4039, 3405, 3933, 5815, 1853, 6987, 3907, 975, 4024, 5781, 230, 2613, 1967, 6982, 3882, 4580, 4054, 6844, 1959, 1045, 1761, 4969, 5571, 5330, 271, 2702, 269, 503, 2004, 2723, 1694, 2061, 5616, 6661, 1794, 2131, 3879, 4693, 5641, 4462, 5511, 3109, 1762, 2216, 4020, 2172, 5594, 901, 1726, 3670, 3876, 4890, 5435, 1589, 5493, 6347, 5420, 6423, 1938, 3655, 286, 6535, 4089, 5988, 1813, 6147, 1804, 2724, 5439, 2419, 1740, 4929, 1792, 4707, 1903, 6013, 64, 2748, 218, 1430, 1746, 1568, 4074, 4235, 1961, 1294, 1683, 533, 3964, 2357, 124, 6368, 1831, 1296, 1865, 1382, 172, 4175, 5397, 6875, 5447, 4298, 5428, 2853, 89, 4550, 2035, 2497, 5532, 1029, 47, 869, 130, 1319, 1753, 2905, 1850, 6243, 5574, 843, 1937, 2332, 1836, 4163, 98, 6824, 5474, 4264, 228, 2178, 1910, 1235, 3923, 2249, 4021, 6127, 125, 2174, 1873, 5756, 1926, 4139, 5536, 4547, 1688, 6677, 3, 6077, 5614, 4183, 4047, 2239, 1918, 488, 3925, 693, 71, 1189, 257, 3819, 1701, 364, 1840, 2824, 5483, 5122, 1816, 2206, 1947, 2842, 1699, 5997, 1925, 5961, 2012, 6393, 5669, 3736, 5422, 2460, 2039, 6283, 10, 873, 115, 4787, 3898, 3687, 4124, 6740, 5495, 6868, 4050, 3422, 5410, 695, 5565, 6697, 1977, 2903, 5475, 6256, 2022, 3036, 6, 6345, 5568, 2237, 4110, 4574, 4071, 2201, 5504, 1338, 182, 541, 1739, 6783, 4030, 5098, 5552, 1547, 1769, 314, 126, 3549, 1987, 5261, 43, 919, 217, 3700, 5412, 6894, 5415, 2452, 1787, 3820, 4056, 5273, 1998, 601, 5463, 2050, 1895, 3441, 3960, 687, 3952, 4611, 267, 7018, 67, 851, 249, 2741, 1706, 5127, 5609, 4400, 1881, 7086, 195, 1243, 1942, 6737, 1922, 2614, 1875, 368, 1986, 5797, 5486, 611, 5436, 1405, 3990, 5167, 3941, 2587, 99, 5762, 1944, 5169, 3950, 6024, 1897, 3763, 5434, 3706, 1748, 3076, 5576, 7117, 188, 6686, 5386, 1598, 1832, 4966, 243, 326, 3967, 5087, 5683, 5698, 5470, 4404, 1695, 5861, 1819, 2787, 1727, 929, 57, 4510, 5583, 7017, 238, 6482, 1901, 921, 3878, 2297, 3996, 3664, 4107, 3555, 62, 5777, 1796, 3420, 1972, 6755, 266, 6180, 5449, 2814, 148, 3642, 46, 5079, 1736, 7125, 51, 3829, 2015, 3680, 5684, 2532, 3889, 4350, 5431, 2714, 1899, 3415, 5419, 1364, 1752, 939, 4025, 577, 5480, 2296, 5396, 3841, 5585, 977, 1949, 894, 1968, 915, 136, 4185, 5387, 7115, 1892, 5040, 1689, 1043, 4044, 2850, 1731, 3585, 4048, 3159, 100, 1488, 1979, 2783, 229, 4241, 3892, 6857, 1956, 3178, 3934, 5785, 1672, 6230, 4118, 1562, 3956, 820, 140, 1418, 1833, 1215, 4109, 1516, 1663, 1169, 5502, 3785, 2018, 2193, 1954, 4751, 5453, 3002, 5675, 3595, 5559, 4168, 1862, 747, 4009, 2859, 5586, 6062, 2029, 6620, 5688, 1190, 5488, 2827, 1719, 886, 1785, 3613, 139, 1590, 5491, 1113, 3999, 2261, 5584, 1003, 4002, 705, 1855, 5212, 4128, 1384, 5661, 4671, 5522, 6016, 4028, 2823, 5587, 5994, 4072, 7137, 113, 4996, 5438, 1489, 1929, 3679, 3906, 1155, 190, 2914, 5612, 6130, 227, 4562, 155, 2765, 3914, 1388, 5409, 5779, 150, 4811, 1765, 5148, 2006, 1139, 1777, 4319, 168, 879, 4057, 6625, 3980, 6797, 5649, 6479, 5509, 4862, 5408, 1559, 5618, 1233, 1806, 4703, 5670, 2425, 233, 3139, 5457, 5275, 34, 4843, 1995, 2338, 2005, 1267, 5442, 5022, 1858, 6699, 1768, 6372, 2032, 2531, 284, 4857, 5517, 2078, 1960, 6736, 5430, 6554, 4051, 3582, 151, 7032, 1824, 5775, 5653, 6802, 1907, 5904, 1934, 821, 5573, 334, 3880, 4726, 1904, 4559, 50, 4239, 38, 2176, 5444, 5894, 1996, 4931, 5550, 2259, 1931, 3070, 5535, 5374, 4061, 409, 237, 3649, 2013, 3631, 19, 3754, 1711, 3165, 1928, 2289, 1723, 7147, 5555, 6816, 3911, 2868, 5640, 497, 1982, 2487, 3986, 4839, 3870, 348, 1773, 1455, 4082, 2066, 144, 6021, 3954, 2856, 1676, 4355, 1714, 5340, 224, 5150, 1779, 3247, 9, 5108, 4123, 3460, 4011, 6507, 75, 4489, 153, 4757, 1782, 2640, 4120, 2188, 3991, 3028, 40, 5866, 235, 5257, 4013, 4197, 5627, 1054, 1807, 3533, 3944, 2293, 5678, 5113, 5473, 5361, 131, 6407, 3995, 4465, 31, 6052, 1764, 6010, 2009, 3398, 4019, 4715, 3979, 5132, 1976, 2382, 1758, 7150, 92, 2965, 1950, 3492, 3901, 1260, 8, 5890, 5638, 6949, 244, 481, 4075, 2652, 5622, 4231, 281, 4885, 5455, 1016, 1805, 6664, 5647, 2380, 1849, 2970, 112, 5816, 1673, 3244, 4114, 5711, 1964, 3258, 3984, 6855, 202, 6709, 192, 1318, 1720, 954, 1933, 724, 1885, 5149, 1818, 1471, 3909, 6458, 181, 5301, 1778, 5105, 1851, 6814, 29, 3782, 1936, 4234, 259, 2072, 3981, 642, 241, 4504, 2037, 5111, 4053, 1447, 1945, 6509, 109, 6472, 3928, 6858, 1775, 6860, 3865, 2684, 1975, 7089, 63, 3558, 2020, 1437, 5676, 5258, 5441, 3825, 1826, 319, 4026, 6674, 5452, 7066, 1827, 1642, 91, 6183, 170, 3760, 278, 2120, 5407, 2356, 123, 808, 1732, 2992, 44, 6467, 1835, 5331, 111, 3098, 4098, 2211, 1988, 2375, 1675, 5845, 1839, 4464, 1946, 4646, 5508, 2789, 97, 3114, 5671, 4506, 145, 3588, 3945, 1536, 1820, 4436, 5458, 2163, 1802, 4211, 4070, 4137, 4046, 1106, 1709, 1652, 5589, 5976, 4083, 3684, 1682, 331, 2036, 6337, 5459, 361, 5548, 7001, 3884, 3210, 95, 1307, 4073, 2492, 4000, 1180, 1919, 6475, 3983, 5115, 2019, 4710, 1698, 1006, 1997, 2475, 5398, 3106, 5643, 1074, 3969, 608, 5391, 3113, 1909, 6163, 1896, 6993, 5510, 5104, 105, 2073, 5416, 5157, 5593, 6943, 4122, 4453, 1863, 4531, 5694, 786, 1822, 1545, 5588, 3525, 53, 4251, 5437, 3748, 255, 5973, 5384, 3175, 3985, 3495, 3873, 4374, 5619, 5825, 5645, 2806, 1842, 2229, 4029, 4623, 7, 1343, 5657, 3273, 2001, 4266, 5595, 2152, 4105, 3050, 173, 1005, 3951, 5026, 1721, 6682, 5545, 402, 1891, 595, 5445, 5336, 1750, 1390, 32, 4895, 1697, 2777, 5615, 2931, 3958, 2935, 1958, 4164, 2024, 5952, 1780, 3524, 1774, 4442, 1866, 2820, 272, 1517, 3871, 6847, 4014, 2076, 1724, 5250, 1803, 1208, 1941, 3427, 199, 4353, 1890, 2350, 1943, 6454, 222, 2200, 198, 892, 5468, 1261, 1894, 4421, 1860, 482, 261, 2767, 5652, 3131, 1670, 3308, 5489, 3280, 2030, 5136, 4069, 2399, 5456, 6178, 73, 3143, 1871, 2832, 3887, 5190, 4125, 1288, 1940, 5317, 147, 4565, 1744, 357, 5651, 6410, 5605, 569, 3896, 529, 104, 2433, 4126, 2526, 216, 689, 225, 2365, 4015, 3756, 1798, 1205, 1, 3281, 158, 3831, 250, 759, 84, 3029, 210, 4258, 1766, 4335, 5520, 3413, 122, 3635, 1889, 4684, 1700, 3490, 5557, 4829, 5668, 2672, 1867, 4432, 5405, 6906, 160, 434, 1737, 3532, 3987, 4486, 1834, 4603, 78, 6151, 1874, 6224, 5390, 1330, 3966, 6327, 5577, 6412, 5613, 1334, 2028, 2638, 1722, 6675, 4043, 998, 4035, 6457, 4068, 605, 1957, 2173, 1886, 3176, 1825, 2191, 5476, 3205, 5385, 2431, 174, 3746, 3972, 2042, 5540, 1653, 2021, 5822, 3942, 4794, 1993, 1454, 4127, 4825, 5578, 4488, 1741, 6838, 5394, 3041, 1793, 6528, 1696, 414, 1742, 754, 5462, 3330, 3955, 2282, 1713, 2961, 1733, 5829, 1801, 1246, 262, 6169, 4065, 5905, 5659, 5701, 149, 4157, 22, 3191, 1797, 5220, 177, 3568, 1965, 4632, 3971, 3765, 127, 3775, 1665, 7119, 5666, 1158, 5554, 3268, 1962, 6427, 118, 2678, 3962, 746, 3988, 3086, 5539, 1458, 1669, 3832, 5607, 2065, 5388, 4986, 30, 2324, 280, 6935, 5492, 396, 205, 4911, 3926, 2980, 1660, 3567, 4103, 2718, 5507, 6835, 5556, 2568, 223, 6608, 5402, 2805, 1983, 916, 1674, 1193, 1690, 802, 264, 6945, 129, 6229, 5572, 4243, 5656, 4419, 5464, 4975, 107, 4526, 1911, 2883, 1666, 4456, 3874, 2146, 2014, 1009, 1948, 3388, 3867, 4691, 4104, 5240, 1817, 5966, 5644, 5949, 1971, 1096, 5662, 2938, 265, 4152, 1854, 4853, 3989, 7000, 26, 4897, 4077, 3093, 5383, 328, 1749, 3179, 4062, 3110, 3938, 5162, 3921, 6266, 1735, 6116, 197, 4957, 28, 1465, 1800, 4386, 1980, 4390, 4033, 4272, 5621, 2694, 5400, 2693, 5658, 4505, 5654, 1462, 1882, 5094, 1815, 6348, 1887, 4926, 5477, 4441, 1829, 2627, 247, 4141, 4001, 2327, 1951, 512, 4027, 6601, 164, 1037, 3886, 2580, 1870, 1188, 13, 2091, 208, 2151, 5582, 3570, 1984, 4394, 5534, 6800, 1848, 2909, 2023, 447, 1841, 2111, 1692, 3716, 3897, 3840, 3953, 2573, 211, 4530, 45, 3037, 1710, 2751, 1861, 4552, 90, 1187, 2003, 4278, 4018, 5252, 4113, 855, 5544, 1417, 5672, 3177, 159, 751, 4088, 2064, 3904, 992, 39, 1008, 56, 7093, 4031, 3766, 1924, 1410, 54, 721, 5628, 6179, 4037, 756, 1781, 336, 1716, 5708, 4010, 6083, 1877, 2517, 275, 5213, 5603, 5202, 2027, 4878, 232, 347, 5487, 5759, 5526, 302, 215, 2335, 1717, 3453, 1923, 6302, 4076, 6714, 5500, 2955, 61, 4750, 1859, 723, 70, 1202, 5617, 582, 3869, 5766, 1810, 964, 3935, 6692, 5564, 3084, 1872, 6926, 5551, 6531, 66, 1377, 5528, 1412, 1788, 3253, 5426, 738, 279, 456, 1913, 5187, 5485, 3192, 1704, 6249, 5553, 3259, 5506, 4212, 5413, 4161, 240, 2569, 1747, 6543, 5519, 5950, 236, 2792, 5417, 5315, 4040, 6774, 5448, 3397, 5460, 2563, 5423, 5893, 1681, 2352, 69, 2743, 1927, 2651, 5393, 2164, 1809, 739, 1994, 3367]

X = X[:,:,train_idXs]
Y = Y[train_idXs]

size(X)
size(Y)

this_node_idXs = [474, 1232, 887, 894, 600, 248, 1330, 65, 243, 278, 1217, 234, 837, 1397, 283, 73, 916, 1209, 834, 831, 403, 1196, 52, 828, 426, 83, 930, 217, 459, 952, 956, 1188, 511, 791, 188, 328, 630, 1360, 755, 97, 177, 1249, 1002, 1253, 1006, 1019, 341, 1033, 1255, 161, 646, 1391, 737, 1143, 1141, 349, 1072, 538, 728, 1081, 717, 543, 1107, 381, 679, 374, 1116]

X = X[:,:,this_node_idXs]
Y = Y[this_node_idXs]

size(X)
size(Y)

world_refs = Any[DecisionTree.ModalLogic.Interval[ModalLogic.Interval(4,6)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(12,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,13), ModalLogic.Interval(2,13)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,14), ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(7,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,14), ModalLogic.Interval(1,16), ModalLogic.Interval(2,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(7,14), ModalLogic.Interval(7,15), ModalLogic.Interval(7,16), ModalLogic.Interval(8,14), ModalLogic.Interval(8,15), ModalLogic.Interval(8,16), ModalLogic.Interval(9,14), ModalLogic.Interval(9,15), ModalLogic.Interval(9,16), ModalLogic.Interval(10,12), ModalLogic.Interval(10,13), ModalLogic.Interval(10,14), ModalLogic.Interval(10,15), ModalLogic.Interval(10,16), ModalLogic.Interval(11,13), ModalLogic.Interval(11,14), ModalLogic.Interval(11,15), ModalLogic.Interval(11,16), ModalLogic.Interval(12,14), ModalLogic.Interval(12,15), ModalLogic.Interval(12,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,16), ModalLogic.Interval(4,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,14), ModalLogic.Interval(2,14), ModalLogic.Interval(3,14), ModalLogic.Interval(1,15), ModalLogic.Interval(2,15), ModalLogic.Interval(3,15), ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(5,7), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(4,6)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(2,4)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,13), ModalLogic.Interval(1,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(4,6), ModalLogic.Interval(5,7), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,13), ModalLogic.Interval(1,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(9,14), ModalLogic.Interval(9,15), ModalLogic.Interval(10,13), ModalLogic.Interval(10,14), ModalLogic.Interval(10,15), ModalLogic.Interval(11,13), ModalLogic.Interval(11,14), ModalLogic.Interval(11,15)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,12), ModalLogic.Interval(2,12), ModalLogic.Interval(1,13), ModalLogic.Interval(2,13), ModalLogic.Interval(1,14), ModalLogic.Interval(2,14), ModalLogic.Interval(2,11)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(10,13)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,12), ModalLogic.Interval(2,12), ModalLogic.Interval(1,13), ModalLogic.Interval(2,13), ModalLogic.Interval(1,14), ModalLogic.Interval(2,14), ModalLogic.Interval(2,11)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(10,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(4,9), ModalLogic.Interval(4,10), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,10), ModalLogic.Interval(6,8), ModalLogic.Interval(6,9), ModalLogic.Interval(6,10)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(2,6), ModalLogic.Interval(3,6), ModalLogic.Interval(3,7), ModalLogic.Interval(4,6), ModalLogic.Interval(4,7)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(3,5), ModalLogic.Interval(3,6)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(2,4), ModalLogic.Interval(2,11), ModalLogic.Interval(2,12), ModalLogic.Interval(3,11), ModalLogic.Interval(3,12), ModalLogic.Interval(1,11), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,11), ModalLogic.Interval(5,12), ModalLogic.Interval(6,8), ModalLogic.Interval(6,9), ModalLogic.Interval(6,11), ModalLogic.Interval(6,12), ModalLogic.Interval(7,9), ModalLogic.Interval(7,11), ModalLogic.Interval(7,12), ModalLogic.Interval(8,11), ModalLogic.Interval(8,12), ModalLogic.Interval(9,11), ModalLogic.Interval(9,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(3,7), ModalLogic.Interval(4,6), ModalLogic.Interval(4,7), ModalLogic.Interval(4,8), ModalLogic.Interval(4,9), ModalLogic.Interval(4,10), ModalLogic.Interval(5,7), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,10), ModalLogic.Interval(5,11), ModalLogic.Interval(5,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(8,10)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(6,11), ModalLogic.Interval(7,11), ModalLogic.Interval(8,10), ModalLogic.Interval(8,11), ModalLogic.Interval(8,12), ModalLogic.Interval(9,11), ModalLogic.Interval(9,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,15)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(9,16), ModalLogic.Interval(10,16), ModalLogic.Interval(11,15), ModalLogic.Interval(11,16), ModalLogic.Interval(12,15), ModalLogic.Interval(12,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(9,12), ModalLogic.Interval(9,13), ModalLogic.Interval(11,13)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,13), ModalLogic.Interval(2,13)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(2,4), ModalLogic.Interval(2,6), ModalLogic.Interval(2,7)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(12,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(12,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(3,5), ModalLogic.Interval(3,6), ModalLogic.Interval(3,7)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(10,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(3,7), ModalLogic.Interval(4,6), ModalLogic.Interval(4,7), ModalLogic.Interval(4,8), ModalLogic.Interval(4,9), ModalLogic.Interval(4,10), ModalLogic.Interval(5,7), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,10), ModalLogic.Interval(5,11), ModalLogic.Interval(5,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,14), ModalLogic.Interval(2,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(5,7)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(6,8), ModalLogic.Interval(6,9)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,16), ModalLogic.Interval(4,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(6,11), ModalLogic.Interval(7,11), ModalLogic.Interval(8,10), ModalLogic.Interval(8,11), ModalLogic.Interval(8,12), ModalLogic.Interval(9,11), ModalLogic.Interval(9,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,16), ModalLogic.Interval(4,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(2,4), ModalLogic.Interval(2,11), ModalLogic.Interval(2,12), ModalLogic.Interval(3,11), ModalLogic.Interval(3,12), ModalLogic.Interval(1,11), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,11), ModalLogic.Interval(5,12), ModalLogic.Interval(6,8), ModalLogic.Interval(6,9), ModalLogic.Interval(6,11), ModalLogic.Interval(6,12), ModalLogic.Interval(7,9), ModalLogic.Interval(7,11), ModalLogic.Interval(7,12), ModalLogic.Interval(8,11), ModalLogic.Interval(8,12), ModalLogic.Interval(9,11), ModalLogic.Interval(9,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(2,6), ModalLogic.Interval(3,5), ModalLogic.Interval(3,6), ModalLogic.Interval(3,7), ModalLogic.Interval(4,6), ModalLogic.Interval(4,7)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,16), ModalLogic.Interval(2,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,3), ModalLogic.Interval(1,4), ModalLogic.Interval(1,5), ModalLogic.Interval(1,6), ModalLogic.Interval(1,7), ModalLogic.Interval(1,8), ModalLogic.Interval(1,9), ModalLogic.Interval(1,10), ModalLogic.Interval(2,4), ModalLogic.Interval(2,5), ModalLogic.Interval(2,6), ModalLogic.Interval(2,7), ModalLogic.Interval(2,8), ModalLogic.Interval(2,9), ModalLogic.Interval(2,10), ModalLogic.Interval(3,8)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(4,8), ModalLogic.Interval(4,9), ModalLogic.Interval(5,7), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,10), ModalLogic.Interval(6,8), ModalLogic.Interval(6,9)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,13), ModalLogic.Interval(1,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,16), ModalLogic.Interval(4,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(9,11)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,13), ModalLogic.Interval(2,13)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(4,6), ModalLogic.Interval(9,11), ModalLogic.Interval(10,12), ModalLogic.Interval(10,13), ModalLogic.Interval(10,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,3), ModalLogic.Interval(2,4)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(6,8)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,13), ModalLogic.Interval(2,13)]]

# best_descriptors = [:min_m, :max_m, :mean_m, :CO_FirstMin_ac, :SB_BinaryStats_mean_longstretch1]


# decision: ⟨E̅⟩ ( :SB_BinaryStats_mean_longstretch1 )(A1) >= 7.0)

test_operator = ≥
threshold = 7.0
aggregator = ModalLogic.existential_aggregator(test_operator)
relation = ModalLogic.IA_Ei
i_attribute = 1

f = catch22[:SB_BinaryStats_mean_longstretch1]
feature = AttributeFunctionFeatureType(i_attribute, f)

ontology = ModalLogic.getIntervalOntologyOfDim(Val(1))
T = Float64

interesting_instances = BitVector([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])

# for (instance,worlds) in zip(eachslice(X,dims=3),world_refs)
sat = []
for (i_instance,worlds) in collect(zip(1:size(X,3),world_refs))#[interesting_instances]
	println("Instance:")
	# display(X[:,:,i_instance])
	dummy_X = X[:,[i_attribute],[i_instance]]
	inst = dummy_X[:,:,1]
	display(dummy_X)
	features = [feature]
	featsnops = [[≥, ≤]]

	final_gamma = aggregator([[
		begin
			println(_w)
			gamma = aggregator([ModalLogic.aggregator_bottom(aggregator, T), [begin
				# gamma = ModalLogic.get_gamma(X, i_instance, w, feature)
				dummy_gamma = ModalLogic.get_gamma(dummy_X, 1, w, feature)
				dummy_gamma_2 = f(dummy_X[w.x:(w.y-1),1,1])
				# println("gamma: $(w)\t$(gamma)")
				# println("dummy_gamma: $(w)\t$(dummy_gamma)")
				@assert dummy_gamma_2 === dummy_gamma
				# @assert gamma === dummy_gamma
				# break
				println("\t$(w)\t$(dummy_gamma)")
				dummy_gamma
			end for w in ModalLogic.enumAccReprAggr(feature, aggregator, _w, relation, ModalLogic.inst_channel_size(inst)...)]...])
			# end for w in ModalLogic.acc_function(OntologicalDataset{Float64,1,ModalLogic.Interval}(dummy_X, ontology, features, featsnops), 1)([_w], relation)]...])
			# println(gamma)
			gamma
		end for _w in worlds]..., ModalLogic.aggregator_bottom(aggregator, T)])

	println(final_gamma)
	println(final_gamma ≥ threshold)
	# readline()
	# break
	push!(sat, Int64(final_gamma ≥ threshold))
end;
# println(sat)
# sat==sat2
sat2=sat


# Branch (42+25=67 samples) on frame 1 with decision: {1} ⟨E̅⟩ (Feature(Catch22.var"#52#54"{Symbol}(:SB_BinaryStats_mean_longstretch1), :SB_BinaryStats_mean_longstretch1, ["distribution", "stationarity"], "Longest period of consecutive values above the mean")(A1) >= 7.0), purity -0.4213733105412328
# 67 Instances: [474, 1232, 887, 894, 600, 248, 1330, 65, 243, 278, 1217, 234, 837, 1397, 283, 73, 916, 1209, 834, 831, 403, 1196, 52, 828, 426, 83, 930, 217, 459, 952, 956, 1188, 511, 791, 188, 328, 630, 1360, 755, 97, 177, 1249, 1002, 1253, 1006, 1019, 341, 1033, 1255, 161, 646, 1391, 737, 1143, 1141, 349, 1072, 538, 728, 1081, 717, 543, 1107, 381, 679, 374, 1116]
# Different partition was expected:
# Actual: [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0] (42)
# Expected: Bool[1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0] (44)
# Difference: [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (2)
# world_refs = Any[DecisionTree.ModalLogic.Interval[ModalLogic.Interval(4,6)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(12,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,13), ModalLogic.Interval(2,13)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,14), ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(7,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,14), ModalLogic.Interval(1,16), ModalLogic.Interval(2,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(7,14), ModalLogic.Interval(7,15), ModalLogic.Interval(7,16), ModalLogic.Interval(8,14), ModalLogic.Interval(8,15), ModalLogic.Interval(8,16), ModalLogic.Interval(9,14), ModalLogic.Interval(9,15), ModalLogic.Interval(9,16), ModalLogic.Interval(10,12), ModalLogic.Interval(10,13), ModalLogic.Interval(10,14), ModalLogic.Interval(10,15), ModalLogic.Interval(10,16), ModalLogic.Interval(11,13), ModalLogic.Interval(11,14), ModalLogic.Interval(11,15), ModalLogic.Interval(11,16), ModalLogic.Interval(12,14), ModalLogic.Interval(12,15), ModalLogic.Interval(12,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,16), ModalLogic.Interval(4,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,14), ModalLogic.Interval(2,14), ModalLogic.Interval(3,14), ModalLogic.Interval(1,15), ModalLogic.Interval(2,15), ModalLogic.Interval(3,15), ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(5,7), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(4,6)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(2,4)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,13), ModalLogic.Interval(1,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(4,6), ModalLogic.Interval(5,7), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,13), ModalLogic.Interval(1,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(9,14), ModalLogic.Interval(9,15), ModalLogic.Interval(10,13), ModalLogic.Interval(10,14), ModalLogic.Interval(10,15), ModalLogic.Interval(11,13), ModalLogic.Interval(11,14), ModalLogic.Interval(11,15)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,12), ModalLogic.Interval(2,12), ModalLogic.Interval(1,13), ModalLogic.Interval(2,13), ModalLogic.Interval(1,14), ModalLogic.Interval(2,14), ModalLogic.Interval(2,11)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(10,13)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,12), ModalLogic.Interval(2,12), ModalLogic.Interval(1,13), ModalLogic.Interval(2,13), ModalLogic.Interval(1,14), ModalLogic.Interval(2,14), ModalLogic.Interval(2,11)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(10,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(4,9), ModalLogic.Interval(4,10), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,10), ModalLogic.Interval(6,8), ModalLogic.Interval(6,9), ModalLogic.Interval(6,10)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(2,6), ModalLogic.Interval(3,6), ModalLogic.Interval(3,7), ModalLogic.Interval(4,6), ModalLogic.Interval(4,7)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(3,5), ModalLogic.Interval(3,6)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(2,4), ModalLogic.Interval(2,11), ModalLogic.Interval(2,12), ModalLogic.Interval(3,11), ModalLogic.Interval(3,12), ModalLogic.Interval(1,11), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,11), ModalLogic.Interval(5,12), ModalLogic.Interval(6,8), ModalLogic.Interval(6,9), ModalLogic.Interval(6,11), ModalLogic.Interval(6,12), ModalLogic.Interval(7,9), ModalLogic.Interval(7,11), ModalLogic.Interval(7,12), ModalLogic.Interval(8,11), ModalLogic.Interval(8,12), ModalLogic.Interval(9,11), ModalLogic.Interval(9,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(3,7), ModalLogic.Interval(4,6), ModalLogic.Interval(4,7), ModalLogic.Interval(4,8), ModalLogic.Interval(4,9), ModalLogic.Interval(4,10), ModalLogic.Interval(5,7), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,10), ModalLogic.Interval(5,11), ModalLogic.Interval(5,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(8,10)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(6,11), ModalLogic.Interval(7,11), ModalLogic.Interval(8,10), ModalLogic.Interval(8,11), ModalLogic.Interval(8,12), ModalLogic.Interval(9,11), ModalLogic.Interval(9,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,15)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(9,16), ModalLogic.Interval(10,16), ModalLogic.Interval(11,15), ModalLogic.Interval(11,16), ModalLogic.Interval(12,15), ModalLogic.Interval(12,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(9,12), ModalLogic.Interval(9,13), ModalLogic.Interval(11,13)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,13), ModalLogic.Interval(2,13)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(2,4), ModalLogic.Interval(2,6), ModalLogic.Interval(2,7)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(12,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(12,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(3,5), ModalLogic.Interval(3,6), ModalLogic.Interval(3,7)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(10,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(3,7), ModalLogic.Interval(4,6), ModalLogic.Interval(4,7), ModalLogic.Interval(4,8), ModalLogic.Interval(4,9), ModalLogic.Interval(4,10), ModalLogic.Interval(5,7), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,10), ModalLogic.Interval(5,11), ModalLogic.Interval(5,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,14), ModalLogic.Interval(2,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(5,7)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(6,8), ModalLogic.Interval(6,9)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,16), ModalLogic.Interval(4,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(6,11), ModalLogic.Interval(7,11), ModalLogic.Interval(8,10), ModalLogic.Interval(8,11), ModalLogic.Interval(8,12), ModalLogic.Interval(9,11), ModalLogic.Interval(9,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,16), ModalLogic.Interval(4,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(2,4), ModalLogic.Interval(2,11), ModalLogic.Interval(2,12), ModalLogic.Interval(3,11), ModalLogic.Interval(3,12), ModalLogic.Interval(1,11), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,11), ModalLogic.Interval(5,12), ModalLogic.Interval(6,8), ModalLogic.Interval(6,9), ModalLogic.Interval(6,11), ModalLogic.Interval(6,12), ModalLogic.Interval(7,9), ModalLogic.Interval(7,11), ModalLogic.Interval(7,12), ModalLogic.Interval(8,11), ModalLogic.Interval(8,12), ModalLogic.Interval(9,11), ModalLogic.Interval(9,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(2,6), ModalLogic.Interval(3,5), ModalLogic.Interval(3,6), ModalLogic.Interval(3,7), ModalLogic.Interval(4,6), ModalLogic.Interval(4,7)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,16), ModalLogic.Interval(2,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,3), ModalLogic.Interval(1,4), ModalLogic.Interval(1,5), ModalLogic.Interval(1,6), ModalLogic.Interval(1,7), ModalLogic.Interval(1,8), ModalLogic.Interval(1,9), ModalLogic.Interval(1,10), ModalLogic.Interval(2,4), ModalLogic.Interval(2,5), ModalLogic.Interval(2,6), ModalLogic.Interval(2,7), ModalLogic.Interval(2,8), ModalLogic.Interval(2,9), ModalLogic.Interval(2,10), ModalLogic.Interval(3,8)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(4,8), ModalLogic.Interval(4,9), ModalLogic.Interval(5,7), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,10), ModalLogic.Interval(6,8), ModalLogic.Interval(6,9)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,13), ModalLogic.Interval(1,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,16), ModalLogic.Interval(4,16)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(9,11)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,13), ModalLogic.Interval(2,13)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,12)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(4,6), ModalLogic.Interval(9,11), ModalLogic.Interval(10,12), ModalLogic.Interval(10,13), ModalLogic.Interval(10,14)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,3), ModalLogic.Interval(2,4)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(6,8)], DecisionTree.ModalLogic.Interval[ModalLogic.Interval(1,13), ModalLogic.Interval(2,13)]]

# new world_refs = Vector{DecisionTree.ModalLogic.Interval}[[ModalLogic.Interval(4,6)], [ModalLogic.Interval(12,14)], [ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], [ModalLogic.Interval(1,13), ModalLogic.Interval(2,13)], [ModalLogic.Interval(1,14), ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(7,16)], [ModalLogic.Interval(1,14), ModalLogic.Interval(1,16), ModalLogic.Interval(2,16)], [ModalLogic.Interval(7,14), ModalLogic.Interval(7,15), ModalLogic.Interval(7,16), ModalLogic.Interval(8,14), ModalLogic.Interval(8,15), ModalLogic.Interval(8,16), ModalLogic.Interval(9,14), ModalLogic.Interval(9,15), ModalLogic.Interval(9,16), ModalLogic.Interval(10,12), ModalLogic.Interval(10,13), ModalLogic.Interval(10,14), ModalLogic.Interval(10,15), ModalLogic.Interval(10,16), ModalLogic.Interval(11,13), ModalLogic.Interval(11,14), ModalLogic.Interval(11,15), ModalLogic.Interval(11,16), ModalLogic.Interval(12,14), ModalLogic.Interval(12,15), ModalLogic.Interval(12,16)], [ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,16), ModalLogic.Interval(4,16)], [ModalLogic.Interval(1,16)], [ModalLogic.Interval(1,14), ModalLogic.Interval(2,14), ModalLogic.Interval(3,14), ModalLogic.Interval(1,15), ModalLogic.Interval(2,15), ModalLogic.Interval(3,15), ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,16)], [ModalLogic.Interval(5,7), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9)], [ModalLogic.Interval(4,6)], [ModalLogic.Interval(2,4)], [ModalLogic.Interval(1,13), ModalLogic.Interval(1,14)], [ModalLogic.Interval(4,6), ModalLogic.Interval(5,7), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9)], [ModalLogic.Interval(1,13), ModalLogic.Interval(1,14)], [ModalLogic.Interval(1,12)], [ModalLogic.Interval(1,12)], [ModalLogic.Interval(9,14), ModalLogic.Interval(9,15), ModalLogic.Interval(10,13), ModalLogic.Interval(10,14), ModalLogic.Interval(10,15), ModalLogic.Interval(11,13), ModalLogic.Interval(11,14), ModalLogic.Interval(11,15)], [ModalLogic.Interval(1,12), ModalLogic.Interval(2,12), ModalLogic.Interval(1,13), ModalLogic.Interval(2,13), ModalLogic.Interval(1,14), ModalLogic.Interval(2,14), ModalLogic.Interval(2,11)], [ModalLogic.Interval(10,13)], [ModalLogic.Interval(1,12), ModalLogic.Interval(2,12), ModalLogic.Interval(1,13), ModalLogic.Interval(2,13), ModalLogic.Interval(1,14), ModalLogic.Interval(2,14), ModalLogic.Interval(2,11)], [ModalLogic.Interval(10,12)], [ModalLogic.Interval(4,9), ModalLogic.Interval(4,10), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,10), ModalLogic.Interval(6,8), ModalLogic.Interval(6,9), ModalLogic.Interval(6,10)], [ModalLogic.Interval(2,6), ModalLogic.Interval(3,6), ModalLogic.Interval(3,7), ModalLogic.Interval(4,6), ModalLogic.Interval(4,7)], [ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], [ModalLogic.Interval(3,5), ModalLogic.Interval(3,6)], [ModalLogic.Interval(2,4), ModalLogic.Interval(2,11), ModalLogic.Interval(2,12), ModalLogic.Interval(3,11), ModalLogic.Interval(3,12), ModalLogic.Interval(1,11), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,11), ModalLogic.Interval(5,12), ModalLogic.Interval(6,8), ModalLogic.Interval(6,9), ModalLogic.Interval(6,11), ModalLogic.Interval(6,12), ModalLogic.Interval(7,9), ModalLogic.Interval(7,11), ModalLogic.Interval(7,12), ModalLogic.Interval(8,11), ModalLogic.Interval(8,12), ModalLogic.Interval(9,11), ModalLogic.Interval(9,12)], [ModalLogic.Interval(3,7), ModalLogic.Interval(4,6), ModalLogic.Interval(4,7), ModalLogic.Interval(4,8), ModalLogic.Interval(4,9), ModalLogic.Interval(4,10), ModalLogic.Interval(5,7), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,10), ModalLogic.Interval(5,11), ModalLogic.Interval(5,12)], [ModalLogic.Interval(8,10)], [ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], [ModalLogic.Interval(6,11), ModalLogic.Interval(7,11), ModalLogic.Interval(8,10), ModalLogic.Interval(8,11), ModalLogic.Interval(8,12), ModalLogic.Interval(9,11), ModalLogic.Interval(9,12)], [ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,15)], [ModalLogic.Interval(9,16), ModalLogic.Interval(10,16), ModalLogic.Interval(11,15), ModalLogic.Interval(11,16), ModalLogic.Interval(12,15), ModalLogic.Interval(12,16)], [ModalLogic.Interval(9,12), ModalLogic.Interval(9,13), ModalLogic.Interval(11,13)], [ModalLogic.Interval(1,13), ModalLogic.Interval(2,13)], [ModalLogic.Interval(2,4), ModalLogic.Interval(2,6), ModalLogic.Interval(2,7)], [ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], [ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], [ModalLogic.Interval(1,12)], [ModalLogic.Interval(12,14)], [ModalLogic.Interval(12,14)], [ModalLogic.Interval(3,5), ModalLogic.Interval(3,6), ModalLogic.Interval(3,7)], [ModalLogic.Interval(10,14)], [ModalLogic.Interval(3,7), ModalLogic.Interval(4,6), ModalLogic.Interval(4,7), ModalLogic.Interval(4,8), ModalLogic.Interval(4,9), ModalLogic.Interval(4,10), ModalLogic.Interval(5,7), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,10), ModalLogic.Interval(5,11), ModalLogic.Interval(5,12)], [ModalLogic.Interval(1,14), ModalLogic.Interval(2,14)], [ModalLogic.Interval(5,7)], [ModalLogic.Interval(6,8), ModalLogic.Interval(6,9)], [ModalLogic.Interval(1,3), ModalLogic.Interval(1,4)], [ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,16), ModalLogic.Interval(4,16)], [ModalLogic.Interval(6,11), ModalLogic.Interval(7,11), ModalLogic.Interval(8,10), ModalLogic.Interval(8,11), ModalLogic.Interval(8,12), ModalLogic.Interval(9,11), ModalLogic.Interval(9,12)], [ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,16), ModalLogic.Interval(4,16)], [ModalLogic.Interval(2,4), ModalLogic.Interval(2,11), ModalLogic.Interval(2,12), ModalLogic.Interval(3,11), ModalLogic.Interval(3,12), ModalLogic.Interval(1,11), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,11), ModalLogic.Interval(5,12), ModalLogic.Interval(6,8), ModalLogic.Interval(6,9), ModalLogic.Interval(6,11), ModalLogic.Interval(6,12), ModalLogic.Interval(7,9), ModalLogic.Interval(7,11), ModalLogic.Interval(7,12), ModalLogic.Interval(8,11), ModalLogic.Interval(8,12), ModalLogic.Interval(9,11), ModalLogic.Interval(9,12)], [ModalLogic.Interval(1,16)], [ModalLogic.Interval(2,6), ModalLogic.Interval(3,5), ModalLogic.Interval(3,6), ModalLogic.Interval(3,7), ModalLogic.Interval(4,6), ModalLogic.Interval(4,7)], [ModalLogic.Interval(1,16), ModalLogic.Interval(2,16)], [ModalLogic.Interval(1,3), ModalLogic.Interval(1,4), ModalLogic.Interval(1,5), ModalLogic.Interval(1,6), ModalLogic.Interval(1,7), ModalLogic.Interval(1,8), ModalLogic.Interval(1,9), ModalLogic.Interval(1,10), ModalLogic.Interval(2,4), ModalLogic.Interval(2,5), ModalLogic.Interval(2,6), ModalLogic.Interval(2,7), ModalLogic.Interval(2,8), ModalLogic.Interval(2,9), ModalLogic.Interval(2,10), ModalLogic.Interval(3,8)], [ModalLogic.Interval(4,8), ModalLogic.Interval(4,9), ModalLogic.Interval(5,7), ModalLogic.Interval(5,8), ModalLogic.Interval(5,9), ModalLogic.Interval(5,10), ModalLogic.Interval(6,8), ModalLogic.Interval(6,9)], [ModalLogic.Interval(1,13), ModalLogic.Interval(1,14)], [ModalLogic.Interval(1,16), ModalLogic.Interval(2,16), ModalLogic.Interval(3,16), ModalLogic.Interval(4,16)], [ModalLogic.Interval(9,11)], [ModalLogic.Interval(1,13), ModalLogic.Interval(2,13)], [ModalLogic.Interval(1,12)], [ModalLogic.Interval(4,6), ModalLogic.Interval(9,11), ModalLogic.Interval(10,12), ModalLogic.Interval(10,13), ModalLogic.Interval(10,14)], [ModalLogic.Interval(1,3), ModalLogic.Interval(2,4)], [ModalLogic.Interval(6,8)], [ModalLogic.Interval(1,13), ModalLogic.Interval(2,13)]]

# cm = zip(Y,[1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0]) |> countmap
# cm = zip(Y,[1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0]) |> countmap

# # Y[interesting_instances]

# loss_function = entropy
# left = [cm[("Low-Risk", 0)], cm[("High-Risk", 0)]]
# right = [cm[("Low-Risk", 1)], cm[("High-Risk", 1)]]
# (loss_function(left, sum(left))*sum(left)+loss_function(right, sum(right))*sum(right))/(sum(left)+sum(right))



A=[ 53.354758356493875
 53.76552289624003
 52.97055306091137
 51.70671743250365
 52.63124303117435
 52.5080434835415
 52.20756672896398
 50.72715435177995
 49.50507227514895
 49.46161927335958
 49.76823313143588
 49.83427495112023
 49.09017200095608
 48.949959894162376
 48.488291402386004]

using Plots

get_min_length(::Val) = 3
get_min_length(::Val{Symbol("FC_LocalSimple_mean3_stderr")}) = 5
for (f_name,f) in zip(getnames(catch22),catch22)
	can_be_nan = false
	vals = []
	for arr in [A, -A, -rand(15), rand(15)*1000, rand(15), rand(15), rand(15)]
		for i in 1:15
			for j in 1:15
				if i<=j && (j-i+1)>=get_min_length(Val(f_name))
					val = f(A[i:j])
					push!(vals, val)
					if isnan(val)
						can_be_nan = true
					end
					# (A[i:j]) |>(x)->(length(x),f(x)) |> println
				end
			end
		end
	end
	println("$(f_name) can_be_nan=$(can_be_nan)")
	histogram(vals; bins=20) |> display
	println(minimum(vals))
	println(maximum(vals))
	# display(countmap(vals))
	println()
	readline()
end

