  Activating environment at `~/DecisionTree.jl/Project.toml`
 1 trees
 0 forests 
Loading history file "./gandalf/progress.json"...
Iteration "Pavia,(1,false,"o_None","TestOpGeq")": skipping
Iteration "Pavia,(3,:flattened,"o_None","TestOpGeq")": skipping
Iteration "Pavia,(3,:averaged,"o_None","TestOpGeq")": skipping
Iteration "Pavia,(3,false,"o_RCC8","TestOpAll")"...
● [ 30/06/2021 17:38:08 ] Loading dataset from file ./gandalf/cache/dataset_35b19a96aaf7b809ece93967eac8a5f8fb65fc73bcbf06ea69d1cf446b50c6e4.jld...
Dataseeds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

executing run 'Pavia,(3,false,"o_RCC8","TestOpAll")'...
dataset type = Tuple{Array{Int64, 4}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (test_operators = TestOperator[⫺, ⫹, ⫺₉₀, ⫹₉₀, ⫺₈₀, ⫹₈₀, ⫺₇₀, ⫹₇₀, ⫺₆₀, ⫹₆₀], ontology = Ontology{DecisionTree.ModalLogic.Interval2D}(RCC8))
dataset_slices    = (10 dataset_slices)

Frame 1/1
┌ LogLevel(-500): OntologicalDataset -> FeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:12
┌ LogLevel(-500): Instance 1/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 542/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 180/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 723/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 361/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): FeatModalDataset -> StumpFeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:358
┌ LogLevel(-500): Instance 1/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 542/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 180/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 723/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 361/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
28788.617041 seconds (113.10 G allocations: 9.878 TiB, 90.93% gc time, 0.01% compilation time)
Dataset_slice = (900) -> [10, 122, 267, 386, 478, 583, 633, 707, 810, 3, 166, 252, 331, 497, 503, 670, 754, 819, 27, 190, 228, 353, 403, 521, 606, 735, 887, 63, 130, 246, 366, 462, 566, 687, 712, 872, 50, 195, 235, 350, 474, 501, 671, 769, 829, 57, 186, 201, 397, 447, 511, 660, 778, 843, 36, 116, 254, 326, 457, 542, 622, 766, 867, 21, 123, 248, 340, 469, 593, 666, 720, 868, 75, 157, 258, 336, 417, 509, 634, 704, 854, 78, 183, 238, 394, 408, 596, 624, 759, 862, 35, 154, 264, 376, 477, 599, 697, 748, 865, 66, 191, 274, 307, 448, 548, 602, 787, 823, 20, 167, 215, 392, 467, 549, 650, 795, 875, 67, 188, 239, 310, 434, 568, 682, 775, 890, 25, 141, 231, 330, 490, 594, 678, 732, 871, 24, 117, 270, 400, 492, 592, 668, 750, 816, 82, 194, 226, 387, 455, 560, 690, 793, 825, 74, 197, 289, 378, 441, 565, 683, 788, 896, 69, 105, 227, 341, 461, 539, 636, 705, 822, 81, 187, 300, 388, 427, 585, 646, 776, 811, 28, 159, 210, 342, 405, 531, 675, 710, 856, 15, 179, 244, 323, 420, 554, 618, 714, 830, 59, 163, 223, 332, 416, 558, 661, 740, 878, 29, 124, 268, 351, 459, 564, 601, 786, 820, 18, 153, 232, 329, 500, 582, 673, 767, 847, 31, 162, 220, 319, 418, 535, 685, 791, 821, 43, 177, 288, 346, 465, 576, 681, 770, 876, 40, 155, 249, 325, 470, 575, 625, 784, 860, 12, 149, 205, 327, 496, 578, 651, 718, 848, 83, 192, 275, 305, 464, 597, 665, 774, 836, 100, 145, 247, 398, 415, 508, 688, 746, 888, 94, 178, 261, 322, 488, 519, 607, 717, 824, 16, 110, 291, 347, 485, 551, 680, 722, 849, 51, 119, 204, 337, 466, 590, 612, 796, 894, 73, 148, 297, 362, 449, 522, 611, 749, 885, 19, 103, 292, 358, 425, 533, 623, 800, 801, 8, 142, 213, 382, 499, 530, 684, 785, 846, 11, 134, 207, 345, 472, 598, 628, 761, 827, 95, 136, 296, 357, 407, 515, 652, 701, 881, 58, 169, 284, 339, 458, 595, 632, 709, 899, 72, 101, 241, 321, 491, 581, 603, 777, 898, 13, 127, 230, 349, 432, 550, 620, 723, 863, 53, 172, 240, 301, 435, 555, 657, 757, 813, 22, 200, 285, 335, 483, 532, 663, 744, 859, 71, 176, 260, 379, 437, 517, 643, 782, 869, 87, 139, 202, 399, 439, 514, 672, 702, 855, 33, 160, 299, 389, 451, 544, 674, 727, 828, 61, 168, 208, 343, 480, 540, 617, 781, 808, 90, 180, 233, 309, 428, 586, 629, 772, 897, 55, 175, 216, 348, 476, 518, 613, 731, 886, 60, 137, 290, 383, 443, 573, 637, 711, 900, 96, 198, 211, 308, 456, 552, 610, 706, 852, 68, 144, 214, 317, 431, 563, 692, 733, 806, 77, 189, 203, 315, 471, 507, 669, 789, 832, 9, 135, 279, 361, 473, 536, 621, 743, 858, 42, 147, 221, 352, 481, 553, 698, 762, 834, 64, 115, 287, 391, 423, 528, 604, 763, 835, 85, 196, 256, 390, 453, 516, 614, 752, 818, 54, 182, 280, 359, 442, 588, 689, 783, 837, 2, 140, 245, 320, 429, 541, 609, 726, 805, 23, 170, 272, 313, 402, 559, 656, 764, 839, 91, 104, 269, 324, 413, 538, 642, 737, 833, 65, 181, 257, 344, 414, 505, 619, 758, 857, 48, 132, 224, 367, 487, 523, 638, 742, 826, 70, 173, 271, 303, 444, 589, 658, 779, 804, 80, 118, 276, 338, 460, 570, 644, 794, 895, 49, 171, 265, 333, 454, 577, 677, 773, 817, 7, 120, 281, 360, 438, 572, 694, 768, 807, 88, 193, 218, 372, 482, 584, 635, 753, 873, 45, 121, 229, 381, 475, 510, 676, 771, 866, 14, 174, 236, 364, 450, 534, 645, 741, 844, 97, 128, 283, 304, 436, 562, 695, 751, 841, 26, 111, 243, 311, 463, 561, 653, 729, 883, 52, 112, 294, 302, 412, 506, 654, 797, 851, 4, 158, 234, 384, 410, 569, 648, 721, 861, 32, 150, 253, 371, 409, 512, 616, 780, 870, 34, 146, 277, 374, 493, 579, 699, 765, 893, 99, 125, 266, 380, 430, 504, 631, 798, 802, 93, 102, 206, 363, 422, 587, 659, 792, 842, 56, 152, 286, 375, 445, 513, 630, 715, 882, 46, 113, 250, 306, 498, 524, 627, 730, 812, 47, 185, 263, 373, 404, 525, 679, 716, 850, 84, 108, 242, 385, 419, 600, 691, 760, 877, 79, 129, 217, 318, 486, 546, 655, 734, 840, 39, 156, 282, 365, 494, 591, 640, 799, 815, 17, 114, 251, 312, 468, 574, 615, 756, 838, 38, 143, 225, 369, 452, 556, 700, 790, 880, 5, 151, 212, 368, 426, 502, 649, 736, 809, 44, 138, 278, 355, 433, 526, 641, 724, 831, 98, 126, 237, 395, 489, 529, 693, 713, 889, 86, 109, 273, 334, 421, 537, 608, 755, 853, 92, 199, 262, 354, 479, 527, 647, 725, 803, 41, 184, 209, 328, 446, 547, 605, 719, 814, 89, 107, 259, 370, 411, 567, 664, 703, 891, 6, 131, 222, 377, 495, 545, 639, 708, 845, 1, 106, 295, 314, 401, 557, 667, 747, 864, 76, 161, 255, 396, 406, 520, 686, 738, 879, 37, 164, 298, 393, 484, 543, 696, 739, 884, 30, 133, 219, 356, 440, 580, 626, 745, 874, 62, 165, 293, 316, 424, 571, 662, 728, 892]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1630.07 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1425.81 MBs	(shape (3, 4, 3, 4, 720, 1030, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 01:38:37 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (462+258=720 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A103 ⫹₈₀ 16438), purity -1.6040117817824031
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (227+235=462 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A5 ⫺₇₀ 11207), purity -1.1715944754924754
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (178+80=258 samples) on frame 1 with decision: {1} A9 ⫹₇₀ 6054, purity -0.6558392200079038
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (133+94=227 samples) on frame 1 with decision: {1} ⟨EC⟩ (A66 ⫹ 5400), purity -0.5803770560590781
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+98=178 samples) on frame 1 with decision: {1} ⟨PO⟩ (A16 ⫹₆₀ 12078), purity -0.49973104348243885
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (92+143=235 samples) on frame 1 with decision: {1} A35 ⫹₈₀ 20927, purity -0.5909185446706625
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (108+25=133 samples) on frame 1 with decision: {1} ⟨EC⟩ (A28 ⫺ 12901), purity -0.5426378615621822
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+75=80 samples) on frame 1 with decision: {1} A94 ⫹₈₀ 16498, purity -0.1084481244145111
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+80=92 samples) on frame 1 with decision: {1} A2 ⫺₇₀ 21571, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (24+70=94 samples) on frame 1 with decision: {1} A73 ⫹ 17112, purity -0.17341104663613427
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+77=98 samples) on frame 1 with decision: {1} ⟨EC⟩ (A76 ⫹ 13486), purity -0.34322296691553433
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (110+33=143 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A24 ⫺₈₀ 16736), purity -0.5582801432139433
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+10=24 samples) on frame 1 with decision: {1} ⟨DC⟩ (A25 ⫺ 6896), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+6=21 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A10 ⫺ 11266), purity 6.344131569286608e-17
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (52+56=108 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A103 ⫺ 22215), purity -0.47374592241083796
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (90+20=110 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A44 ⫺₈₀ 19371), purity -0.5653008894385779
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (25+27=52 samples) on frame 1 with decision: {1} ⟨EC⟩ (A83 ⫺ 21947), purity -0.31414336288158723
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (24+32=56 samples) on frame 1 with decision: {1} A77 ⫺₈₀ 22264, purity -0.24100077626520364
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (66+24=90 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A83 ⫺₆₀ 19688), purity -0.5327309731015852
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+15=24 samples) on frame 1 with decision: {1} A82 ⫹ 26485, purity -0.23869281311055487
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+15=25 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A85 ⫺₈₀ 19044), purity -0.13003318935657937
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (54+12=66 samples) on frame 1 with decision: {1} ⟨PO⟩ (A2 ⫹₆₀ 10424), purity -0.5203816595753591
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A5 ⫺ 4122, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A2 ⫺ 6450, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (33+21=54 samples) on frame 1 with decision: {1} ⟨PO⟩ (A63 ⫺ 19084), purity -0.41654826499292347
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+12=33 samples) on frame 1 with decision: {1} ⟨PO⟩ (A84 ⫺ 18787), purity -0.2001314008154434
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+4=21 samples) on frame 1 with decision: {1} A85 ⫹ 17687, purity -0.13202803439237054
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
720.548721 seconds (8.31 G allocations: 195.602 GiB, 21.28% gc time, 2.23% compilation time)
Train tree:
Decision Tree
Leaves: 28
Tot nodes: 55
Height: 10
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A103 ⫹₈₀ 16438)
✔ {1} A9 ⫹₇₀ 6054
│✔ Shadows : 80/80 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A16 ⫹₆₀ 12078)
│ ✔ {1} ⟨EC⟩ (A76 ⫹ 13486)
│ │✔ Asphalt : 71/77 (conf: 0.922077922077922)
│ │✘ {1} ⟨T̅P̅P̅⟩ (A10 ⫺ 11266)
│ │ ✔ Asphalt : 6/6 (conf: 1.0)
│ │ ✘ Gravel : 15/15 (conf: 1.0)
│ ✘ {1} A94 ⫹₈₀ 16498
│  ✔ Bitumen : 74/75 (conf: 0.9866666666666667)
│  ✘ Gravel : 3/5 (conf: 0.6)
✘ {1} ⟨T̅P̅P̅⟩ (A5 ⫺₇₀ 11207)
 ✔ {1} A35 ⫹₈₀ 20927
 │✔ {1} ⟨T̅P̅P̅⟩ (A24 ⫺₈₀ 16736)
 ││✔ Self-Blocking Bricks : 32/33 (conf: 0.9696969696969697)
 ││✘ {1} ⟨T̅P̅P̅⟩ (A44 ⫺₈₀ 19371)
 ││ ✔ Gravel : 20/20 (conf: 1.0)
 ││ ✘ {1} ⟨T̅P̅P̅⟩ (A83 ⫺₆₀ 19688)
 ││  ✔ Self-Blocking Bricks : 23/24 (conf: 0.9583333333333334)
 ││  ✘ {1} ⟨PO⟩ (A2 ⫹₆₀ 10424)
 ││   ✔ Self-Blocking Bricks : 11/12 (conf: 0.9166666666666666)
 ││   ✘ {1} ⟨PO⟩ (A63 ⫺ 19084)
 ││    ✔ Gravel : 21/21 (conf: 1.0)
 ││    ✘ {1} ⟨PO⟩ (A84 ⫺ 18787)
 ││     ✔ Self-Blocking Bricks : 12/12 (conf: 1.0)
 ││     ✘ {1} A85 ⫹ 17687
 ││      ✔ Self-Blocking Bricks : 2/4 (conf: 0.5)
 ││      ✘ Gravel : 17/17 (conf: 1.0)
 │✘ {1} A2 ⫺₇₀ 21571
 │ ✔ Painted metal sheets : 80/80 (conf: 1.0)
 │ ✘ Bare Soil : 12/12 (conf: 1.0)
 ✘ {1} ⟨EC⟩ (A66 ⫹ 5400)
  ✔ {1} A73 ⫹ 17112
  │✔ Trees : 70/70 (conf: 1.0)
  │✘ {1} ⟨DC⟩ (A25 ⫺ 6896)
  │ ✔ Trees : 10/10 (conf: 1.0)
  │ ✘ Meadows : 14/14 (conf: 1.0)
  ✘ {1} ⟨EC⟩ (A28 ⫺ 12901)
   ✔ Bare Soil : 25/25 (conf: 1.0)
   ✘ {1} ⟨N̅T̅P̅P̅⟩ (A103 ⫺ 22215)
    ✔ {1} A77 ⫺₈₀ 22264
    │✔ Meadows : 32/32 (conf: 1.0)
    │✘ {1} A82 ⫹ 26485
    │ ✔ Meadows : 15/15 (conf: 1.0)
    │ ✘ {1} A5 ⫺ 4122
    │  ✔ Bare Soil : 5/5 (conf: 1.0)
    │  ✘ Meadows : 3/4 (conf: 0.75)
    ✘ {1} ⟨EC⟩ (A83 ⫺ 21947)
     ✔ Bare Soil : 27/27 (conf: 1.0)
     ✘ {1} ⟨T̅P̅P̅⟩ (A85 ⫺₈₀ 19044)
      ✔ Meadows : 15/15 (conf: 1.0)
      ✘ {1} A2 ⫺ 6450
       ✔ Bare Soil : 3/4 (conf: 0.75)
       ✘ Bare Soil : 6/6 (conf: 1.0)
● [ 01/07/2021 01:50:40 ] Saving tree to file ./gandalf/trees/tree_58991991a94955398f2577e97d157f3f06dc6afcf660322f9ab3555d0b1d643c.jld...
Test tree:
Decision Tree
Leaves: 28
Tot nodes: 55
Height: 10
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A103 ⫹₈₀ 16438)
✔ {1} A9 ⫹₇₀ 6054
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A16 ⫹₆₀ 12078)
│ ✔ {1} ⟨EC⟩ (A76 ⫹ 13486)
│ │✔ Asphalt : 18/23 (conf: 0.782608695652174)
│ │✘ {1} ⟨T̅P̅P̅⟩ (A10 ⫺ 11266)
│ │ ✔ Asphalt : 0/1 (conf: 0.0)
│ │ ✘ Gravel : 2/6 (conf: 0.3333333333333333)
│ ✘ {1} A94 ⫹₈₀ 16498
│  ✔ Bitumen : 12/13 (conf: 0.9230769230769231)
│  ✘ Gravel : 0/0 (conf: NaN)
✘ {1} ⟨T̅P̅P̅⟩ (A5 ⫺₇₀ 11207)
 ✔ {1} A35 ⫹₈₀ 20927
 │✔ {1} ⟨T̅P̅P̅⟩ (A24 ⫺₈₀ 16736)
 ││✔ Self-Blocking Bricks : 4/7 (conf: 0.5714285714285714)
 ││✘ {1} ⟨T̅P̅P̅⟩ (A44 ⫺₈₀ 19371)
 ││ ✔ Gravel : 6/7 (conf: 0.8571428571428571)
 ││ ✘ {1} ⟨T̅P̅P̅⟩ (A83 ⫺₆₀ 19688)
 ││  ✔ Self-Blocking Bricks : 3/5 (conf: 0.6)
 ││  ✘ {1} ⟨PO⟩ (A2 ⫹₆₀ 10424)
 ││   ✔ Self-Blocking Bricks : 7/10 (conf: 0.7)
 ││   ✘ {1} ⟨PO⟩ (A63 ⫺ 19084)
 ││    ✔ Gravel : 1/3 (conf: 0.3333333333333333)
 ││    ✘ {1} ⟨PO⟩ (A84 ⫺ 18787)
 ││     ✔ Self-Blocking Bricks : 2/2 (conf: 1.0)
 ││     ✘ {1} A85 ⫹ 17687
 ││      ✔ Self-Blocking Bricks : 0/0 (conf: NaN)
 ││      ✘ Gravel : 2/2 (conf: 1.0)
 │✘ {1} A2 ⫺₇₀ 21571
 │ ✔ Painted metal sheets : 20/21 (conf: 0.9523809523809523)
 │ ✘ Bare Soil : 2/3 (conf: 0.6666666666666666)
 ✘ {1} ⟨EC⟩ (A66 ⫹ 5400)
  ✔ {1} A73 ⫹ 17112
  │✔ Trees : 19/19 (conf: 1.0)
  │✘ {1} ⟨DC⟩ (A25 ⫺ 6896)
  │ ✔ Trees : 1/1 (conf: 1.0)
  │ ✘ Meadows : 5/5 (conf: 1.0)
  ✘ {1} ⟨EC⟩ (A28 ⫺ 12901)
   ✔ Bare Soil : 3/6 (conf: 0.5)
   ✘ {1} ⟨N̅T̅P̅P̅⟩ (A103 ⫺ 22215)
    ✔ {1} A77 ⫺₈₀ 22264
    │✔ Meadows : 4/5 (conf: 0.8)
    │✘ {1} A82 ⫹ 26485
    │ ✔ Meadows : 5/5 (conf: 1.0)
    │ ✘ {1} A5 ⫺ 4122
    │  ✔ Bare Soil : 0/0 (conf: NaN)
    │  ✘ Meadows : 1/2 (conf: 0.5)
    ✘ {1} ⟨EC⟩ (A83 ⫺ 21947)
     ✔ Bare Soil : 7/8 (conf: 0.875)
     ✘ {1} ⟨T̅P̅P̅⟩ (A85 ⫺₈₀ 19044)
      ✔ Meadows : 3/3 (conf: 1.0)
      ✘ {1} A2 ⫺ 6450
       ✔ Bare Soil : 1/1 (conf: 1.0)
       ✘ Bare Soil : 2/2 (conf: 1.0)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	83.33%	90.0%	75.0%	60.0%	55.0%	90.0%	100.0%	80.0%	100.0%	100.0%	75.0%	75.0%	92.31%	61.11%	90.0%	95.24%	66.67%	100.0%	100.0%	||	81.25%	[81.82, 75.0, 72.73, 57.89, 90.0, 97.56, 72.73, 100.0, 100.0]%	
  accuracy: 83.33% kappa: 81.25% 
 18  0  1  0  0  0  1  0  0	90.0%		Asphalt
  0 15  0  1  2  1  1  0  0	75.0%		Bare Soil
  4  0 12  4  0  0  0  0  0	60.0%		Bitumen
  2  1  0 11  0  0  6  0  0	55.0%		Gravel
  0  2  0  0 18  0  0  0  0	90.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  2  0  2  0  0 16  0  0	80.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  0  0  0  0 20	100.0%		Trees

overall_acc:	0.8333333333333334
κ =		0.8125000000000001
sensitivities:	[0.9, 0.75, 0.6, 0.55, 0.9, 1.0, 0.8, 1.0, 1.0]
specificities:	[0.9625, 0.96875, 0.99375, 0.95625, 0.9875, 0.99375, 0.95, 1.0, 1.0]
PPVs:		[0.75, 0.75, 0.9230769230769231, 0.6111111111111112, 0.9, 0.9523809523809523, 0.6666666666666666, 1.0, 1.0]
NPVs:		[0.9871794871794872, 0.96875, 0.9520958083832335, 0.9444444444444444, 0.9875, 1.0, 0.9743589743589743, 1.0, 1.0]
F1s:		[0.8181818181818182, 0.75, 0.7272727272727273, 0.5789473684210527, 0.9, 0.975609756097561, 0.7272727272727273, 1.0, 1.0]
accuracies:	[0.9555555555555556, 0.9444444444444444, 0.95, 0.9111111111111111, 0.9777777777777777, 0.9944444444444445, 0.9333333333333333, 1.0, 1.0]
mean_accuracy:	0.9629629629629629
Dataset_slice = (900) -> [19, 131, 215, 348, 496, 545, 639, 707, 847, 50, 123, 292, 322, 459, 579, 650, 796, 817, 6, 121, 285, 331, 464, 513, 654, 769, 869, 53, 110, 205, 315, 435, 505, 680, 790, 891, 51, 109, 209, 311, 473, 521, 694, 780, 806, 80, 124, 226, 364, 462, 528, 612, 795, 802, 76, 158, 287, 370, 471, 541, 626, 745, 853, 54, 114, 245, 399, 458, 519, 633, 713, 855, 24, 151, 225, 332, 409, 527, 630, 735, 837, 38, 128, 231, 316, 429, 518, 664, 734, 820, 86, 191, 265, 391, 487, 566, 666, 747, 823, 56, 141, 221, 356, 402, 555, 615, 758, 873, 28, 200, 232, 346, 467, 520, 646, 715, 825, 100, 140, 259, 325, 420, 595, 602, 753, 838, 21, 171, 206, 379, 454, 589, 644, 789, 842, 46, 184, 222, 395, 468, 560, 659, 725, 859, 74, 146, 214, 343, 418, 540, 698, 775, 826, 79, 143, 237, 320, 448, 558, 641, 732, 815, 98, 188, 201, 390, 442, 600, 691, 736, 899, 83, 186, 235, 338, 484, 503, 604, 702, 892, 10, 119, 286, 398, 422, 547, 687, 712, 818, 52, 167, 293, 396, 449, 544, 672, 711, 894, 42, 176, 202, 326, 476, 509, 619, 727, 821, 62, 154, 269, 304, 461, 561, 608, 720, 868, 45, 144, 278, 334, 417, 597, 670, 762, 878, 33, 163, 250, 333, 474, 534, 658, 717, 877, 90, 134, 256, 388, 431, 549, 631, 768, 890, 77, 172, 271, 367, 450, 584, 673, 729, 871, 75, 189, 233, 387, 405, 573, 656, 756, 870, 47, 182, 247, 312, 432, 501, 651, 787, 884, 37, 137, 299, 340, 440, 568, 649, 774, 897, 59, 125, 273, 345, 411, 506, 605, 766, 887, 78, 149, 229, 305, 480, 529, 662, 794, 813, 82, 102, 243, 374, 407, 533, 647, 786, 885, 34, 104, 253, 329, 427, 585, 616, 792, 808, 67, 108, 224, 335, 408, 526, 613, 785, 811, 44, 198, 261, 357, 452, 569, 653, 741, 860, 89, 180, 279, 363, 414, 580, 634, 708, 846, 68, 105, 267, 306, 413, 557, 618, 743, 832, 85, 166, 274, 365, 447, 542, 700, 760, 814, 26, 145, 220, 369, 404, 578, 628, 746, 841, 39, 142, 227, 376, 428, 590, 606, 750, 900, 99, 193, 264, 321, 483, 512, 665, 777, 845, 20, 147, 272, 381, 481, 572, 648, 754, 812, 9, 130, 204, 301, 424, 565, 693, 783, 819, 7, 156, 257, 344, 438, 570, 622, 731, 840, 12, 199, 230, 336, 466, 571, 669, 718, 805, 41, 132, 289, 337, 415, 593, 638, 776, 810, 16, 170, 262, 373, 444, 543, 635, 703, 801, 58, 196, 210, 347, 433, 551, 627, 752, 861, 31, 107, 260, 383, 477, 535, 632, 740, 822, 92, 164, 254, 355, 463, 502, 620, 791, 831, 97, 174, 298, 397, 478, 508, 686, 751, 809, 88, 106, 219, 317, 446, 531, 617, 749, 850, 27, 115, 248, 360, 470, 515, 677, 701, 844, 32, 153, 291, 330, 489, 582, 689, 799, 864, 63, 185, 251, 362, 500, 524, 671, 716, 874, 22, 160, 207, 352, 401, 577, 697, 764, 839, 55, 152, 283, 353, 485, 525, 674, 757, 830, 96, 169, 280, 389, 403, 586, 601, 719, 872, 70, 173, 255, 366, 493, 550, 690, 730, 862, 43, 127, 300, 339, 451, 507, 692, 797, 816, 72, 155, 236, 400, 492, 539, 603, 767, 851, 84, 168, 203, 324, 455, 564, 642, 798, 879, 69, 187, 239, 378, 419, 546, 609, 748, 881, 4, 139, 268, 368, 498, 598, 699, 781, 896, 15, 111, 241, 319, 479, 536, 667, 726, 804, 93, 175, 294, 302, 439, 548, 684, 765, 866, 17, 122, 297, 307, 421, 538, 652, 782, 848, 48, 190, 295, 318, 456, 594, 679, 788, 898, 57, 138, 208, 354, 488, 563, 621, 763, 835, 49, 183, 281, 385, 469, 517, 668, 724, 824, 66, 195, 258, 372, 472, 583, 695, 784, 865, 61, 118, 266, 351, 425, 599, 645, 733, 854, 94, 116, 277, 349, 475, 537, 683, 771, 803, 8, 135, 213, 375, 457, 504, 663, 759, 829, 29, 197, 263, 394, 441, 588, 682, 737, 883, 91, 117, 290, 342, 494, 567, 655, 755, 888, 64, 113, 284, 380, 445, 514, 675, 761, 827, 30, 181, 282, 303, 486, 581, 610, 742, 882, 40, 179, 296, 350, 430, 552, 678, 704, 807, 5, 157, 223, 384, 453, 522, 625, 706, 856, 18, 161, 270, 314, 499, 576, 623, 723, 857, 87, 177, 275, 308, 443, 554, 624, 800, 875, 73, 129, 242, 382, 490, 574, 640, 705, 889, 60, 136, 212, 358, 416, 523, 676, 710, 876, 71, 148, 238, 393, 434, 511, 685, 778, 834, 81, 150, 228, 371, 437, 510, 643, 728, 893, 23, 178, 276, 328, 497, 556, 657, 709, 833, 95, 101, 252, 392, 410, 591, 661, 773, 867, 3, 165, 246, 323, 460, 530, 614, 779, 863, 36, 133, 217, 361, 423, 559, 637, 772, 858, 35, 126, 218, 386, 491, 562, 688, 793, 886, 2, 103, 216, 359, 436, 532, 607, 714, 836, 13, 162, 240, 309, 412, 553, 660, 722, 852, 14, 192, 288, 341, 406, 587, 611, 744, 828, 25, 159, 249, 310, 465, 592, 696, 721, 880, 11, 112, 211, 377, 495, 575, 681, 739, 895, 65, 120, 234, 313, 482, 596, 629, 770, 849, 1, 194, 244, 327, 426, 516, 636, 738, 843]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1630.07 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1425.81 MBs	(shape (3, 4, 3, 4, 720, 1030, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 01:50:58 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (464+256=720 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A99 ⫹₇₀ 16319), purity -1.6020067707466827
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (224+240=464 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A6 ⫺₇₀ 10721), purity -1.182360085982953
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (176+80=256 samples) on frame 1 with decision: {1} A9 ⫹ 6797, purity -0.6426543047775671
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (132+92=224 samples) on frame 1 with decision: {1} ⟨EC⟩ (A59 ⫹ 3587), purity -0.5672247813015707
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (88+88=176 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A16 ⫺ 12069), purity -0.5351103307238494
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+80=240 samples) on frame 1 with decision: {1} A2 ⫺₇₀ 21571, purity -0.6288989282193592
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (56+76=132 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A102 ⫺ 21650), purity -0.5522565507638018
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+10=88 samples) on frame 1 with decision: {1} ⟨PO⟩ (A72 ⫹ 13159), purity -0.20313881067453943
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (75+13=88 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A77 ⫺ 14982), purity -0.3444089451989872
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+71=92 samples) on frame 1 with decision: {1} A73 ⫹ 17112, purity -0.1558811978120642
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+144=160 samples) on frame 1 with decision: {1} A70 ⫹ 23146, purity -0.6182654189375915
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A1 ⫺ 10741, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+9=13 samples) on frame 1 with decision: {1} A1 ⫺₈₀ 9017, purity -0.21327605555690624
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+44=56 samples) on frame 1 with decision: {1} ⟨EC⟩ (A83 ⫺ 20491), purity -0.24183321553174572
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+9=21 samples) on frame 1 with decision: {1} ⟨DC⟩ (A25 ⫺ 6896), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+66=76 samples) on frame 1 with decision: {1} A33 ⫹ 14021, purity -0.3693640442452001
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (53+22=75 samples) on frame 1 with decision: {1} ⟨PO⟩ (A1 ⫺ 12851), purity -0.2228005681659601
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (127+17=144 samples) on frame 1 with decision: {1} ⟨PO⟩ (A1 ⫺ 16101), purity -0.581199249485818
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+8=12 samples) on frame 1 with decision: {1} A4 ⫺ 4994, purity -0.23104906018664842
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+4=22 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A12 ⫹ 10027), purity -0.28540807841702615
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+50=66 samples) on frame 1 with decision: {1} A77 ⫺₈₀ 20630, purity -0.3380818703250537
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (71+56=127 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A17 ⫺ 14407), purity -0.4883998730760563
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+8=16 samples) on frame 1 with decision: {1} A76 ⫹ 20927, purity -0.18838508062821835
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+4=18 samples) on frame 1 with decision: {1} A2 ⫹ 11454, purity -0.15403270679109896
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (44+27=71 samples) on frame 1 with decision: {1} ⟨PO⟩ (A2 ⫹₆₀ 10513), purity -0.47297292191178414
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A1 ⫺ 4548, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+11=27 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A2 ⫺₆₀ 11296), purity -0.2807074675275276
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+16=44 samples) on frame 1 with decision: {1} ⟨EC⟩ (A4 ⫹ 10800), purity -0.24920516628234843
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+5=11 samples) on frame 1 with decision: {1} A42 ⫺₈₀ 17112, purity -0.24576065938162073
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+9=16 samples) on frame 1 with decision: {1} ⟨EC⟩ (A10 ⫺ 13297), purity -0.29795973696993083
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A1 ⫺ 15873, purity -0.3080654135821979
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
699.676923 seconds (8.22 G allocations: 191.020 GiB, 18.35% gc time, 0.01% compilation time)
Train tree:
Decision Tree
Leaves: 32
Tot nodes: 63
Height: 10
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A99 ⫹₇₀ 16319)
✔ {1} A9 ⫹ 6797
│✔ Shadows : 80/80 (conf: 1.0)
│✘ {1} ⟨T̅P̅P̅⟩ (A16 ⫺ 12069)
│ ✔ {1} ⟨PO⟩ (A72 ⫹ 13159)
│ │✔ {1} A1 ⫺ 10741
│ ││✔ Asphalt : 6/6 (conf: 1.0)
│ ││✘ Asphalt : 3/4 (conf: 0.75)
│ │✘ Bitumen : 75/78 (conf: 0.9615384615384616)
│ ✘ {1} ⟨T̅P̅P̅⟩ (A77 ⫺ 14982)
│  ✔ {1} A1 ⫺₈₀ 9017
│  │✔ Gravel : 9/9 (conf: 1.0)
│  │✘ Bitumen : 2/4 (conf: 0.5)
│  ✘ {1} ⟨PO⟩ (A1 ⫺ 12851)
│   ✔ {1} ⟨T̅P̅P̅⟩ (A12 ⫹ 10027)
│   │✔ Gravel : 4/4 (conf: 1.0)
│   │✘ {1} A2 ⫹ 11454
│   │ ✔ Bitumen : 2/4 (conf: 0.5)
│   │ ✘ Asphalt : 14/14 (conf: 1.0)
│   ✘ Asphalt : 53/53 (conf: 1.0)
✘ {1} ⟨T̅P̅P̅⟩ (A6 ⫺₇₀ 10721)
 ✔ {1} A2 ⫺₇₀ 21571
 │✔ Painted metal sheets : 80/80 (conf: 1.0)
 │✘ {1} A70 ⫹ 23146
 │ ✔ {1} ⟨PO⟩ (A1 ⫺ 16101)
 │ │✔ Gravel : 17/17 (conf: 1.0)
 │ │✘ {1} ⟨T̅P̅P̅⟩ (A17 ⫺ 14407)
 │ │ ✔ Self-Blocking Bricks : 52/56 (conf: 0.9285714285714286)
 │ │ ✘ {1} ⟨PO⟩ (A2 ⫹₆₀ 10513)
 │ │  ✔ {1} ⟨T̅P̅P̅⟩ (A2 ⫺₆₀ 11296)
 │ │  │✔ {1} A42 ⫺₈₀ 17112
 │ │  ││✔ Gravel : 5/5 (conf: 1.0)
 │ │  ││✘ Self-Blocking Bricks : 5/6 (conf: 0.8333333333333334)
 │ │  │✘ Self-Blocking Bricks : 16/16 (conf: 1.0)
 │ │  ✘ {1} ⟨EC⟩ (A4 ⫹ 10800)
 │ │   ✔ {1} ⟨EC⟩ (A10 ⫺ 13297)
 │ │   │✔ {1} A1 ⫺ 15873
 │ │   ││✔ Self-Blocking Bricks : 2/4 (conf: 0.5)
 │ │   ││✘ Self-Blocking Bricks : 5/5 (conf: 1.0)
 │ │   │✘ Gravel : 7/7 (conf: 1.0)
 │ │   ✘ Gravel : 28/28 (conf: 1.0)
 │ ✘ Bare Soil : 16/16 (conf: 1.0)
 ✘ {1} ⟨EC⟩ (A59 ⫹ 3587)
  ✔ {1} A73 ⫹ 17112
  │✔ Trees : 71/71 (conf: 1.0)
  │✘ {1} ⟨DC⟩ (A25 ⫺ 6896)
  │ ✔ Trees : 9/9 (conf: 1.0)
  │ ✘ Meadows : 12/12 (conf: 1.0)
  ✘ {1} ⟨N̅T̅P̅P̅⟩ (A102 ⫺ 21650)
   ✔ {1} A33 ⫹ 14021
   │✔ {1} A77 ⫺₈₀ 20630
   ││✔ Meadows : 47/50 (conf: 0.94)
   ││✘ {1} A76 ⫹ 20927
   ││ ✔ Meadows : 8/8 (conf: 1.0)
   ││ ✘ {1} A1 ⫺ 4548
   ││  ✔ Bare Soil : 4/4 (conf: 1.0)
   ││  ✘ Bare Soil : 3/4 (conf: 0.75)
   │✘ Bare Soil : 10/10 (conf: 1.0)
   ✘ {1} ⟨EC⟩ (A83 ⫺ 20491)
    ✔ Bare Soil : 42/44 (conf: 0.9545454545454546)
    ✘ {1} A4 ⫺ 4994
     ✔ Meadows : 8/8 (conf: 1.0)
     ✘ Bare Soil : 2/4 (conf: 0.5)
● [ 01/07/2021 02:02:38 ] Saving tree to file ./gandalf/trees/tree_550e9adabb5a01e2051b18157201a2ad1f95a4f229d339193a807f392b22d54b.jld...
Test tree:
Decision Tree
Leaves: 32
Tot nodes: 63
Height: 10
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A99 ⫹₇₀ 16319)
✔ {1} A9 ⫹ 6797
│✔ Shadows : 19/19 (conf: 1.0)
│✘ {1} ⟨T̅P̅P̅⟩ (A16 ⫺ 12069)
│ ✔ {1} ⟨PO⟩ (A72 ⫹ 13159)
│ │✔ {1} A1 ⫺ 10741
│ ││✔ Asphalt : 1/2 (conf: 0.5)
│ ││✘ Asphalt : 1/1 (conf: 1.0)
│ │✘ Bitumen : 19/21 (conf: 0.9047619047619048)
│ ✘ {1} ⟨T̅P̅P̅⟩ (A77 ⫺ 14982)
│  ✔ {1} A1 ⫺₈₀ 9017
│  │✔ Gravel : 3/3 (conf: 1.0)
│  │✘ Bitumen : 0/1 (conf: 0.0)
│  ✘ {1} ⟨PO⟩ (A1 ⫺ 12851)
│   ✔ {1} ⟨T̅P̅P̅⟩ (A12 ⫹ 10027)
│   │✔ Gravel : 0/1 (conf: 0.0)
│   │✘ {1} A2 ⫹ 11454
│   │ ✔ Bitumen : 0/0 (conf: NaN)
│   │ ✘ Asphalt : 4/5 (conf: 0.8)
│   ✘ Asphalt : 10/12 (conf: 0.8333333333333334)
✘ {1} ⟨T̅P̅P̅⟩ (A6 ⫺₇₀ 10721)
 ✔ {1} A2 ⫺₇₀ 21571
 │✔ Painted metal sheets : 19/20 (conf: 0.95)
 │✘ {1} A70 ⫹ 23146
 │ ✔ {1} ⟨PO⟩ (A1 ⫺ 16101)
 │ │✔ Gravel : 3/8 (conf: 0.375)
 │ │✘ {1} ⟨T̅P̅P̅⟩ (A17 ⫺ 14407)
 │ │ ✔ Self-Blocking Bricks : 11/14 (conf: 0.7857142857142857)
 │ │ ✘ {1} ⟨PO⟩ (A2 ⫹₆₀ 10513)
 │ │  ✔ {1} ⟨T̅P̅P̅⟩ (A2 ⫺₆₀ 11296)
 │ │  │✔ {1} A42 ⫺₈₀ 17112
 │ │  ││✔ Gravel : 1/1 (conf: 1.0)
 │ │  ││✘ Self-Blocking Bricks : 0/0 (conf: NaN)
 │ │  │✘ Self-Blocking Bricks : 2/4 (conf: 0.5)
 │ │  ✘ {1} ⟨EC⟩ (A4 ⫹ 10800)
 │ │   ✔ {1} ⟨EC⟩ (A10 ⫺ 13297)
 │ │   │✔ {1} A1 ⫺ 15873
 │ │   ││✔ Self-Blocking Bricks : 0/0 (conf: NaN)
 │ │   ││✘ Self-Blocking Bricks : 1/1 (conf: 1.0)
 │ │   │✘ Gravel : 1/1 (conf: 1.0)
 │ │   ✘ Gravel : 7/8 (conf: 0.875)
 │ ✘ Bare Soil : 3/3 (conf: 1.0)
 ✘ {1} ⟨EC⟩ (A59 ⫹ 3587)
  ✔ {1} A73 ⫹ 17112
  │✔ Trees : 17/17 (conf: 1.0)
  │✘ {1} ⟨DC⟩ (A25 ⫺ 6896)
  │ ✔ Trees : 1/1 (conf: 1.0)
  │ ✘ Meadows : 5/5 (conf: 1.0)
  ✘ {1} ⟨N̅T̅P̅P̅⟩ (A102 ⫺ 21650)
   ✔ {1} A33 ⫹ 14021
   │✔ {1} A77 ⫺₈₀ 20630
   ││✔ Meadows : 9/12 (conf: 0.75)
   ││✘ {1} A76 ⫹ 20927
   ││ ✔ Meadows : 1/1 (conf: 1.0)
   ││ ✘ {1} A1 ⫺ 4548
   ││  ✔ Bare Soil : 0/1 (conf: 0.0)
   ││  ✘ Bare Soil : 0/1 (conf: 0.0)
   │✘ Bare Soil : 7/7 (conf: 1.0)
   ✘ {1} ⟨EC⟩ (A83 ⫺ 20491)
    ✔ Bare Soil : 6/7 (conf: 0.8571428571428571)
    ✘ {1} A4 ⫺ 4994
     ✔ Meadows : 2/3 (conf: 0.6666666666666666)
     ✘ Bare Soil : 0/0 (conf: NaN)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	85.0%	80.0%	80.0%	95.0%	75.0%	85.0%	95.0%	70.0%	95.0%	90.0%	80.0%	84.21%	86.36%	68.18%	80.95%	95.0%	73.68%	100.0%	100.0%	||	83.12%	[80.0, 82.05, 90.48, 71.43, 82.93, 95.0, 71.79, 97.44, 94.74]%	
  accuracy: 85.0% kappa: 83.12% 
 16  0  3  1  0  0  0  0  0	80.0%		Asphalt
  0 16  0  0  3  1  0  0  0	80.0%		Bare Soil
  1  0 19  0  0  0  0  0  0	95.0%		Bitumen
  1  0  0 15  0  0  4  0  0	75.0%		Gravel
  0  3  0  0 17  0  0  0  0	85.0%		Meadows
  1  0  0  0  0 19  0  0  0	95.0%		Painted metal sheets
  0  0  0  6  0  0 14  0  0	70.0%		Self-Blocking Bricks
  1  0  0  0  0  0  0 19  0	95.0%		Shadows
  0  0  0  0  1  0  1  0 18	90.0%		Trees

overall_acc:	0.85
κ =		0.83125
sensitivities:	[0.8, 0.8, 0.95, 0.75, 0.85, 0.95, 0.7, 0.95, 0.9]
specificities:	[0.975, 0.98125, 0.98125, 0.95625, 0.975, 0.99375, 0.96875, 1.0, 1.0]
PPVs:		[0.8, 0.8421052631578947, 0.8636363636363636, 0.6818181818181818, 0.8095238095238095, 0.95, 0.7368421052631579, 1.0, 1.0]
NPVs:		[0.975, 0.9751552795031055, 0.9936708860759493, 0.9683544303797469, 0.9811320754716981, 0.99375, 0.9627329192546584, 0.9937888198757764, 0.9876543209876543]
F1s:		[0.8, 0.8205128205128205, 0.9047619047619048, 0.7142857142857143, 0.8292682926829268, 0.95, 0.717948717948718, 0.9743589743589743, 0.9473684210526315]
accuracies:	[0.9555555555555556, 0.9611111111111111, 0.9777777777777777, 0.9333333333333333, 0.9611111111111111, 0.9888888888888889, 0.9388888888888889, 0.9944444444444445, 0.9888888888888889]
mean_accuracy:	0.9666666666666666
Dataset_slice = (900) -> [69, 125, 224, 361, 493, 514, 611, 763, 813, 56, 174, 287, 365, 435, 502, 659, 726, 860, 62, 169, 286, 356, 466, 569, 685, 738, 880, 91, 135, 227, 360, 414, 522, 653, 796, 867, 63, 180, 272, 321, 443, 562, 623, 795, 824, 66, 141, 201, 312, 426, 509, 652, 718, 802, 98, 175, 260, 368, 409, 518, 684, 749, 859, 32, 187, 210, 383, 490, 549, 636, 725, 854, 41, 185, 278, 364, 500, 551, 617, 750, 833, 100, 165, 256, 334, 417, 567, 681, 703, 830, 48, 101, 289, 351, 477, 597, 674, 791, 865, 95, 137, 246, 338, 464, 563, 682, 733, 853, 38, 149, 277, 328, 480, 578, 610, 770, 866, 57, 146, 293, 341, 412, 552, 648, 772, 851, 14, 176, 298, 390, 442, 594, 666, 727, 846, 22, 126, 218, 309, 441, 582, 655, 769, 808, 1, 120, 266, 344, 405, 592, 619, 793, 884, 93, 168, 254, 381, 419, 556, 697, 730, 826, 37, 123, 225, 313, 453, 533, 688, 728, 823, 54, 138, 204, 315, 437, 568, 643, 768, 875, 49, 156, 203, 335, 402, 507, 698, 706, 856, 58, 164, 257, 343, 440, 577, 612, 731, 845, 15, 155, 234, 394, 489, 542, 640, 775, 816, 60, 186, 285, 306, 423, 583, 637, 709, 810, 71, 107, 291, 348, 459, 513, 650, 777, 818, 85, 160, 283, 353, 496, 547, 687, 754, 861, 77, 178, 247, 316, 469, 544, 606, 741, 838, 25, 189, 237, 387, 495, 599, 692, 797, 828, 45, 182, 292, 373, 482, 584, 634, 788, 888, 39, 117, 250, 392, 456, 520, 660, 761, 894, 83, 162, 274, 346, 421, 576, 677, 739, 827, 44, 194, 231, 366, 448, 527, 691, 762, 897, 35, 112, 219, 333, 497, 560, 646, 740, 850, 28, 106, 236, 311, 468, 600, 662, 702, 852, 51, 119, 261, 310, 431, 516, 647, 737, 849, 96, 114, 273, 347, 465, 536, 670, 720, 863, 78, 163, 251, 352, 404, 538, 608, 779, 809, 2, 129, 213, 359, 403, 591, 624, 715, 848, 26, 183, 288, 308, 454, 598, 663, 701, 892, 19, 113, 282, 400, 401, 540, 625, 756, 882, 5, 111, 252, 302, 473, 566, 671, 743, 868, 10, 108, 211, 393, 427, 581, 621, 707, 893, 55, 152, 235, 342, 470, 541, 695, 717, 811, 65, 148, 276, 327, 428, 511, 673, 705, 855, 99, 136, 233, 304, 472, 546, 632, 708, 891, 6, 184, 230, 332, 413, 517, 633, 800, 812, 23, 131, 244, 330, 452, 515, 616, 766, 878, 7, 199, 240, 322, 422, 529, 627, 721, 819, 74, 142, 214, 319, 467, 505, 607, 746, 887, 86, 128, 264, 399, 494, 559, 602, 716, 847, 75, 200, 212, 389, 449, 573, 700, 755, 840, 42, 122, 300, 388, 418, 561, 622, 748, 843, 9, 150, 259, 339, 491, 510, 639, 759, 889, 11, 170, 296, 382, 484, 554, 630, 764, 805, 80, 140, 208, 374, 457, 596, 690, 751, 831, 73, 130, 239, 354, 458, 595, 631, 757, 806, 16, 134, 294, 370, 475, 519, 686, 790, 862, 31, 177, 202, 336, 432, 580, 613, 745, 872, 89, 151, 275, 317, 438, 572, 699, 712, 834, 13, 104, 243, 391, 479, 504, 680, 742, 890, 72, 144, 262, 375, 436, 548, 672, 781, 877, 84, 173, 258, 320, 451, 575, 693, 799, 836, 64, 109, 221, 350, 474, 555, 669, 744, 801, 97, 102, 228, 325, 408, 508, 683, 735, 898, 61, 118, 248, 378, 487, 553, 651, 794, 815, 59, 172, 279, 395, 434, 545, 696, 776, 817, 40, 132, 241, 358, 406, 574, 667, 753, 803, 43, 171, 217, 380, 425, 526, 679, 734, 820, 20, 124, 215, 385, 486, 501, 678, 722, 807, 30, 105, 269, 355, 445, 558, 614, 786, 825, 53, 195, 280, 369, 463, 550, 668, 771, 839, 12, 157, 297, 377, 439, 565, 644, 719, 857, 50, 159, 238, 345, 499, 589, 676, 704, 873, 34, 193, 284, 398, 424, 579, 661, 732, 870, 81, 115, 253, 397, 416, 570, 664, 724, 844, 67, 166, 222, 372, 450, 585, 649, 774, 804, 24, 127, 281, 371, 481, 524, 615, 729, 841, 4, 145, 263, 384, 492, 539, 641, 783, 871, 68, 154, 265, 324, 410, 503, 605, 765, 885, 90, 139, 255, 349, 462, 534, 665, 758, 821, 3, 143, 249, 357, 455, 506, 654, 711, 837, 52, 181, 220, 305, 420, 523, 628, 780, 883, 94, 188, 229, 329, 483, 543, 642, 785, 822, 29, 153, 270, 303, 446, 535, 626, 767, 832, 36, 179, 226, 307, 433, 564, 694, 747, 829, 82, 158, 209, 314, 478, 530, 620, 773, 900, 27, 190, 245, 318, 485, 521, 609, 760, 895, 70, 197, 206, 376, 476, 537, 657, 714, 899, 92, 196, 271, 363, 415, 532, 656, 723, 835, 76, 191, 295, 331, 447, 571, 601, 782, 858, 21, 110, 268, 337, 498, 557, 638, 792, 842, 17, 167, 242, 396, 407, 588, 629, 713, 881, 46, 192, 290, 301, 429, 531, 635, 784, 864, 18, 161, 216, 362, 430, 525, 689, 736, 814, 87, 103, 267, 379, 471, 590, 675, 789, 879, 8, 147, 232, 323, 411, 593, 604, 752, 874, 47, 198, 223, 326, 444, 586, 645, 798, 869, 33, 133, 207, 386, 488, 512, 658, 787, 896, 88, 121, 299, 340, 460, 528, 618, 778, 886, 79, 116, 205, 367, 461, 587, 603, 710, 876]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1630.07 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1425.81 MBs	(shape (3, 4, 3, 4, 720, 1030, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 02:02:48 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (462+258=720 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A103 ⫹₆₀ 16597), purity -1.6097099197439593
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+177=258 samples) on frame 1 with decision: {1} A23 ⫺ 4578, purity -0.6677436628811942
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (237+225=462 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫹₆₀ 11216), purity -1.1790187401644556
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (104+73=177 samples) on frame 1 with decision: {1} A18 ⫺₇₀ 12356, purity -0.5674150175312248
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (98+127=225 samples) on frame 1 with decision: {1} A66 ⫺ 5440, purity -0.5988099824795717
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (157+80=237 samples) on frame 1 with decision: {1} ⟨EC⟩ (A13 ⫺ 32421), purity -0.6202783557619828
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (71+27=98 samples) on frame 1 with decision: {1} A72 ⫺ 14229, purity -0.17536614840775466
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (63+41=104 samples) on frame 1 with decision: {1} A45 ⫺₆₀ 12871, purity -0.5107338357648191
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (24+103=127 samples) on frame 1 with decision: {1} A30 ⫹ 13347, purity -0.5451834581100804
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (142+15=157 samples) on frame 1 with decision: {1} A76 ⫺ 23216, purity -0.6211692616039355
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+18=27 samples) on frame 1 with decision: {1} A25 ⫹ 6807, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+24=41 samples) on frame 1 with decision: {1} ⟨NTPP⟩ (A15 ⫺ 11098), purity -0.49033769943697064
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (45+58=103 samples) on frame 1 with decision: {1} A102 ⫺ 21650, purity -0.5056640806924152
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (92+50=142 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A16 ⫺ 14883), purity -0.5412446852777631
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+13=24 samples) on frame 1 with decision: {1} ⟨EC⟩ (A6 ⫺ 13367), purity -0.13962487795173403
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+11=45 samples) on frame 1 with decision: {1} A83 ⫹ 20421, purity -0.29995143783882755
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (32+26=58 samples) on frame 1 with decision: {1} A98 ⫺₇₀ 25802, purity -0.32779587460680737
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+64=92 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A2 ⫹₈₀ 14645), purity -0.48082976139353073
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+40=50 samples) on frame 1 with decision: {1} ⟨TPP⟩ (A1 ⫹ 11543), purity -0.1386294361119891
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A1 ⫺ 9988, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A1 ⫺ 3191, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+5=10 samples) on frame 1 with decision: {1} A1 ⫺₇₀ 14883, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+26=32 samples) on frame 1 with decision: {1} A81 ⫹₈₀ 26159, purity -0.2905720673807429
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (51+13=64 samples) on frame 1 with decision: {1} A41 ⫺₆₀ 18975, purity -0.507222227859929
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+18=26 samples) on frame 1 with decision: {1} A9 ⫹₈₀ 6777, purity -0.2035579194332252
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (42+9=51 samples) on frame 1 with decision: {1} A15 ⫹₈₀ 13525, purity -0.4009869372061432
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A1 ⫺ 6322, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+29=42 samples) on frame 1 with decision: {1} A3 ⫹₆₀ 12564, purity -0.2062290416997807
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+5=13 samples) on frame 1 with decision: {1} A77 ⫺₈₀ 18678, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
451.423801 seconds (5.26 G allocations: 100.676 GiB, 11.42% gc time, 0.03% compilation time)
Train tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 10
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A103 ⫹₆₀ 16597)
✔ {1} A23 ⫺ 4578
│✔ {1} A18 ⫺₇₀ 12356
││✔ Bitumen : 68/73 (conf: 0.9315068493150684)
││✘ {1} A45 ⫺₆₀ 12871
││ ✔ {1} ⟨NTPP⟩ (A15 ⫺ 11098)
││ │✔ {1} ⟨EC⟩ (A6 ⫺ 13367)
││ ││✔ Asphalt : 13/13 (conf: 1.0)
││ ││✘ {1} A1 ⫺ 9988
││ ││ ✔ Bitumen : 7/7 (conf: 1.0)
││ ││ ✘ Bitumen : 3/4 (conf: 0.75)
││ │✘ Gravel : 16/17 (conf: 0.9411764705882353)
││ ✘ Asphalt : 61/63 (conf: 0.9682539682539683)
│✘ Shadows : 80/81 (conf: 0.9876543209876543)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫹₆₀ 11216)
 ✔ {1} A66 ⫺ 5440
 │✔ {1} A30 ⫹ 13347
 ││✔ {1} A102 ⫺ 21650
 │││✔ {1} A98 ⫺₇₀ 25802
 ││││✔ Meadows : 26/26 (conf: 1.0)
 ││││✘ {1} A81 ⫹₈₀ 26159
 ││││ ✔ {1} A9 ⫹₈₀ 6777
 ││││ │✔ Meadows : 18/18 (conf: 1.0)
 ││││ │✘ {1} A1 ⫺ 6322
 ││││ │ ✔ Meadows : 4/4 (conf: 1.0)
 ││││ │ ✘ Bare Soil : 3/4 (conf: 0.75)
 ││││ ✘ Bare Soil : 6/6 (conf: 1.0)
 │││✘ {1} A83 ⫹ 20421
 │││ ✔ {1} A1 ⫺ 3191
 │││ │✔ Meadows : 7/7 (conf: 1.0)
 │││ │✘ Meadows : 3/4 (conf: 0.75)
 │││ ✘ Bare Soil : 31/34 (conf: 0.9117647058823529)
 ││✘ Bare Soil : 24/24 (conf: 1.0)
 │✘ {1} A72 ⫺ 14229
 │ ✔ {1} A25 ⫹ 6807
 │ │✔ Meadows : 18/18 (conf: 1.0)
 │ │✘ Trees : 9/9 (conf: 1.0)
 │ ✘ Trees : 71/71 (conf: 1.0)
 ✘ {1} ⟨EC⟩ (A13 ⫺ 32421)
  ✔ Painted metal sheets : 80/80 (conf: 1.0)
  ✘ {1} A76 ⫺ 23216
   ✔ Bare Soil : 15/15 (conf: 1.0)
   ✘ {1} ⟨T̅P̅P̅⟩ (A16 ⫺ 14883)
    ✔ {1} ⟨TPP⟩ (A1 ⫹ 11543)
    │✔ Self-Blocking Bricks : 40/40 (conf: 1.0)
    │✘ {1} A1 ⫺₇₀ 14883
    │ ✔ Gravel : 5/5 (conf: 1.0)
    │ ✘ Self-Blocking Bricks : 5/5 (conf: 1.0)
    ✘ {1} ⟨N̅T̅P̅P̅⟩ (A2 ⫹₈₀ 14645)
     ✔ {1} A41 ⫺₆₀ 18975
     │✔ Gravel : 13/13 (conf: 1.0)
     │✘ {1} A15 ⫹₈₀ 13525
     │ ✔ Gravel : 9/9 (conf: 1.0)
     │ ✘ {1} A3 ⫹₆₀ 12564
     │  ✔ Self-Blocking Bricks : 29/29 (conf: 1.0)
     │  ✘ {1} A77 ⫺₈₀ 18678
     │   ✔ Self-Blocking Bricks : 5/5 (conf: 1.0)
     │   ✘ Gravel : 8/8 (conf: 1.0)
     ✘ Gravel : 28/28 (conf: 1.0)
● [ 01/07/2021 02:10:19 ] Saving tree to file ./gandalf/trees/tree_5108b14e2f0584fed872f1fd654cd13de5c34d3b9c1b6f5887b4df8a61a9edc2.jld...
Test tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 10
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A103 ⫹₆₀ 16597)
✔ {1} A23 ⫺ 4578
│✔ {1} A18 ⫺₇₀ 12356
││✔ Bitumen : 18/19 (conf: 0.9473684210526315)
││✘ {1} A45 ⫺₆₀ 12871
││ ✔ {1} ⟨NTPP⟩ (A15 ⫺ 11098)
││ │✔ {1} ⟨EC⟩ (A6 ⫺ 13367)
││ ││✔ Asphalt : 2/2 (conf: 1.0)
││ ││✘ {1} A1 ⫺ 9988
││ ││ ✔ Bitumen : 0/0 (conf: NaN)
││ ││ ✘ Bitumen : 2/2 (conf: 1.0)
││ │✘ Gravel : 1/1 (conf: 1.0)
││ ✘ Asphalt : 18/18 (conf: 1.0)
│✘ Shadows : 20/20 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫹₆₀ 11216)
 ✔ {1} A66 ⫺ 5440
 │✔ {1} A30 ⫹ 13347
 ││✔ {1} A102 ⫺ 21650
 │││✔ {1} A98 ⫺₇₀ 25802
 ││││✔ Meadows : 9/10 (conf: 0.9)
 ││││✘ {1} A81 ⫹₈₀ 26159
 ││││ ✔ {1} A9 ⫹₈₀ 6777
 ││││ │✔ Meadows : 7/7 (conf: 1.0)
 ││││ │✘ {1} A1 ⫺ 6322
 ││││ │ ✔ Meadows : 0/0 (conf: NaN)
 ││││ │ ✘ Bare Soil : 2/2 (conf: 1.0)
 ││││ ✘ Bare Soil : 1/2 (conf: 0.5)
 │││✘ {1} A83 ⫹ 20421
 │││ ✔ {1} A1 ⫺ 3191
 │││ │✔ Meadows : 1/3 (conf: 0.3333333333333333)
 │││ │✘ Meadows : 1/1 (conf: 1.0)
 │││ ✘ Bare Soil : 7/7 (conf: 1.0)
 ││✘ Bare Soil : 4/5 (conf: 0.8)
 │✘ {1} A72 ⫺ 14229
 │ ✔ {1} A25 ⫹ 6807
 │ │✔ Meadows : 1/1 (conf: 1.0)
 │ │✘ Trees : 2/2 (conf: 1.0)
 │ ✘ Trees : 18/18 (conf: 1.0)
 ✘ {1} ⟨EC⟩ (A13 ⫺ 32421)
  ✔ Painted metal sheets : 20/20 (conf: 1.0)
  ✘ {1} A76 ⫺ 23216
   ✔ Bare Soil : 3/3 (conf: 1.0)
   ✘ {1} ⟨T̅P̅P̅⟩ (A16 ⫺ 14883)
    ✔ {1} ⟨TPP⟩ (A1 ⫹ 11543)
    │✔ Self-Blocking Bricks : 6/7 (conf: 0.8571428571428571)
    │✘ {1} A1 ⫺₇₀ 14883
    │ ✔ Gravel : 2/3 (conf: 0.6666666666666666)
    │ ✘ Self-Blocking Bricks : 0/2 (conf: 0.0)
    ✘ {1} ⟨N̅T̅P̅P̅⟩ (A2 ⫹₈₀ 14645)
     ✔ {1} A41 ⫺₆₀ 18975
     │✔ Gravel : 2/2 (conf: 1.0)
     │✘ {1} A15 ⫹₈₀ 13525
     │ ✔ Gravel : 3/3 (conf: 1.0)
     │ ✘ {1} A3 ⫹₆₀ 12564
     │  ✔ Self-Blocking Bricks : 8/11 (conf: 0.7272727272727273)
     │  ✘ {1} A77 ⫺₈₀ 18678
     │   ✔ Self-Blocking Bricks : 2/2 (conf: 1.0)
     │   ✘ Gravel : 1/1 (conf: 1.0)
     ✘ Gravel : 4/6 (conf: 0.6666666666666666)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	91.67%	100.0%	85.0%	100.0%	65.0%	95.0%	100.0%	80.0%	100.0%	100.0%	100.0%	89.47%	95.24%	81.25%	86.36%	100.0%	72.73%	100.0%	100.0%	||	90.63%	[100.0, 87.18, 97.56, 72.22, 90.48, 100.0, 76.19, 100.0, 100.0]%	
  accuracy: 91.67% kappa: 90.63% 
 20  0  0  0  0  0  0  0  0	100.0%		Asphalt
  0 17  0  0  3  0  0  0  0	85.0%		Bare Soil
  0  0 20  0  0  0  0  0  0	100.0%		Bitumen
  0  0  1 13  0  0  6  0  0	65.0%		Gravel
  0  1  0  0 19  0  0  0  0	95.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  1  0  3  0  0 16  0  0	80.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  0  0  0  0 20	100.0%		Trees

overall_acc:	0.9166666666666666
κ =		0.9062500000000001
sensitivities:	[1.0, 0.85, 1.0, 0.65, 0.95, 1.0, 0.8, 1.0, 1.0]
specificities:	[1.0, 0.9875, 0.99375, 0.98125, 0.98125, 1.0, 0.9625, 1.0, 1.0]
PPVs:		[1.0, 0.8947368421052632, 0.9523809523809523, 0.8125, 0.8636363636363636, 1.0, 0.7272727272727273, 1.0, 1.0]
NPVs:		[1.0, 0.9813664596273292, 1.0, 0.9573170731707317, 0.9936708860759493, 1.0, 0.9746835443037974, 1.0, 1.0]
F1s:		[1.0, 0.8717948717948718, 0.975609756097561, 0.7222222222222222, 0.9047619047619048, 1.0, 0.7619047619047619, 1.0, 1.0]
accuracies:	[1.0, 0.9722222222222222, 0.9944444444444445, 0.9444444444444444, 0.9777777777777777, 1.0, 0.9444444444444444, 1.0, 1.0]
mean_accuracy:	0.9814814814814815
Dataset_slice = (900) -> [60, 161, 270, 359, 480, 580, 608, 710, 877, 46, 140, 238, 345, 460, 561, 649, 741, 817, 23, 131, 243, 309, 470, 560, 652, 781, 844, 40, 121, 266, 306, 436, 558, 613, 770, 827, 68, 185, 240, 312, 488, 534, 694, 736, 860, 29, 183, 233, 332, 495, 531, 646, 744, 869, 53, 164, 208, 386, 441, 511, 603, 782, 826, 24, 154, 269, 393, 440, 551, 690, 788, 808, 83, 153, 226, 339, 425, 590, 651, 799, 833, 1, 112, 263, 302, 429, 515, 618, 776, 813, 47, 146, 273, 387, 432, 545, 602, 737, 893, 65, 110, 300, 341, 426, 529, 660, 756, 897, 98, 115, 209, 348, 419, 530, 679, 772, 874, 51, 176, 286, 395, 442, 516, 609, 775, 875, 6, 148, 212, 336, 452, 556, 654, 760, 855, 12, 103, 204, 303, 453, 600, 612, 758, 854, 45, 122, 237, 366, 420, 541, 673, 722, 819, 93, 167, 293, 368, 415, 521, 617, 707, 858, 80, 106, 241, 323, 496, 563, 662, 763, 811, 97, 193, 276, 365, 414, 592, 631, 748, 887, 5, 132, 232, 390, 444, 528, 674, 792, 888, 73, 124, 231, 358, 433, 504, 635, 764, 864, 85, 174, 265, 329, 462, 524, 686, 784, 816, 44, 134, 255, 322, 489, 578, 648, 732, 890, 18, 160, 258, 372, 493, 501, 611, 783, 837, 32, 188, 290, 394, 409, 554, 626, 745, 822, 62, 200, 206, 320, 473, 587, 675, 733, 883, 74, 111, 234, 360, 463, 514, 681, 761, 801, 49, 128, 289, 355, 406, 533, 671, 789, 840, 76, 191, 257, 381, 478, 566, 624, 729, 894, 88, 125, 274, 349, 424, 546, 698, 704, 802, 34, 101, 262, 318, 408, 573, 664, 780, 834, 2, 162, 246, 324, 486, 570, 639, 717, 857, 95, 105, 292, 337, 421, 595, 656, 778, 848, 36, 197, 207, 343, 492, 520, 622, 759, 810, 27, 147, 203, 362, 437, 577, 663, 752, 876, 35, 149, 202, 375, 411, 539, 685, 727, 803, 31, 170, 242, 374, 430, 571, 696, 779, 859, 7, 126, 247, 344, 500, 552, 620, 730, 870, 11, 184, 298, 338, 428, 532, 669, 734, 815, 52, 109, 282, 370, 456, 562, 684, 767, 831, 75, 142, 213, 328, 446, 576, 672, 716, 814, 69, 152, 287, 330, 455, 564, 627, 702, 880, 41, 172, 248, 354, 407, 582, 667, 753, 820, 22, 194, 249, 397, 466, 572, 605, 712, 898, 10, 136, 253, 399, 435, 542, 638, 790, 881, 16, 157, 228, 357, 448, 585, 650, 798, 842, 72, 178, 291, 313, 494, 526, 655, 794, 836, 61, 173, 210, 319, 404, 586, 658, 749, 871, 96, 143, 220, 351, 464, 598, 657, 751, 863, 56, 158, 299, 378, 401, 557, 615, 800, 839, 48, 175, 211, 367, 431, 509, 668, 731, 853, 89, 104, 236, 389, 417, 527, 700, 771, 861, 71, 139, 260, 376, 491, 536, 683, 754, 804, 15, 168, 280, 327, 443, 599, 653, 708, 856, 30, 119, 288, 310, 449, 594, 619, 701, 867, 90, 138, 294, 305, 459, 549, 693, 795, 882, 50, 118, 205, 400, 477, 518, 616, 714, 830, 66, 130, 252, 380, 483, 589, 637, 743, 852, 14, 144, 261, 369, 454, 503, 633, 705, 835, 100, 145, 215, 371, 447, 579, 607, 768, 846, 17, 156, 296, 356, 457, 508, 677, 746, 818, 84, 186, 227, 315, 475, 565, 691, 750, 878, 86, 179, 283, 304, 439, 548, 699, 720, 879, 92, 113, 281, 335, 461, 537, 634, 709, 841, 78, 163, 279, 342, 418, 596, 682, 719, 862, 43, 133, 217, 311, 469, 519, 643, 715, 865, 59, 169, 251, 316, 498, 547, 676, 796, 828, 54, 177, 245, 361, 403, 591, 695, 791, 885, 25, 117, 254, 384, 422, 543, 614, 769, 899, 64, 108, 264, 346, 434, 505, 640, 797, 900, 55, 165, 297, 352, 484, 593, 629, 777, 832, 99, 159, 278, 307, 416, 538, 623, 728, 892, 58, 150, 256, 388, 467, 502, 642, 739, 809, 42, 196, 250, 326, 427, 569, 604, 703, 868, 67, 141, 216, 331, 487, 525, 601, 742, 889, 3, 137, 219, 373, 445, 544, 670, 713, 807, 13, 195, 222, 377, 402, 583, 632, 723, 886, 8, 102, 259, 340, 476, 535, 610, 787, 823, 79, 151, 272, 398, 405, 512, 666, 773, 806, 91, 180, 224, 325, 471, 522, 628, 740, 825, 33, 189, 284, 333, 468, 510, 659, 718, 812, 38, 182, 268, 379, 472, 517, 647, 735, 829, 77, 166, 275, 391, 479, 523, 687, 762, 849, 9, 181, 271, 353, 499, 588, 697, 765, 843, 39, 155, 221, 317, 412, 553, 680, 785, 838, 4, 198, 277, 392, 458, 513, 661, 747, 896, 87, 199, 295, 383, 481, 550, 645, 706, 884, 21, 114, 201, 334, 465, 507, 636, 725, 847, 19, 120, 230, 363, 497, 567, 689, 724, 866, 94, 190, 229, 314, 485, 575, 621, 766, 873, 57, 116, 214, 308, 423, 597, 625, 721, 895, 82, 192, 223, 350, 450, 581, 678, 726, 851, 28, 171, 285, 347, 451, 559, 606, 786, 850, 26, 127, 225, 385, 474, 574, 630, 711, 891, 20, 107, 244, 301, 438, 506, 644, 757, 821, 81, 135, 239, 396, 482, 540, 641, 755, 824, 70, 123, 235, 321, 410, 568, 688, 793, 805, 63, 129, 267, 382, 413, 555, 665, 738, 872, 37, 187, 218, 364, 490, 584, 692, 774, 845]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1630.07 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1425.81 MBs	(shape (3, 4, 3, 4, 720, 1030, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 02:10:28 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (462+258=720 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A99 ⫹₇₀ 16319), purity -1.6040117817824031
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (237+225=462 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫹₇₀ 11355), purity -1.178497972763709
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (178+80=258 samples) on frame 1 with decision: {1} A9 ⫹₇₀ 6054, purity -0.6558392200079038
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (95+130=225 samples) on frame 1 with decision: {1} A66 ⫺ 5450, purity -0.5846424639306692
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (157+80=237 samples) on frame 1 with decision: {1} A14 ⫺ 20322, purity -0.6192631889301475
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+102=178 samples) on frame 1 with decision: {1} ⟨PO⟩ (A16 ⫹₇₀ 12078), purity -0.5371467988516909
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (71+24=95 samples) on frame 1 with decision: {1} A72 ⫺ 14229, purity -0.16713176542938502
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (20+110=130 samples) on frame 1 with decision: {1} A26 ⫹ 12425, purity -0.5724450434945005
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (142+15=157 samples) on frame 1 with decision: {1} A76 ⫺ 23216, purity -0.6196368123100185
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (89+13=102 samples) on frame 1 with decision: {1} A36 ⫺ 14030, purity -0.4414971019989581
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+15=24 samples) on frame 1 with decision: {1} A24 ⫹ 6223, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (55+55=110 samples) on frame 1 with decision: {1} A103 ⫺ 22215, purity -0.4997702717277049
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (75+67=142 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A15 ⫺₆₀ 13912), purity -0.5730058398378024
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (26+63=89 samples) on frame 1 with decision: {1} ⟨DC⟩ (A66 ⫹ 13050), purity -0.3558254277677127
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+27=55 samples) on frame 1 with decision: {1} A83 ⫹ 21779, purity -0.41024470415067493
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+47=55 samples) on frame 1 with decision: {1} A31 ⫹ 12039, purity -0.24660612336095147
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+14=26 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A3 ⫺₈₀ 10117), purity -0.25953929751637306
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (46+21=67 samples) on frame 1 with decision: {1} A2 ⫺₇₀ 12574, purity -0.285951677575282
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (43+32=75 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A3 ⫺₇₀ 11464), purity -0.384752908497453
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A1 ⫺₈₀ 6143, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+13=21 samples) on frame 1 with decision: {1} A1 ⫹₈₀ 16082, purity -0.3821020479283067
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+14=27 samples) on frame 1 with decision: {1} A85 ⫺₇₀ 18826, purity -0.2067110846332596
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+4=12 samples) on frame 1 with decision: {1} ⟨DC⟩ (A26 ⫺ 15160), purity -0.18744504820626942
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+35=43 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A42 ⫹₇₀ 18440), purity -0.46399188296616173
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+9=13 samples) on frame 1 with decision: {1} A3 ⫹ 6936, purity -0.21327605555690624
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+7=13 samples) on frame 1 with decision: {1} A2 ⫺₇₀ 12990, purity -0.29377576998222127
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+18=35 samples) on frame 1 with decision: {1} A83 ⫺ 18192, purity -0.33583066627117175
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+6=17 samples) on frame 1 with decision: {1} A36 ⫺ 16577, purity -0.3791458118434741
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A1 ⫺ 9849, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
540.988145 seconds (6.64 G allocations: 142.416 GiB, 15.58% gc time, 0.02% compilation time)
Train tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 10
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A99 ⫹₇₀ 16319)
✔ {1} A9 ⫹₇₀ 6054
│✔ Shadows : 80/80 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A16 ⫹₇₀ 12078)
│ ✔ {1} A36 ⫺ 14030
│ │✔ Gravel : 13/13 (conf: 1.0)
│ │✘ {1} ⟨DC⟩ (A66 ⫹ 13050)
│ │ ✔ Asphalt : 59/63 (conf: 0.9365079365079365)
│ │ ✘ {1} ⟨T̅P̅P̅⟩ (A3 ⫺₈₀ 10117)
│ │  ✔ Asphalt : 14/14 (conf: 1.0)
│ │  ✘ {1} ⟨DC⟩ (A26 ⫺ 15160)
│ │   ✔ Asphalt : 3/4 (conf: 0.75)
│ │   ✘ Bitumen : 8/8 (conf: 1.0)
│ ✘ Bitumen : 71/76 (conf: 0.9342105263157895)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫹₇₀ 11355)
 ✔ {1} A66 ⫺ 5450
 │✔ {1} A26 ⫹ 12425
 ││✔ {1} A103 ⫺ 22215
 │││✔ {1} A31 ⫹ 12039
 ││││✔ Meadows : 45/47 (conf: 0.9574468085106383)
 ││││✘ {1} A1 ⫺₈₀ 6143
 ││││ ✔ Meadows : 3/4 (conf: 0.75)
 ││││ ✘ Bare Soil : 4/4 (conf: 1.0)
 │││✘ {1} A83 ⫹ 21779
 │││ ✔ {1} A85 ⫺₇₀ 18826
 │││ │✔ Meadows : 14/14 (conf: 1.0)
 │││ │✘ {1} A3 ⫹ 6936
 │││ │ ✔ Bare Soil : 9/9 (conf: 1.0)
 │││ │ ✘ Bare Soil : 2/4 (conf: 0.5)
 │││ ✘ Bare Soil : 27/28 (conf: 0.9642857142857143)
 ││✘ Bare Soil : 20/20 (conf: 1.0)
 │✘ {1} A72 ⫺ 14229
 │ ✔ {1} A24 ⫹ 6223
 │ │✔ Meadows : 15/15 (conf: 1.0)
 │ │✘ Trees : 9/9 (conf: 1.0)
 │ ✘ Trees : 71/71 (conf: 1.0)
 ✘ {1} A14 ⫺ 20322
  ✔ Painted metal sheets : 80/80 (conf: 1.0)
  ✘ {1} A76 ⫺ 23216
   ✔ Bare Soil : 15/15 (conf: 1.0)
   ✘ {1} ⟨N̅T̅P̅P̅⟩ (A15 ⫺₆₀ 13912)
    ✔ {1} A2 ⫺₇₀ 12574
    │✔ {1} A1 ⫹₈₀ 16082
    ││✔ {1} A2 ⫺₇₀ 12990
    │││✔ Self-Blocking Bricks : 7/7 (conf: 1.0)
    │││✘ Gravel : 4/6 (conf: 0.6666666666666666)
    ││✘ Gravel : 8/8 (conf: 1.0)
    │✘ Self-Blocking Bricks : 45/46 (conf: 0.9782608695652174)
    ✘ {1} ⟨N̅T̅P̅P̅⟩ (A3 ⫺₇₀ 11464)
     ✔ Gravel : 32/32 (conf: 1.0)
     ✘ {1} ⟨T̅P̅P̅⟩ (A42 ⫹₇₀ 18440)
      ✔ {1} A83 ⫺ 18192
      │✔ Self-Blocking Bricks : 18/18 (conf: 1.0)
      │✘ {1} A36 ⫺ 16577
      │ ✔ Gravel : 6/6 (conf: 1.0)
      │ ✘ {1} A1 ⫺ 9849
      │  ✔ Self-Blocking Bricks : 7/7 (conf: 1.0)
      │  ✘ Gravel : 3/4 (conf: 0.75)
      ✘ Gravel : 8/8 (conf: 1.0)
● [ 01/07/2021 02:19:29 ] Saving tree to file ./gandalf/trees/tree_eb36697640c38f2147dcbf94c8fb0a64818f6c2f31a72285efc07b68802c39b8.jld...
Test tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 10
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A99 ⫹₇₀ 16319)
✔ {1} A9 ⫹₇₀ 6054
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A16 ⫹₇₀ 12078)
│ ✔ {1} A36 ⫺ 14030
│ │✔ Gravel : 2/3 (conf: 0.6666666666666666)
│ │✘ {1} ⟨DC⟩ (A66 ⫹ 13050)
│ │ ✔ Asphalt : 17/19 (conf: 0.8947368421052632)
│ │ ✘ {1} ⟨T̅P̅P̅⟩ (A3 ⫺₈₀ 10117)
│ │  ✔ Asphalt : 1/1 (conf: 1.0)
│ │  ✘ {1} ⟨DC⟩ (A26 ⫺ 15160)
│ │   ✔ Asphalt : 0/0 (conf: NaN)
│ │   ✘ Bitumen : 2/2 (conf: 1.0)
│ ✘ Bitumen : 16/18 (conf: 0.8888888888888888)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫹₇₀ 11355)
 ✔ {1} A66 ⫺ 5450
 │✔ {1} A26 ⫹ 12425
 ││✔ {1} A103 ⫺ 22215
 │││✔ {1} A31 ⫹ 12039
 ││││✔ Meadows : 11/12 (conf: 0.9166666666666666)
 ││││✘ {1} A1 ⫺₈₀ 6143
 ││││ ✔ Meadows : 0/2 (conf: 0.0)
 ││││ ✘ Bare Soil : 0/0 (conf: NaN)
 │││✘ {1} A83 ⫹ 21779
 │││ ✔ {1} A85 ⫺₇₀ 18826
 │││ │✔ Meadows : 3/3 (conf: 1.0)
 │││ │✘ {1} A3 ⫹ 6936
 │││ │ ✔ Bare Soil : 0/0 (conf: NaN)
 │││ │ ✘ Bare Soil : 0/0 (conf: NaN)
 │││ ✘ Bare Soil : 7/7 (conf: 1.0)
 ││✘ Bare Soil : 5/6 (conf: 0.8333333333333334)
 │✘ {1} A72 ⫺ 14229
 │ ✔ {1} A24 ⫹ 6223
 │ │✔ Meadows : 3/3 (conf: 1.0)
 │ │✘ Trees : 2/4 (conf: 0.5)
 │ ✘ Trees : 18/18 (conf: 1.0)
 ✘ {1} A14 ⫺ 20322
  ✔ Painted metal sheets : 19/21 (conf: 0.9047619047619048)
  ✘ {1} A76 ⫺ 23216
   ✔ Bare Soil : 3/3 (conf: 1.0)
   ✘ {1} ⟨N̅T̅P̅P̅⟩ (A15 ⫺₆₀ 13912)
    ✔ {1} A2 ⫺₇₀ 12574
    │✔ {1} A1 ⫹₈₀ 16082
    ││✔ {1} A2 ⫺₇₀ 12990
    │││✔ Self-Blocking Bricks : 0/0 (conf: NaN)
    │││✘ Gravel : 0/1 (conf: 0.0)
    ││✘ Gravel : 2/2 (conf: 1.0)
    │✘ Self-Blocking Bricks : 8/10 (conf: 0.8)
    ✘ {1} ⟨N̅T̅P̅P̅⟩ (A3 ⫺₇₀ 11464)
     ✔ Gravel : 7/8 (conf: 0.875)
     ✘ {1} ⟨T̅P̅P̅⟩ (A42 ⫹₇₀ 18440)
      ✔ {1} A83 ⫺ 18192
      │✔ Self-Blocking Bricks : 5/6 (conf: 0.8333333333333334)
      │✘ {1} A36 ⫺ 16577
      │ ✔ Gravel : 0/2 (conf: 0.0)
      │ ✘ {1} A1 ⫺ 9849
      │  ✔ Self-Blocking Bricks : 2/6 (conf: 0.3333333333333333)
      │  ✘ Gravel : 1/2 (conf: 0.5)
      ✘ Gravel : 1/1 (conf: 1.0)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	86.11%	90.0%	75.0%	90.0%	65.0%	85.0%	95.0%	75.0%	100.0%	100.0%	90.0%	93.75%	90.0%	68.42%	85.0%	90.48%	68.18%	100.0%	90.91%	||	84.38%	[90.0, 83.33, 90.0, 66.67, 85.0, 92.68, 71.43, 100.0, 95.24]%	
  accuracy: 86.11% kappa: 84.38% 
 18  0  1  1  0  0  0  0  0	90.0%		Asphalt
  0 15  0  0  3  2  0  0  0	75.0%		Bare Soil
  2  0 18  0  0  0  0  0  0	90.0%		Bitumen
  0  0  0 13  0  0  7  0  0	65.0%		Gravel
  0  1  0  0 17  0  0  0  2	85.0%		Meadows
  0  0  1  0  0 19  0  0  0	95.0%		Painted metal sheets
  0  0  0  5  0  0 15  0  0	75.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  0  0  0  0 20	100.0%		Trees

overall_acc:	0.8611111111111112
κ =		0.84375
sensitivities:	[0.9, 0.75, 0.9, 0.65, 0.85, 0.95, 0.75, 1.0, 1.0]
specificities:	[0.9875, 0.99375, 0.9875, 0.9625, 0.98125, 0.9875, 0.95625, 1.0, 0.9875]
PPVs:		[0.9, 0.9375, 0.9, 0.6842105263157895, 0.85, 0.9047619047619048, 0.6818181818181818, 1.0, 0.9090909090909091]
NPVs:		[0.9875, 0.9695121951219512, 0.9875, 0.9565217391304348, 0.98125, 0.9937106918238994, 0.9683544303797469, 1.0, 1.0]
F1s:		[0.9, 0.8333333333333334, 0.9, 0.6666666666666666, 0.85, 0.926829268292683, 0.7142857142857143, 1.0, 0.9523809523809523]
accuracies:	[0.9777777777777777, 0.9666666666666667, 0.9777777777777777, 0.9277777777777778, 0.9666666666666667, 0.9833333333333333, 0.9333333333333333, 1.0, 0.9888888888888889]
mean_accuracy:	0.9691358024691357
Dataset_slice = (900) -> [10, 116, 221, 307, 469, 514, 633, 738, 882, 12, 188, 231, 354, 401, 560, 622, 715, 890, 84, 193, 239, 362, 483, 542, 675, 754, 826, 52, 131, 230, 337, 491, 527, 664, 792, 833, 45, 175, 218, 385, 492, 523, 695, 788, 851, 87, 192, 265, 383, 486, 503, 657, 744, 817, 14, 190, 264, 381, 480, 580, 697, 760, 849, 20, 142, 242, 352, 422, 531, 678, 762, 850, 39, 159, 210, 355, 453, 561, 629, 766, 848, 9, 138, 279, 380, 488, 544, 665, 716, 819, 38, 119, 250, 391, 454, 541, 673, 782, 816, 43, 155, 289, 365, 495, 512, 669, 789, 853, 23, 187, 292, 316, 457, 600, 616, 783, 820, 92, 132, 205, 389, 403, 504, 607, 755, 875, 93, 113, 286, 356, 440, 519, 631, 771, 821, 51, 145, 296, 366, 418, 557, 699, 739, 843, 89, 158, 240, 368, 433, 584, 684, 756, 811, 67, 146, 259, 336, 449, 515, 693, 759, 892, 100, 176, 244, 372, 464, 534, 632, 711, 865, 71, 164, 283, 390, 460, 546, 656, 704, 802, 36, 128, 243, 325, 404, 567, 659, 710, 857, 19, 153, 236, 306, 412, 596, 615, 751, 827, 94, 126, 237, 400, 496, 537, 618, 736, 847, 68, 137, 260, 308, 466, 533, 658, 786, 803, 22, 120, 222, 360, 493, 517, 610, 798, 900, 21, 169, 214, 332, 445, 506, 660, 714, 831, 1, 136, 290, 397, 413, 554, 686, 725, 805, 5, 189, 238, 315, 414, 592, 642, 728, 863, 53, 148, 235, 318, 456, 505, 681, 772, 801, 46, 104, 300, 311, 497, 569, 691, 779, 870, 91, 179, 297, 303, 416, 572, 627, 799, 822, 3, 194, 248, 304, 408, 599, 617, 720, 823, 34, 108, 285, 335, 407, 502, 637, 749, 858, 41, 197, 247, 320, 437, 529, 620, 713, 899, 62, 167, 281, 384, 431, 579, 641, 707, 838, 75, 199, 272, 331, 411, 552, 612, 765, 830, 73, 129, 257, 317, 439, 564, 672, 741, 889, 97, 105, 209, 377, 420, 516, 690, 745, 842, 55, 161, 217, 324, 475, 508, 687, 784, 872, 80, 180, 298, 305, 430, 538, 653, 761, 846, 59, 173, 212, 328, 424, 536, 692, 712, 814, 63, 124, 206, 338, 438, 556, 680, 780, 877, 4, 112, 204, 394, 417, 553, 630, 702, 815, 54, 191, 220, 369, 435, 524, 670, 724, 841, 74, 182, 274, 359, 443, 543, 679, 769, 812, 95, 195, 234, 375, 470, 551, 608, 726, 844, 78, 117, 277, 312, 487, 521, 689, 795, 809, 96, 107, 226, 321, 451, 522, 638, 757, 887, 99, 184, 255, 392, 410, 597, 655, 719, 879, 16, 178, 232, 347, 423, 571, 700, 787, 824, 72, 106, 249, 346, 479, 568, 639, 733, 896, 90, 162, 295, 326, 406, 588, 604, 763, 891, 60, 121, 288, 313, 471, 558, 652, 796, 861, 44, 122, 219, 393, 434, 555, 651, 718, 808, 18, 115, 275, 327, 402, 562, 676, 797, 852, 25, 109, 299, 358, 473, 587, 677, 732, 860, 32, 125, 252, 334, 429, 548, 654, 777, 818, 77, 147, 211, 343, 459, 595, 674, 747, 886, 28, 200, 251, 363, 444, 539, 625, 740, 837, 24, 133, 284, 322, 481, 525, 645, 785, 856, 76, 130, 213, 357, 432, 578, 647, 776, 806, 17, 101, 293, 344, 499, 582, 623, 774, 898, 65, 114, 227, 314, 442, 511, 614, 742, 880, 31, 183, 203, 349, 482, 513, 663, 743, 878, 30, 149, 291, 373, 450, 535, 635, 717, 884, 50, 141, 225, 310, 500, 590, 611, 767, 813, 85, 139, 233, 341, 468, 507, 682, 727, 895, 26, 165, 258, 333, 447, 509, 628, 737, 807, 33, 144, 270, 378, 462, 598, 698, 708, 873, 37, 123, 269, 398, 441, 545, 650, 770, 834, 64, 110, 215, 345, 474, 570, 643, 703, 893, 56, 177, 266, 329, 425, 589, 609, 706, 888, 27, 170, 246, 350, 472, 520, 605, 701, 876, 49, 118, 268, 376, 465, 576, 661, 752, 869, 57, 196, 262, 351, 476, 577, 640, 735, 864, 69, 174, 245, 388, 428, 518, 636, 768, 894, 70, 154, 224, 399, 455, 540, 667, 758, 810, 8, 198, 253, 370, 494, 573, 613, 781, 836, 83, 181, 208, 340, 478, 594, 648, 750, 804, 15, 186, 254, 309, 458, 547, 696, 753, 854, 98, 102, 267, 323, 490, 565, 646, 794, 897, 11, 171, 223, 386, 498, 575, 621, 764, 874, 7, 150, 261, 339, 477, 549, 606, 729, 839, 29, 151, 278, 364, 463, 510, 694, 723, 855, 2, 156, 273, 342, 426, 559, 688, 773, 883, 48, 143, 263, 301, 467, 563, 603, 775, 835, 61, 185, 256, 367, 461, 574, 685, 793, 868, 82, 152, 202, 330, 436, 530, 644, 730, 829, 6, 160, 280, 348, 485, 585, 666, 721, 825, 81, 168, 207, 396, 421, 526, 662, 790, 867, 79, 166, 276, 353, 419, 591, 624, 800, 845, 88, 140, 294, 361, 415, 583, 626, 734, 862, 35, 111, 229, 382, 489, 581, 634, 731, 832, 13, 103, 201, 302, 427, 532, 683, 748, 881, 66, 127, 287, 395, 452, 501, 602, 709, 866, 47, 135, 271, 387, 446, 566, 619, 791, 885, 42, 157, 241, 374, 448, 528, 649, 746, 828, 40, 163, 282, 319, 484, 593, 668, 778, 859, 86, 172, 228, 371, 405, 586, 671, 705, 840, 58, 134, 216, 379, 409, 550, 601, 722, 871]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1630.07 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1425.81 MBs	(shape (3, 4, 3, 4, 720, 1030, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 02:19:38 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (468+252=720 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A101 ⫹₆₀ 16478), purity -1.5967456147244752
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+172=252 samples) on frame 1 with decision: {1} A11 ⫺₆₀ 6569, purity -0.6128012248676062
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (225+243=468 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A7 ⫺₆₀ 10047), purity -1.1801400611546602
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (68+104=172 samples) on frame 1 with decision: {1} A51 ⫺₆₀ 13119, purity -0.49369728795723034
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (94+149=243 samples) on frame 1 with decision: {1} A40 ⫹₇₀ 21601, purity -0.607654818949975
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (131+94=225 samples) on frame 1 with decision: {1} ⟨EC⟩ (A66 ⫹ 5400), purity -0.5793743998544294
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+14=94 samples) on frame 1 with decision: {1} A1 ⫹ 23632, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+90=104 samples) on frame 1 with decision: {1} ⟨NTPP⟩ (A15 ⫺ 11494), purity -0.4341001278373292
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (77+72=149 samples) on frame 1 with decision: {1} A16 ⫹₆₀ 14377, purity -0.5914760048965607
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (107+24=131 samples) on frame 1 with decision: {1} ⟨EC⟩ (A30 ⫺ 13426), purity -0.5436566227389561
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+73=94 samples) on frame 1 with decision: {1} ⟨DC⟩ (A72 ⫹ 14506), purity -0.14219997376799018
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+9=14 samples) on frame 1 with decision: {1} A24 ⫹ 12623, purity -0.17871515126363852
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (25+47=72 samples) on frame 1 with decision: {1} A2 ⫺₇₀ 10860, purity -0.41448130904620956
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+7=21 samples) on frame 1 with decision: {1} ⟨DC⟩ (A10 ⫺ 4607), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+71=77 samples) on frame 1 with decision: {1} A48 ⫹ 22344, purity -0.3975681757899388
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+84=90 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A78 ⫹₈₀ 17399), purity -0.24064898276634403
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (55+52=107 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A103 ⫺₇₀ 23562), purity -0.5107299988499453
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+21=25 samples) on frame 1 with decision: {1} A27 ⫹₆₀ 16894, purity -0.498980299089275
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+47=52 samples) on frame 1 with decision: {1} A31 ⫹ 12039, purity -0.20717005763998875
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+45=55 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A3 ⫹₇₀ 7312), purity -0.43339598104717175
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+37=71 samples) on frame 1 with decision: {1} A16 ⫹₇₀ 15348, purity -0.3171352785703617
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+6=21 samples) on frame 1 with decision: {1} A16 ⫹₆₀ 13277, purity -0.18186119094137507
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (30+7=37 samples) on frame 1 with decision: {1} A1 ⫺₆₀ 13089, purity -0.31838470315747475
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+22=45 samples) on frame 1 with decision: {1} A32 ⫹₆₀ 8085, purity -0.33684896103303325
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+8=22 samples) on frame 1 with decision: {1} A25 ⫺ 5509, purity -0.2609831116380781
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+22=30 samples) on frame 1 with decision: {1} A1 ⫺₇₀ 9700, purity -0.18483924814931837
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A5 ⫺₇₀ 12386, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+4=14 samples) on frame 1 with decision: {1} A1 ⫹₈₀ 7788, purity -0.19804205158855578
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
458.408899 seconds (5.42 G allocations: 106.038 GiB, 12.67% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 29
Tot nodes: 57
Height: 9
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A101 ⫹₆₀ 16478)
✔ {1} A11 ⫺₆₀ 6569
│✔ {1} A51 ⫺₆₀ 13119
││✔ {1} ⟨NTPP⟩ (A15 ⫺ 11494)
│││✔ {1} ⟨N̅T̅P̅P̅⟩ (A78 ⫹₈₀ 17399)
││││✔ Bitumen : 79/84 (conf: 0.9404761904761905)
││││✘ Asphalt : 5/6 (conf: 0.8333333333333334)
│││✘ {1} A24 ⫹ 12623
│││ ✔ Gravel : 9/9 (conf: 1.0)
│││ ✘ Asphalt : 4/5 (conf: 0.8)
││✘ Asphalt : 66/68 (conf: 0.9705882352941176)
│✘ Shadows : 80/80 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A7 ⫺₆₀ 10047)
 ✔ {1} A40 ⫹₇₀ 21601
 │✔ {1} A16 ⫹₆₀ 14377
 ││✔ {1} A2 ⫺₇₀ 10860
 │││✔ Gravel : 44/47 (conf: 0.9361702127659575)
 │││✘ {1} A27 ⫹₆₀ 16894
 │││ ✔ {1} A16 ⫹₆₀ 13277
 │││ │✔ Gravel : 4/6 (conf: 0.6666666666666666)
 │││ │✘ Self-Blocking Bricks : 15/15 (conf: 1.0)
 │││ ✘ Gravel : 3/4 (conf: 0.75)
 ││✘ {1} A48 ⫹ 22344
 ││ ✔ {1} A16 ⫹₇₀ 15348
 ││ │✔ {1} A1 ⫺₆₀ 13089
 ││ ││✔ Gravel : 7/7 (conf: 1.0)
 ││ ││✘ {1} A1 ⫺₇₀ 9700
 ││ ││ ✔ Self-Blocking Bricks : 22/22 (conf: 1.0)
 ││ ││ ✘ {1} A5 ⫺₇₀ 12386
 ││ ││  ✔ Self-Blocking Bricks : 4/4 (conf: 1.0)
 ││ ││  ✘ Gravel : 4/4 (conf: 1.0)
 ││ │✘ Self-Blocking Bricks : 34/34 (conf: 1.0)
 ││ ✘ Gravel : 6/6 (conf: 1.0)
 │✘ {1} A1 ⫹ 23632
 │ ✔ Bare Soil : 14/14 (conf: 1.0)
 │ ✘ Painted metal sheets : 80/80 (conf: 1.0)
 ✘ {1} ⟨EC⟩ (A66 ⫹ 5400)
  ✔ {1} ⟨DC⟩ (A72 ⫹ 14506)
  │✔ Trees : 73/73 (conf: 1.0)
  │✘ {1} ⟨DC⟩ (A10 ⫺ 4607)
  │ ✔ Trees : 7/7 (conf: 1.0)
  │ ✘ Meadows : 14/14 (conf: 1.0)
  ✘ {1} ⟨EC⟩ (A30 ⫺ 13426)
   ✔ Bare Soil : 24/24 (conf: 1.0)
   ✘ {1} ⟨N̅T̅P̅P̅⟩ (A103 ⫺₇₀ 23562)
    ✔ {1} A31 ⫹ 12039
    │✔ Meadows : 45/47 (conf: 0.9574468085106383)
    │✘ Bare Soil : 4/5 (conf: 0.8)
    ✘ {1} ⟨N̅T̅P̅P̅⟩ (A3 ⫹₇₀ 7312)
     ✔ {1} A32 ⫹₆₀ 8085
     │✔ {1} A25 ⫺ 5509
     ││✔ Meadows : 8/8 (conf: 1.0)
     ││✘ {1} A1 ⫹₈₀ 7788
     ││ ✔ Bare Soil : 2/4 (conf: 0.5)
     ││ ✘ Bare Soil : 10/10 (conf: 1.0)
     │✘ Bare Soil : 23/23 (conf: 1.0)
     ✘ Meadows : 10/10 (conf: 1.0)
● [ 01/07/2021 02:27:17 ] Saving tree to file ./gandalf/trees/tree_85d95b48c09355f64386f231027ae0011c8e7051121417e64c2ffb8f257faacf.jld...
Test tree:
Decision Tree
Leaves: 29
Tot nodes: 57
Height: 9
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A101 ⫹₆₀ 16478)
✔ {1} A11 ⫺₆₀ 6569
│✔ {1} A51 ⫺₆₀ 13119
││✔ {1} ⟨NTPP⟩ (A15 ⫺ 11494)
│││✔ {1} ⟨N̅T̅P̅P̅⟩ (A78 ⫹₈₀ 17399)
││││✔ Bitumen : 17/20 (conf: 0.85)
││││✘ Asphalt : 0/0 (conf: NaN)
│││✘ {1} A24 ⫹ 12623
│││ ✔ Gravel : 2/2 (conf: 1.0)
│││ ✘ Asphalt : 0/4 (conf: 0.0)
││✘ Asphalt : 15/19 (conf: 0.7894736842105263)
│✘ Shadows : 20/20 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A7 ⫺₆₀ 10047)
 ✔ {1} A40 ⫹₇₀ 21601
 │✔ {1} A16 ⫹₆₀ 14377
 ││✔ {1} A2 ⫺₇₀ 10860
 │││✔ Gravel : 3/7 (conf: 0.42857142857142855)
 │││✘ {1} A27 ⫹₆₀ 16894
 │││ ✔ {1} A16 ⫹₆₀ 13277
 │││ │✔ Gravel : 1/1 (conf: 1.0)
 │││ │✘ Self-Blocking Bricks : 1/2 (conf: 0.5)
 │││ ✘ Gravel : 0/0 (conf: NaN)
 ││✘ {1} A48 ⫹ 22344
 ││ ✔ {1} A16 ⫹₇₀ 15348
 ││ │✔ {1} A1 ⫺₆₀ 13089
 ││ ││✔ Gravel : 1/2 (conf: 0.5)
 ││ ││✘ {1} A1 ⫺₇₀ 9700
 ││ ││ ✔ Self-Blocking Bricks : 1/3 (conf: 0.3333333333333333)
 ││ ││ ✘ {1} A5 ⫺₇₀ 12386
 ││ ││  ✔ Self-Blocking Bricks : 0/0 (conf: NaN)
 ││ ││  ✘ Gravel : 0/1 (conf: 0.0)
 ││ │✘ Self-Blocking Bricks : 11/16 (conf: 0.6875)
 ││ ✘ Gravel : 1/1 (conf: 1.0)
 │✘ {1} A1 ⫹ 23632
 │ ✔ Bare Soil : 2/3 (conf: 0.6666666666666666)
 │ ✘ Painted metal sheets : 20/21 (conf: 0.9523809523809523)
 ✘ {1} ⟨EC⟩ (A66 ⫹ 5400)
  ✔ {1} ⟨DC⟩ (A72 ⫹ 14506)
  │✔ Trees : 18/20 (conf: 0.9)
  │✘ {1} ⟨DC⟩ (A10 ⫺ 4607)
  │ ✔ Trees : 1/2 (conf: 0.5)
  │ ✘ Meadows : 2/3 (conf: 0.6666666666666666)
  ✘ {1} ⟨EC⟩ (A30 ⫺ 13426)
   ✔ Bare Soil : 4/5 (conf: 0.8)
   ✘ {1} ⟨N̅T̅P̅P̅⟩ (A103 ⫺₇₀ 23562)
    ✔ {1} A31 ⫹ 12039
    │✔ Meadows : 9/9 (conf: 1.0)
    │✘ Bare Soil : 2/3 (conf: 0.6666666666666666)
    ✘ {1} ⟨N̅T̅P̅P̅⟩ (A3 ⫹₇₀ 7312)
     ✔ {1} A32 ⫹₆₀ 8085
     │✔ {1} A25 ⫺ 5509
     ││✔ Meadows : 3/4 (conf: 0.75)
     ││✘ {1} A1 ⫹₈₀ 7788
     ││ ✔ Bare Soil : 1/1 (conf: 1.0)
     ││ ✘ Bare Soil : 3/3 (conf: 1.0)
     │✘ Bare Soil : 5/5 (conf: 1.0)
     ✘ Meadows : 2/3 (conf: 0.6666666666666666)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	80.56%	75.0%	85.0%	85.0%	40.0%	80.0%	100.0%	65.0%	100.0%	95.0%	65.22%	85.0%	85.0%	57.14%	84.21%	95.24%	61.9%	100.0%	86.36%	||	78.12%	[69.77, 85.0, 85.0, 47.06, 82.05, 97.56, 63.41, 100.0, 90.48]%	
  accuracy: 80.56% kappa: 78.12% 
 15  1  3  0  0  0  1  0  0	75.0%		Asphalt
  0 17  0  0  2  1  0  0  0	85.0%		Bare Soil
  3  0 17  0  0  0  0  0  0	85.0%		Bitumen
  4  1  0  8  0  0  7  0  0	40.0%		Gravel
  0  1  0  0 16  0  0  0  3	80.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  1  0  0  6  0  0 13  0  0	65.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  1  0  0  0 19	95.0%		Trees

overall_acc:	0.8055555555555556
κ =		0.78125
sensitivities:	[0.75, 0.85, 0.85, 0.4, 0.8, 1.0, 0.65, 1.0, 0.95]
specificities:	[0.95, 0.98125, 0.98125, 0.9625, 0.98125, 0.99375, 0.95, 1.0, 0.98125]
PPVs:		[0.6521739130434783, 0.85, 0.85, 0.5714285714285714, 0.8421052631578947, 0.9523809523809523, 0.6190476190476191, 1.0, 0.8636363636363636]
NPVs:		[0.9681528662420382, 0.98125, 0.98125, 0.927710843373494, 0.9751552795031055, 1.0, 0.9559748427672956, 1.0, 0.9936708860759493]
F1s:		[0.6976744186046512, 0.85, 0.85, 0.47058823529411764, 0.8205128205128205, 0.975609756097561, 0.6341463414634146, 1.0, 0.9047619047619048]
accuracies:	[0.9277777777777778, 0.9666666666666667, 0.9666666666666667, 0.9, 0.9611111111111111, 0.9944444444444445, 0.9166666666666666, 1.0, 0.9777777777777777]
mean_accuracy:	0.95679012345679
Dataset_slice = (900) -> [68, 113, 288, 329, 406, 554, 655, 710, 862, 53, 120, 291, 341, 461, 505, 698, 752, 882, 72, 123, 234, 372, 472, 560, 663, 709, 872, 28, 128, 298, 379, 479, 553, 632, 745, 818, 84, 172, 287, 311, 466, 538, 673, 773, 871, 96, 182, 229, 309, 491, 516, 668, 708, 899, 91, 200, 222, 382, 418, 508, 627, 753, 877, 42, 156, 226, 342, 429, 562, 694, 750, 801, 33, 167, 204, 385, 498, 502, 635, 701, 823, 4, 158, 259, 316, 486, 511, 631, 765, 806, 63, 102, 220, 354, 496, 551, 700, 717, 851, 21, 101, 266, 327, 485, 570, 662, 742, 859, 79, 179, 270, 393, 404, 537, 693, 725, 900, 15, 151, 214, 332, 454, 532, 612, 732, 838, 22, 115, 217, 375, 468, 578, 615, 748, 805, 51, 118, 235, 378, 469, 525, 681, 784, 810, 32, 153, 232, 352, 470, 506, 646, 729, 893, 70, 160, 244, 373, 464, 595, 640, 743, 873, 66, 138, 250, 380, 437, 514, 609, 751, 830, 99, 176, 277, 338, 417, 547, 664, 798, 814, 40, 168, 258, 305, 482, 577, 622, 779, 844, 64, 196, 240, 363, 477, 521, 613, 724, 811, 19, 150, 282, 347, 401, 529, 671, 723, 876, 73, 140, 201, 337, 489, 550, 611, 707, 822, 18, 186, 215, 304, 492, 581, 624, 711, 847, 80, 106, 289, 353, 425, 585, 676, 799, 809, 60, 170, 223, 330, 416, 515, 606, 781, 807, 3, 144, 290, 392, 435, 530, 660, 769, 896, 87, 124, 286, 384, 483, 534, 638, 746, 835, 43, 131, 284, 346, 420, 552, 621, 737, 868, 9, 143, 253, 361, 421, 531, 661, 764, 804, 20, 162, 261, 308, 438, 513, 658, 712, 870, 1, 110, 254, 343, 484, 543, 601, 758, 808, 62, 174, 252, 349, 443, 567, 649, 714, 834, 45, 135, 205, 339, 436, 510, 683, 791, 856, 30, 134, 238, 367, 473, 539, 628, 728, 890, 76, 148, 275, 325, 474, 544, 618, 722, 866, 37, 173, 280, 359, 407, 557, 691, 747, 803, 38, 137, 297, 377, 427, 535, 678, 793, 812, 23, 166, 233, 399, 453, 523, 656, 726, 855, 57, 132, 260, 365, 442, 526, 680, 727, 865, 75, 108, 264, 333, 451, 563, 636, 738, 854, 35, 145, 202, 312, 411, 573, 686, 749, 869, 55, 159, 269, 340, 460, 566, 688, 718, 864, 50, 164, 225, 344, 500, 579, 645, 731, 821, 95, 103, 300, 395, 452, 527, 641, 713, 842, 61, 155, 212, 386, 471, 600, 603, 736, 816, 82, 105, 228, 387, 446, 518, 659, 716, 817, 12, 161, 216, 383, 493, 575, 651, 721, 853, 74, 112, 206, 381, 444, 509, 654, 794, 819, 94, 180, 230, 390, 423, 504, 604, 740, 813, 49, 109, 293, 336, 409, 555, 633, 797, 825, 6, 184, 221, 324, 456, 549, 684, 756, 858, 24, 187, 241, 345, 495, 546, 625, 766, 826, 90, 114, 265, 364, 449, 558, 620, 786, 860, 93, 121, 251, 351, 412, 556, 695, 788, 874, 14, 177, 272, 358, 467, 587, 677, 703, 839, 47, 169, 239, 400, 431, 533, 643, 792, 846, 89, 194, 263, 391, 445, 528, 642, 777, 892, 81, 147, 211, 369, 403, 522, 607, 734, 848, 39, 127, 242, 397, 405, 571, 674, 780, 887, 11, 195, 208, 334, 459, 569, 614, 770, 827, 58, 192, 207, 319, 490, 599, 644, 787, 880, 92, 199, 209, 388, 487, 572, 667, 772, 867, 52, 104, 203, 396, 439, 576, 637, 795, 881, 59, 188, 227, 348, 441, 540, 657, 774, 841, 48, 193, 237, 315, 402, 542, 610, 739, 802, 7, 122, 283, 317, 457, 598, 608, 735, 857, 54, 141, 246, 303, 488, 561, 616, 757, 878, 17, 126, 285, 389, 478, 512, 687, 767, 824, 56, 171, 248, 398, 434, 517, 690, 800, 879, 97, 133, 271, 318, 481, 541, 679, 715, 875, 29, 189, 245, 322, 440, 589, 669, 705, 843, 34, 163, 296, 356, 450, 596, 692, 762, 886, 77, 185, 292, 328, 414, 584, 630, 754, 833, 46, 107, 236, 326, 419, 565, 619, 730, 852, 71, 116, 257, 394, 465, 507, 648, 776, 820, 31, 183, 247, 366, 494, 594, 602, 720, 891, 26, 198, 279, 357, 410, 564, 634, 778, 888, 25, 190, 224, 355, 455, 524, 653, 790, 863, 65, 178, 231, 313, 499, 536, 672, 719, 845, 83, 146, 219, 350, 480, 591, 665, 706, 832, 2, 152, 267, 320, 415, 574, 605, 704, 895, 8, 154, 295, 376, 408, 586, 647, 771, 898, 27, 157, 276, 321, 463, 592, 699, 768, 850, 85, 181, 268, 362, 458, 588, 689, 783, 829, 86, 125, 278, 331, 424, 580, 682, 782, 849, 36, 111, 243, 307, 432, 582, 685, 702, 884, 78, 117, 299, 306, 413, 548, 626, 789, 828, 44, 197, 210, 335, 497, 519, 666, 755, 815, 10, 175, 273, 314, 476, 501, 629, 785, 840, 98, 191, 256, 302, 428, 597, 650, 760, 889, 69, 139, 274, 374, 422, 520, 652, 744, 897, 67, 165, 281, 360, 426, 559, 639, 759, 831, 16, 149, 249, 310, 462, 590, 696, 775, 894, 13, 129, 255, 368, 447, 583, 670, 741, 861, 5, 136, 213, 370, 448, 593, 617, 763, 883, 41, 142, 218, 301, 433, 545, 697, 761, 836, 88, 130, 262, 323, 475, 568, 623, 796, 885, 100, 119, 294, 371, 430, 503, 675, 733, 837]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1630.07 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1425.81 MBs	(shape (3, 4, 3, 4, 720, 1030, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 02:27:26 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (466+254=720 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A101 ⫹₆₀ 16478), purity -1.6048518978011064
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+173=254 samples) on frame 1 with decision: {1} A23 ⫺ 4578, purity -0.6395239897946927
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (228+238=466 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A6 ⫺₇₀ 11474), purity -1.1694391455368487
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (98+75=173 samples) on frame 1 with decision: {1} A18 ⫺₇₀ 12356, purity -0.48049361163460125
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (135+93=228 samples) on frame 1 with decision: {1} ⟨EC⟩ (A54 ⫹ 5043), purity -0.5754230091243876
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (158+80=238 samples) on frame 1 with decision: {1} A1 ⫺ 17637, purity -0.6015560906584683
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+14=98 samples) on frame 1 with decision: {1} A93 ⫺ 13832, purity -0.4202743954850093
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (108+27=135 samples) on frame 1 with decision: {1} ⟨EC⟩ (A30 ⫺ 13426), purity -0.5311060170025512
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+78=93 samples) on frame 1 with decision: {1} ⟨DC⟩ (A73 ⫹ 17261), purity -0.1382398640013687
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+146=158 samples) on frame 1 with decision: {1} A72 ⫹₇₀ 22403, purity -0.6373783602868848
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+10=14 samples) on frame 1 with decision: {1} A2 ⫹ 15219, purity -0.16066718417680237
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+11=15 samples) on frame 1 with decision: {1} A6 ⫹ 2764, purity -0.14995603856501555
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (59+25=84 samples) on frame 1 with decision: {1} A57 ⫺₇₀ 12217, purity -0.25481511248318683
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (65+43=108 samples) on frame 1 with decision: {1} ⟨EC⟩ (A102 ⫹ 21630), purity -0.4684413402821472
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+67=146 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A17 ⫹₈₀ 14397), purity -0.5249133678137619
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+8=25 samples) on frame 1 with decision: {1} A85 ⫹₈₀ 14714, purity -0.15212829172476708
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+42=65 samples) on frame 1 with decision: {1} ⟨EC⟩ (A82 ⫺ 25663), purity -0.3357285114381791
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+31=43 samples) on frame 1 with decision: {1} ⟨EC⟩ (A83 ⫺ 20491), purity -0.228474799896989
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (58+9=67 samples) on frame 1 with decision: {1} A2 ⫹₇₀ 10553, purity -0.3188241238711118
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (63+16=79 samples) on frame 1 with decision: {1} ⟨EC⟩ (A58 ⫺ 21601), purity -0.3024678916664616
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+10=16 samples) on frame 1 with decision: {1} ⟨EC⟩ (A85 ⫺ 22403), purity -0.2386928131105548
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+4=12 samples) on frame 1 with decision: {1} A1 ⫹ 4310, purity -0.23104906018664842
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (35+7=42 samples) on frame 1 with decision: {1} ⟨EC⟩ (A99 ⫹ 24098), purity -0.31210977677506535
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+35=58 samples) on frame 1 with decision: {1} A29 ⫺₇₀ 15616, purity -0.24368235115770256
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+10=23 samples) on frame 1 with decision: {1} A83 ⫺₇₀ 17310, purity -0.2655931748064756
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A23 ⫹ 14784, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
617.806024 seconds (6.84 G allocations: 148.743 GiB, 15.02% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 27
Tot nodes: 53
Height: 9
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A101 ⫹₆₀ 16478)
✔ {1} A23 ⫺ 4578
│✔ {1} A18 ⫺₇₀ 12356
││✔ Bitumen : 71/75 (conf: 0.9466666666666667)
││✘ {1} A93 ⫺ 13832
││ ✔ {1} A2 ⫹ 15219
││ │✔ Gravel : 10/10 (conf: 1.0)
││ │✘ Asphalt : 3/4 (conf: 0.75)
││ ✘ {1} A57 ⫺₇₀ 12217
││  ✔ {1} A85 ⫹₈₀ 14714
││  │✔ Bitumen : 8/8 (conf: 1.0)
││  │✘ Asphalt : 16/17 (conf: 0.9411764705882353)
││  ✘ Asphalt : 58/59 (conf: 0.9830508474576272)
│✘ Shadows : 80/81 (conf: 0.9876543209876543)
✘ {1} ⟨T̅P̅P̅⟩ (A6 ⫺₇₀ 11474)
 ✔ {1} A1 ⫺ 17637
 │✔ Painted metal sheets : 80/80 (conf: 1.0)
 │✘ {1} A72 ⫹₇₀ 22403
 │ ✔ {1} ⟨T̅P̅P̅⟩ (A17 ⫹₈₀ 14397)
 │ │✔ {1} A2 ⫹₇₀ 10553
 │ ││✔ Self-Blocking Bricks : 9/9 (conf: 1.0)
 │ ││✘ {1} A29 ⫺₇₀ 15616
 │ ││ ✔ Gravel : 35/35 (conf: 1.0)
 │ ││ ✘ {1} A83 ⫺₇₀ 17310
 │ ││  ✔ {1} A23 ⫹ 14784
 │ ││  │✔ Self-Blocking Bricks : 6/6 (conf: 1.0)
 │ ││  │✘ Gravel : 3/4 (conf: 0.75)
 │ ││  ✘ Gravel : 13/13 (conf: 1.0)
 │ │✘ {1} ⟨EC⟩ (A58 ⫺ 21601)
 │ │ ✔ {1} ⟨EC⟩ (A85 ⫺ 22403)
 │ │ │✔ Gravel : 10/10 (conf: 1.0)
 │ │ │✘ Self-Blocking Bricks : 4/6 (conf: 0.6666666666666666)
 │ │ ✘ Self-Blocking Bricks : 59/63 (conf: 0.9365079365079365)
 │ ✘ Bare Soil : 12/12 (conf: 1.0)
 ✘ {1} ⟨EC⟩ (A54 ⫹ 5043)
  ✔ {1} ⟨DC⟩ (A73 ⫹ 17261)
  │✔ Trees : 77/78 (conf: 0.9871794871794872)
  │✘ {1} A6 ⫹ 2764
  │ ✔ Meadows : 11/11 (conf: 1.0)
  │ ✘ Trees : 3/4 (conf: 0.75)
  ✘ {1} ⟨EC⟩ (A30 ⫺ 13426)
   ✔ Bare Soil : 27/27 (conf: 1.0)
   ✘ {1} ⟨EC⟩ (A102 ⫹ 21630)
    ✔ {1} ⟨EC⟩ (A83 ⫺ 20491)
    │✔ Bare Soil : 30/31 (conf: 0.967741935483871)
    │✘ {1} A1 ⫹ 4310
    │ ✔ Bare Soil : 2/4 (conf: 0.5)
    │ ✘ Meadows : 8/8 (conf: 1.0)
    ✘ {1} ⟨EC⟩ (A82 ⫺ 25663)
     ✔ {1} ⟨EC⟩ (A99 ⫹ 24098)
     │✔ Bare Soil : 6/7 (conf: 0.8571428571428571)
     │✘ Meadows : 32/35 (conf: 0.9142857142857143)
     ✘ Meadows : 23/23 (conf: 1.0)
● [ 01/07/2021 02:37:43 ] Saving tree to file ./gandalf/trees/tree_bc3a261e37fa7a792cd6338d4553bd9b4659f99d08f4bafd3ce9547cd0832ad9.jld...
Test tree:
Decision Tree
Leaves: 27
Tot nodes: 53
Height: 9
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A101 ⫹₆₀ 16478)
✔ {1} A23 ⫺ 4578
│✔ {1} A18 ⫺₇₀ 12356
││✔ Bitumen : 15/16 (conf: 0.9375)
││✘ {1} A93 ⫺ 13832
││ ✔ {1} A2 ⫹ 15219
││ │✔ Gravel : 3/6 (conf: 0.5)
││ │✘ Asphalt : 0/1 (conf: 0.0)
││ ✘ {1} A57 ⫺₇₀ 12217
││  ✔ {1} A85 ⫹₈₀ 14714
││  │✔ Bitumen : 1/4 (conf: 0.25)
││  │✘ Asphalt : 1/1 (conf: 1.0)
││  ✘ Asphalt : 14/15 (conf: 0.9333333333333333)
│✘ Shadows : 20/20 (conf: 1.0)
✘ {1} ⟨T̅P̅P̅⟩ (A6 ⫺₇₀ 11474)
 ✔ {1} A1 ⫺ 17637
 │✔ Painted metal sheets : 20/24 (conf: 0.8333333333333334)
 │✘ {1} A72 ⫹₇₀ 22403
 │ ✔ {1} ⟨T̅P̅P̅⟩ (A17 ⫹₈₀ 14397)
 │ │✔ {1} A2 ⫹₇₀ 10553
 │ ││✔ Self-Blocking Bricks : 3/4 (conf: 0.75)
 │ ││✘ {1} A29 ⫺₇₀ 15616
 │ ││ ✔ Gravel : 4/5 (conf: 0.8)
 │ ││ ✘ {1} A83 ⫺₇₀ 17310
 │ ││  ✔ {1} A23 ⫹ 14784
 │ ││  │✔ Self-Blocking Bricks : 0/1 (conf: 0.0)
 │ ││  │✘ Gravel : 0/1 (conf: 0.0)
 │ ││  ✘ Gravel : 0/1 (conf: 0.0)
 │ │✘ {1} ⟨EC⟩ (A58 ⫺ 21601)
 │ │ ✔ {1} ⟨EC⟩ (A85 ⫺ 22403)
 │ │ │✔ Gravel : 0/0 (conf: NaN)
 │ │ │✘ Self-Blocking Bricks : 0/2 (conf: 0.0)
 │ │ ✘ Self-Blocking Bricks : 14/21 (conf: 0.6666666666666666)
 │ ✘ Bare Soil : 4/4 (conf: 1.0)
 ✘ {1} ⟨EC⟩ (A54 ⫹ 5043)
  ✔ {1} ⟨DC⟩ (A73 ⫹ 17261)
  │✔ Trees : 19/23 (conf: 0.8260869565217391)
  │✘ {1} A6 ⫹ 2764
  │ ✔ Meadows : 2/2 (conf: 1.0)
  │ ✘ Trees : 0/1 (conf: 0.0)
  ✘ {1} ⟨EC⟩ (A30 ⫺ 13426)
   ✔ Bare Soil : 1/1 (conf: 1.0)
   ✘ {1} ⟨EC⟩ (A102 ⫹ 21630)
    ✔ {1} ⟨EC⟩ (A83 ⫺ 20491)
    │✔ Bare Soil : 7/8 (conf: 0.875)
    │✘ {1} A1 ⫹ 4310
    │ ✔ Bare Soil : 1/3 (conf: 0.3333333333333333)
    │ ✘ Meadows : 1/1 (conf: 1.0)
    ✘ {1} ⟨EC⟩ (A82 ⫺ 25663)
     ✔ {1} ⟨EC⟩ (A99 ⫹ 24098)
     │✔ Bare Soil : 1/1 (conf: 1.0)
     │✘ Meadows : 6/8 (conf: 0.75)
     ✘ Meadows : 3/6 (conf: 0.5)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	77.78%	75.0%	70.0%	80.0%	35.0%	60.0%	100.0%	85.0%	100.0%	95.0%	88.24%	82.35%	80.0%	53.85%	70.59%	83.33%	60.71%	100.0%	79.17%	||	75.0%	[81.08, 75.68, 80.0, 42.42, 64.86, 90.91, 70.83, 100.0, 86.36]%	
  accuracy: 77.78% kappa: 75.0% 
 15  0  3  0  0  1  1  0  0	75.0%		Asphalt
  0 14  0  0  4  2  0  0  0	70.0%		Bare Soil
  1  0 16  3  0  0  0  0  0	80.0%		Bitumen
  1  0  1  7  0  1 10  0  0	35.0%		Gravel
  0  3  0  0 12  0  0  0  5	60.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  0  0  3  0  0 17  0  0	85.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  1  0  0  0 19	95.0%		Trees

overall_acc:	0.7777777777777778
κ =		0.7500000000000001
sensitivities:	[0.75, 0.7, 0.8, 0.35, 0.6, 1.0, 0.85, 1.0, 0.95]
specificities:	[0.9875, 0.98125, 0.975, 0.9625, 0.96875, 0.975, 0.93125, 1.0, 0.96875]
PPVs:		[0.8823529411764706, 0.8235294117647058, 0.8, 0.5384615384615384, 0.7058823529411765, 0.8333333333333334, 0.6071428571428571, 1.0, 0.7916666666666666]
NPVs:		[0.9693251533742331, 0.9631901840490797, 0.975, 0.9221556886227545, 0.950920245398773, 1.0, 0.9802631578947368, 1.0, 0.9935897435897436]
F1s:		[0.8108108108108109, 0.7567567567567568, 0.8, 0.42424242424242425, 0.6486486486486487, 0.9090909090909091, 0.7083333333333334, 1.0, 0.8636363636363636]
accuracies:	[0.9611111111111111, 0.95, 0.9555555555555556, 0.8944444444444445, 0.9277777777777778, 0.9777777777777777, 0.9222222222222223, 1.0, 0.9666666666666667]
mean_accuracy:	0.9506172839506173
Dataset_slice = (900) -> [20, 148, 247, 348, 409, 562, 685, 736, 873, 36, 113, 203, 353, 426, 567, 608, 720, 812, 75, 145, 228, 390, 401, 547, 663, 735, 807, 9, 112, 249, 319, 421, 510, 661, 792, 865, 92, 159, 288, 325, 482, 513, 648, 741, 803, 88, 121, 212, 365, 407, 588, 626, 748, 885, 28, 186, 224, 360, 406, 551, 662, 734, 857, 79, 198, 274, 367, 408, 523, 633, 708, 826, 8, 118, 297, 387, 439, 502, 687, 737, 890, 73, 122, 204, 330, 479, 565, 683, 789, 836, 83, 194, 243, 374, 472, 552, 632, 775, 856, 40, 185, 275, 366, 446, 594, 700, 784, 821, 61, 195, 273, 356, 473, 528, 620, 745, 810, 70, 136, 202, 343, 455, 558, 673, 783, 830, 51, 155, 282, 397, 450, 533, 647, 777, 892, 48, 161, 245, 331, 499, 518, 676, 728, 872, 50, 130, 281, 361, 425, 537, 671, 701, 852, 13, 103, 293, 378, 444, 583, 627, 788, 815, 27, 187, 240, 372, 415, 579, 606, 722, 823, 35, 125, 217, 391, 440, 535, 609, 706, 867, 69, 120, 236, 354, 466, 524, 628, 730, 868, 45, 157, 253, 309, 458, 517, 610, 791, 811, 97, 200, 277, 334, 485, 573, 617, 733, 900, 68, 197, 294, 394, 476, 543, 646, 727, 833, 3, 156, 264, 335, 423, 548, 640, 757, 831, 85, 102, 260, 381, 437, 597, 642, 723, 881, 94, 191, 234, 313, 416, 509, 653, 781, 893, 7, 140, 238, 399, 434, 566, 645, 763, 848, 19, 119, 226, 369, 462, 598, 680, 709, 835, 87, 167, 287, 318, 478, 563, 604, 755, 883, 1, 184, 262, 326, 483, 544, 636, 715, 820, 16, 163, 235, 306, 412, 532, 615, 766, 814, 25, 123, 284, 373, 414, 526, 691, 786, 859, 31, 196, 270, 398, 449, 557, 693, 751, 825, 64, 129, 211, 338, 500, 534, 619, 762, 828, 81, 146, 206, 388, 447, 515, 681, 796, 889, 57, 138, 246, 358, 420, 555, 605, 710, 824, 23, 115, 209, 322, 452, 504, 694, 761, 888, 90, 199, 232, 344, 492, 572, 614, 773, 874, 42, 164, 244, 310, 465, 568, 695, 760, 805, 26, 181, 248, 347, 428, 527, 650, 753, 891, 30, 128, 261, 345, 431, 595, 670, 785, 875, 91, 153, 227, 332, 471, 520, 689, 759, 866, 17, 134, 207, 385, 494, 577, 607, 747, 895, 59, 141, 229, 376, 457, 511, 675, 731, 858, 96, 150, 252, 302, 441, 507, 643, 705, 827, 2, 126, 300, 350, 445, 584, 602, 764, 846, 52, 131, 299, 357, 448, 550, 677, 704, 860, 24, 189, 223, 396, 489, 560, 659, 717, 896, 15, 193, 237, 351, 470, 576, 644, 770, 838, 86, 142, 205, 375, 477, 549, 624, 732, 851, 46, 106, 266, 327, 461, 581, 638, 726, 882, 67, 124, 286, 362, 495, 553, 667, 743, 840, 71, 174, 233, 389, 433, 592, 630, 765, 849, 66, 110, 213, 307, 419, 600, 634, 738, 845, 18, 114, 201, 364, 480, 546, 688, 767, 817, 58, 151, 290, 363, 411, 508, 655, 768, 899, 39, 108, 276, 340, 463, 599, 629, 718, 806, 34, 116, 256, 324, 464, 587, 699, 800, 841, 80, 162, 258, 314, 459, 593, 658, 707, 887, 82, 158, 231, 305, 493, 596, 652, 795, 870, 6, 171, 285, 352, 498, 539, 674, 794, 854, 53, 182, 272, 336, 403, 569, 668, 721, 864, 60, 105, 268, 386, 438, 582, 613, 714, 898, 93, 179, 271, 301, 443, 556, 612, 756, 832, 44, 170, 251, 329, 413, 540, 690, 713, 822, 32, 180, 289, 380, 424, 554, 697, 746, 837, 49, 111, 225, 337, 456, 503, 625, 787, 804, 43, 192, 219, 393, 475, 505, 603, 776, 842, 100, 152, 220, 346, 496, 516, 622, 750, 801, 41, 190, 230, 321, 469, 578, 682, 797, 884, 5, 178, 255, 368, 427, 525, 657, 782, 829, 54, 132, 280, 349, 410, 531, 635, 703, 802, 65, 154, 210, 384, 429, 521, 639, 754, 894, 72, 144, 296, 392, 490, 506, 684, 716, 816, 76, 147, 241, 341, 432, 536, 696, 719, 839, 98, 101, 216, 342, 484, 585, 665, 779, 897, 11, 149, 257, 333, 497, 541, 649, 780, 844, 78, 177, 218, 303, 481, 501, 631, 712, 834, 21, 117, 215, 315, 436, 571, 651, 790, 886, 62, 173, 214, 355, 488, 529, 686, 711, 808, 14, 139, 222, 339, 435, 586, 669, 702, 861, 22, 143, 208, 317, 442, 522, 660, 752, 880, 12, 176, 298, 328, 418, 512, 623, 725, 809, 37, 168, 269, 370, 453, 589, 641, 740, 847, 95, 135, 259, 323, 417, 574, 664, 749, 878, 74, 107, 254, 311, 404, 514, 698, 798, 818, 33, 183, 278, 304, 491, 591, 678, 799, 879, 99, 172, 239, 395, 402, 545, 654, 769, 853, 63, 127, 250, 316, 451, 519, 692, 724, 877, 29, 160, 292, 371, 474, 530, 672, 744, 813, 56, 109, 242, 312, 460, 542, 621, 793, 871, 10, 169, 279, 359, 405, 570, 601, 774, 876, 47, 137, 267, 377, 467, 559, 611, 739, 869, 4, 104, 291, 400, 422, 580, 616, 758, 863, 38, 188, 283, 320, 430, 538, 618, 778, 855, 84, 165, 221, 308, 454, 590, 656, 771, 850, 89, 175, 263, 382, 486, 564, 637, 729, 843, 55, 133, 265, 383, 487, 575, 666, 742, 819, 77, 166, 295, 379, 468, 561, 679, 772, 862]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1630.07 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1425.81 MBs	(shape (3, 4, 3, 4, 720, 1030, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 02:37:53 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (464+256=720 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A103 ⫹₈₀ 16438), purity -1.6020067707466827
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (176+80=256 samples) on frame 1 with decision: {1} A9 ⫹₇₀ 6054, purity -0.6426543047775671
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (240+224=464 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫹₇₀ 11355), purity -1.182360085982953
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (93+131=224 samples) on frame 1 with decision: {1} A66 ⫺ 5450, purity -0.5731839595869621
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+80=240 samples) on frame 1 with decision: {1} ⟨EC⟩ (A13 ⫺ 32421), purity -0.6288989282193592
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (74+102=176 samples) on frame 1 with decision: {1} ⟨PO⟩ (A16 ⫹₆₀ 12078), purity -0.5432721347138615
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (71+22=93 samples) on frame 1 with decision: {1} A72 ⫺ 14229, purity -0.1600383992565269
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+112=131 samples) on frame 1 with decision: {1} A30 ⫹ 13347, purity -0.5760126415739806
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (144+16=160 samples) on frame 1 with decision: {1} A76 ⫺ 23216, purity -0.6182654189375915
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+80=102 samples) on frame 1 with decision: {1} ⟨EC⟩ (A76 ⫹ 13486), purity -0.4284607548725589
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+13=22 samples) on frame 1 with decision: {1} A4 ⫹₈₀ 5559, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+9=22 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A15 ⫺₆₀ 11444), purity -0.39475755941212964
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (50+62=112 samples) on frame 1 with decision: {1} A102 ⫺ 21690, purity -0.4940134386685798
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+61=144 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A18 ⫹₆₀ 14665), purity -0.568930362406834
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A1 ⫺₇₀ 10364, purity -0.2780013464101044
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+12=50 samples) on frame 1 with decision: {1} A83 ⫹ 20421, purity -0.36387146589138497
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+39=61 samples) on frame 1 with decision: {1} A3 ⫺₆₀ 11484, purity -0.2875670120021583
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+40=62 samples) on frame 1 with decision: {1} A82 ⫹ 27060, purity -0.30801408050535345
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (64+19=83 samples) on frame 1 with decision: {1} ⟨EC⟩ (A43 ⫺ 21145), purity -0.37183872693176595
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+4=12 samples) on frame 1 with decision: {1} A1 ⫹₇₀ 7758, purity -0.23104906018664842
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+13=22 samples) on frame 1 with decision: {1} A66 ⫹ 19668, purity -0.26039215975696894
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+16=22 samples) on frame 1 with decision: {1} A77 ⫺₇₀ 22136, purity -0.2740146627319542
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+8=19 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A26 ⫺ 19401), purity -0.27855294238230816
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+32=38 samples) on frame 1 with decision: {1} A2 ⫹₈₀ 9056, purity -0.22654812194503654
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (55+9=64 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A1 ⫺₆₀ 13545), purity -0.17470063847954684
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A5 ⫺₆₀ 14169, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A2 ⫹₈₀ 13010, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+4=16 samples) on frame 1 with decision: {1} A3 ⫺₇₀ 5261, purity -0.17328679513998632
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A1 ⫺ 16844, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
520.157275 seconds (6.41 G allocations: 135.374 GiB, 15.54% gc time, 0.01% compilation time)
Train tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 8
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A103 ⫹₈₀ 16438)
✔ {1} A9 ⫹₇₀ 6054
│✔ Shadows : 80/80 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A16 ⫹₆₀ 12078)
│ ✔ {1} ⟨EC⟩ (A76 ⫹ 13486)
│ │✔ Asphalt : 73/80 (conf: 0.9125)
│ │✘ {1} ⟨T̅P̅P̅⟩ (A15 ⫺₆₀ 11444)
│ │ ✔ {1} A1 ⫺₇₀ 10364
│ │ │✔ Asphalt : 4/4 (conf: 1.0)
│ │ │✘ Bitumen : 4/5 (conf: 0.8)
│ │ ✘ Gravel : 13/13 (conf: 1.0)
│ ✘ Bitumen : 69/74 (conf: 0.9324324324324325)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫹₇₀ 11355)
 ✔ {1} A66 ⫺ 5450
 │✔ {1} A30 ⫹ 13347
 ││✔ {1} A102 ⫺ 21690
 │││✔ {1} A82 ⫹ 27060
 ││││✔ Meadows : 39/40 (conf: 0.975)
 ││││✘ {1} A77 ⫺₇₀ 22136
 ││││ ✔ {1} A3 ⫺₇₀ 5261
 ││││ │✔ Bare Soil : 2/4 (conf: 0.5)
 ││││ │✘ Meadows : 12/12 (conf: 1.0)
 ││││ ✘ Bare Soil : 6/6 (conf: 1.0)
 │││✘ {1} A83 ⫹ 20421
 │││ ✔ {1} A1 ⫹₇₀ 7758
 │││ │✔ Bare Soil : 2/4 (conf: 0.5)
 │││ │✘ Meadows : 8/8 (conf: 1.0)
 │││ ✘ {1} A2 ⫹₈₀ 9056
 │││  ✔ Bare Soil : 31/32 (conf: 0.96875)
 │││  ✘ Bare Soil : 3/6 (conf: 0.5)
 ││✘ Bare Soil : 19/19 (conf: 1.0)
 │✘ {1} A72 ⫺ 14229
 │ ✔ {1} A4 ⫹₈₀ 5559
 │ │✔ Meadows : 13/13 (conf: 1.0)
 │ │✘ Trees : 9/9 (conf: 1.0)
 │ ✘ Trees : 71/71 (conf: 1.0)
 ✘ {1} ⟨EC⟩ (A13 ⫺ 32421)
  ✔ Painted metal sheets : 80/80 (conf: 1.0)
  ✘ {1} A76 ⫺ 23216
   ✔ Bare Soil : 16/16 (conf: 1.0)
   ✘ {1} ⟨N̅T̅P̅P̅⟩ (A18 ⫹₆₀ 14665)
    ✔ {1} A3 ⫺₆₀ 11484
    │✔ Gravel : 38/39 (conf: 0.9743589743589743)
    │✘ {1} A66 ⫹ 19668
    │ ✔ Self-Blocking Bricks : 13/13 (conf: 1.0)
    │ ✘ {1} A2 ⫹₈₀ 13010
    │  ✔ Gravel : 5/5 (conf: 1.0)
    │  ✘ Self-Blocking Bricks : 3/4 (conf: 0.75)
    ✘ {1} ⟨EC⟩ (A43 ⫺ 21145)
     ✔ {1} ⟨T̅P̅P̅⟩ (A26 ⫺ 19401)
     │✔ {1} A1 ⫺ 16844
     ││✔ Gravel : 3/4 (conf: 0.75)
     ││✘ Self-Blocking Bricks : 4/4 (conf: 1.0)
     │✘ Gravel : 11/11 (conf: 1.0)
     ✘ {1} ⟨N̅T̅P̅P̅⟩ (A1 ⫺₆₀ 13545)
      ✔ {1} A5 ⫺₆₀ 14169
      │✔ Self-Blocking Bricks : 4/4 (conf: 1.0)
      │✘ Gravel : 5/5 (conf: 1.0)
      ✘ Self-Blocking Bricks : 54/55 (conf: 0.9818181818181818)
● [ 01/07/2021 02:46:34 ] Saving tree to file ./gandalf/trees/tree_a4d7e3de4309ce1463b8bcb235f19cff76291a095dd74358c1f9858f8b962682.jld...
Test tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 8
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A103 ⫹₈₀ 16438)
✔ {1} A9 ⫹₇₀ 6054
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A16 ⫹₆₀ 12078)
│ ✔ {1} ⟨EC⟩ (A76 ⫹ 13486)
│ │✔ Asphalt : 16/20 (conf: 0.8)
│ │✘ {1} ⟨T̅P̅P̅⟩ (A15 ⫺₆₀ 11444)
│ │ ✔ {1} A1 ⫺₇₀ 10364
│ │ │✔ Asphalt : 1/2 (conf: 0.5)
│ │ │✘ Bitumen : 0/2 (conf: 0.0)
│ │ ✘ Gravel : 2/2 (conf: 1.0)
│ ✘ Bitumen : 17/19 (conf: 0.8947368421052632)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫹₇₀ 11355)
 ✔ {1} A66 ⫺ 5450
 │✔ {1} A30 ⫹ 13347
 ││✔ {1} A102 ⫺ 21690
 │││✔ {1} A82 ⫹ 27060
 ││││✔ Meadows : 6/9 (conf: 0.6666666666666666)
 ││││✘ {1} A77 ⫺₇₀ 22136
 ││││ ✔ {1} A3 ⫺₇₀ 5261
 ││││ │✔ Bare Soil : 0/2 (conf: 0.0)
 ││││ │✘ Meadows : 2/2 (conf: 1.0)
 ││││ ✘ Bare Soil : 0/0 (conf: NaN)
 │││✘ {1} A83 ⫹ 20421
 │││ ✔ {1} A1 ⫹₇₀ 7758
 │││ │✔ Bare Soil : 1/2 (conf: 0.5)
 │││ │✘ Meadows : 1/1 (conf: 1.0)
 │││ ✘ {1} A2 ⫹₈₀ 9056
 │││  ✔ Bare Soil : 4/4 (conf: 1.0)
 │││  ✘ Bare Soil : 1/2 (conf: 0.5)
 ││✘ Bare Soil : 7/7 (conf: 1.0)
 │✘ {1} A72 ⫺ 14229
 │ ✔ {1} A4 ⫹₈₀ 5559
 │ │✔ Meadows : 6/6 (conf: 1.0)
 │ │✘ Trees : 2/3 (conf: 0.6666666666666666)
 │ ✘ Trees : 18/18 (conf: 1.0)
 ✘ {1} ⟨EC⟩ (A13 ⫺ 32421)
  ✔ Painted metal sheets : 20/20 (conf: 1.0)
  ✘ {1} A76 ⫺ 23216
   ✔ Bare Soil : 4/4 (conf: 1.0)
   ✘ {1} ⟨N̅T̅P̅P̅⟩ (A18 ⫹₆₀ 14665)
    ✔ {1} A3 ⫺₆₀ 11484
    │✔ Gravel : 7/10 (conf: 0.7)
    │✘ {1} A66 ⫹ 19668
    │ ✔ Self-Blocking Bricks : 4/7 (conf: 0.5714285714285714)
    │ ✘ {1} A2 ⫹₈₀ 13010
    │  ✔ Gravel : 0/0 (conf: NaN)
    │  ✘ Self-Blocking Bricks : 0/0 (conf: NaN)
    ✘ {1} ⟨EC⟩ (A43 ⫺ 21145)
     ✔ {1} ⟨T̅P̅P̅⟩ (A26 ⫺ 19401)
     │✔ {1} A1 ⫺ 16844
     ││✔ Gravel : 0/0 (conf: NaN)
     ││✘ Self-Blocking Bricks : 1/1 (conf: 1.0)
     │✘ Gravel : 2/4 (conf: 0.5)
     ✘ {1} ⟨N̅T̅P̅P̅⟩ (A1 ⫺₆₀ 13545)
      ✔ {1} A5 ⫺₆₀ 14169
      │✔ Self-Blocking Bricks : 0/1 (conf: 0.0)
      │✘ Gravel : 0/0 (conf: NaN)
      ✘ Self-Blocking Bricks : 10/12 (conf: 0.8333333333333334)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	84.44%	85.0%	85.0%	85.0%	55.0%	75.0%	100.0%	75.0%	100.0%	100.0%	77.27%	80.95%	80.95%	68.75%	83.33%	100.0%	71.43%	100.0%	95.24%	||	82.5%	[80.95, 82.93, 82.93, 61.11, 78.95, 100.0, 73.17, 100.0, 97.56]%	
  accuracy: 84.44% kappa: 82.5% 
 17  0  2  0  0  0  1  0  0	85.0%		Asphalt
  0 17  0  0  3  0  0  0  0	85.0%		Bare Soil
  3  0 17  0  0  0  0  0  0	85.0%		Bitumen
  2  0  2 11  0  0  5  0  0	55.0%		Gravel
  0  4  0  0 15  0  0  0  1	75.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  0  0  5  0  0 15  0  0	75.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  0  0  0  0 20	100.0%		Trees

overall_acc:	0.8444444444444444
κ =		0.8250000000000001
sensitivities:	[0.85, 0.85, 0.85, 0.55, 0.75, 1.0, 0.75, 1.0, 1.0]
specificities:	[0.96875, 0.975, 0.975, 0.96875, 0.98125, 1.0, 0.9625, 1.0, 0.99375]
PPVs:		[0.7727272727272727, 0.8095238095238095, 0.8095238095238095, 0.6875, 0.8333333333333334, 1.0, 0.7142857142857143, 1.0, 0.9523809523809523]
NPVs:		[0.9810126582278481, 0.9811320754716981, 0.9811320754716981, 0.9451219512195121, 0.9691358024691358, 1.0, 0.9685534591194969, 1.0, 1.0]
F1s:		[0.8095238095238095, 0.8292682926829268, 0.8292682926829268, 0.6111111111111112, 0.7894736842105263, 1.0, 0.7317073170731707, 1.0, 0.975609756097561]
accuracies:	[0.9555555555555556, 0.9611111111111111, 0.9611111111111111, 0.9222222222222223, 0.9555555555555556, 1.0, 0.9388888888888889, 1.0, 0.9944444444444445]
mean_accuracy:	0.9654320987654322
Dataset_slice = (900) -> [14, 145, 209, 319, 413, 525, 605, 718, 878, 59, 126, 201, 393, 450, 561, 606, 736, 841, 55, 102, 207, 312, 445, 527, 660, 764, 888, 87, 121, 255, 362, 475, 501, 637, 796, 884, 44, 116, 271, 308, 421, 555, 635, 715, 875, 11, 131, 219, 380, 474, 532, 648, 743, 873, 60, 110, 268, 310, 440, 528, 674, 739, 876, 6, 101, 211, 304, 437, 518, 694, 795, 857, 83, 167, 283, 357, 414, 597, 655, 701, 854, 46, 162, 229, 318, 456, 585, 678, 770, 861, 20, 123, 288, 395, 424, 584, 666, 774, 882, 74, 140, 291, 373, 481, 551, 623, 763, 829, 32, 165, 281, 315, 434, 589, 634, 732, 820, 22, 135, 220, 398, 486, 544, 691, 780, 858, 40, 152, 286, 316, 451, 593, 610, 719, 855, 24, 103, 221, 350, 429, 515, 686, 709, 851, 18, 137, 230, 355, 438, 543, 665, 772, 848, 89, 125, 262, 390, 443, 595, 681, 710, 825, 62, 124, 264, 383, 406, 529, 653, 703, 818, 12, 172, 276, 377, 411, 517, 700, 741, 822, 31, 163, 204, 369, 471, 503, 687, 707, 839, 58, 168, 208, 302, 407, 547, 614, 742, 899, 30, 129, 224, 325, 415, 505, 642, 735, 801, 79, 104, 235, 326, 495, 519, 668, 753, 852, 99, 197, 213, 343, 464, 581, 676, 773, 897, 48, 173, 284, 388, 410, 568, 679, 760, 898, 67, 149, 275, 391, 455, 548, 695, 798, 842, 10, 198, 289, 360, 485, 554, 697, 766, 831, 5, 182, 244, 397, 487, 599, 698, 747, 844, 93, 164, 257, 384, 457, 530, 611, 756, 869, 64, 187, 246, 354, 458, 583, 659, 761, 837, 70, 134, 242, 371, 422, 577, 612, 784, 846, 41, 133, 256, 351, 473, 512, 630, 726, 865, 82, 158, 299, 322, 404, 507, 693, 724, 802, 84, 120, 290, 314, 423, 522, 661, 757, 867, 51, 199, 261, 359, 412, 523, 646, 771, 812, 81, 175, 206, 340, 472, 539, 609, 711, 824, 94, 181, 300, 303, 426, 514, 654, 729, 891, 23, 179, 266, 321, 459, 572, 669, 779, 856, 100, 176, 270, 376, 432, 560, 601, 751, 874, 90, 109, 278, 346, 418, 510, 602, 792, 823, 68, 186, 274, 379, 467, 556, 645, 762, 894, 43, 117, 265, 382, 480, 570, 617, 708, 879, 1, 178, 280, 344, 425, 504, 650, 794, 819, 95, 132, 277, 332, 491, 524, 683, 787, 828, 19, 113, 282, 378, 476, 579, 608, 720, 887, 98, 112, 292, 348, 462, 563, 640, 767, 849, 50, 106, 285, 352, 444, 550, 656, 791, 886, 33, 170, 295, 386, 493, 537, 643, 777, 850, 27, 136, 241, 337, 408, 564, 624, 783, 859, 63, 148, 279, 324, 427, 511, 696, 744, 893, 54, 119, 216, 372, 401, 575, 633, 740, 838, 86, 193, 254, 306, 428, 567, 652, 721, 805, 17, 188, 293, 399, 496, 508, 671, 758, 895, 91, 142, 273, 328, 494, 574, 641, 785, 835, 97, 189, 297, 320, 430, 531, 647, 790, 883, 57, 155, 263, 301, 492, 557, 690, 733, 847, 61, 196, 294, 347, 405, 594, 677, 745, 890, 75, 141, 205, 349, 436, 590, 675, 789, 814, 71, 183, 203, 341, 409, 562, 639, 716, 868, 92, 180, 258, 394, 441, 520, 616, 759, 881, 65, 177, 249, 309, 449, 598, 644, 722, 840, 37, 166, 272, 356, 498, 582, 657, 737, 815, 29, 195, 234, 331, 469, 513, 628, 778, 853, 21, 127, 218, 313, 435, 541, 670, 752, 804, 69, 184, 267, 368, 500, 534, 604, 793, 862, 3, 185, 298, 334, 488, 588, 673, 754, 872, 77, 139, 225, 327, 403, 516, 663, 788, 836, 56, 107, 260, 396, 490, 558, 619, 705, 811, 72, 200, 217, 342, 416, 580, 607, 768, 870, 8, 111, 227, 366, 465, 571, 620, 786, 821, 2, 190, 237, 374, 419, 596, 638, 755, 808, 73, 130, 233, 363, 482, 538, 667, 746, 863, 36, 159, 238, 307, 448, 578, 682, 765, 816, 45, 146, 250, 375, 463, 587, 621, 706, 866, 52, 153, 212, 335, 460, 566, 662, 717, 845, 53, 156, 287, 311, 478, 552, 629, 799, 860, 34, 143, 222, 389, 453, 526, 689, 769, 832, 28, 169, 259, 323, 452, 569, 699, 782, 826, 39, 128, 243, 365, 454, 533, 632, 712, 896, 76, 115, 231, 364, 461, 546, 692, 748, 803, 85, 105, 228, 400, 499, 559, 625, 775, 809, 66, 171, 240, 305, 402, 573, 631, 704, 833, 88, 108, 248, 387, 497, 521, 651, 727, 806, 15, 174, 247, 370, 417, 549, 626, 738, 813, 38, 154, 253, 339, 446, 586, 627, 702, 900, 9, 114, 202, 367, 489, 535, 688, 797, 810, 80, 192, 251, 353, 442, 540, 615, 728, 843, 25, 160, 223, 392, 447, 565, 636, 723, 880, 26, 191, 215, 329, 483, 591, 672, 749, 892, 7, 151, 252, 381, 484, 576, 603, 734, 871, 96, 194, 210, 338, 477, 536, 684, 781, 864, 16, 144, 296, 317, 466, 545, 649, 776, 817, 13, 147, 269, 333, 431, 553, 618, 730, 885, 47, 150, 236, 336, 470, 600, 613, 714, 830, 49, 157, 214, 385, 468, 509, 680, 725, 834, 35, 118, 239, 358, 479, 542, 622, 750, 889, 78, 122, 232, 345, 420, 502, 658, 800, 827, 42, 161, 245, 361, 433, 506, 664, 713, 877, 4, 138, 226, 330, 439, 592, 685, 731, 807]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1630.07 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1425.81 MBs	(shape (3, 4, 3, 4, 720, 1030, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 02:46:43 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (465+255=720 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A103 ⫹₆₀ 16597), purity -1.600856424809008
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+175=255 samples) on frame 1 with decision: {1} A11 ⫺₆₀ 6569, purity -0.6356569838127877
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (237+228=465 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A5 ⫹₆₀ 11583), purity -1.1687999085211807
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (65+110=175 samples) on frame 1 with decision: {1} A50 ⫺₆₀ 13020, purity -0.5260053858748508
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (95+133=228 samples) on frame 1 with decision: {1} A66 ⫺ 5440, purity -0.5859217476750406
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (144+93=237 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A33 ⫺₇₀ 20976), purity -0.5910261996704681
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (74+21=95 samples) on frame 1 with decision: {1} A72 ⫺ 14229, purity -0.13224906695042526
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (96+14=110 samples) on frame 1 with decision: {1} A15 ⫹₈₀ 11761, purity -0.496240542054347
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (24+109=133 samples) on frame 1 with decision: {1} A30 ⫹ 13347, purity -0.552762426521479
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (115+29=144 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A18 ⫺₆₀ 15517), purity -0.5801033778998266
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+80=93 samples) on frame 1 with decision: {1} A3 ⫺₇₀ 22730, purity -0.03790819193058031
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+15=21 samples) on frame 1 with decision: {1} A3 ⫹₈₀ 6272, purity 6.344131569286608e-17
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+84=96 samples) on frame 1 with decision: {1} A79 ⫹ 17588, purity -0.31533677131241605
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (49+60=109 samples) on frame 1 with decision: {1} A102 ⫺ 21967, purity -0.4762260477949897
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (91+24=115 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A36 ⫺₇₀ 18321), purity -0.5403881524151558
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+4=12 samples) on frame 1 with decision: {1} A14 ⫺ 12029, purity -0.34657359027997264
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+42=49 samples) on frame 1 with decision: {1} A3 ⫹₆₀ 7154, purity -0.3515282728186366
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+45=60 samples) on frame 1 with decision: {1} A31 ⫹ 11127, purity -0.30461812848100284
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (26+65=91 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A83 ⫹₇₀ 19559), purity -0.4807226192923256
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+10=15 samples) on frame 1 with decision: {1} A6 ⫺ 5450, purity -0.21672198226096562
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (37+5=42 samples) on frame 1 with decision: {1} A82 ⫹₈₀ 19490, purity -0.24482138981614013
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (45+20=65 samples) on frame 1 with decision: {1} A1 ⫺₆₀ 12554, purity -0.4714609453375922
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A1 ⫺ 5836, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (32+13=45 samples) on frame 1 with decision: {1} A16 ⫺₆₀ 13812, purity -0.4803303697428646
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+11=32 samples) on frame 1 with decision: {1} A4 ⫺₆₀ 11870, purity -0.4360967878672879
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+9=21 samples) on frame 1 with decision: {1} ⟨TPP⟩ (A74 ⫺ 19252), purity -0.39092321848537254
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A3 ⫹ 10790, purity -0.3080654135821979
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
464.225669 seconds (5.40 G allocations: 104.858 GiB, 11.83% gc time, 0.14% compilation time)
Train tree:
Decision Tree
Leaves: 28
Tot nodes: 55
Height: 11
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A103 ⫹₆₀ 16597)
✔ {1} A11 ⫺₆₀ 6569
│✔ {1} A50 ⫺₆₀ 13020
││✔ {1} A15 ⫹₈₀ 11761
│││✔ Gravel : 13/14 (conf: 0.9285714285714286)
│││✘ {1} A79 ⫹ 17588
│││ ✔ Bitumen : 78/84 (conf: 0.9285714285714286)
│││ ✘ {1} A14 ⫺ 12029
│││  ✔ Gravel : 2/4 (conf: 0.5)
│││  ✘ Asphalt : 8/8 (conf: 1.0)
││✘ Asphalt : 64/65 (conf: 0.9846153846153847)
│✘ Shadows : 80/80 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A5 ⫹₆₀ 11583)
 ✔ {1} A66 ⫺ 5440
 │✔ {1} A30 ⫹ 13347
 ││✔ {1} A102 ⫺ 21967
 │││✔ {1} A31 ⫹ 11127
 ││││✔ Meadows : 43/45 (conf: 0.9555555555555556)
 ││││✘ {1} A6 ⫺ 5450
 ││││ ✔ {1} A1 ⫺ 5836
 ││││ │✔ Meadows : 3/4 (conf: 0.75)
 ││││ │✘ Meadows : 6/6 (conf: 1.0)
 ││││ ✘ Bare Soil : 5/5 (conf: 1.0)
 │││✘ {1} A3 ⫹₆₀ 7154
 │││ ✔ {1} A82 ⫹₈₀ 19490
 │││ │✔ Meadows : 4/5 (conf: 0.8)
 │││ │✘ Bare Soil : 35/37 (conf: 0.9459459459459459)
 │││ ✘ Meadows : 7/7 (conf: 1.0)
 ││✘ Bare Soil : 24/24 (conf: 1.0)
 │✘ {1} A72 ⫺ 14229
 │ ✔ {1} A3 ⫹₈₀ 6272
 │ │✔ Meadows : 15/15 (conf: 1.0)
 │ │✘ Trees : 6/6 (conf: 1.0)
 │ ✘ Trees : 74/74 (conf: 1.0)
 ✘ {1} ⟨T̅P̅P̅⟩ (A33 ⫺₇₀ 20976)
  ✔ {1} A3 ⫺₇₀ 22730
  │✔ Painted metal sheets : 80/80 (conf: 1.0)
  │✘ Bare Soil : 12/13 (conf: 0.9230769230769231)
  ✘ {1} ⟨N̅T̅P̅P̅⟩ (A18 ⫺₆₀ 15517)
   ✔ Self-Blocking Bricks : 28/29 (conf: 0.9655172413793104)
   ✘ {1} ⟨N̅T̅P̅P̅⟩ (A36 ⫺₇₀ 18321)
    ✔ Gravel : 24/24 (conf: 1.0)
    ✘ {1} ⟨N̅T̅P̅P̅⟩ (A83 ⫹₇₀ 19559)
     ✔ {1} A1 ⫺₆₀ 12554
     │✔ Gravel : 20/20 (conf: 1.0)
     │✘ {1} A16 ⫺₆₀ 13812
     │ ✔ Self-Blocking Bricks : 13/13 (conf: 1.0)
     │ ✘ {1} A4 ⫺₆₀ 11870
     │  ✔ Gravel : 11/11 (conf: 1.0)
     │  ✘ {1} ⟨TPP⟩ (A74 ⫺ 19252)
     │   ✔ {1} A3 ⫹ 10790
     │   │✔ Gravel : 5/5 (conf: 1.0)
     │   │✘ Self-Blocking Bricks : 2/4 (conf: 0.5)
     │   ✘ Self-Blocking Bricks : 11/12 (conf: 0.9166666666666666)
     ✘ Self-Blocking Bricks : 26/26 (conf: 1.0)
● [ 01/07/2021 02:54:28 ] Saving tree to file ./gandalf/trees/tree_09e3725f4d79f225deaa69103a79308381759e2095886eb9d2a9b7abc651811e.jld...
Test tree:
Decision Tree
Leaves: 28
Tot nodes: 55
Height: 11
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A103 ⫹₆₀ 16597)
✔ {1} A11 ⫺₆₀ 6569
│✔ {1} A50 ⫺₆₀ 13020
││✔ {1} A15 ⫹₈₀ 11761
│││✔ Gravel : 1/1 (conf: 1.0)
│││✘ {1} A79 ⫹ 17588
│││ ✔ Bitumen : 18/22 (conf: 0.8181818181818182)
│││ ✘ {1} A14 ⫺ 12029
│││  ✔ Gravel : 0/0 (conf: NaN)
│││  ✘ Asphalt : 3/4 (conf: 0.75)
││✘ Asphalt : 15/18 (conf: 0.8333333333333334)
│✘ Shadows : 20/20 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A5 ⫹₆₀ 11583)
 ✔ {1} A66 ⫺ 5440
 │✔ {1} A30 ⫹ 13347
 ││✔ {1} A102 ⫺ 21967
 │││✔ {1} A31 ⫹ 11127
 ││││✔ Meadows : 7/8 (conf: 0.875)
 ││││✘ {1} A6 ⫺ 5450
 ││││ ✔ {1} A1 ⫺ 5836
 ││││ │✔ Meadows : 0/0 (conf: NaN)
 ││││ │✘ Meadows : 2/3 (conf: 0.6666666666666666)
 ││││ ✘ Bare Soil : 0/0 (conf: NaN)
 │││✘ {1} A3 ⫹₆₀ 7154
 │││ ✔ {1} A82 ⫹₈₀ 19490
 │││ │✔ Meadows : 2/3 (conf: 0.6666666666666666)
 │││ │✘ Bare Soil : 7/10 (conf: 0.7)
 │││ ✘ Meadows : 2/2 (conf: 1.0)
 ││✘ Bare Soil : 6/8 (conf: 0.75)
 │✘ {1} A72 ⫺ 14229
 │ ✔ {1} A3 ⫹₈₀ 6272
 │ │✔ Meadows : 4/6 (conf: 0.6666666666666666)
 │ │✘ Trees : 3/3 (conf: 1.0)
 │ ✘ Trees : 15/15 (conf: 1.0)
 ✘ {1} ⟨T̅P̅P̅⟩ (A33 ⫺₇₀ 20976)
  ✔ {1} A3 ⫺₇₀ 22730
  │✔ Painted metal sheets : 20/20 (conf: 1.0)
  │✘ Bare Soil : 1/1 (conf: 1.0)
  ✘ {1} ⟨N̅T̅P̅P̅⟩ (A18 ⫺₆₀ 15517)
   ✔ Self-Blocking Bricks : 8/8 (conf: 1.0)
   ✘ {1} ⟨N̅T̅P̅P̅⟩ (A36 ⫺₇₀ 18321)
    ✔ Gravel : 3/5 (conf: 0.6)
    ✘ {1} ⟨N̅T̅P̅P̅⟩ (A83 ⫹₇₀ 19559)
     ✔ {1} A1 ⫺₆₀ 12554
     │✔ Gravel : 6/8 (conf: 0.75)
     │✘ {1} A16 ⫺₆₀ 13812
     │ ✔ Self-Blocking Bricks : 1/2 (conf: 0.5)
     │ ✘ {1} A4 ⫺₆₀ 11870
     │  ✔ Gravel : 2/2 (conf: 1.0)
     │  ✘ {1} ⟨TPP⟩ (A74 ⫺ 19252)
     │   ✔ {1} A3 ⫹ 10790
     │   │✔ Gravel : 0/0 (conf: NaN)
     │   │✘ Self-Blocking Bricks : 1/2 (conf: 0.5)
     │   ✘ Self-Blocking Bricks : 0/1 (conf: 0.0)
     ✘ Self-Blocking Bricks : 5/8 (conf: 0.625)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	84.44%	90.0%	70.0%	90.0%	60.0%	85.0%	100.0%	75.0%	100.0%	90.0%	81.82%	73.68%	81.82%	75.0%	77.27%	100.0%	71.43%	100.0%	100.0%	||	82.5%	[85.71, 71.79, 85.71, 66.67, 80.95, 100.0, 73.17, 100.0, 94.74]%	
  accuracy: 84.44% kappa: 82.5% 
 18  0  2  0  0  0  0  0  0	90.0%		Asphalt
  0 14  0  2  3  0  1  0  0	70.0%		Bare Soil
  2  0 18  0  0  0  0  0  0	90.0%		Bitumen
  2  0  1 12  0  0  5  0  0	60.0%		Gravel
  0  3  0  0 17  0  0  0  0	85.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  2  1  2  0  0 15  0  0	75.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  2  0  0  0 18	90.0%		Trees

overall_acc:	0.8444444444444444
κ =		0.8250000000000001
sensitivities:	[0.9, 0.7, 0.9, 0.6, 0.85, 1.0, 0.75, 1.0, 0.9]
specificities:	[0.975, 0.96875, 0.975, 0.975, 0.96875, 1.0, 0.9625, 1.0, 1.0]
PPVs:		[0.8181818181818182, 0.7368421052631579, 0.8181818181818182, 0.75, 0.7727272727272727, 1.0, 0.7142857142857143, 1.0, 1.0]
NPVs:		[0.9873417721518988, 0.9627329192546584, 0.9873417721518988, 0.9512195121951219, 0.9810126582278481, 1.0, 0.9685534591194969, 1.0, 0.9876543209876543]
F1s:		[0.8571428571428571, 0.717948717948718, 0.8571428571428571, 0.6666666666666666, 0.8095238095238095, 1.0, 0.7317073170731707, 1.0, 0.9473684210526315]
accuracies:	[0.9666666666666667, 0.9388888888888889, 0.9666666666666667, 0.9333333333333333, 0.9555555555555556, 1.0, 0.9388888888888889, 1.0, 0.9888888888888889]
mean_accuracy:	0.9654320987654322
Dataset_slice = (900) -> [70, 177, 261, 314, 419, 581, 639, 713, 846, 28, 119, 212, 327, 454, 562, 671, 731, 805, 31, 139, 280, 374, 459, 507, 684, 793, 820, 19, 178, 249, 324, 453, 509, 643, 732, 831, 5, 145, 248, 337, 422, 598, 659, 780, 874, 75, 174, 287, 378, 420, 519, 670, 791, 844, 12, 144, 202, 385, 465, 588, 689, 721, 897, 26, 108, 298, 344, 403, 544, 641, 785, 801, 67, 162, 228, 360, 498, 513, 628, 725, 881, 14, 125, 236, 322, 482, 571, 638, 706, 857, 50, 105, 214, 320, 440, 559, 627, 737, 841, 25, 148, 229, 376, 423, 535, 679, 712, 826, 11, 196, 219, 397, 434, 552, 633, 714, 893, 51, 170, 257, 399, 417, 534, 607, 764, 888, 6, 199, 207, 301, 427, 583, 696, 781, 812, 4, 127, 273, 338, 450, 590, 602, 738, 827, 63, 141, 270, 302, 486, 586, 654, 716, 814, 62, 118, 276, 392, 435, 511, 680, 703, 829, 54, 194, 216, 336, 437, 569, 669, 701, 880, 73, 190, 251, 349, 411, 582, 631, 724, 885, 16, 168, 238, 312, 449, 597, 657, 787, 860, 76, 133, 292, 308, 436, 560, 606, 704, 843, 94, 191, 234, 307, 469, 566, 656, 752, 808, 21, 172, 253, 370, 461, 556, 667, 789, 863, 96, 176, 295, 388, 401, 578, 687, 794, 832, 97, 132, 275, 382, 475, 555, 624, 796, 878, 60, 173, 217, 325, 470, 514, 683, 763, 894, 9, 109, 272, 398, 402, 510, 619, 735, 869, 40, 154, 250, 303, 443, 524, 652, 799, 851, 72, 113, 240, 368, 431, 501, 663, 756, 899, 99, 156, 279, 381, 497, 540, 664, 759, 806, 44, 167, 220, 335, 489, 523, 661, 710, 866, 91, 104, 245, 357, 416, 533, 608, 777, 872, 92, 116, 297, 355, 412, 553, 647, 779, 855, 71, 166, 246, 351, 426, 536, 646, 745, 853, 13, 192, 203, 394, 410, 529, 697, 798, 828, 98, 129, 206, 331, 414, 537, 640, 743, 858, 79, 122, 281, 346, 448, 504, 682, 723, 879, 18, 137, 224, 371, 442, 549, 666, 782, 816, 48, 101, 289, 362, 487, 589, 695, 746, 835, 56, 175, 285, 350, 456, 516, 677, 775, 833, 22, 103, 242, 356, 408, 502, 693, 741, 882, 35, 124, 293, 361, 428, 577, 698, 707, 883, 81, 189, 262, 364, 460, 547, 691, 773, 807, 84, 187, 230, 342, 478, 557, 681, 795, 849, 37, 181, 208, 310, 418, 521, 673, 772, 867, 87, 120, 299, 359, 458, 530, 630, 768, 822, 77, 117, 237, 354, 462, 538, 668, 771, 854, 34, 115, 231, 379, 429, 525, 637, 727, 815, 65, 155, 205, 316, 495, 550, 690, 733, 875, 7, 121, 252, 319, 488, 508, 625, 748, 802, 41, 123, 264, 358, 499, 503, 672, 790, 852, 3, 182, 201, 353, 452, 531, 623, 786, 837, 59, 193, 290, 345, 439, 558, 653, 758, 850, 55, 186, 296, 372, 457, 546, 636, 766, 877, 43, 126, 241, 377, 463, 554, 699, 709, 809, 29, 161, 263, 395, 405, 551, 605, 749, 870, 8, 159, 221, 333, 471, 543, 658, 715, 817, 86, 158, 227, 347, 413, 592, 662, 722, 810, 46, 157, 274, 304, 424, 561, 613, 719, 896, 64, 112, 204, 332, 445, 585, 610, 753, 886, 78, 195, 211, 391, 430, 545, 676, 757, 868, 85, 198, 209, 340, 493, 575, 655, 740, 803, 15, 152, 282, 317, 433, 600, 688, 755, 818, 1, 149, 258, 400, 477, 595, 604, 765, 821, 42, 128, 254, 309, 464, 584, 615, 761, 813, 100, 130, 271, 326, 500, 573, 603, 744, 871, 30, 197, 267, 323, 425, 594, 635, 797, 864, 10, 140, 283, 393, 468, 542, 674, 788, 840, 89, 134, 218, 389, 441, 596, 634, 767, 839, 88, 114, 278, 318, 446, 532, 617, 728, 873, 49, 179, 277, 365, 467, 528, 620, 754, 865, 17, 160, 247, 383, 481, 568, 618, 792, 892, 23, 183, 223, 339, 479, 587, 629, 750, 898, 27, 142, 286, 311, 415, 570, 692, 776, 823, 20, 150, 259, 305, 421, 522, 651, 736, 884, 68, 171, 288, 329, 407, 526, 694, 729, 834, 69, 169, 243, 352, 494, 567, 644, 747, 804, 24, 106, 284, 384, 491, 520, 675, 730, 811, 74, 110, 235, 390, 473, 579, 650, 717, 887, 36, 163, 256, 373, 406, 515, 611, 720, 830, 57, 185, 266, 343, 480, 548, 601, 705, 856, 53, 180, 239, 306, 476, 527, 614, 734, 819, 95, 200, 255, 369, 404, 541, 626, 708, 842, 61, 107, 226, 348, 409, 518, 660, 702, 889, 66, 135, 265, 380, 484, 512, 649, 762, 890, 52, 111, 233, 328, 472, 565, 700, 800, 900, 58, 147, 210, 315, 447, 506, 642, 778, 862, 47, 153, 232, 367, 474, 517, 678, 742, 845, 83, 143, 268, 341, 432, 574, 632, 784, 891, 39, 146, 215, 313, 490, 572, 616, 739, 861, 93, 165, 244, 330, 466, 591, 612, 774, 838, 90, 138, 225, 363, 451, 539, 686, 718, 847, 33, 184, 291, 396, 455, 593, 648, 783, 825, 2, 151, 300, 334, 496, 505, 665, 770, 848, 38, 102, 260, 366, 492, 576, 622, 769, 859, 80, 131, 269, 375, 483, 580, 609, 751, 895, 82, 136, 222, 386, 485, 563, 645, 760, 836, 45, 188, 213, 321, 444, 599, 685, 726, 876, 32, 164, 294, 387, 438, 564, 621, 711, 824]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1630.07 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1425.81 MBs	(shape (3, 4, 3, 4, 720, 1030, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 02:54:37 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (464+256=720 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A101 ⫹₇₀ 15982), purity -1.6074925509690732
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (239+225=464 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫹₇₀ 11355), purity -1.179598078961279
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (175+81=256 samples) on frame 1 with decision: {1} ⟨EC⟩ (A50 ⫹ 6916), purity -0.6542218032297574
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (95+130=225 samples) on frame 1 with decision: {1} A66 ⫺ 5450, purity -0.5846424639306692
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+79=239 samples) on frame 1 with decision: {1} ⟨EC⟩ (A10 ⫺ 34383), purity -0.6255638247018921
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (89+86=175 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A16 ⫺ 12069), purity -0.505768559983705
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (72+23=95 samples) on frame 1 with decision: {1} A72 ⫺ 14387, purity -0.15642191175156434
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (106+24=130 samples) on frame 1 with decision: {1} ⟨TPP⟩ (A28 ⫺ 12782), purity -0.5440993592137389
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (77+9=86 samples) on frame 1 with decision: {1} ⟨PO⟩ (A72 ⫹ 13159), purity -0.16047555616392703
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (145+15=160 samples) on frame 1 with decision: {1} A76 ⫺ 23216, purity -0.6233068083366021
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+67=89 samples) on frame 1 with decision: {1} ⟨TPP⟩ (A76 ⫹ 13307), purity -0.313620435703815
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A1 ⫺ 10562, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+15=23 samples) on frame 1 with decision: {1} A4 ⫹₈₀ 5559, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+7=22 samples) on frame 1 with decision: {1} ⟨EC⟩ (A12 ⫺ 12663), purity -0.2974893013608361
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (55+51=106 samples) on frame 1 with decision: {1} A102 ⫺ 22750, purity -0.4603175785085561
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+62=145 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A18 ⫺₆₀ 14506), purity -0.5702719273524972
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+47=55 samples) on frame 1 with decision: {1} A2 ⫹₆₀ 8036, purity -0.44231133786538196
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+45=62 samples) on frame 1 with decision: {1} A1 ⫹₈₀ 15705, purity -0.26311085520788574
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (58+25=83 samples) on frame 1 with decision: {1} ⟨EC⟩ (A57 ⫹ 15864), purity -0.4127802288178303
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+11=17 samples) on frame 1 with decision: {1} A2 ⫺₇₀ 12574, purity -0.19711747475538915
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+8=25 samples) on frame 1 with decision: {1} ⟨EC⟩ (A80 ⫹ 16379), purity -0.22180709777918245
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+9=47 samples) on frame 1 with decision: {1} A83 ⫹ 20421, purity -0.32473640091463274
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (36+22=58 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A3 ⫹₈₀ 11920), purity -0.24863101768673534
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A1 ⫺ 4310, purity -0.3080654135821979
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A1 ⫹ 18083, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A81 ⫺ 16062, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+12=22 samples) on frame 1 with decision: {1} ⟨EC⟩ (A83 ⫹ 17598), purity -0.22745564706281288
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A1 ⫹ 10374, purity -0.277258872223978
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
508.473066 seconds (6.36 G allocations: 133.861 GiB, 16.35% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 29
Tot nodes: 57
Height: 9
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A101 ⫹₇₀ 15982)
✔ {1} ⟨EC⟩ (A50 ⫹ 6916)
│✔ Shadows : 80/81 (conf: 0.9876543209876543)
│✘ {1} ⟨T̅P̅P̅⟩ (A16 ⫺ 12069)
│ ✔ {1} ⟨PO⟩ (A72 ⫹ 13159)
│ │✔ {1} A1 ⫺ 10562
│ ││✔ Asphalt : 5/5 (conf: 1.0)
│ ││✘ Asphalt : 3/4 (conf: 0.75)
│ │✘ Bitumen : 75/77 (conf: 0.974025974025974)
│ ✘ {1} ⟨TPP⟩ (A76 ⫹ 13307)
│  ✔ Asphalt : 65/67 (conf: 0.9701492537313433)
│  ✘ {1} ⟨EC⟩ (A12 ⫺ 12663)
│   ✔ Asphalt : 6/7 (conf: 0.8571428571428571)
│   ✘ Gravel : 14/15 (conf: 0.9333333333333333)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫹₇₀ 11355)
 ✔ {1} A66 ⫺ 5450
 │✔ {1} ⟨TPP⟩ (A28 ⫺ 12782)
 ││✔ Bare Soil : 24/24 (conf: 1.0)
 ││✘ {1} A102 ⫺ 22750
 ││ ✔ Meadows : 47/51 (conf: 0.9215686274509803)
 ││ ✘ {1} A2 ⫹₆₀ 8036
 ││  ✔ {1} A83 ⫹ 20421
 ││  │✔ {1} A1 ⫺ 4310
 ││  ││✔ Meadows : 5/5 (conf: 1.0)
 ││  ││✘ Bare Soil : 2/4 (conf: 0.5)
 ││  │✘ Bare Soil : 35/38 (conf: 0.9210526315789473)
 ││  ✘ Meadows : 8/8 (conf: 1.0)
 │✘ {1} A72 ⫺ 14387
 │ ✔ {1} A4 ⫹₈₀ 5559
 │ │✔ Meadows : 15/15 (conf: 1.0)
 │ │✘ Trees : 8/8 (conf: 1.0)
 │ ✘ Trees : 72/72 (conf: 1.0)
 ✘ {1} ⟨EC⟩ (A10 ⫺ 34383)
  ✔ Painted metal sheets : 79/79 (conf: 1.0)
  ✘ {1} A76 ⫺ 23216
   ✔ Bare Soil : 15/15 (conf: 1.0)
   ✘ {1} ⟨N̅T̅P̅P̅⟩ (A18 ⫺₆₀ 14506)
    ✔ {1} A1 ⫹₈₀ 15705
    │✔ Self-Blocking Bricks : 44/45 (conf: 0.9777777777777777)
    │✘ {1} A2 ⫺₇₀ 12574
    │ ✔ {1} A1 ⫹ 18083
    │ │✔ Gravel : 7/7 (conf: 1.0)
    │ │✘ Gravel : 3/4 (conf: 0.75)
    │ ✘ Self-Blocking Bricks : 6/6 (conf: 1.0)
    ✘ {1} ⟨EC⟩ (A57 ⫹ 15864)
     ✔ {1} ⟨EC⟩ (A80 ⫹ 16379)
     │✔ {1} A81 ⫺ 16062
     ││✔ Gravel : 4/4 (conf: 1.0)
     ││✘ Self-Blocking Bricks : 4/4 (conf: 1.0)
     │✘ Self-Blocking Bricks : 17/17 (conf: 1.0)
     ✘ {1} ⟨T̅P̅P̅⟩ (A3 ⫹₈₀ 11920)
      ✔ {1} ⟨EC⟩ (A83 ⫹ 17598)
      │✔ Gravel : 12/12 (conf: 1.0)
      │✘ {1} A1 ⫹ 10374
      │ ✔ Self-Blocking Bricks : 2/4 (conf: 0.5)
      │ ✘ Self-Blocking Bricks : 6/6 (conf: 1.0)
      ✘ Gravel : 36/36 (conf: 1.0)
● [ 01/07/2021 03:03:05 ] Saving tree to file ./gandalf/trees/tree_79bac3440ab6dca46dec3876d6c9b5b3bda23c2ef804d130c684d163e3361b6c.jld...
Test tree:
Decision Tree
Leaves: 29
Tot nodes: 57
Height: 9
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A101 ⫹₇₀ 15982)
✔ {1} ⟨EC⟩ (A50 ⫹ 6916)
│✔ Shadows : 20/21 (conf: 0.9523809523809523)
│✘ {1} ⟨T̅P̅P̅⟩ (A16 ⫺ 12069)
│ ✔ {1} ⟨PO⟩ (A72 ⫹ 13159)
│ │✔ {1} A1 ⫺ 10562
│ ││✔ Asphalt : 3/3 (conf: 1.0)
│ ││✘ Asphalt : 0/0 (conf: NaN)
│ │✘ Bitumen : 17/18 (conf: 0.9444444444444444)
│ ✘ {1} ⟨TPP⟩ (A76 ⫹ 13307)
│  ✔ Asphalt : 14/15 (conf: 0.9333333333333333)
│  ✘ {1} ⟨EC⟩ (A12 ⫺ 12663)
│   ✔ Asphalt : 1/2 (conf: 0.5)
│   ✘ Gravel : 2/2 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫹₇₀ 11355)
 ✔ {1} A66 ⫺ 5450
 │✔ {1} ⟨TPP⟩ (A28 ⫺ 12782)
 ││✔ Bare Soil : 3/4 (conf: 0.75)
 ││✘ {1} A102 ⫺ 22750
 ││ ✔ Meadows : 7/8 (conf: 0.875)
 ││ ✘ {1} A2 ⫹₆₀ 8036
 ││  ✔ {1} A83 ⫹ 20421
 ││  │✔ {1} A1 ⫺ 4310
 ││  ││✔ Meadows : 1/1 (conf: 1.0)
 ││  ││✘ Bare Soil : 1/5 (conf: 0.2)
 ││  │✘ Bare Soil : 9/11 (conf: 0.8181818181818182)
 ││  ✘ Meadows : 0/1 (conf: 0.0)
 │✘ {1} A72 ⫺ 14387
 │ ✔ {1} A4 ⫹₈₀ 5559
 │ │✔ Meadows : 3/3 (conf: 1.0)
 │ │✘ Trees : 2/3 (conf: 0.6666666666666666)
 │ ✘ Trees : 18/19 (conf: 0.9473684210526315)
 ✘ {1} ⟨EC⟩ (A10 ⫺ 34383)
  ✔ Painted metal sheets : 19/19 (conf: 1.0)
  ✘ {1} A76 ⫺ 23216
   ✔ Bare Soil : 5/5 (conf: 1.0)
   ✘ {1} ⟨N̅T̅P̅P̅⟩ (A18 ⫺₆₀ 14506)
    ✔ {1} A1 ⫹₈₀ 15705
    │✔ Self-Blocking Bricks : 6/9 (conf: 0.6666666666666666)
    │✘ {1} A2 ⫺₇₀ 12574
    │ ✔ {1} A1 ⫹ 18083
    │ │✔ Gravel : 1/1 (conf: 1.0)
    │ │✘ Gravel : 0/2 (conf: 0.0)
    │ ✘ Self-Blocking Bricks : 4/5 (conf: 0.8)
    ✘ {1} ⟨EC⟩ (A57 ⫹ 15864)
     ✔ {1} ⟨EC⟩ (A80 ⫹ 16379)
     │✔ {1} A81 ⫺ 16062
     ││✔ Gravel : 2/4 (conf: 0.5)
     ││✘ Self-Blocking Bricks : 0/0 (conf: NaN)
     │✘ Self-Blocking Bricks : 2/2 (conf: 1.0)
     ✘ {1} ⟨T̅P̅P̅⟩ (A3 ⫹₈₀ 11920)
      ✔ {1} ⟨EC⟩ (A83 ⫹ 17598)
      │✔ Gravel : 1/3 (conf: 0.3333333333333333)
      │✘ {1} A1 ⫹ 10374
      │ ✔ Self-Blocking Bricks : 0/0 (conf: NaN)
      │ ✘ Self-Blocking Bricks : 1/4 (conf: 0.25)
      ✘ Gravel : 7/10 (conf: 0.7)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	82.78%	90.0%	90.0%	85.0%	65.0%	55.0%	95.0%	65.0%	100.0%	100.0%	90.0%	72.0%	94.44%	59.09%	84.62%	100.0%	65.0%	95.24%	90.91%	||	80.62%	[90.0, 80.0, 89.47, 61.9, 66.67, 97.44, 65.0, 97.56, 95.24]%	
  accuracy: 82.78% kappa: 80.62% 
 18  0  1  1  0  0  0  0  0	90.0%		Asphalt
  0 18  0  0  2  0  0  0  0	90.0%		Bare Soil
  1  0 17  0  0  0  2  0  0	85.0%		Bitumen
  1  0  0 13  0  0  5  1  0	65.0%		Gravel
  0  7  0  0 11  0  0  0  2	55.0%		Meadows
  0  0  0  1  0 19  0  0  0	95.0%		Painted metal sheets
  0  0  0  7  0  0 13  0  0	65.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  0  0  0  0 20	100.0%		Trees

overall_acc:	0.8277777777777777
κ =		0.8062499999999999
sensitivities:	[0.9, 0.9, 0.85, 0.65, 0.55, 0.95, 0.65, 1.0, 1.0]
specificities:	[0.9875, 0.95625, 0.99375, 0.94375, 0.9875, 1.0, 0.95625, 0.99375, 0.9875]
PPVs:		[0.9, 0.72, 0.9444444444444444, 0.5909090909090909, 0.8461538461538461, 1.0, 0.65, 0.9523809523809523, 0.9090909090909091]
NPVs:		[0.9875, 0.9870967741935484, 0.9814814814814815, 0.9556962025316456, 0.9461077844311377, 0.9937888198757764, 0.95625, 1.0, 1.0]
F1s:		[0.9, 0.8, 0.8947368421052632, 0.6190476190476191, 0.6666666666666666, 0.9743589743589743, 0.65, 0.975609756097561, 0.9523809523809523]
accuracies:	[0.9777777777777777, 0.95, 0.9777777777777777, 0.9111111111111111, 0.9388888888888889, 0.9944444444444445, 0.9222222222222223, 0.9944444444444445, 0.9888888888888889]
mean_accuracy:	0.9617283950617284
Dataset_slice = (900) -> [21, 173, 279, 381, 499, 569, 691, 744, 847, 64, 138, 231, 310, 469, 582, 680, 764, 808, 10, 149, 269, 301, 481, 525, 602, 729, 862, 84, 168, 271, 334, 458, 600, 640, 775, 883, 13, 194, 289, 400, 497, 548, 626, 769, 896, 73, 107, 225, 375, 444, 512, 628, 755, 891, 20, 174, 213, 347, 441, 545, 677, 706, 849, 60, 159, 210, 398, 448, 505, 611, 742, 854, 22, 196, 237, 354, 492, 558, 667, 779, 832, 27, 187, 300, 345, 461, 572, 696, 704, 877, 3, 110, 264, 394, 498, 583, 655, 772, 813, 48, 125, 238, 341, 464, 565, 688, 721, 814, 24, 171, 293, 356, 470, 502, 631, 757, 836, 1, 123, 260, 339, 417, 519, 685, 712, 838, 95, 165, 224, 315, 422, 550, 652, 762, 880, 30, 190, 294, 327, 484, 589, 684, 713, 829, 29, 188, 211, 359, 429, 586, 645, 733, 889, 65, 176, 232, 305, 500, 559, 698, 780, 885, 85, 157, 282, 357, 472, 516, 647, 800, 898, 4, 179, 202, 362, 436, 585, 681, 752, 801, 50, 169, 261, 371, 460, 594, 694, 796, 815, 8, 131, 256, 343, 439, 590, 610, 785, 843, 89, 192, 240, 382, 447, 557, 606, 756, 804, 68, 144, 221, 342, 438, 560, 683, 751, 876, 23, 134, 277, 335, 419, 587, 635, 748, 895, 56, 116, 278, 364, 459, 581, 644, 797, 865, 70, 121, 292, 307, 440, 520, 633, 793, 866, 71, 155, 247, 324, 425, 508, 608, 724, 818, 62, 133, 204, 374, 405, 551, 604, 740, 824, 31, 129, 299, 368, 479, 501, 636, 741, 807, 49, 162, 227, 308, 401, 579, 692, 754, 855, 15, 119, 249, 361, 467, 546, 630, 795, 846, 77, 115, 265, 388, 426, 598, 646, 716, 894, 61, 126, 242, 396, 463, 517, 622, 735, 857, 52, 189, 275, 372, 491, 521, 660, 709, 872, 11, 195, 234, 365, 468, 544, 661, 777, 890, 75, 154, 222, 316, 480, 555, 675, 701, 856, 67, 105, 226, 393, 466, 593, 659, 731, 881, 81, 178, 267, 379, 477, 596, 656, 746, 886, 44, 153, 266, 366, 476, 542, 662, 720, 828, 38, 127, 245, 352, 452, 518, 648, 728, 848, 17, 147, 219, 340, 427, 515, 624, 771, 850, 96, 193, 229, 344, 457, 578, 663, 732, 817, 35, 128, 262, 325, 431, 543, 699, 737, 822, 36, 113, 230, 392, 414, 554, 620, 719, 812, 40, 139, 281, 314, 435, 561, 674, 749, 806, 93, 135, 268, 380, 430, 562, 682, 767, 863, 55, 132, 285, 312, 421, 528, 668, 776, 845, 90, 199, 212, 326, 486, 511, 616, 723, 816, 72, 151, 208, 331, 434, 536, 638, 781, 874, 19, 166, 283, 322, 403, 599, 625, 705, 864, 87, 180, 244, 351, 462, 513, 651, 794, 893, 74, 140, 254, 333, 490, 524, 621, 790, 830, 39, 141, 241, 391, 412, 580, 637, 798, 844, 18, 142, 207, 350, 485, 591, 687, 707, 882, 25, 148, 246, 383, 410, 573, 697, 789, 823, 2, 175, 239, 337, 495, 523, 673, 708, 873, 91, 197, 209, 378, 478, 529, 676, 773, 887, 83, 114, 274, 373, 474, 553, 650, 788, 834, 99, 182, 255, 360, 489, 533, 666, 787, 851, 43, 106, 258, 304, 454, 509, 623, 792, 803, 53, 170, 218, 353, 404, 503, 671, 727, 811, 6, 101, 235, 399, 445, 597, 612, 718, 871, 28, 145, 263, 309, 442, 510, 603, 739, 859, 79, 146, 257, 328, 456, 556, 601, 702, 861, 42, 200, 273, 319, 496, 574, 617, 791, 853, 66, 158, 206, 389, 493, 541, 695, 761, 884, 92, 143, 201, 397, 443, 568, 653, 738, 831, 76, 161, 290, 318, 424, 527, 693, 747, 820, 7, 102, 297, 311, 413, 547, 665, 715, 821, 14, 150, 216, 336, 415, 507, 669, 783, 840, 5, 137, 284, 348, 406, 564, 700, 760, 825, 57, 130, 296, 346, 402, 532, 686, 758, 842, 88, 177, 295, 384, 450, 506, 639, 736, 809, 86, 104, 203, 367, 423, 595, 609, 786, 868, 63, 191, 217, 349, 451, 514, 641, 717, 867, 16, 183, 250, 302, 420, 538, 658, 714, 888, 32, 185, 236, 355, 446, 537, 679, 766, 899, 100, 118, 287, 306, 473, 534, 654, 734, 860, 80, 136, 252, 330, 418, 530, 607, 759, 878, 33, 112, 286, 376, 407, 504, 618, 753, 805, 69, 117, 233, 370, 471, 571, 690, 782, 858, 37, 111, 223, 303, 433, 577, 678, 725, 841, 26, 164, 276, 317, 449, 588, 627, 743, 819, 59, 167, 251, 323, 408, 575, 615, 711, 879, 41, 160, 280, 358, 483, 567, 672, 765, 839, 12, 172, 228, 321, 455, 566, 657, 768, 897, 9, 108, 272, 386, 437, 584, 649, 722, 826, 47, 156, 253, 369, 482, 531, 643, 774, 900, 46, 103, 259, 313, 428, 576, 619, 745, 810, 51, 198, 220, 332, 487, 563, 664, 778, 833, 45, 181, 215, 329, 409, 526, 605, 784, 802, 98, 152, 291, 320, 453, 592, 629, 799, 827, 94, 184, 288, 363, 488, 535, 689, 726, 869, 34, 122, 205, 338, 411, 522, 614, 770, 875, 54, 163, 214, 385, 416, 570, 613, 763, 837, 78, 109, 298, 377, 494, 539, 642, 703, 870, 58, 124, 270, 387, 432, 549, 632, 750, 835, 97, 186, 248, 390, 475, 552, 670, 710, 892, 82, 120, 243, 395, 465, 540, 634, 730, 852]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1630.07 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1425.81 MBs	(shape (3, 4, 3, 4, 720, 1030, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 03:03:15 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (462+258=720 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A101 ⫹₆₀ 16042), purity -1.6097099197439586
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (239+223=462 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫹₇₀ 11355), purity -1.1852851058578413
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (177+81=258 samples) on frame 1 with decision: {1} ⟨EC⟩ (A56 ⫹ 5678), purity -0.6677436628811942
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (94+129=223 samples) on frame 1 with decision: {1} A57 ⫺ 4617, purity -0.5782146886596471
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+79=239 samples) on frame 1 with decision: {1} ⟨EC⟩ (A10 ⫺ 33927), purity -0.6371697282505416
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (88+89=177 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A16 ⫺ 12069), purity -0.5520143614052775
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (73+21=94 samples) on frame 1 with decision: {1} A72 ⫺ 14387, purity -0.14219997376799018
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+108=129 samples) on frame 1 with decision: {1} A30 ⫹ 13347, purity -0.5594638417656607
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (143+17=160 samples) on frame 1 with decision: {1} A76 ⫺ 23216, purity -0.6131697724411853
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+70=89 samples) on frame 1 with decision: {1} A5 ⫹₈₀ 13198, purity -0.17275173023975315
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+67=88 samples) on frame 1 with decision: {1} ⟨EC⟩ (A42 ⫹ 12217), purity -0.37122851686377323
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+14=21 samples) on frame 1 with decision: {1} A25 ⫹ 6807, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+12=19 samples) on frame 1 with decision: {1} ⟨EC⟩ (A16 ⫹ 11821), purity -0.15109548568520328
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+6=21 samples) on frame 1 with decision: {1} A11 ⫺₇₀ 11543, purity -0.12873177396180133
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (54+54=108 samples) on frame 1 with decision: {1} A103 ⫺ 22106, purity -0.46569725224591174
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (67+76=143 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A17 ⫹₈₀ 14486), purity -0.5719510415350996
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+50=54 samples) on frame 1 with decision: {1} A20 ⫹ 9453, purity -0.19715829565155277
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (39+15=54 samples) on frame 1 with decision: {1} A83 ⫹ 20421, purity -0.3479011409418603
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+59=67 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A1 ⫹₇₀ 16131), purity -0.2555579270715843
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+57=76 samples) on frame 1 with decision: {1} A3 ⫺₆₀ 11534, purity -0.4112456834348869
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+4=15 samples) on frame 1 with decision: {1} A1 ⫹₆₀ 6946, purity -0.18483924814931874
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (30+9=39 samples) on frame 1 with decision: {1} ⟨NTPP⟩ (A75 ⫺ 19272), purity -0.15852959459938232
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+15=19 samples) on frame 1 with decision: {1} A98 ⫺ 17568, purity -0.14592572222314637
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+36=57 samples) on frame 1 with decision: {1} ⟨TPP⟩ (A30 ⫺ 16835), purity -0.2515977227843843
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} ⟨EC⟩ (A76 ⫺ 21274), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+11=21 samples) on frame 1 with decision: {1} ⟨TPP⟩ (A83 ⫺ 18430), purity -0.2483586877922006
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+4=11 samples) on frame 1 with decision: {1} A1 ⫺ 15824, purity -0.2520535202036165
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
533.898520 seconds (6.58 G allocations: 141.133 GiB, 16.28% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 28
Tot nodes: 55
Height: 9
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A101 ⫹₆₀ 16042)
✔ {1} ⟨EC⟩ (A56 ⫹ 5678)
│✔ Shadows : 80/81 (conf: 0.9876543209876543)
│✘ {1} ⟨T̅P̅P̅⟩ (A16 ⫺ 12069)
│ ✔ {1} A5 ⫹₈₀ 13198
│ │✔ Bitumen : 70/70 (conf: 1.0)
│ │✘ {1} ⟨EC⟩ (A16 ⫹ 11821)
│ │ ✔ Asphalt : 12/12 (conf: 1.0)
│ │ ✘ Bitumen : 6/7 (conf: 0.8571428571428571)
│ ✘ {1} ⟨EC⟩ (A42 ⫹ 12217)
│  ✔ Asphalt : 63/67 (conf: 0.9402985074626866)
│  ✘ {1} A11 ⫺₇₀ 11543
│   ✔ Asphalt : 5/6 (conf: 0.8333333333333334)
│   ✘ Gravel : 15/15 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫹₇₀ 11355)
 ✔ {1} A57 ⫺ 4617
 │✔ {1} A30 ⫹ 13347
 ││✔ {1} A103 ⫺ 22106
 │││✔ {1} A20 ⫹ 9453
 ││││✔ Meadows : 48/50 (conf: 0.96)
 ││││✘ Bare Soil : 3/4 (conf: 0.75)
 │││✘ {1} A83 ⫹ 20421
 │││ ✔ {1} A1 ⫹₆₀ 6946
 │││ │✔ Bare Soil : 2/4 (conf: 0.5)
 │││ │✘ Meadows : 11/11 (conf: 1.0)
 │││ ✘ {1} ⟨NTPP⟩ (A75 ⫺ 19272)
 │││  ✔ {1} ⟨EC⟩ (A76 ⫺ 21274)
 │││  │✔ Bare Soil : 5/5 (conf: 1.0)
 │││  │✘ Meadows : 4/4 (conf: 1.0)
 │││  ✘ Bare Soil : 30/30 (conf: 1.0)
 ││✘ Bare Soil : 21/21 (conf: 1.0)
 │✘ {1} A72 ⫺ 14387
 │ ✔ {1} A25 ⫹ 6807
 │ │✔ Meadows : 14/14 (conf: 1.0)
 │ │✘ Trees : 7/7 (conf: 1.0)
 │ ✘ Trees : 73/73 (conf: 1.0)
 ✘ {1} ⟨EC⟩ (A10 ⫺ 33927)
  ✔ Painted metal sheets : 79/79 (conf: 1.0)
  ✘ {1} A76 ⫺ 23216
   ✔ Bare Soil : 17/17 (conf: 1.0)
   ✘ {1} ⟨T̅P̅P̅⟩ (A17 ⫹₈₀ 14486)
    ✔ {1} A3 ⫺₆₀ 11534
    │✔ {1} ⟨TPP⟩ (A30 ⫺ 16835)
    ││✔ Gravel : 36/36 (conf: 1.0)
    ││✘ {1} ⟨TPP⟩ (A83 ⫺ 18430)
    ││ ✔ {1} A1 ⫺ 15824
    ││ │✔ Self-Blocking Bricks : 2/4 (conf: 0.5)
    ││ │✘ Self-Blocking Bricks : 7/7 (conf: 1.0)
    ││ ✘ Gravel : 10/10 (conf: 1.0)
    │✘ {1} A98 ⫺ 17568
    │ ✔ Self-Blocking Bricks : 15/15 (conf: 1.0)
    │ ✘ Self-Blocking Bricks : 2/4 (conf: 0.5)
    ✘ {1} ⟨N̅T̅P̅P̅⟩ (A1 ⫹₇₀ 16131)
     ✔ Self-Blocking Bricks : 54/59 (conf: 0.9152542372881356)
     ✘ Gravel : 8/8 (conf: 1.0)
● [ 01/07/2021 03:12:09 ] Saving tree to file ./gandalf/trees/tree_f7bd9cbbb5e06ed1b36f4180430790cff2136d67f22d25dc6264717518d93fb3.jld...
Test tree:
Decision Tree
Leaves: 28
Tot nodes: 55
Height: 9
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A101 ⫹₆₀ 16042)
✔ {1} ⟨EC⟩ (A56 ⫹ 5678)
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} ⟨T̅P̅P̅⟩ (A16 ⫺ 12069)
│ ✔ {1} A5 ⫹₈₀ 13198
│ │✔ Bitumen : 16/17 (conf: 0.9411764705882353)
│ │✘ {1} ⟨EC⟩ (A16 ⫹ 11821)
│ │ ✔ Asphalt : 1/2 (conf: 0.5)
│ │ ✘ Bitumen : 1/1 (conf: 1.0)
│ ✘ {1} ⟨EC⟩ (A42 ⫹ 12217)
│  ✔ Asphalt : 17/18 (conf: 0.9444444444444444)
│  ✘ {1} A11 ⫺₇₀ 11543
│   ✔ Asphalt : 1/1 (conf: 1.0)
│   ✘ Gravel : 2/2 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫹₇₀ 11355)
 ✔ {1} A57 ⫺ 4617
 │✔ {1} A30 ⫹ 13347
 ││✔ {1} A103 ⫺ 22106
 │││✔ {1} A20 ⫹ 9453
 ││││✔ Meadows : 10/13 (conf: 0.7692307692307693)
 ││││✘ Bare Soil : 2/3 (conf: 0.6666666666666666)
 │││✘ {1} A83 ⫹ 20421
 │││ ✔ {1} A1 ⫹₆₀ 6946
 │││ │✔ Bare Soil : 1/1 (conf: 1.0)
 │││ │✘ Meadows : 1/1 (conf: 1.0)
 │││ ✘ {1} ⟨NTPP⟩ (A75 ⫺ 19272)
 │││  ✔ {1} ⟨EC⟩ (A76 ⫺ 21274)
 │││  │✔ Bare Soil : 0/0 (conf: NaN)
 │││  │✘ Meadows : 1/1 (conf: 1.0)
 │││  ✘ Bare Soil : 6/7 (conf: 0.8571428571428571)
 ││✘ Bare Soil : 5/5 (conf: 1.0)
 │✘ {1} A72 ⫺ 14387
 │ ✔ {1} A25 ⫹ 6807
 │ │✔ Meadows : 4/4 (conf: 1.0)
 │ │✘ Trees : 3/4 (conf: 0.75)
 │ ✘ Trees : 17/18 (conf: 0.9444444444444444)
 ✘ {1} ⟨EC⟩ (A10 ⫺ 33927)
  ✔ Painted metal sheets : 20/20 (conf: 1.0)
  ✘ {1} A76 ⫺ 23216
   ✔ Bare Soil : 3/3 (conf: 1.0)
   ✘ {1} ⟨T̅P̅P̅⟩ (A17 ⫹₈₀ 14486)
    ✔ {1} A3 ⫺₆₀ 11534
    │✔ {1} ⟨TPP⟩ (A30 ⫺ 16835)
    ││✔ Gravel : 3/4 (conf: 0.75)
    ││✘ {1} ⟨TPP⟩ (A83 ⫺ 18430)
    ││ ✔ {1} A1 ⫺ 15824
    ││ │✔ Self-Blocking Bricks : 0/0 (conf: NaN)
    ││ │✘ Self-Blocking Bricks : 0/0 (conf: NaN)
    ││ ✘ Gravel : 6/7 (conf: 0.8571428571428571)
    │✘ {1} A98 ⫺ 17568
    │ ✔ Self-Blocking Bricks : 4/6 (conf: 0.6666666666666666)
    │ ✘ Self-Blocking Bricks : 0/1 (conf: 0.0)
    ✘ {1} ⟨N̅T̅P̅P̅⟩ (A1 ⫹₇₀ 16131)
     ✔ Self-Blocking Bricks : 13/19 (conf: 0.6842105263157895)
     ✘ Gravel : 1/2 (conf: 0.5)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	87.78%	95.0%	85.0%	85.0%	60.0%	80.0%	100.0%	85.0%	100.0%	100.0%	90.48%	89.47%	94.44%	80.0%	84.21%	100.0%	65.38%	100.0%	90.91%	||	86.25%	[92.68, 87.18, 89.47, 68.57, 82.05, 100.0, 73.91, 100.0, 95.24]%	
  accuracy: 87.78% kappa: 86.25% 
 19  0  1  0  0  0  0  0  0	95.0%		Asphalt
  0 17  0  0  3  0  0  0  0	85.0%		Bare Soil
  2  0 17  0  0  0  1  0  0	85.0%		Bitumen
  0  0  0 12  0  0  8  0  0	60.0%		Gravel
  0  2  0  0 16  0  0  0  2	80.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  0  0  3  0  0 17  0  0	85.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  0  0  0  0 20	100.0%		Trees

overall_acc:	0.8777777777777778
κ =		0.8624999999999999
sensitivities:	[0.95, 0.85, 0.85, 0.6, 0.8, 1.0, 0.85, 1.0, 1.0]
specificities:	[0.9875, 0.9875, 0.99375, 0.98125, 0.98125, 1.0, 0.94375, 1.0, 0.9875]
PPVs:		[0.9047619047619048, 0.8947368421052632, 0.9444444444444444, 0.8, 0.8421052631578947, 1.0, 0.6538461538461539, 1.0, 0.9090909090909091]
NPVs:		[0.9937106918238994, 0.9813664596273292, 0.9814814814814815, 0.9515151515151515, 0.9751552795031055, 1.0, 0.9805194805194806, 1.0, 1.0]
F1s:		[0.926829268292683, 0.8717948717948718, 0.8947368421052632, 0.6857142857142857, 0.8205128205128205, 1.0, 0.7391304347826086, 1.0, 0.9523809523809523]
accuracies:	[0.9833333333333333, 0.9722222222222222, 0.9777777777777777, 0.9388888888888889, 0.9611111111111111, 1.0, 0.9333333333333333, 1.0, 0.9888888888888889]
mean_accuracy:	0.9728395061728397
Iteration "Pavia,(3,false,"o_RCC5","TestOpAll")"...
● [ 01/07/2021 03:12:10 ] Computing dataset...
● [ 01/07/2021 03:12:15 ] Computed dataset in 00:00:06
● [ 01/07/2021 03:12:15 ] Saving dataset to file ./gandalf/cache/dataset_1240d3393c1d19b85acbebc354b947a2103bb3673c6a5833287210069177504b.jld...
Dataseeds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

executing run 'Pavia,(3,false,"o_RCC5","TestOpAll")'...
dataset type = Tuple{Array{Int64, 4}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (test_operators = TestOperator[⫺, ⫹, ⫺₉₀, ⫹₉₀, ⫺₈₀, ⫹₈₀, ⫺₇₀, ⫹₇₀, ⫺₆₀, ⫹₆₀], ontology = Ontology{DecisionTree.ModalLogic.Interval2D}(RCC5))
dataset_slices    = (10 dataset_slices)

Frame 1/1
┌ LogLevel(-500): OntologicalDataset -> FeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:12
┌ LogLevel(-500): Instance 1/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 542/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 180/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 723/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 361/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): FeatModalDataset -> StumpFeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:358
┌ LogLevel(-500): Instance 1/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 542/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 180/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 723/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 361/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
40142.292992 seconds (119.97 G allocations: 13.674 TiB, 91.35% gc time, 0.00% compilation time)
Dataset_slice = (900) -> [10, 122, 267, 386, 478, 583, 633, 707, 810, 3, 166, 252, 331, 497, 503, 670, 754, 819, 27, 190, 228, 353, 403, 521, 606, 735, 887, 63, 130, 246, 366, 462, 566, 687, 712, 872, 50, 195, 235, 350, 474, 501, 671, 769, 829, 57, 186, 201, 397, 447, 511, 660, 778, 843, 36, 116, 254, 326, 457, 542, 622, 766, 867, 21, 123, 248, 340, 469, 593, 666, 720, 868, 75, 157, 258, 336, 417, 509, 634, 704, 854, 78, 183, 238, 394, 408, 596, 624, 759, 862, 35, 154, 264, 376, 477, 599, 697, 748, 865, 66, 191, 274, 307, 448, 548, 602, 787, 823, 20, 167, 215, 392, 467, 549, 650, 795, 875, 67, 188, 239, 310, 434, 568, 682, 775, 890, 25, 141, 231, 330, 490, 594, 678, 732, 871, 24, 117, 270, 400, 492, 592, 668, 750, 816, 82, 194, 226, 387, 455, 560, 690, 793, 825, 74, 197, 289, 378, 441, 565, 683, 788, 896, 69, 105, 227, 341, 461, 539, 636, 705, 822, 81, 187, 300, 388, 427, 585, 646, 776, 811, 28, 159, 210, 342, 405, 531, 675, 710, 856, 15, 179, 244, 323, 420, 554, 618, 714, 830, 59, 163, 223, 332, 416, 558, 661, 740, 878, 29, 124, 268, 351, 459, 564, 601, 786, 820, 18, 153, 232, 329, 500, 582, 673, 767, 847, 31, 162, 220, 319, 418, 535, 685, 791, 821, 43, 177, 288, 346, 465, 576, 681, 770, 876, 40, 155, 249, 325, 470, 575, 625, 784, 860, 12, 149, 205, 327, 496, 578, 651, 718, 848, 83, 192, 275, 305, 464, 597, 665, 774, 836, 100, 145, 247, 398, 415, 508, 688, 746, 888, 94, 178, 261, 322, 488, 519, 607, 717, 824, 16, 110, 291, 347, 485, 551, 680, 722, 849, 51, 119, 204, 337, 466, 590, 612, 796, 894, 73, 148, 297, 362, 449, 522, 611, 749, 885, 19, 103, 292, 358, 425, 533, 623, 800, 801, 8, 142, 213, 382, 499, 530, 684, 785, 846, 11, 134, 207, 345, 472, 598, 628, 761, 827, 95, 136, 296, 357, 407, 515, 652, 701, 881, 58, 169, 284, 339, 458, 595, 632, 709, 899, 72, 101, 241, 321, 491, 581, 603, 777, 898, 13, 127, 230, 349, 432, 550, 620, 723, 863, 53, 172, 240, 301, 435, 555, 657, 757, 813, 22, 200, 285, 335, 483, 532, 663, 744, 859, 71, 176, 260, 379, 437, 517, 643, 782, 869, 87, 139, 202, 399, 439, 514, 672, 702, 855, 33, 160, 299, 389, 451, 544, 674, 727, 828, 61, 168, 208, 343, 480, 540, 617, 781, 808, 90, 180, 233, 309, 428, 586, 629, 772, 897, 55, 175, 216, 348, 476, 518, 613, 731, 886, 60, 137, 290, 383, 443, 573, 637, 711, 900, 96, 198, 211, 308, 456, 552, 610, 706, 852, 68, 144, 214, 317, 431, 563, 692, 733, 806, 77, 189, 203, 315, 471, 507, 669, 789, 832, 9, 135, 279, 361, 473, 536, 621, 743, 858, 42, 147, 221, 352, 481, 553, 698, 762, 834, 64, 115, 287, 391, 423, 528, 604, 763, 835, 85, 196, 256, 390, 453, 516, 614, 752, 818, 54, 182, 280, 359, 442, 588, 689, 783, 837, 2, 140, 245, 320, 429, 541, 609, 726, 805, 23, 170, 272, 313, 402, 559, 656, 764, 839, 91, 104, 269, 324, 413, 538, 642, 737, 833, 65, 181, 257, 344, 414, 505, 619, 758, 857, 48, 132, 224, 367, 487, 523, 638, 742, 826, 70, 173, 271, 303, 444, 589, 658, 779, 804, 80, 118, 276, 338, 460, 570, 644, 794, 895, 49, 171, 265, 333, 454, 577, 677, 773, 817, 7, 120, 281, 360, 438, 572, 694, 768, 807, 88, 193, 218, 372, 482, 584, 635, 753, 873, 45, 121, 229, 381, 475, 510, 676, 771, 866, 14, 174, 236, 364, 450, 534, 645, 741, 844, 97, 128, 283, 304, 436, 562, 695, 751, 841, 26, 111, 243, 311, 463, 561, 653, 729, 883, 52, 112, 294, 302, 412, 506, 654, 797, 851, 4, 158, 234, 384, 410, 569, 648, 721, 861, 32, 150, 253, 371, 409, 512, 616, 780, 870, 34, 146, 277, 374, 493, 579, 699, 765, 893, 99, 125, 266, 380, 430, 504, 631, 798, 802, 93, 102, 206, 363, 422, 587, 659, 792, 842, 56, 152, 286, 375, 445, 513, 630, 715, 882, 46, 113, 250, 306, 498, 524, 627, 730, 812, 47, 185, 263, 373, 404, 525, 679, 716, 850, 84, 108, 242, 385, 419, 600, 691, 760, 877, 79, 129, 217, 318, 486, 546, 655, 734, 840, 39, 156, 282, 365, 494, 591, 640, 799, 815, 17, 114, 251, 312, 468, 574, 615, 756, 838, 38, 143, 225, 369, 452, 556, 700, 790, 880, 5, 151, 212, 368, 426, 502, 649, 736, 809, 44, 138, 278, 355, 433, 526, 641, 724, 831, 98, 126, 237, 395, 489, 529, 693, 713, 889, 86, 109, 273, 334, 421, 537, 608, 755, 853, 92, 199, 262, 354, 479, 527, 647, 725, 803, 41, 184, 209, 328, 446, 547, 605, 719, 814, 89, 107, 259, 370, 411, 567, 664, 703, 891, 6, 131, 222, 377, 495, 545, 639, 708, 845, 1, 106, 295, 314, 401, 557, 667, 747, 864, 76, 161, 255, 396, 406, 520, 686, 738, 879, 37, 164, 298, 393, 484, 543, 696, 739, 884, 30, 133, 219, 356, 440, 580, 626, 745, 874, 62, 165, 293, 316, 424, 571, 662, 728, 892]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1019.01 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	814.75 MBs	(shape (3, 4, 3, 4, 720, 1030, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 14:21:25 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (462+258=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A103 ⫹₈₀ 16438), purity -1.6040117817824031
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (227+235=462 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 11207), purity -1.1715944754924754
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (178+80=258 samples) on frame 1 with decision: {1} A9 ⫹₇₀ 6054, purity -0.6558392200079038
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (133+94=227 samples) on frame 1 with decision: {1} ⟨DR⟩ (A66 ⫹ 5400), purity -0.5803770560590781
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+98=178 samples) on frame 1 with decision: {1} ⟨PO⟩ (A16 ⫹₆₀ 12078), purity -0.49973104348243885
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (92+143=235 samples) on frame 1 with decision: {1} A35 ⫹₈₀ 20927, purity -0.5909185446706625
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (108+25=133 samples) on frame 1 with decision: {1} ⟨DR⟩ (A28 ⫺ 12901), purity -0.5426378615621822
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+75=80 samples) on frame 1 with decision: {1} A94 ⫹₈₀ 16498, purity -0.1084481244145111
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+80=92 samples) on frame 1 with decision: {1} A2 ⫺₇₀ 21571, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (24+70=94 samples) on frame 1 with decision: {1} A73 ⫹ 17112, purity -0.17341104663613427
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+77=98 samples) on frame 1 with decision: {1} ⟨DR⟩ (A76 ⫹ 13486), purity -0.34322296691553433
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (110+33=143 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A24 ⫺₈₀ 16736), purity -0.5582801432139433
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+10=24 samples) on frame 1 with decision: {1} ⟨DR⟩ (A25 ⫺ 6896), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+6=21 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A10 ⫺ 11266), purity 6.344131569286608e-17
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (42+66=108 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A75 ⫹₇₀ 20233), purity -0.4841868172486314
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (90+20=110 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A44 ⫺₈₀ 19371), purity -0.5653008894385779
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+52=66 samples) on frame 1 with decision: {1} ⟨DR⟩ (A83 ⫺ 20491), purity -0.5459276536069043
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (66+24=90 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A83 ⫺₆₀ 19688), purity -0.5327309731015852
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+10=14 samples) on frame 1 with decision: {1} A1 ⫺₇₀ 6946, purity -0.19804205158855578
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+30=52 samples) on frame 1 with decision: {1} A85 ⫹ 21482, purity -0.2773192120352048
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (54+12=66 samples) on frame 1 with decision: {1} ⟨PO⟩ (A2 ⫹₆₀ 10424), purity -0.5203816595753591
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+10=22 samples) on frame 1 with decision: {1} A83 ⫺ 24781, purity -0.43412158260103956
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (33+21=54 samples) on frame 1 with decision: {1} ⟨PO⟩ (A63 ⫺ 19084), purity -0.41654826499292347
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A5 ⫺ 5826, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+12=33 samples) on frame 1 with decision: {1} ⟨PO⟩ (A84 ⫺ 18787), purity -0.2001314008154434
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+4=21 samples) on frame 1 with decision: {1} A85 ⫹ 17687, purity -0.13202803439237054
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
538.945363 seconds (6.56 G allocations: 150.346 GiB, 20.85% gc time, 0.46% compilation time)
Train tree:
Decision Tree
Leaves: 27
Tot nodes: 53
Height: 10
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₈₀ 16438)
✔ {1} A9 ⫹₇₀ 6054
│✔ Shadows : 80/80 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A16 ⫹₆₀ 12078)
│ ✔ {1} ⟨DR⟩ (A76 ⫹ 13486)
│ │✔ Asphalt : 71/77 (conf: 0.922077922077922)
│ │✘ {1} ⟨P̅P̅⟩ (A10 ⫺ 11266)
│ │ ✔ Asphalt : 6/6 (conf: 1.0)
│ │ ✘ Gravel : 15/15 (conf: 1.0)
│ ✘ {1} A94 ⫹₈₀ 16498
│  ✔ Bitumen : 74/75 (conf: 0.9866666666666667)
│  ✘ Gravel : 3/5 (conf: 0.6)
✘ {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 11207)
 ✔ {1} A35 ⫹₈₀ 20927
 │✔ {1} ⟨P̅P̅⟩ (A24 ⫺₈₀ 16736)
 ││✔ Self-Blocking Bricks : 32/33 (conf: 0.9696969696969697)
 ││✘ {1} ⟨P̅P̅⟩ (A44 ⫺₈₀ 19371)
 ││ ✔ Gravel : 20/20 (conf: 1.0)
 ││ ✘ {1} ⟨P̅P̅⟩ (A83 ⫺₆₀ 19688)
 ││  ✔ Self-Blocking Bricks : 23/24 (conf: 0.9583333333333334)
 ││  ✘ {1} ⟨PO⟩ (A2 ⫹₆₀ 10424)
 ││   ✔ Self-Blocking Bricks : 11/12 (conf: 0.9166666666666666)
 ││   ✘ {1} ⟨PO⟩ (A63 ⫺ 19084)
 ││    ✔ Gravel : 21/21 (conf: 1.0)
 ││    ✘ {1} ⟨PO⟩ (A84 ⫺ 18787)
 ││     ✔ Self-Blocking Bricks : 12/12 (conf: 1.0)
 ││     ✘ {1} A85 ⫹ 17687
 ││      ✔ Self-Blocking Bricks : 2/4 (conf: 0.5)
 ││      ✘ Gravel : 17/17 (conf: 1.0)
 │✘ {1} A2 ⫺₇₀ 21571
 │ ✔ Painted metal sheets : 80/80 (conf: 1.0)
 │ ✘ Bare Soil : 12/12 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5400)
  ✔ {1} A73 ⫹ 17112
  │✔ Trees : 70/70 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A25 ⫺ 6896)
  │ ✔ Trees : 10/10 (conf: 1.0)
  │ ✘ Meadows : 14/14 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A28 ⫺ 12901)
   ✔ Bare Soil : 25/25 (conf: 1.0)
   ✘ {1} ⟨P̅P̅⟩ (A75 ⫹₇₀ 20233)
    ✔ {1} ⟨DR⟩ (A83 ⫺ 20491)
    │✔ {1} A85 ⫹ 21482
    ││✔ Bare Soil : 30/30 (conf: 1.0)
    ││✘ {1} A83 ⫺ 24781
    ││ ✔ {1} A5 ⫺ 5826
    ││ │✔ Bare Soil : 6/6 (conf: 1.0)
    ││ │✘ Meadows : 3/4 (conf: 0.75)
    ││ ✘ Meadows : 11/12 (conf: 0.9166666666666666)
    │✘ {1} A1 ⫺₇₀ 6946
    │ ✔ Meadows : 10/10 (conf: 1.0)
    │ ✘ Bare Soil : 2/4 (conf: 0.5)
    ✘ Meadows : 40/42 (conf: 0.9523809523809523)
● [ 01/07/2021 14:30:24 ] Saving tree to file ./gandalf/trees/tree_87241ae893b3444f686fd21acfdbb2f5a59d9769c2f1715de7c22cfa99acfc0a.jld...
Test tree:
Decision Tree
Leaves: 27
Tot nodes: 53
Height: 10
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₈₀ 16438)
✔ {1} A9 ⫹₇₀ 6054
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A16 ⫹₆₀ 12078)
│ ✔ {1} ⟨DR⟩ (A76 ⫹ 13486)
│ │✔ Asphalt : 18/23 (conf: 0.782608695652174)
│ │✘ {1} ⟨P̅P̅⟩ (A10 ⫺ 11266)
│ │ ✔ Asphalt : 0/1 (conf: 0.0)
│ │ ✘ Gravel : 2/6 (conf: 0.3333333333333333)
│ ✘ {1} A94 ⫹₈₀ 16498
│  ✔ Bitumen : 12/13 (conf: 0.9230769230769231)
│  ✘ Gravel : 0/0 (conf: NaN)
✘ {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 11207)
 ✔ {1} A35 ⫹₈₀ 20927
 │✔ {1} ⟨P̅P̅⟩ (A24 ⫺₈₀ 16736)
 ││✔ Self-Blocking Bricks : 4/7 (conf: 0.5714285714285714)
 ││✘ {1} ⟨P̅P̅⟩ (A44 ⫺₈₀ 19371)
 ││ ✔ Gravel : 6/7 (conf: 0.8571428571428571)
 ││ ✘ {1} ⟨P̅P̅⟩ (A83 ⫺₆₀ 19688)
 ││  ✔ Self-Blocking Bricks : 3/5 (conf: 0.6)
 ││  ✘ {1} ⟨PO⟩ (A2 ⫹₆₀ 10424)
 ││   ✔ Self-Blocking Bricks : 7/10 (conf: 0.7)
 ││   ✘ {1} ⟨PO⟩ (A63 ⫺ 19084)
 ││    ✔ Gravel : 1/3 (conf: 0.3333333333333333)
 ││    ✘ {1} ⟨PO⟩ (A84 ⫺ 18787)
 ││     ✔ Self-Blocking Bricks : 2/2 (conf: 1.0)
 ││     ✘ {1} A85 ⫹ 17687
 ││      ✔ Self-Blocking Bricks : 0/0 (conf: NaN)
 ││      ✘ Gravel : 2/2 (conf: 1.0)
 │✘ {1} A2 ⫺₇₀ 21571
 │ ✔ Painted metal sheets : 20/21 (conf: 0.9523809523809523)
 │ ✘ Bare Soil : 2/3 (conf: 0.6666666666666666)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5400)
  ✔ {1} A73 ⫹ 17112
  │✔ Trees : 19/19 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A25 ⫺ 6896)
  │ ✔ Trees : 1/1 (conf: 1.0)
  │ ✘ Meadows : 5/5 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A28 ⫺ 12901)
   ✔ Bare Soil : 3/6 (conf: 0.5)
   ✘ {1} ⟨P̅P̅⟩ (A75 ⫹₇₀ 20233)
    ✔ {1} ⟨DR⟩ (A83 ⫺ 20491)
    │✔ {1} A85 ⫹ 21482
    ││✔ Bare Soil : 6/6 (conf: 1.0)
    ││✘ {1} A83 ⫺ 24781
    ││ ✔ {1} A5 ⫺ 5826
    ││ │✔ Bare Soil : 2/3 (conf: 0.6666666666666666)
    ││ │✘ Meadows : 1/1 (conf: 1.0)
    ││ ✘ Meadows : 5/6 (conf: 0.8333333333333334)
    │✘ {1} A1 ⫺₇₀ 6946
    │ ✔ Meadows : 2/3 (conf: 0.6666666666666666)
    │ ✘ Bare Soil : 0/0 (conf: NaN)
    ✘ Meadows : 5/7 (conf: 0.7142857142857143)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	82.22%	90.0%	65.0%	60.0%	55.0%	90.0%	100.0%	80.0%	100.0%	100.0%	75.0%	72.22%	92.31%	61.11%	81.82%	95.24%	66.67%	100.0%	100.0%	||	80.0%	[81.82, 68.42, 72.73, 57.89, 85.71, 97.56, 72.73, 100.0, 100.0]%	
  accuracy: 82.22% kappa: 80.0% 
 18  0  1  0  0  0  1  0  0	90.0%		Asphalt
  0 13  0  1  4  1  1  0  0	65.0%		Bare Soil
  4  0 12  4  0  0  0  0  0	60.0%		Bitumen
  2  1  0 11  0  0  6  0  0	55.0%		Gravel
  0  2  0  0 18  0  0  0  0	90.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  2  0  2  0  0 16  0  0	80.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  0  0  0  0 20	100.0%		Trees

overall_acc:	0.8222222222222222
κ =		0.7999999999999999
sensitivities:	[0.9, 0.65, 0.6, 0.55, 0.9, 1.0, 0.8, 1.0, 1.0]
specificities:	[0.9625, 0.96875, 0.99375, 0.95625, 0.975, 0.99375, 0.95, 1.0, 1.0]
PPVs:		[0.75, 0.7222222222222222, 0.9230769230769231, 0.6111111111111112, 0.8181818181818182, 0.9523809523809523, 0.6666666666666666, 1.0, 1.0]
NPVs:		[0.9871794871794872, 0.9567901234567902, 0.9520958083832335, 0.9444444444444444, 0.9873417721518988, 1.0, 0.9743589743589743, 1.0, 1.0]
F1s:		[0.8181818181818182, 0.6842105263157895, 0.7272727272727273, 0.5789473684210527, 0.8571428571428571, 0.975609756097561, 0.7272727272727273, 1.0, 1.0]
accuracies:	[0.9555555555555556, 0.9333333333333333, 0.95, 0.9111111111111111, 0.9666666666666667, 0.9944444444444445, 0.9333333333333333, 1.0, 1.0]
mean_accuracy:	0.9604938271604938
Dataset_slice = (900) -> [19, 131, 215, 348, 496, 545, 639, 707, 847, 50, 123, 292, 322, 459, 579, 650, 796, 817, 6, 121, 285, 331, 464, 513, 654, 769, 869, 53, 110, 205, 315, 435, 505, 680, 790, 891, 51, 109, 209, 311, 473, 521, 694, 780, 806, 80, 124, 226, 364, 462, 528, 612, 795, 802, 76, 158, 287, 370, 471, 541, 626, 745, 853, 54, 114, 245, 399, 458, 519, 633, 713, 855, 24, 151, 225, 332, 409, 527, 630, 735, 837, 38, 128, 231, 316, 429, 518, 664, 734, 820, 86, 191, 265, 391, 487, 566, 666, 747, 823, 56, 141, 221, 356, 402, 555, 615, 758, 873, 28, 200, 232, 346, 467, 520, 646, 715, 825, 100, 140, 259, 325, 420, 595, 602, 753, 838, 21, 171, 206, 379, 454, 589, 644, 789, 842, 46, 184, 222, 395, 468, 560, 659, 725, 859, 74, 146, 214, 343, 418, 540, 698, 775, 826, 79, 143, 237, 320, 448, 558, 641, 732, 815, 98, 188, 201, 390, 442, 600, 691, 736, 899, 83, 186, 235, 338, 484, 503, 604, 702, 892, 10, 119, 286, 398, 422, 547, 687, 712, 818, 52, 167, 293, 396, 449, 544, 672, 711, 894, 42, 176, 202, 326, 476, 509, 619, 727, 821, 62, 154, 269, 304, 461, 561, 608, 720, 868, 45, 144, 278, 334, 417, 597, 670, 762, 878, 33, 163, 250, 333, 474, 534, 658, 717, 877, 90, 134, 256, 388, 431, 549, 631, 768, 890, 77, 172, 271, 367, 450, 584, 673, 729, 871, 75, 189, 233, 387, 405, 573, 656, 756, 870, 47, 182, 247, 312, 432, 501, 651, 787, 884, 37, 137, 299, 340, 440, 568, 649, 774, 897, 59, 125, 273, 345, 411, 506, 605, 766, 887, 78, 149, 229, 305, 480, 529, 662, 794, 813, 82, 102, 243, 374, 407, 533, 647, 786, 885, 34, 104, 253, 329, 427, 585, 616, 792, 808, 67, 108, 224, 335, 408, 526, 613, 785, 811, 44, 198, 261, 357, 452, 569, 653, 741, 860, 89, 180, 279, 363, 414, 580, 634, 708, 846, 68, 105, 267, 306, 413, 557, 618, 743, 832, 85, 166, 274, 365, 447, 542, 700, 760, 814, 26, 145, 220, 369, 404, 578, 628, 746, 841, 39, 142, 227, 376, 428, 590, 606, 750, 900, 99, 193, 264, 321, 483, 512, 665, 777, 845, 20, 147, 272, 381, 481, 572, 648, 754, 812, 9, 130, 204, 301, 424, 565, 693, 783, 819, 7, 156, 257, 344, 438, 570, 622, 731, 840, 12, 199, 230, 336, 466, 571, 669, 718, 805, 41, 132, 289, 337, 415, 593, 638, 776, 810, 16, 170, 262, 373, 444, 543, 635, 703, 801, 58, 196, 210, 347, 433, 551, 627, 752, 861, 31, 107, 260, 383, 477, 535, 632, 740, 822, 92, 164, 254, 355, 463, 502, 620, 791, 831, 97, 174, 298, 397, 478, 508, 686, 751, 809, 88, 106, 219, 317, 446, 531, 617, 749, 850, 27, 115, 248, 360, 470, 515, 677, 701, 844, 32, 153, 291, 330, 489, 582, 689, 799, 864, 63, 185, 251, 362, 500, 524, 671, 716, 874, 22, 160, 207, 352, 401, 577, 697, 764, 839, 55, 152, 283, 353, 485, 525, 674, 757, 830, 96, 169, 280, 389, 403, 586, 601, 719, 872, 70, 173, 255, 366, 493, 550, 690, 730, 862, 43, 127, 300, 339, 451, 507, 692, 797, 816, 72, 155, 236, 400, 492, 539, 603, 767, 851, 84, 168, 203, 324, 455, 564, 642, 798, 879, 69, 187, 239, 378, 419, 546, 609, 748, 881, 4, 139, 268, 368, 498, 598, 699, 781, 896, 15, 111, 241, 319, 479, 536, 667, 726, 804, 93, 175, 294, 302, 439, 548, 684, 765, 866, 17, 122, 297, 307, 421, 538, 652, 782, 848, 48, 190, 295, 318, 456, 594, 679, 788, 898, 57, 138, 208, 354, 488, 563, 621, 763, 835, 49, 183, 281, 385, 469, 517, 668, 724, 824, 66, 195, 258, 372, 472, 583, 695, 784, 865, 61, 118, 266, 351, 425, 599, 645, 733, 854, 94, 116, 277, 349, 475, 537, 683, 771, 803, 8, 135, 213, 375, 457, 504, 663, 759, 829, 29, 197, 263, 394, 441, 588, 682, 737, 883, 91, 117, 290, 342, 494, 567, 655, 755, 888, 64, 113, 284, 380, 445, 514, 675, 761, 827, 30, 181, 282, 303, 486, 581, 610, 742, 882, 40, 179, 296, 350, 430, 552, 678, 704, 807, 5, 157, 223, 384, 453, 522, 625, 706, 856, 18, 161, 270, 314, 499, 576, 623, 723, 857, 87, 177, 275, 308, 443, 554, 624, 800, 875, 73, 129, 242, 382, 490, 574, 640, 705, 889, 60, 136, 212, 358, 416, 523, 676, 710, 876, 71, 148, 238, 393, 434, 511, 685, 778, 834, 81, 150, 228, 371, 437, 510, 643, 728, 893, 23, 178, 276, 328, 497, 556, 657, 709, 833, 95, 101, 252, 392, 410, 591, 661, 773, 867, 3, 165, 246, 323, 460, 530, 614, 779, 863, 36, 133, 217, 361, 423, 559, 637, 772, 858, 35, 126, 218, 386, 491, 562, 688, 793, 886, 2, 103, 216, 359, 436, 532, 607, 714, 836, 13, 162, 240, 309, 412, 553, 660, 722, 852, 14, 192, 288, 341, 406, 587, 611, 744, 828, 25, 159, 249, 310, 465, 592, 696, 721, 880, 11, 112, 211, 377, 495, 575, 681, 739, 895, 65, 120, 234, 313, 482, 596, 629, 770, 849, 1, 194, 244, 327, 426, 516, 636, 738, 843]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1019.01 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	814.75 MBs	(shape (3, 4, 3, 4, 720, 1030, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 14:30:32 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (464+256=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A99 ⫹₇₀ 16319), purity -1.6020067707466827
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (224+240=464 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A6 ⫺₇₀ 10721), purity -1.182360085982953
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (176+80=256 samples) on frame 1 with decision: {1} A9 ⫹ 6797, purity -0.6426543047775671
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (132+92=224 samples) on frame 1 with decision: {1} ⟨DR⟩ (A59 ⫹ 3587), purity -0.5672247813015707
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (88+88=176 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A16 ⫺ 12069), purity -0.5351103307238494
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+80=240 samples) on frame 1 with decision: {1} A2 ⫺₇₀ 21571, purity -0.6288989282193592
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (77+55=132 samples) on frame 1 with decision: {1} ⟨DR⟩ (A102 ⫹ 21630), purity -0.5603878183703044
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+10=88 samples) on frame 1 with decision: {1} ⟨PO⟩ (A72 ⫹ 13159), purity -0.20313881067453943
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+71=92 samples) on frame 1 with decision: {1} A73 ⫹ 17112, purity -0.1558811978120642
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (75+13=88 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A77 ⫺ 14982), purity -0.3444089451989872
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+144=160 samples) on frame 1 with decision: {1} A70 ⫹ 23146, purity -0.6182654189375915
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A1 ⫺ 10741, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+9=13 samples) on frame 1 with decision: {1} A1 ⫺₈₀ 9017, purity -0.21327605555690624
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+12=21 samples) on frame 1 with decision: {1} ⟨DR⟩ (A6 ⫹ 2745), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (67+10=77 samples) on frame 1 with decision: {1} ⟨DR⟩ (A33 ⫺ 14060), purity -0.38854367295122405
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+41=55 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A83 ⫺₆₀ 19976), purity -0.21773444214811621
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (53+22=75 samples) on frame 1 with decision: {1} ⟨PO⟩ (A1 ⫺ 12851), purity -0.2228005681659601
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (127+17=144 samples) on frame 1 with decision: {1} ⟨PO⟩ (A1 ⫺ 16101), purity -0.581199249485818
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+18=22 samples) on frame 1 with decision: {1} ⟨DR⟩ (A8 ⫺ 11444), purity -0.28540807841702615
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+4=14 samples) on frame 1 with decision: {1} A3 ⫹ 2319, purity -0.16066718417680237
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+50=67 samples) on frame 1 with decision: {1} A74 ⫺ 18529, purity -0.34481267827643625
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (71+56=127 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A17 ⫺ 14407), purity -0.4883998730760563
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+9=17 samples) on frame 1 with decision: {1} ⟨DR⟩ (A82 ⫺ 25088), purity -0.18467581544631115
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+4=18 samples) on frame 1 with decision: {1} A2 ⫹ 9185, purity -0.15403270679109896
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (44+27=71 samples) on frame 1 with decision: {1} ⟨PO⟩ (A2 ⫹₆₀ 10513), purity -0.47297292191178414
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A1 ⫺ 8937, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+11=27 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A2 ⫺₆₀ 11296), purity -0.2807074675275276
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+16=44 samples) on frame 1 with decision: {1} ⟨DR⟩ (A4 ⫹ 10800), purity -0.24920516628234843
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+5=11 samples) on frame 1 with decision: {1} A42 ⫺₈₀ 17112, purity -0.24576065938162073
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+9=16 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A11 ⫺₆₀ 13178), purity -0.29795973696993083
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A1 ⫹ 14328, purity -0.3080654135821979
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
539.952499 seconds (6.44 G allocations: 145.612 GiB, 18.28% gc time, 0.01% compilation time)
Train tree:
Decision Tree
Leaves: 32
Tot nodes: 63
Height: 10
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A99 ⫹₇₀ 16319)
✔ {1} A9 ⫹ 6797
│✔ Shadows : 80/80 (conf: 1.0)
│✘ {1} ⟨P̅P̅⟩ (A16 ⫺ 12069)
│ ✔ {1} ⟨PO⟩ (A72 ⫹ 13159)
│ │✔ {1} A1 ⫺ 10741
│ ││✔ Asphalt : 6/6 (conf: 1.0)
│ ││✘ Asphalt : 3/4 (conf: 0.75)
│ │✘ Bitumen : 75/78 (conf: 0.9615384615384616)
│ ✘ {1} ⟨P̅P̅⟩ (A77 ⫺ 14982)
│  ✔ {1} A1 ⫺₈₀ 9017
│  │✔ Gravel : 9/9 (conf: 1.0)
│  │✘ Bitumen : 2/4 (conf: 0.5)
│  ✘ {1} ⟨PO⟩ (A1 ⫺ 12851)
│   ✔ {1} ⟨DR⟩ (A8 ⫺ 11444)
│   │✔ {1} A2 ⫹ 9185
│   ││✔ Bitumen : 2/4 (conf: 0.5)
│   ││✘ Asphalt : 14/14 (conf: 1.0)
│   │✘ Gravel : 4/4 (conf: 1.0)
│   ✘ Asphalt : 53/53 (conf: 1.0)
✘ {1} ⟨P̅P̅⟩ (A6 ⫺₇₀ 10721)
 ✔ {1} A2 ⫺₇₀ 21571
 │✔ Painted metal sheets : 80/80 (conf: 1.0)
 │✘ {1} A70 ⫹ 23146
 │ ✔ {1} ⟨PO⟩ (A1 ⫺ 16101)
 │ │✔ Gravel : 17/17 (conf: 1.0)
 │ │✘ {1} ⟨P̅P̅⟩ (A17 ⫺ 14407)
 │ │ ✔ Self-Blocking Bricks : 52/56 (conf: 0.9285714285714286)
 │ │ ✘ {1} ⟨PO⟩ (A2 ⫹₆₀ 10513)
 │ │  ✔ {1} ⟨P̅P̅⟩ (A2 ⫺₆₀ 11296)
 │ │  │✔ {1} A42 ⫺₈₀ 17112
 │ │  ││✔ Gravel : 5/5 (conf: 1.0)
 │ │  ││✘ Self-Blocking Bricks : 5/6 (conf: 0.8333333333333334)
 │ │  │✘ Self-Blocking Bricks : 16/16 (conf: 1.0)
 │ │  ✘ {1} ⟨DR⟩ (A4 ⫹ 10800)
 │ │   ✔ {1} ⟨P̅P̅⟩ (A11 ⫺₆₀ 13178)
 │ │   │✔ {1} A1 ⫹ 14328
 │ │   ││✔ Self-Blocking Bricks : 2/4 (conf: 0.5)
 │ │   ││✘ Self-Blocking Bricks : 5/5 (conf: 1.0)
 │ │   │✘ Gravel : 7/7 (conf: 1.0)
 │ │   ✘ Gravel : 28/28 (conf: 1.0)
 │ ✘ Bare Soil : 16/16 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A59 ⫹ 3587)
  ✔ {1} A73 ⫹ 17112
  │✔ Trees : 71/71 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A6 ⫹ 2745)
  │ ✔ Meadows : 12/12 (conf: 1.0)
  │ ✘ Trees : 9/9 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A102 ⫹ 21630)
   ✔ {1} ⟨P̅P̅⟩ (A83 ⫺₆₀ 19976)
   │✔ Bare Soil : 40/41 (conf: 0.975609756097561)
   │✘ {1} A3 ⫹ 2319
   │ ✔ Bare Soil : 3/4 (conf: 0.75)
   │ ✘ Meadows : 10/10 (conf: 1.0)
   ✘ {1} ⟨DR⟩ (A33 ⫺ 14060)
    ✔ Bare Soil : 10/10 (conf: 1.0)
    ✘ {1} A74 ⫺ 18529
     ✔ Meadows : 47/50 (conf: 0.94)
     ✘ {1} ⟨DR⟩ (A82 ⫺ 25088)
      ✔ {1} A1 ⫺ 8937
      │✔ Bare Soil : 3/4 (conf: 0.75)
      │✘ Bare Soil : 5/5 (conf: 1.0)
      ✘ Meadows : 8/8 (conf: 1.0)
● [ 01/07/2021 14:39:31 ] Saving tree to file ./gandalf/trees/tree_a70c981d3273f6d41ce4a9220d772333c63079b6d5f21c598e0ae59cc1f8afd2.jld...
Test tree:
Decision Tree
Leaves: 32
Tot nodes: 63
Height: 10
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A99 ⫹₇₀ 16319)
✔ {1} A9 ⫹ 6797
│✔ Shadows : 19/19 (conf: 1.0)
│✘ {1} ⟨P̅P̅⟩ (A16 ⫺ 12069)
│ ✔ {1} ⟨PO⟩ (A72 ⫹ 13159)
│ │✔ {1} A1 ⫺ 10741
│ ││✔ Asphalt : 1/2 (conf: 0.5)
│ ││✘ Asphalt : 1/1 (conf: 1.0)
│ │✘ Bitumen : 19/21 (conf: 0.9047619047619048)
│ ✘ {1} ⟨P̅P̅⟩ (A77 ⫺ 14982)
│  ✔ {1} A1 ⫺₈₀ 9017
│  │✔ Gravel : 3/3 (conf: 1.0)
│  │✘ Bitumen : 0/1 (conf: 0.0)
│  ✘ {1} ⟨PO⟩ (A1 ⫺ 12851)
│   ✔ {1} ⟨DR⟩ (A8 ⫺ 11444)
│   │✔ {1} A2 ⫹ 9185
│   ││✔ Bitumen : 0/1 (conf: 0.0)
│   ││✘ Asphalt : 3/4 (conf: 0.75)
│   │✘ Gravel : 0/1 (conf: 0.0)
│   ✘ Asphalt : 10/12 (conf: 0.8333333333333334)
✘ {1} ⟨P̅P̅⟩ (A6 ⫺₇₀ 10721)
 ✔ {1} A2 ⫺₇₀ 21571
 │✔ Painted metal sheets : 19/20 (conf: 0.95)
 │✘ {1} A70 ⫹ 23146
 │ ✔ {1} ⟨PO⟩ (A1 ⫺ 16101)
 │ │✔ Gravel : 3/8 (conf: 0.375)
 │ │✘ {1} ⟨P̅P̅⟩ (A17 ⫺ 14407)
 │ │ ✔ Self-Blocking Bricks : 11/14 (conf: 0.7857142857142857)
 │ │ ✘ {1} ⟨PO⟩ (A2 ⫹₆₀ 10513)
 │ │  ✔ {1} ⟨P̅P̅⟩ (A2 ⫺₆₀ 11296)
 │ │  │✔ {1} A42 ⫺₈₀ 17112
 │ │  ││✔ Gravel : 1/1 (conf: 1.0)
 │ │  ││✘ Self-Blocking Bricks : 0/0 (conf: NaN)
 │ │  │✘ Self-Blocking Bricks : 2/4 (conf: 0.5)
 │ │  ✘ {1} ⟨DR⟩ (A4 ⫹ 10800)
 │ │   ✔ {1} ⟨P̅P̅⟩ (A11 ⫺₆₀ 13178)
 │ │   │✔ {1} A1 ⫹ 14328
 │ │   ││✔ Self-Blocking Bricks : 0/0 (conf: NaN)
 │ │   ││✘ Self-Blocking Bricks : 1/2 (conf: 0.5)
 │ │   │✘ Gravel : 0/0 (conf: NaN)
 │ │   ✘ Gravel : 7/8 (conf: 0.875)
 │ ✘ Bare Soil : 3/3 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A59 ⫹ 3587)
  ✔ {1} A73 ⫹ 17112
  │✔ Trees : 17/17 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A6 ⫹ 2745)
  │ ✔ Meadows : 3/4 (conf: 0.75)
  │ ✘ Trees : 0/2 (conf: 0.0)
  ✘ {1} ⟨DR⟩ (A102 ⫹ 21630)
   ✔ {1} ⟨P̅P̅⟩ (A83 ⫺₆₀ 19976)
   │✔ Bare Soil : 6/7 (conf: 0.8571428571428571)
   │✘ {1} A3 ⫹ 2319
   │ ✔ Bare Soil : 0/0 (conf: NaN)
   │ ✘ Meadows : 2/3 (conf: 0.6666666666666666)
   ✘ {1} ⟨DR⟩ (A33 ⫺ 14060)
    ✔ Bare Soil : 7/7 (conf: 1.0)
    ✘ {1} A74 ⫺ 18529
     ✔ Meadows : 8/11 (conf: 0.7272727272727273)
     ✘ {1} ⟨DR⟩ (A82 ⫺ 25088)
      ✔ {1} A1 ⫺ 8937
      │✔ Bare Soil : 0/1 (conf: 0.0)
      │✘ Bare Soil : 0/0 (conf: NaN)
      ✘ Meadows : 3/3 (conf: 1.0)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	82.78%	75.0%	80.0%	95.0%	70.0%	80.0%	95.0%	70.0%	95.0%	85.0%	78.95%	88.89%	82.61%	66.67%	76.19%	95.0%	70.0%	100.0%	89.47%	||	80.62%	[76.92, 84.21, 88.37, 68.29, 78.05, 95.0, 70.0, 97.44, 87.18]%	
  accuracy: 82.78% kappa: 80.62% 
 15  0  4  1  0  0  0  0  0	75.0%		Asphalt
  0 16  0  0  3  1  0  0  0	80.0%		Bare Soil
  1  0 19  0  0  0  0  0  0	95.0%		Bitumen
  1  0  0 14  0  0  5  0  0	70.0%		Gravel
  0  2  0  0 16  0  0  0  2	80.0%		Meadows
  1  0  0  0  0 19  0  0  0	95.0%		Painted metal sheets
  0  0  0  6  0  0 14  0  0	70.0%		Self-Blocking Bricks
  1  0  0  0  0  0  0 19  0	95.0%		Shadows
  0  0  0  0  2  0  1  0 17	85.0%		Trees

overall_acc:	0.8277777777777777
κ =		0.8062499999999999
sensitivities:	[0.75, 0.8, 0.95, 0.7, 0.8, 0.95, 0.7, 0.95, 0.85]
specificities:	[0.975, 0.9875, 0.975, 0.95625, 0.96875, 0.99375, 0.9625, 1.0, 0.9875]
PPVs:		[0.7894736842105263, 0.8888888888888888, 0.8260869565217391, 0.6666666666666666, 0.7619047619047619, 0.95, 0.7, 1.0, 0.8947368421052632]
NPVs:		[0.968944099378882, 0.9753086419753086, 0.9936305732484076, 0.9622641509433962, 0.9748427672955975, 0.99375, 0.9625, 0.9937888198757764, 0.9813664596273292]
F1s:		[0.7692307692307693, 0.8421052631578947, 0.8837209302325582, 0.6829268292682927, 0.7804878048780488, 0.95, 0.7, 0.9743589743589743, 0.8717948717948718]
accuracies:	[0.95, 0.9666666666666667, 0.9722222222222222, 0.9277777777777778, 0.95, 0.9888888888888889, 0.9333333333333333, 0.9944444444444445, 0.9722222222222222]
mean_accuracy:	0.9617283950617284
Dataset_slice = (900) -> [69, 125, 224, 361, 493, 514, 611, 763, 813, 56, 174, 287, 365, 435, 502, 659, 726, 860, 62, 169, 286, 356, 466, 569, 685, 738, 880, 91, 135, 227, 360, 414, 522, 653, 796, 867, 63, 180, 272, 321, 443, 562, 623, 795, 824, 66, 141, 201, 312, 426, 509, 652, 718, 802, 98, 175, 260, 368, 409, 518, 684, 749, 859, 32, 187, 210, 383, 490, 549, 636, 725, 854, 41, 185, 278, 364, 500, 551, 617, 750, 833, 100, 165, 256, 334, 417, 567, 681, 703, 830, 48, 101, 289, 351, 477, 597, 674, 791, 865, 95, 137, 246, 338, 464, 563, 682, 733, 853, 38, 149, 277, 328, 480, 578, 610, 770, 866, 57, 146, 293, 341, 412, 552, 648, 772, 851, 14, 176, 298, 390, 442, 594, 666, 727, 846, 22, 126, 218, 309, 441, 582, 655, 769, 808, 1, 120, 266, 344, 405, 592, 619, 793, 884, 93, 168, 254, 381, 419, 556, 697, 730, 826, 37, 123, 225, 313, 453, 533, 688, 728, 823, 54, 138, 204, 315, 437, 568, 643, 768, 875, 49, 156, 203, 335, 402, 507, 698, 706, 856, 58, 164, 257, 343, 440, 577, 612, 731, 845, 15, 155, 234, 394, 489, 542, 640, 775, 816, 60, 186, 285, 306, 423, 583, 637, 709, 810, 71, 107, 291, 348, 459, 513, 650, 777, 818, 85, 160, 283, 353, 496, 547, 687, 754, 861, 77, 178, 247, 316, 469, 544, 606, 741, 838, 25, 189, 237, 387, 495, 599, 692, 797, 828, 45, 182, 292, 373, 482, 584, 634, 788, 888, 39, 117, 250, 392, 456, 520, 660, 761, 894, 83, 162, 274, 346, 421, 576, 677, 739, 827, 44, 194, 231, 366, 448, 527, 691, 762, 897, 35, 112, 219, 333, 497, 560, 646, 740, 850, 28, 106, 236, 311, 468, 600, 662, 702, 852, 51, 119, 261, 310, 431, 516, 647, 737, 849, 96, 114, 273, 347, 465, 536, 670, 720, 863, 78, 163, 251, 352, 404, 538, 608, 779, 809, 2, 129, 213, 359, 403, 591, 624, 715, 848, 26, 183, 288, 308, 454, 598, 663, 701, 892, 19, 113, 282, 400, 401, 540, 625, 756, 882, 5, 111, 252, 302, 473, 566, 671, 743, 868, 10, 108, 211, 393, 427, 581, 621, 707, 893, 55, 152, 235, 342, 470, 541, 695, 717, 811, 65, 148, 276, 327, 428, 511, 673, 705, 855, 99, 136, 233, 304, 472, 546, 632, 708, 891, 6, 184, 230, 332, 413, 517, 633, 800, 812, 23, 131, 244, 330, 452, 515, 616, 766, 878, 7, 199, 240, 322, 422, 529, 627, 721, 819, 74, 142, 214, 319, 467, 505, 607, 746, 887, 86, 128, 264, 399, 494, 559, 602, 716, 847, 75, 200, 212, 389, 449, 573, 700, 755, 840, 42, 122, 300, 388, 418, 561, 622, 748, 843, 9, 150, 259, 339, 491, 510, 639, 759, 889, 11, 170, 296, 382, 484, 554, 630, 764, 805, 80, 140, 208, 374, 457, 596, 690, 751, 831, 73, 130, 239, 354, 458, 595, 631, 757, 806, 16, 134, 294, 370, 475, 519, 686, 790, 862, 31, 177, 202, 336, 432, 580, 613, 745, 872, 89, 151, 275, 317, 438, 572, 699, 712, 834, 13, 104, 243, 391, 479, 504, 680, 742, 890, 72, 144, 262, 375, 436, 548, 672, 781, 877, 84, 173, 258, 320, 451, 575, 693, 799, 836, 64, 109, 221, 350, 474, 555, 669, 744, 801, 97, 102, 228, 325, 408, 508, 683, 735, 898, 61, 118, 248, 378, 487, 553, 651, 794, 815, 59, 172, 279, 395, 434, 545, 696, 776, 817, 40, 132, 241, 358, 406, 574, 667, 753, 803, 43, 171, 217, 380, 425, 526, 679, 734, 820, 20, 124, 215, 385, 486, 501, 678, 722, 807, 30, 105, 269, 355, 445, 558, 614, 786, 825, 53, 195, 280, 369, 463, 550, 668, 771, 839, 12, 157, 297, 377, 439, 565, 644, 719, 857, 50, 159, 238, 345, 499, 589, 676, 704, 873, 34, 193, 284, 398, 424, 579, 661, 732, 870, 81, 115, 253, 397, 416, 570, 664, 724, 844, 67, 166, 222, 372, 450, 585, 649, 774, 804, 24, 127, 281, 371, 481, 524, 615, 729, 841, 4, 145, 263, 384, 492, 539, 641, 783, 871, 68, 154, 265, 324, 410, 503, 605, 765, 885, 90, 139, 255, 349, 462, 534, 665, 758, 821, 3, 143, 249, 357, 455, 506, 654, 711, 837, 52, 181, 220, 305, 420, 523, 628, 780, 883, 94, 188, 229, 329, 483, 543, 642, 785, 822, 29, 153, 270, 303, 446, 535, 626, 767, 832, 36, 179, 226, 307, 433, 564, 694, 747, 829, 82, 158, 209, 314, 478, 530, 620, 773, 900, 27, 190, 245, 318, 485, 521, 609, 760, 895, 70, 197, 206, 376, 476, 537, 657, 714, 899, 92, 196, 271, 363, 415, 532, 656, 723, 835, 76, 191, 295, 331, 447, 571, 601, 782, 858, 21, 110, 268, 337, 498, 557, 638, 792, 842, 17, 167, 242, 396, 407, 588, 629, 713, 881, 46, 192, 290, 301, 429, 531, 635, 784, 864, 18, 161, 216, 362, 430, 525, 689, 736, 814, 87, 103, 267, 379, 471, 590, 675, 789, 879, 8, 147, 232, 323, 411, 593, 604, 752, 874, 47, 198, 223, 326, 444, 586, 645, 798, 869, 33, 133, 207, 386, 488, 512, 658, 787, 896, 88, 121, 299, 340, 460, 528, 618, 778, 886, 79, 116, 205, 367, 461, 587, 603, 710, 876]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1019.01 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	814.75 MBs	(shape (3, 4, 3, 4, 720, 1030, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 14:39:38 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (461+259=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A101 ⫹₆₀ 16042), purity -1.6106731201728337
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (222+239=461 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A20 ⫺₈₀ 12614), purity -1.1878634265356371
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (178+81=259 samples) on frame 1 with decision: {1} ⟨DR⟩ (A56 ⫹ 5678), purity -0.6741110792146573
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (124+98=222 samples) on frame 1 with decision: {1} ⟨DR⟩ (A66 ⫹ 5400), purity -0.5976947787527382
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (88+90=178 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A16 ⫺ 12069), purity -0.5678889028225562
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+79=239 samples) on frame 1 with decision: {1} A3 ⫺₇₀ 22730, purity -0.6424964692409002
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (103+21=124 samples) on frame 1 with decision: {1} ⟨DR⟩ (A30 ⫺ 13426), purity -0.5583733804837114
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+71=90 samples) on frame 1 with decision: {1} A5 ⫹₈₀ 13198, purity -0.22922787019795893
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+66=88 samples) on frame 1 with decision: {1} ⟨DR⟩ (A42 ⫹ 12217), purity -0.37613281156102985
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+71=98 samples) on frame 1 with decision: {1} A73 ⫹ 17112, purity -0.17536614840775466
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+142=160 samples) on frame 1 with decision: {1} A70 ⫹ 23146, purity -0.6080186220792057
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+12=19 samples) on frame 1 with decision: {1} ⟨PO⟩ (A60 ⫹₇₀ 14377), purity -0.15109548568520328
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+6=22 samples) on frame 1 with decision: {1} A11 ⫺₇₀ 11543, purity 6.055761952500853e-17
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+9=27 samples) on frame 1 with decision: {1} ⟨DR⟩ (A25 ⫺ 7104), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (59+44=103 samples) on frame 1 with decision: {1} ⟨DR⟩ (A102 ⫹ 21630), purity -0.5199617724217502
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (56+10=66 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A59 ⫺₈₀ 13585), purity -0.1779770630829547
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (73+69=142 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A16 ⫹₈₀ 14367), purity -0.5333664264944853
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A85 ⫹ 15576, purity 1.3322676295501878e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+38=59 samples) on frame 1 with decision: {1} ⟨DR⟩ (A98 ⫹ 25376), purity -0.3711982517755337
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+31=44 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A83 ⫺₈₀ 19966), purity -0.2953847543956796
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (57+12=69 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A2 ⫹₈₀ 11425), purity -0.3350608018218839
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (26+47=73 samples) on frame 1 with decision: {1} A2 ⫹₆₀ 12851, purity -0.3121131591556614
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+4=13 samples) on frame 1 with decision: {1} A1 ⫹ 3864, purity -0.21327605555690624
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+18=26 samples) on frame 1 with decision: {1} A16 ⫺ 15120, purity -0.3667196762706838
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+21=38 samples) on frame 1 with decision: {1} ⟨DR⟩ (A83 ⫺ 25118), purity -0.38242821740708804
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+34=57 samples) on frame 1 with decision: {1} A30 ⫺ 15675, purity -0.26070318625260724
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+5=18 samples) on frame 1 with decision: {1} ⟨DR⟩ (A2 ⫺ 16775), purity -0.1390006732050522
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+5=23 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A12 ⫺₈₀ 12871), purity -0.35261311998232536
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+12=21 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A3 ⫹ 5569), purity -0.40696301757061615
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A1 ⫺ 7729, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+4=12 samples) on frame 1 with decision: {1} A1 ⫺ 8383, purity -0.23104906018664842
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+5=18 samples) on frame 1 with decision: {1} ⟨PP⟩ (A13 ⫹ 11008), purity -0.186947685280349
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
519.254485 seconds (6.42 G allocations: 145.701 GiB, 19.87% gc time, 0.01% compilation time)
Train tree:
Decision Tree
Leaves: 33
Tot nodes: 65
Height: 9
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A101 ⫹₆₀ 16042)
✔ {1} ⟨DR⟩ (A56 ⫹ 5678)
│✔ Shadows : 80/81 (conf: 0.9876543209876543)
│✘ {1} ⟨P̅P̅⟩ (A16 ⫺ 12069)
│ ✔ {1} A5 ⫹₈₀ 13198
│ │✔ Bitumen : 70/71 (conf: 0.9859154929577465)
│ │✘ {1} ⟨PO⟩ (A60 ⫹₇₀ 14377)
│ │ ✔ Asphalt : 12/12 (conf: 1.0)
│ │ ✘ Bitumen : 6/7 (conf: 0.8571428571428571)
│ ✘ {1} ⟨DR⟩ (A42 ⫹ 12217)
│  ✔ {1} ⟨P̅P̅⟩ (A59 ⫺₈₀ 13585)
│  │✔ {1} A85 ⫹ 15576
│  ││✔ Bitumen : 4/4 (conf: 1.0)
│  ││✘ Asphalt : 6/6 (conf: 1.0)
│  │✘ Asphalt : 55/56 (conf: 0.9821428571428571)
│  ✘ {1} A11 ⫺₇₀ 11543
│   ✔ Asphalt : 6/6 (conf: 1.0)
│   ✘ Gravel : 16/16 (conf: 1.0)
✘ {1} ⟨P̅P̅⟩ (A20 ⫺₈₀ 12614)
 ✔ {1} A3 ⫺₇₀ 22730
 │✔ Painted metal sheets : 79/79 (conf: 1.0)
 │✘ {1} A70 ⫹ 23146
 │ ✔ {1} ⟨P̅P̅⟩ (A16 ⫹₈₀ 14367)
 │ │✔ {1} ⟨P̅P̅⟩ (A2 ⫹₈₀ 11425)
 │ ││✔ Self-Blocking Bricks : 12/12 (conf: 1.0)
 │ ││✘ {1} A30 ⫺ 15675
 │ ││ ✔ Gravel : 34/34 (conf: 1.0)
 │ ││ ✘ {1} ⟨P̅P̅⟩ (A12 ⫺₈₀ 12871)
 │ ││  ✔ Self-Blocking Bricks : 5/5 (conf: 1.0)
 │ ││  ✘ {1} ⟨PP⟩ (A13 ⫹ 11008)
 │ ││   ✔ Self-Blocking Bricks : 3/5 (conf: 0.6)
 │ ││   ✘ Gravel : 13/13 (conf: 1.0)
 │ │✘ {1} A2 ⫹₆₀ 12851
 │ │ ✔ Self-Blocking Bricks : 46/47 (conf: 0.9787234042553191)
 │ │ ✘ {1} A16 ⫺ 15120
 │ │  ✔ {1} ⟨DR⟩ (A2 ⫺ 16775)
 │ │  │✔ Gravel : 4/5 (conf: 0.8)
 │ │  │✘ Self-Blocking Bricks : 13/13 (conf: 1.0)
 │ │  ✘ Gravel : 8/8 (conf: 1.0)
 │ ✘ Bare Soil : 18/18 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5400)
  ✔ {1} A73 ⫹ 17112
  │✔ Trees : 71/71 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A25 ⫺ 7104)
  │ ✔ Trees : 9/9 (conf: 1.0)
  │ ✘ Meadows : 18/18 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A30 ⫺ 13426)
   ✔ Bare Soil : 21/21 (conf: 1.0)
   ✘ {1} ⟨DR⟩ (A102 ⫹ 21630)
    ✔ {1} ⟨P̅P̅⟩ (A83 ⫺₈₀ 19966)
    │✔ Bare Soil : 29/31 (conf: 0.9354838709677419)
    │✘ {1} A1 ⫹ 3864
    │ ✔ Bare Soil : 2/4 (conf: 0.5)
    │ ✘ Meadows : 9/9 (conf: 1.0)
    ✘ {1} ⟨DR⟩ (A98 ⫹ 25376)
     ✔ {1} ⟨DR⟩ (A83 ⫺ 25118)
     │✔ {1} ⟨P̅P̅⟩ (A3 ⫹ 5569)
     ││✔ {1} A1 ⫺ 8383
     │││✔ Bare Soil : 2/4 (conf: 0.5)
     │││✘ Meadows : 8/8 (conf: 1.0)
     ││✘ {1} A1 ⫺ 7729
     ││ ✔ Bare Soil : 5/5 (conf: 1.0)
     ││ ✘ Bare Soil : 3/4 (conf: 0.75)
     │✘ Meadows : 17/17 (conf: 1.0)
     ✘ Meadows : 21/21 (conf: 1.0)
● [ 01/07/2021 14:48:18 ] Saving tree to file ./gandalf/trees/tree_ff41cf9d8144b5a839f04b503d3761b63efbf9a237e2f8a832a52e0c62bc3209.jld...
Test tree:
Decision Tree
Leaves: 33
Tot nodes: 65
Height: 9
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A101 ⫹₆₀ 16042)
✔ {1} ⟨DR⟩ (A56 ⫹ 5678)
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} ⟨P̅P̅⟩ (A16 ⫺ 12069)
│ ✔ {1} A5 ⫹₈₀ 13198
│ │✔ Bitumen : 16/16 (conf: 1.0)
│ │✘ {1} ⟨PO⟩ (A60 ⫹₇₀ 14377)
│ │ ✔ Asphalt : 1/1 (conf: 1.0)
│ │ ✘ Bitumen : 2/2 (conf: 1.0)
│ ✘ {1} ⟨DR⟩ (A42 ⫹ 12217)
│  ✔ {1} ⟨P̅P̅⟩ (A59 ⫺₈₀ 13585)
│  │✔ {1} A85 ⫹ 15576
│  ││✔ Bitumen : 0/0 (conf: NaN)
│  ││✘ Asphalt : 2/2 (conf: 1.0)
│  │✘ Asphalt : 17/17 (conf: 1.0)
│  ✘ {1} A11 ⫺₇₀ 11543
│   ✔ Asphalt : 0/1 (conf: 0.0)
│   ✘ Gravel : 1/1 (conf: 1.0)
✘ {1} ⟨P̅P̅⟩ (A20 ⫺₈₀ 12614)
 ✔ {1} A3 ⫺₇₀ 22730
 │✔ Painted metal sheets : 20/20 (conf: 1.0)
 │✘ {1} A70 ⫹ 23146
 │ ✔ {1} ⟨P̅P̅⟩ (A16 ⫹₈₀ 14367)
 │ │✔ {1} ⟨P̅P̅⟩ (A2 ⫹₈₀ 11425)
 │ ││✔ Self-Blocking Bricks : 0/3 (conf: 0.0)
 │ ││✘ {1} A30 ⫺ 15675
 │ ││ ✔ Gravel : 4/7 (conf: 0.5714285714285714)
 │ ││ ✘ {1} ⟨P̅P̅⟩ (A12 ⫺₈₀ 12871)
 │ ││  ✔ Self-Blocking Bricks : 2/5 (conf: 0.4)
 │ ││  ✘ {1} ⟨PP⟩ (A13 ⫹ 11008)
 │ ││   ✔ Self-Blocking Bricks : 2/2 (conf: 1.0)
 │ ││   ✘ Gravel : 2/3 (conf: 0.6666666666666666)
 │ │✘ {1} A2 ⫹₆₀ 12851
 │ │ ✔ Self-Blocking Bricks : 9/11 (conf: 0.8181818181818182)
 │ │ ✘ {1} A16 ⫺ 15120
 │ │  ✔ {1} ⟨DR⟩ (A2 ⫺ 16775)
 │ │  │✔ Gravel : 3/4 (conf: 0.75)
 │ │  │✘ Self-Blocking Bricks : 1/2 (conf: 0.5)
 │ │  ✘ Gravel : 2/2 (conf: 1.0)
 │ ✘ Bare Soil : 3/3 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5400)
  ✔ {1} A73 ⫹ 17112
  │✔ Trees : 18/18 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A25 ⫺ 7104)
  │ ✔ Trees : 1/1 (conf: 1.0)
  │ ✘ Meadows : 1/2 (conf: 0.5)
  ✘ {1} ⟨DR⟩ (A30 ⫺ 13426)
   ✔ Bare Soil : 4/5 (conf: 0.8)
   ✘ {1} ⟨DR⟩ (A102 ⫹ 21630)
    ✔ {1} ⟨P̅P̅⟩ (A83 ⫺₈₀ 19966)
    │✔ Bare Soil : 6/6 (conf: 1.0)
    │✘ {1} A1 ⫹ 3864
    │ ✔ Bare Soil : 2/3 (conf: 0.6666666666666666)
    │ ✘ Meadows : 1/2 (conf: 0.5)
    ✘ {1} ⟨DR⟩ (A98 ⫹ 25376)
     ✔ {1} ⟨DR⟩ (A83 ⫺ 25118)
     │✔ {1} ⟨P̅P̅⟩ (A3 ⫹ 5569)
     ││✔ {1} A1 ⫺ 8383
     │││✔ Bare Soil : 0/0 (conf: NaN)
     │││✘ Meadows : 3/4 (conf: 0.75)
     ││✘ {1} A1 ⫺ 7729
     ││ ✔ Bare Soil : 2/3 (conf: 0.6666666666666666)
     ││ ✘ Bare Soil : 0/0 (conf: NaN)
     │✘ Meadows : 4/4 (conf: 1.0)
     ✘ Meadows : 9/10 (conf: 0.9)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	87.78%	100.0%	85.0%	90.0%	60.0%	90.0%	100.0%	70.0%	100.0%	95.0%	95.24%	85.0%	100.0%	70.59%	81.82%	100.0%	60.87%	100.0%	100.0%	||	86.25%	[97.56, 85.0, 94.74, 64.86, 85.71, 100.0, 65.12, 100.0, 97.44]%	
  accuracy: 87.78% kappa: 86.25% 
 20  0  0  0  0  0  0  0  0	100.0%		Asphalt
  0 17  0  0  3  0  0  0  0	85.0%		Bare Soil
  1  0 18  0  0  0  1  0  0	90.0%		Bitumen
  0  0  0 12  0  0  8  0  0	60.0%		Gravel
  0  2  0  0 18  0  0  0  0	90.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  1  0  5  0  0 14  0  0	70.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  1  0  0  0 19	95.0%		Trees

overall_acc:	0.8777777777777778
κ =		0.8624999999999999
sensitivities:	[1.0, 0.85, 0.9, 0.6, 0.9, 1.0, 0.7, 1.0, 0.95]
specificities:	[0.99375, 0.98125, 1.0, 0.96875, 0.975, 1.0, 0.94375, 1.0, 1.0]
PPVs:		[0.9523809523809523, 0.85, 1.0, 0.7058823529411765, 0.8181818181818182, 1.0, 0.6086956521739131, 1.0, 1.0]
NPVs:		[1.0, 0.98125, 0.9876543209876543, 0.950920245398773, 0.9873417721518988, 1.0, 0.9617834394904459, 1.0, 0.9937888198757764]
F1s:		[0.975609756097561, 0.85, 0.9473684210526315, 0.6486486486486487, 0.8571428571428571, 1.0, 0.6511627906976745, 1.0, 0.9743589743589743]
accuracies:	[0.9944444444444445, 0.9666666666666667, 0.9888888888888889, 0.9277777777777778, 0.9666666666666667, 1.0, 0.9166666666666666, 1.0, 0.9944444444444445]
mean_accuracy:	0.9728395061728397
Dataset_slice = (900) -> [60, 161, 270, 359, 480, 580, 608, 710, 877, 46, 140, 238, 345, 460, 561, 649, 741, 817, 23, 131, 243, 309, 470, 560, 652, 781, 844, 40, 121, 266, 306, 436, 558, 613, 770, 827, 68, 185, 240, 312, 488, 534, 694, 736, 860, 29, 183, 233, 332, 495, 531, 646, 744, 869, 53, 164, 208, 386, 441, 511, 603, 782, 826, 24, 154, 269, 393, 440, 551, 690, 788, 808, 83, 153, 226, 339, 425, 590, 651, 799, 833, 1, 112, 263, 302, 429, 515, 618, 776, 813, 47, 146, 273, 387, 432, 545, 602, 737, 893, 65, 110, 300, 341, 426, 529, 660, 756, 897, 98, 115, 209, 348, 419, 530, 679, 772, 874, 51, 176, 286, 395, 442, 516, 609, 775, 875, 6, 148, 212, 336, 452, 556, 654, 760, 855, 12, 103, 204, 303, 453, 600, 612, 758, 854, 45, 122, 237, 366, 420, 541, 673, 722, 819, 93, 167, 293, 368, 415, 521, 617, 707, 858, 80, 106, 241, 323, 496, 563, 662, 763, 811, 97, 193, 276, 365, 414, 592, 631, 748, 887, 5, 132, 232, 390, 444, 528, 674, 792, 888, 73, 124, 231, 358, 433, 504, 635, 764, 864, 85, 174, 265, 329, 462, 524, 686, 784, 816, 44, 134, 255, 322, 489, 578, 648, 732, 890, 18, 160, 258, 372, 493, 501, 611, 783, 837, 32, 188, 290, 394, 409, 554, 626, 745, 822, 62, 200, 206, 320, 473, 587, 675, 733, 883, 74, 111, 234, 360, 463, 514, 681, 761, 801, 49, 128, 289, 355, 406, 533, 671, 789, 840, 76, 191, 257, 381, 478, 566, 624, 729, 894, 88, 125, 274, 349, 424, 546, 698, 704, 802, 34, 101, 262, 318, 408, 573, 664, 780, 834, 2, 162, 246, 324, 486, 570, 639, 717, 857, 95, 105, 292, 337, 421, 595, 656, 778, 848, 36, 197, 207, 343, 492, 520, 622, 759, 810, 27, 147, 203, 362, 437, 577, 663, 752, 876, 35, 149, 202, 375, 411, 539, 685, 727, 803, 31, 170, 242, 374, 430, 571, 696, 779, 859, 7, 126, 247, 344, 500, 552, 620, 730, 870, 11, 184, 298, 338, 428, 532, 669, 734, 815, 52, 109, 282, 370, 456, 562, 684, 767, 831, 75, 142, 213, 328, 446, 576, 672, 716, 814, 69, 152, 287, 330, 455, 564, 627, 702, 880, 41, 172, 248, 354, 407, 582, 667, 753, 820, 22, 194, 249, 397, 466, 572, 605, 712, 898, 10, 136, 253, 399, 435, 542, 638, 790, 881, 16, 157, 228, 357, 448, 585, 650, 798, 842, 72, 178, 291, 313, 494, 526, 655, 794, 836, 61, 173, 210, 319, 404, 586, 658, 749, 871, 96, 143, 220, 351, 464, 598, 657, 751, 863, 56, 158, 299, 378, 401, 557, 615, 800, 839, 48, 175, 211, 367, 431, 509, 668, 731, 853, 89, 104, 236, 389, 417, 527, 700, 771, 861, 71, 139, 260, 376, 491, 536, 683, 754, 804, 15, 168, 280, 327, 443, 599, 653, 708, 856, 30, 119, 288, 310, 449, 594, 619, 701, 867, 90, 138, 294, 305, 459, 549, 693, 795, 882, 50, 118, 205, 400, 477, 518, 616, 714, 830, 66, 130, 252, 380, 483, 589, 637, 743, 852, 14, 144, 261, 369, 454, 503, 633, 705, 835, 100, 145, 215, 371, 447, 579, 607, 768, 846, 17, 156, 296, 356, 457, 508, 677, 746, 818, 84, 186, 227, 315, 475, 565, 691, 750, 878, 86, 179, 283, 304, 439, 548, 699, 720, 879, 92, 113, 281, 335, 461, 537, 634, 709, 841, 78, 163, 279, 342, 418, 596, 682, 719, 862, 43, 133, 217, 311, 469, 519, 643, 715, 865, 59, 169, 251, 316, 498, 547, 676, 796, 828, 54, 177, 245, 361, 403, 591, 695, 791, 885, 25, 117, 254, 384, 422, 543, 614, 769, 899, 64, 108, 264, 346, 434, 505, 640, 797, 900, 55, 165, 297, 352, 484, 593, 629, 777, 832, 99, 159, 278, 307, 416, 538, 623, 728, 892, 58, 150, 256, 388, 467, 502, 642, 739, 809, 42, 196, 250, 326, 427, 569, 604, 703, 868, 67, 141, 216, 331, 487, 525, 601, 742, 889, 3, 137, 219, 373, 445, 544, 670, 713, 807, 13, 195, 222, 377, 402, 583, 632, 723, 886, 8, 102, 259, 340, 476, 535, 610, 787, 823, 79, 151, 272, 398, 405, 512, 666, 773, 806, 91, 180, 224, 325, 471, 522, 628, 740, 825, 33, 189, 284, 333, 468, 510, 659, 718, 812, 38, 182, 268, 379, 472, 517, 647, 735, 829, 77, 166, 275, 391, 479, 523, 687, 762, 849, 9, 181, 271, 353, 499, 588, 697, 765, 843, 39, 155, 221, 317, 412, 553, 680, 785, 838, 4, 198, 277, 392, 458, 513, 661, 747, 896, 87, 199, 295, 383, 481, 550, 645, 706, 884, 21, 114, 201, 334, 465, 507, 636, 725, 847, 19, 120, 230, 363, 497, 567, 689, 724, 866, 94, 190, 229, 314, 485, 575, 621, 766, 873, 57, 116, 214, 308, 423, 597, 625, 721, 895, 82, 192, 223, 350, 450, 581, 678, 726, 851, 28, 171, 285, 347, 451, 559, 606, 786, 850, 26, 127, 225, 385, 474, 574, 630, 711, 891, 20, 107, 244, 301, 438, 506, 644, 757, 821, 81, 135, 239, 396, 482, 540, 641, 755, 824, 70, 123, 235, 321, 410, 568, 688, 793, 805, 63, 129, 267, 382, 413, 555, 665, 738, 872, 37, 187, 218, 364, 490, 584, 692, 774, 845]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1019.01 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	814.75 MBs	(shape (3, 4, 3, 4, 720, 1030, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 14:48:25 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (462+258=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A99 ⫹₇₀ 16319), purity -1.6040117817824031
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (228+234=462 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 11207), purity -1.1831647028348449
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (178+80=258 samples) on frame 1 with decision: {1} A9 ⫹₇₀ 6054, purity -0.6558392200079038
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (133+95=228 samples) on frame 1 with decision: {1} ⟨DR⟩ (A66 ⫹ 5400), purity -0.6087819163275868
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+102=178 samples) on frame 1 with decision: {1} ⟨PO⟩ (A16 ⫹₇₀ 12078), purity -0.5371467988516909
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (154+80=234 samples) on frame 1 with decision: {1} A1 ⫺ 17637, purity -0.603750627807729
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (110+23=133 samples) on frame 1 with decision: {1} ⟨DR⟩ (A26 ⫺ 12505), purity -0.5904608168930267
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+72=95 samples) on frame 1 with decision: {1} A74 ⫹ 19976, purity -0.15642191175156434
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (89+13=102 samples) on frame 1 with decision: {1} A36 ⫺ 14030, purity -0.4414971019989581
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+141=154 samples) on frame 1 with decision: {1} A70 ⫹ 23146, purity -0.6279638462703334
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+8=23 samples) on frame 1 with decision: {1} ⟨DR⟩ (A24 ⫺ 6312), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (42+68=110 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A99 ⫹₈₀ 24543), purity -0.5094661172577833
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (40+49=89 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A40 ⫹₇₀ 11405), purity -0.37356611395432593
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (74+67=141 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A16 ⫹₈₀ 14377), purity -0.5694725730360581
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+36=40 samples) on frame 1 with decision: {1} ⟨DR⟩ (A15 ⫺ 11018), purity -0.5061016301569273
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+33=67 samples) on frame 1 with decision: {1} ⟨PO⟩ (A3 ⫹₆₀ 11137), purity -0.3228492319215815
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+68=74 samples) on frame 1 with decision: {1} A3 ⫹₈₀ 15368, purity -0.3837159244640874
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (51+17=68 samples) on frame 1 with decision: {1} ⟨PP⟩ (A80 ⫺ 23523), purity -0.5197162008628976
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (24+9=33 samples) on frame 1 with decision: {1} A77 ⫺ 19906, purity -0.4228169053145034
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+15=36 samples) on frame 1 with decision: {1} ⟨PO⟩ (A3 ⫹ 9750), purity -0.28042152792052355
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+35=51 samples) on frame 1 with decision: {1} ⟨DR⟩ (A102 ⫹ 20907), purity -0.41057716863694116
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (32+36=68 samples) on frame 1 with decision: {1} A18 ⫺₆₀ 15794, purity -0.29227594096717396
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A1 ⫺ 10325, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+7=15 samples) on frame 1 with decision: {1} ⟨DR⟩ (A10 ⫺ 13436), purity -0.1913876152012575
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+18=24 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A83 ⫺₆₀ 18014), purity -0.1591285420737032
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+22=32 samples) on frame 1 with decision: {1} A6 ⫹₇₀ 13614, purity -0.2287122661126737
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+29=35 samples) on frame 1 with decision: {1} A83 ⫺ 18469, purity -0.33241445724066193
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A1 ⫺ 13238, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+6=29 samples) on frame 1 with decision: {1} ⟨DR⟩ (A1 ⫺ 11652), purity -0.1316925865437547
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
522.856605 seconds (6.60 G allocations: 150.823 GiB, 19.86% gc time, 0.01% compilation time)
Train tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 9
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A99 ⫹₇₀ 16319)
✔ {1} A9 ⫹₇₀ 6054
│✔ Shadows : 80/80 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A16 ⫹₇₀ 12078)
│ ✔ {1} A36 ⫺ 14030
│ │✔ Gravel : 13/13 (conf: 1.0)
│ │✘ {1} ⟨P̅P̅⟩ (A40 ⫹₇₀ 11405)
│ │ ✔ Asphalt : 49/49 (conf: 1.0)
│ │ ✘ {1} ⟨DR⟩ (A15 ⫺ 11018)
│ │  ✔ {1} ⟨PO⟩ (A3 ⫹ 9750)
│ │  │✔ {1} ⟨DR⟩ (A10 ⫺ 13436)
│ │  ││✔ Asphalt : 6/7 (conf: 0.8571428571428571)
│ │  ││✘ Bitumen : 8/8 (conf: 1.0)
│ │  │✘ Asphalt : 21/21 (conf: 1.0)
│ │  ✘ Gravel : 4/4 (conf: 1.0)
│ ✘ Bitumen : 71/76 (conf: 0.9342105263157895)
✘ {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 11207)
 ✔ {1} A1 ⫺ 17637
 │✔ Painted metal sheets : 80/80 (conf: 1.0)
 │✘ {1} A70 ⫹ 23146
 │ ✔ {1} ⟨P̅P̅⟩ (A16 ⫹₈₀ 14377)
 │ │✔ {1} ⟨PO⟩ (A3 ⫹₆₀ 11137)
 │ ││✔ {1} A77 ⫺ 19906
 │ │││✔ {1} A1 ⫺ 10325
 │ ││││✔ Gravel : 3/4 (conf: 0.75)
 │ ││││✘ Gravel : 5/5 (conf: 1.0)
 │ │││✘ {1} ⟨P̅P̅⟩ (A83 ⫺₆₀ 18014)
 │ │││ ✔ Self-Blocking Bricks : 18/18 (conf: 1.0)
 │ │││ ✘ Gravel : 4/6 (conf: 0.6666666666666666)
 │ ││✘ Gravel : 34/34 (conf: 1.0)
 │ │✘ {1} A3 ⫹₈₀ 15368
 │ │ ✔ {1} A18 ⫺₆₀ 15794
 │ │ │✔ Self-Blocking Bricks : 36/36 (conf: 1.0)
 │ │ │✘ {1} A6 ⫹₇₀ 13614
 │ │ │ ✔ Self-Blocking Bricks : 21/22 (conf: 0.9545454545454546)
 │ │ │ ✘ {1} A1 ⫺ 13238
 │ │ │  ✔ Gravel : 6/6 (conf: 1.0)
 │ │ │  ✘ Gravel : 3/4 (conf: 0.75)
 │ │ ✘ Gravel : 6/6 (conf: 1.0)
 │ ✘ Bare Soil : 13/13 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5400)
  ✔ {1} A74 ⫹ 19976
  │✔ Trees : 72/72 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A24 ⫺ 6312)
  │ ✔ Trees : 8/8 (conf: 1.0)
  │ ✘ Meadows : 15/15 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A26 ⫺ 12505)
   ✔ Bare Soil : 22/23 (conf: 0.9565217391304348)
   ✘ {1} ⟨P̅P̅⟩ (A99 ⫹₈₀ 24543)
    ✔ {1} ⟨PP⟩ (A80 ⫺ 23523)
    │✔ Bare Soil : 17/17 (conf: 1.0)
    │✘ {1} ⟨DR⟩ (A102 ⫹ 20907)
    │ ✔ {1} A83 ⫺ 18469
    │ │✔ {1} ⟨DR⟩ (A1 ⫺ 11652)
    │ ││✔ Meadows : 4/6 (conf: 0.6666666666666666)
    │ ││✘ Bare Soil : 23/23 (conf: 1.0)
    │ │✘ Meadows : 6/6 (conf: 1.0)
    │ ✘ Meadows : 16/16 (conf: 1.0)
    ✘ Meadows : 39/42 (conf: 0.9285714285714286)
● [ 01/07/2021 14:57:08 ] Saving tree to file ./gandalf/trees/tree_7a9440835707d707e5403ef5640ef9ece25b62acaa8327198249d08b985dec93.jld...
Test tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 9
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A99 ⫹₇₀ 16319)
✔ {1} A9 ⫹₇₀ 6054
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A16 ⫹₇₀ 12078)
│ ✔ {1} A36 ⫺ 14030
│ │✔ Gravel : 2/3 (conf: 0.6666666666666666)
│ │✘ {1} ⟨P̅P̅⟩ (A40 ⫹₇₀ 11405)
│ │ ✔ Asphalt : 12/13 (conf: 0.9230769230769231)
│ │ ✘ {1} ⟨DR⟩ (A15 ⫺ 11018)
│ │  ✔ {1} ⟨PO⟩ (A3 ⫹ 9750)
│ │  │✔ {1} ⟨DR⟩ (A10 ⫺ 13436)
│ │  ││✔ Asphalt : 3/3 (conf: 1.0)
│ │  ││✘ Bitumen : 3/3 (conf: 1.0)
│ │  │✘ Asphalt : 2/2 (conf: 1.0)
│ │  ✘ Gravel : 0/1 (conf: 0.0)
│ ✘ Bitumen : 16/18 (conf: 0.8888888888888888)
✘ {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 11207)
 ✔ {1} A1 ⫺ 17637
 │✔ Painted metal sheets : 19/22 (conf: 0.8636363636363636)
 │✘ {1} A70 ⫹ 23146
 │ ✔ {1} ⟨P̅P̅⟩ (A16 ⫹₈₀ 14377)
 │ │✔ {1} ⟨PO⟩ (A3 ⫹₆₀ 11137)
 │ ││✔ {1} A77 ⫺ 19906
 │ │││✔ {1} A1 ⫺ 10325
 │ ││││✔ Gravel : 1/1 (conf: 1.0)
 │ ││││✘ Gravel : 1/1 (conf: 1.0)
 │ │││✘ {1} ⟨P̅P̅⟩ (A83 ⫺₆₀ 18014)
 │ │││ ✔ Self-Blocking Bricks : 2/3 (conf: 0.6666666666666666)
 │ │││ ✘ Gravel : 5/7 (conf: 0.7142857142857143)
 │ ││✘ Gravel : 5/6 (conf: 0.8333333333333334)
 │ │✘ {1} A3 ⫹₈₀ 15368
 │ │ ✔ {1} A18 ⫺₆₀ 15794
 │ │ │✔ Self-Blocking Bricks : 6/6 (conf: 1.0)
 │ │ │✘ {1} A6 ⫹₇₀ 13614
 │ │ │ ✔ Self-Blocking Bricks : 4/5 (conf: 0.8)
 │ │ │ ✘ {1} A1 ⫺ 13238
 │ │ │  ✔ Gravel : 1/1 (conf: 1.0)
 │ │ │  ✘ Gravel : 1/4 (conf: 0.25)
 │ │ ✘ Gravel : 1/1 (conf: 1.0)
 │ ✘ Bare Soil : 3/4 (conf: 0.75)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5400)
  ✔ {1} A74 ⫹ 19976
  │✔ Trees : 18/19 (conf: 0.9473684210526315)
  │✘ {1} ⟨DR⟩ (A24 ⫺ 6312)
  │ ✔ Trees : 1/2 (conf: 0.5)
  │ ✘ Meadows : 2/3 (conf: 0.6666666666666666)
  ✘ {1} ⟨DR⟩ (A26 ⫺ 12505)
   ✔ Bare Soil : 5/7 (conf: 0.7142857142857143)
   ✘ {1} ⟨P̅P̅⟩ (A99 ⫹₈₀ 24543)
    ✔ {1} ⟨PP⟩ (A80 ⫺ 23523)
    │✔ Bare Soil : 5/5 (conf: 1.0)
    │✘ {1} ⟨DR⟩ (A102 ⫹ 20907)
    │ ✔ {1} A83 ⫺ 18469
    │ │✔ {1} ⟨DR⟩ (A1 ⫺ 11652)
    │ ││✔ Meadows : 0/0 (conf: NaN)
    │ ││✘ Bare Soil : 2/2 (conf: 1.0)
    │ │✘ Meadows : 1/1 (conf: 1.0)
    │ ✘ Meadows : 5/6 (conf: 0.8333333333333334)
    ✘ Meadows : 9/11 (conf: 0.8181818181818182)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	86.11%	85.0%	75.0%	95.0%	85.0%	85.0%	95.0%	60.0%	100.0%	95.0%	94.44%	83.33%	90.48%	68.0%	80.95%	86.36%	85.71%	100.0%	90.48%	||	84.38%	[89.47, 78.95, 92.68, 75.56, 82.93, 90.48, 70.59, 100.0, 92.68]%	
  accuracy: 86.11% kappa: 84.38% 
 17  0  1  2  0  0  0  0  0	85.0%		Asphalt
  0 15  0  0  3  2  0  0  0	75.0%		Bare Soil
  1  0 19  0  0  0  0  0  0	95.0%		Bitumen
  0  0  0 17  0  1  2  0  0	85.0%		Gravel
  0  1  0  0 17  0  0  0  2	85.0%		Meadows
  0  0  1  0  0 19  0  0  0	95.0%		Painted metal sheets
  0  2  0  6  0  0 12  0  0	60.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  1  0  0  0 19	95.0%		Trees

overall_acc:	0.8611111111111112
κ =		0.84375
sensitivities:	[0.85, 0.75, 0.95, 0.85, 0.85, 0.95, 0.6, 1.0, 0.95]
specificities:	[0.99375, 0.98125, 0.9875, 0.95, 0.975, 0.98125, 0.9875, 1.0, 0.9875]
PPVs:		[0.9444444444444444, 0.8333333333333334, 0.9047619047619048, 0.68, 0.8095238095238095, 0.8636363636363636, 0.8571428571428571, 1.0, 0.9047619047619048]
NPVs:		[0.9814814814814815, 0.9691358024691358, 0.9937106918238994, 0.9806451612903225, 0.9811320754716981, 0.9936708860759493, 0.9518072289156626, 1.0, 0.9937106918238994]
F1s:		[0.8947368421052632, 0.7894736842105263, 0.926829268292683, 0.7555555555555555, 0.8292682926829268, 0.9047619047619048, 0.7058823529411765, 1.0, 0.926829268292683]
accuracies:	[0.9777777777777777, 0.9555555555555556, 0.9833333333333333, 0.9388888888888889, 0.9611111111111111, 0.9777777777777777, 0.9444444444444444, 1.0, 0.9833333333333333]
mean_accuracy:	0.9691358024691357
Dataset_slice = (900) -> [10, 116, 221, 307, 469, 514, 633, 738, 882, 12, 188, 231, 354, 401, 560, 622, 715, 890, 84, 193, 239, 362, 483, 542, 675, 754, 826, 52, 131, 230, 337, 491, 527, 664, 792, 833, 45, 175, 218, 385, 492, 523, 695, 788, 851, 87, 192, 265, 383, 486, 503, 657, 744, 817, 14, 190, 264, 381, 480, 580, 697, 760, 849, 20, 142, 242, 352, 422, 531, 678, 762, 850, 39, 159, 210, 355, 453, 561, 629, 766, 848, 9, 138, 279, 380, 488, 544, 665, 716, 819, 38, 119, 250, 391, 454, 541, 673, 782, 816, 43, 155, 289, 365, 495, 512, 669, 789, 853, 23, 187, 292, 316, 457, 600, 616, 783, 820, 92, 132, 205, 389, 403, 504, 607, 755, 875, 93, 113, 286, 356, 440, 519, 631, 771, 821, 51, 145, 296, 366, 418, 557, 699, 739, 843, 89, 158, 240, 368, 433, 584, 684, 756, 811, 67, 146, 259, 336, 449, 515, 693, 759, 892, 100, 176, 244, 372, 464, 534, 632, 711, 865, 71, 164, 283, 390, 460, 546, 656, 704, 802, 36, 128, 243, 325, 404, 567, 659, 710, 857, 19, 153, 236, 306, 412, 596, 615, 751, 827, 94, 126, 237, 400, 496, 537, 618, 736, 847, 68, 137, 260, 308, 466, 533, 658, 786, 803, 22, 120, 222, 360, 493, 517, 610, 798, 900, 21, 169, 214, 332, 445, 506, 660, 714, 831, 1, 136, 290, 397, 413, 554, 686, 725, 805, 5, 189, 238, 315, 414, 592, 642, 728, 863, 53, 148, 235, 318, 456, 505, 681, 772, 801, 46, 104, 300, 311, 497, 569, 691, 779, 870, 91, 179, 297, 303, 416, 572, 627, 799, 822, 3, 194, 248, 304, 408, 599, 617, 720, 823, 34, 108, 285, 335, 407, 502, 637, 749, 858, 41, 197, 247, 320, 437, 529, 620, 713, 899, 62, 167, 281, 384, 431, 579, 641, 707, 838, 75, 199, 272, 331, 411, 552, 612, 765, 830, 73, 129, 257, 317, 439, 564, 672, 741, 889, 97, 105, 209, 377, 420, 516, 690, 745, 842, 55, 161, 217, 324, 475, 508, 687, 784, 872, 80, 180, 298, 305, 430, 538, 653, 761, 846, 59, 173, 212, 328, 424, 536, 692, 712, 814, 63, 124, 206, 338, 438, 556, 680, 780, 877, 4, 112, 204, 394, 417, 553, 630, 702, 815, 54, 191, 220, 369, 435, 524, 670, 724, 841, 74, 182, 274, 359, 443, 543, 679, 769, 812, 95, 195, 234, 375, 470, 551, 608, 726, 844, 78, 117, 277, 312, 487, 521, 689, 795, 809, 96, 107, 226, 321, 451, 522, 638, 757, 887, 99, 184, 255, 392, 410, 597, 655, 719, 879, 16, 178, 232, 347, 423, 571, 700, 787, 824, 72, 106, 249, 346, 479, 568, 639, 733, 896, 90, 162, 295, 326, 406, 588, 604, 763, 891, 60, 121, 288, 313, 471, 558, 652, 796, 861, 44, 122, 219, 393, 434, 555, 651, 718, 808, 18, 115, 275, 327, 402, 562, 676, 797, 852, 25, 109, 299, 358, 473, 587, 677, 732, 860, 32, 125, 252, 334, 429, 548, 654, 777, 818, 77, 147, 211, 343, 459, 595, 674, 747, 886, 28, 200, 251, 363, 444, 539, 625, 740, 837, 24, 133, 284, 322, 481, 525, 645, 785, 856, 76, 130, 213, 357, 432, 578, 647, 776, 806, 17, 101, 293, 344, 499, 582, 623, 774, 898, 65, 114, 227, 314, 442, 511, 614, 742, 880, 31, 183, 203, 349, 482, 513, 663, 743, 878, 30, 149, 291, 373, 450, 535, 635, 717, 884, 50, 141, 225, 310, 500, 590, 611, 767, 813, 85, 139, 233, 341, 468, 507, 682, 727, 895, 26, 165, 258, 333, 447, 509, 628, 737, 807, 33, 144, 270, 378, 462, 598, 698, 708, 873, 37, 123, 269, 398, 441, 545, 650, 770, 834, 64, 110, 215, 345, 474, 570, 643, 703, 893, 56, 177, 266, 329, 425, 589, 609, 706, 888, 27, 170, 246, 350, 472, 520, 605, 701, 876, 49, 118, 268, 376, 465, 576, 661, 752, 869, 57, 196, 262, 351, 476, 577, 640, 735, 864, 69, 174, 245, 388, 428, 518, 636, 768, 894, 70, 154, 224, 399, 455, 540, 667, 758, 810, 8, 198, 253, 370, 494, 573, 613, 781, 836, 83, 181, 208, 340, 478, 594, 648, 750, 804, 15, 186, 254, 309, 458, 547, 696, 753, 854, 98, 102, 267, 323, 490, 565, 646, 794, 897, 11, 171, 223, 386, 498, 575, 621, 764, 874, 7, 150, 261, 339, 477, 549, 606, 729, 839, 29, 151, 278, 364, 463, 510, 694, 723, 855, 2, 156, 273, 342, 426, 559, 688, 773, 883, 48, 143, 263, 301, 467, 563, 603, 775, 835, 61, 185, 256, 367, 461, 574, 685, 793, 868, 82, 152, 202, 330, 436, 530, 644, 730, 829, 6, 160, 280, 348, 485, 585, 666, 721, 825, 81, 168, 207, 396, 421, 526, 662, 790, 867, 79, 166, 276, 353, 419, 591, 624, 800, 845, 88, 140, 294, 361, 415, 583, 626, 734, 862, 35, 111, 229, 382, 489, 581, 634, 731, 832, 13, 103, 201, 302, 427, 532, 683, 748, 881, 66, 127, 287, 395, 452, 501, 602, 709, 866, 47, 135, 271, 387, 446, 566, 619, 791, 885, 42, 157, 241, 374, 448, 528, 649, 746, 828, 40, 163, 282, 319, 484, 593, 668, 778, 859, 86, 172, 228, 371, 405, 586, 671, 705, 840, 58, 134, 216, 379, 409, 550, 601, 722, 871]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1019.01 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	814.75 MBs	(shape (3, 4, 3, 4, 720, 1030, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 14:57:14 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (465+255=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A99 ⫹₇₀ 16270), purity -1.6062281753651297
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (224+241=465 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A6 ⫺₇₀ 11474), purity -1.183064202270002
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (174+81=255 samples) on frame 1 with decision: {1} ⟨DR⟩ (A56 ⫹ 5678), purity -0.6470306221782376
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (130+94=224 samples) on frame 1 with decision: {1} ⟨DR⟩ (A66 ⫹ 5400), purity -0.5788148410505309
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (87+87=174 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A16 ⫺ 12069), purity -0.5093232288463293
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (97+144=241 samples) on frame 1 with decision: {1} A34 ⫹ 20421, purity -0.6312260760846016
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (107+23=130 samples) on frame 1 with decision: {1} ⟨DR⟩ (A30 ⫺ 13426), purity -0.5478385967600251
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+79=87 samples) on frame 1 with decision: {1} A4 ⫹₈₀ 13882, purity -0.1685557715173988
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (24+63=87 samples) on frame 1 with decision: {1} ⟨DR⟩ (A76 ⫹ 13040), purity -0.3380328533660611
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+79=97 samples) on frame 1 with decision: {1} A2 ⫺₇₀ 21571, purity -0.06473172912551109
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+73=94 samples) on frame 1 with decision: {1} ⟨DR⟩ (A72 ⫹ 14506), purity -0.14219997376799018
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+66=144 samples) on frame 1 with decision: {1} A17 ⫹₈₀ 14437, purity -0.5454774127474175
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+14=18 samples) on frame 1 with decision: {1} A2 ⫹ 14516, purity -0.15403270679109896
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+7=21 samples) on frame 1 with decision: {1} ⟨DR⟩ (A10 ⫺ 4607), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+14=24 samples) on frame 1 with decision: {1} ⟨PP⟩ (A16 ⫺ 11652), purity -0.5574916031489782
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (66+41=107 samples) on frame 1 with decision: {1} ⟨DR⟩ (A99 ⫹ 21204), purity -0.5241045843890662
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+45=66 samples) on frame 1 with decision: {1} A3 ⫺₇₀ 11296, purity -0.3143268797577533
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+70=78 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A75 ⫹₈₀ 21214), purity -0.34431205170329754
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+4=14 samples) on frame 1 with decision: {1} A9 ⫹ 10662, purity -0.35743030252727737
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+12=21 samples) on frame 1 with decision: {1} A7 ⫹ 12861, purity -0.2727917864120627
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (46+20=66 samples) on frame 1 with decision: {1} ⟨DR⟩ (A4 ⫹ 2953), purity -0.40003585763777094
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+26=41 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A83 ⫺₆₀ 19976), purity -0.31554492532012285
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+51=70 samples) on frame 1 with decision: {1} ⟨PO⟩ (A98 ⫺₆₀ 19232), purity -0.18776383540279898
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A1 ⫹₆₀ 10870, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A1 ⫹ 11048, purity -0.277258872223978
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+30=46 samples) on frame 1 with decision: {1} ⟨DR⟩ (A6 ⫹ 5410), purity -0.43892065239734124
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+8=19 samples) on frame 1 with decision: {1} A1 ⫺₇₀ 14110, purity -0.1763682668864009
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+11=15 samples) on frame 1 with decision: {1} A4 ⫺ 6619, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A1 ⫺ 10652, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+7=30 samples) on frame 1 with decision: {1} A31 ⫺ 10364, purity -0.4014161920689658
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+17=23 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A69 ⫺₆₀ 13297), purity -0.11753770666077513
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
485.300297 seconds (6.09 G allocations: 136.439 GiB, 21.39% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 32
Tot nodes: 63
Height: 9
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A99 ⫹₇₀ 16270)
✔ {1} ⟨DR⟩ (A56 ⫹ 5678)
│✔ Shadows : 80/81 (conf: 0.9876543209876543)
│✘ {1} ⟨P̅P̅⟩ (A16 ⫺ 12069)
│ ✔ {1} A4 ⫹₈₀ 13882
│ │✔ Bitumen : 76/79 (conf: 0.9620253164556962)
│ │✘ Asphalt : 8/8 (conf: 1.0)
│ ✘ {1} ⟨DR⟩ (A76 ⫹ 13040)
│  ✔ Asphalt : 62/63 (conf: 0.9841269841269841)
│  ✘ {1} ⟨PP⟩ (A16 ⫺ 11652)
│   ✔ {1} A9 ⫹ 10662
│   │✔ Bitumen : 4/4 (conf: 1.0)
│   │✘ {1} A1 ⫹ 11048
│   │ ✔ Asphalt : 6/6 (conf: 1.0)
│   │ ✘ Gravel : 2/4 (conf: 0.5)
│   ✘ Gravel : 10/10 (conf: 1.0)
✘ {1} ⟨P̅P̅⟩ (A6 ⫺₇₀ 11474)
 ✔ {1} A34 ⫹ 20421
 │✔ {1} A17 ⫹₈₀ 14437
 ││✔ {1} A3 ⫺₇₀ 11296
 │││✔ Gravel : 43/45 (conf: 0.9555555555555556)
 │││✘ {1} A7 ⫹ 12861
 │││ ✔ Self-Blocking Bricks : 12/12 (conf: 1.0)
 │││ ✘ {1} A1 ⫹₆₀ 10870
 │││  ✔ Gravel : 5/5 (conf: 1.0)
 │││  ✘ Self-Blocking Bricks : 3/4 (conf: 0.75)
 ││✘ {1} ⟨P̅P̅⟩ (A75 ⫹₈₀ 21214)
 ││ ✔ {1} ⟨PO⟩ (A98 ⫺₆₀ 19232)
 ││ │✔ Self-Blocking Bricks : 51/51 (conf: 1.0)
 ││ │✘ {1} A1 ⫺₇₀ 14110
 ││ │ ✔ Gravel : 8/8 (conf: 1.0)
 ││ │ ✘ {1} A1 ⫺ 10652
 ││ │  ✔ Self-Blocking Bricks : 7/7 (conf: 1.0)
 ││ │  ✘ Self-Blocking Bricks : 3/4 (conf: 0.75)
 ││ ✘ Gravel : 8/8 (conf: 1.0)
 │✘ {1} A2 ⫺₇₀ 21571
 │ ✔ Painted metal sheets : 79/79 (conf: 1.0)
 │ ✘ {1} A2 ⫹ 14516
 │  ✔ Bare Soil : 14/14 (conf: 1.0)
 │  ✘ Self-Blocking Bricks : 2/4 (conf: 0.5)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5400)
  ✔ {1} ⟨DR⟩ (A72 ⫹ 14506)
  │✔ Trees : 73/73 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A10 ⫺ 4607)
  │ ✔ Trees : 7/7 (conf: 1.0)
  │ ✘ Meadows : 14/14 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A30 ⫺ 13426)
   ✔ Bare Soil : 23/23 (conf: 1.0)
   ✘ {1} ⟨DR⟩ (A99 ⫹ 21204)
    ✔ {1} ⟨P̅P̅⟩ (A83 ⫺₆₀ 19976)
    │✔ Bare Soil : 25/26 (conf: 0.9615384615384616)
    │✘ {1} A4 ⫺ 6619
    │ ✔ Meadows : 11/11 (conf: 1.0)
    │ ✘ Bare Soil : 4/4 (conf: 1.0)
    ✘ {1} ⟨DR⟩ (A4 ⫹ 2953)
     ✔ Meadows : 20/20 (conf: 1.0)
     ✘ {1} ⟨DR⟩ (A6 ⫹ 5410)
      ✔ {1} A31 ⫺ 10364
      │✔ Bare Soil : 7/7 (conf: 1.0)
      │✘ {1} ⟨P̅P̅⟩ (A69 ⫺₆₀ 13297)
      │ ✔ Meadows : 17/17 (conf: 1.0)
      │ ✘ Bare Soil : 5/6 (conf: 0.8333333333333334)
      ✘ Meadows : 16/16 (conf: 1.0)
● [ 01/07/2021 15:05:20 ] Saving tree to file ./gandalf/trees/tree_4841f13f003477a37b0859d8984bcab8cb8180aa2ea7e6b6a4d9fc3261f3df77.jld...
Test tree:
Decision Tree
Leaves: 32
Tot nodes: 63
Height: 9
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A99 ⫹₇₀ 16270)
✔ {1} ⟨DR⟩ (A56 ⫹ 5678)
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} ⟨P̅P̅⟩ (A16 ⫺ 12069)
│ ✔ {1} A4 ⫹₈₀ 13882
│ │✔ Bitumen : 19/22 (conf: 0.8636363636363636)
│ │✘ Asphalt : 2/2 (conf: 1.0)
│ ✘ {1} ⟨DR⟩ (A76 ⫹ 13040)
│  ✔ Asphalt : 14/15 (conf: 0.9333333333333333)
│  ✘ {1} ⟨PP⟩ (A16 ⫺ 11652)
│   ✔ {1} A9 ⫹ 10662
│   │✔ Bitumen : 0/0 (conf: NaN)
│   │✘ {1} A1 ⫹ 11048
│   │ ✔ Asphalt : 0/0 (conf: NaN)
│   │ ✘ Gravel : 1/1 (conf: 1.0)
│   ✘ Gravel : 5/5 (conf: 1.0)
✘ {1} ⟨P̅P̅⟩ (A6 ⫺₇₀ 11474)
 ✔ {1} A34 ⫹ 20421
 │✔ {1} A17 ⫹₈₀ 14437
 ││✔ {1} A3 ⫺₇₀ 11296
 │││✔ Gravel : 7/11 (conf: 0.6363636363636364)
 │││✘ {1} A7 ⫹ 12861
 │││ ✔ Self-Blocking Bricks : 1/2 (conf: 0.5)
 │││ ✘ {1} A1 ⫹₆₀ 10870
 │││  ✔ Gravel : 0/0 (conf: NaN)
 │││  ✘ Self-Blocking Bricks : 0/0 (conf: NaN)
 ││✘ {1} ⟨P̅P̅⟩ (A75 ⫹₈₀ 21214)
 ││ ✔ {1} ⟨PO⟩ (A98 ⫺₆₀ 19232)
 ││ │✔ Self-Blocking Bricks : 8/9 (conf: 0.8888888888888888)
 ││ │✘ {1} A1 ⫺₇₀ 14110
 ││ │ ✔ Gravel : 3/6 (conf: 0.5)
 ││ │ ✘ {1} A1 ⫺ 10652
 ││ │  ✔ Self-Blocking Bricks : 1/1 (conf: 1.0)
 ││ │  ✘ Self-Blocking Bricks : 1/1 (conf: 1.0)
 ││ ✘ Gravel : 0/1 (conf: 0.0)
 │✘ {1} A2 ⫺₇₀ 21571
 │ ✔ Painted metal sheets : 20/21 (conf: 0.9523809523809523)
 │ ✘ {1} A2 ⫹ 14516
 │  ✔ Bare Soil : 1/3 (conf: 0.3333333333333333)
 │  ✘ Self-Blocking Bricks : 0/1 (conf: 0.0)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5400)
  ✔ {1} ⟨DR⟩ (A72 ⫹ 14506)
  │✔ Trees : 18/20 (conf: 0.9)
  │✘ {1} ⟨DR⟩ (A10 ⫺ 4607)
  │ ✔ Trees : 1/2 (conf: 0.5)
  │ ✘ Meadows : 2/3 (conf: 0.6666666666666666)
  ✘ {1} ⟨DR⟩ (A30 ⫺ 13426)
   ✔ Bare Soil : 5/6 (conf: 0.8333333333333334)
   ✘ {1} ⟨DR⟩ (A99 ⫹ 21204)
    ✔ {1} ⟨P̅P̅⟩ (A83 ⫺₆₀ 19976)
    │✔ Bare Soil : 9/9 (conf: 1.0)
    │✘ {1} A4 ⫺ 6619
    │ ✔ Meadows : 1/1 (conf: 1.0)
    │ ✘ Bare Soil : 0/1 (conf: 0.0)
    ✘ {1} ⟨DR⟩ (A4 ⫹ 2953)
     ✔ Meadows : 1/1 (conf: 1.0)
     ✘ {1} ⟨DR⟩ (A6 ⫹ 5410)
      ✔ {1} A31 ⫺ 10364
      │✔ Bare Soil : 1/1 (conf: 1.0)
      │✘ {1} ⟨P̅P̅⟩ (A69 ⫺₆₀ 13297)
      │ ✔ Meadows : 4/5 (conf: 0.8)
      │ ✘ Bare Soil : 0/2 (conf: 0.0)
      ✘ Meadows : 6/8 (conf: 0.75)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	83.89%	80.0%	80.0%	95.0%	80.0%	70.0%	100.0%	55.0%	100.0%	95.0%	94.12%	72.73%	86.36%	66.67%	77.78%	95.24%	78.57%	100.0%	86.36%	||	81.88%	[86.49, 76.19, 90.48, 72.73, 73.68, 97.56, 64.71, 100.0, 90.48]%	
  accuracy: 83.89% kappa: 81.88% 
 16  1  3  0  0  0  0  0  0	80.0%		Asphalt
  0 16  0  0  3  1  0  0  0	80.0%		Bare Soil
  1  0 19  0  0  0  0  0  0	95.0%		Bitumen
  0  1  0 16  0  0  3  0  0	80.0%		Gravel
  0  3  0  0 14  0  0  0  3	70.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  1  0  8  0  0 11  0  0	55.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  1  0  0  0 19	95.0%		Trees

overall_acc:	0.8388888888888889
κ =		0.8187500000000001
sensitivities:	[0.8, 0.8, 0.95, 0.8, 0.7, 1.0, 0.55, 1.0, 0.95]
specificities:	[0.99375, 0.9625, 0.98125, 0.95, 0.975, 0.99375, 0.98125, 1.0, 0.98125]
PPVs:		[0.9411764705882353, 0.7272727272727273, 0.8636363636363636, 0.6666666666666666, 0.7777777777777778, 0.9523809523809523, 0.7857142857142857, 1.0, 0.8636363636363636]
NPVs:		[0.9754601226993865, 0.9746835443037974, 0.9936708860759493, 0.9743589743589743, 0.9629629629629629, 1.0, 0.9457831325301205, 1.0, 0.9936708860759493]
F1s:		[0.8648648648648649, 0.7619047619047619, 0.9047619047619048, 0.7272727272727273, 0.7368421052631579, 0.975609756097561, 0.6470588235294118, 1.0, 0.9047619047619048]
accuracies:	[0.9722222222222222, 0.9444444444444444, 0.9777777777777777, 0.9333333333333333, 0.9444444444444444, 0.9944444444444445, 0.9333333333333333, 1.0, 0.9777777777777777]
mean_accuracy:	0.9641975308641975
Dataset_slice = (900) -> [68, 113, 288, 329, 406, 554, 655, 710, 862, 53, 120, 291, 341, 461, 505, 698, 752, 882, 72, 123, 234, 372, 472, 560, 663, 709, 872, 28, 128, 298, 379, 479, 553, 632, 745, 818, 84, 172, 287, 311, 466, 538, 673, 773, 871, 96, 182, 229, 309, 491, 516, 668, 708, 899, 91, 200, 222, 382, 418, 508, 627, 753, 877, 42, 156, 226, 342, 429, 562, 694, 750, 801, 33, 167, 204, 385, 498, 502, 635, 701, 823, 4, 158, 259, 316, 486, 511, 631, 765, 806, 63, 102, 220, 354, 496, 551, 700, 717, 851, 21, 101, 266, 327, 485, 570, 662, 742, 859, 79, 179, 270, 393, 404, 537, 693, 725, 900, 15, 151, 214, 332, 454, 532, 612, 732, 838, 22, 115, 217, 375, 468, 578, 615, 748, 805, 51, 118, 235, 378, 469, 525, 681, 784, 810, 32, 153, 232, 352, 470, 506, 646, 729, 893, 70, 160, 244, 373, 464, 595, 640, 743, 873, 66, 138, 250, 380, 437, 514, 609, 751, 830, 99, 176, 277, 338, 417, 547, 664, 798, 814, 40, 168, 258, 305, 482, 577, 622, 779, 844, 64, 196, 240, 363, 477, 521, 613, 724, 811, 19, 150, 282, 347, 401, 529, 671, 723, 876, 73, 140, 201, 337, 489, 550, 611, 707, 822, 18, 186, 215, 304, 492, 581, 624, 711, 847, 80, 106, 289, 353, 425, 585, 676, 799, 809, 60, 170, 223, 330, 416, 515, 606, 781, 807, 3, 144, 290, 392, 435, 530, 660, 769, 896, 87, 124, 286, 384, 483, 534, 638, 746, 835, 43, 131, 284, 346, 420, 552, 621, 737, 868, 9, 143, 253, 361, 421, 531, 661, 764, 804, 20, 162, 261, 308, 438, 513, 658, 712, 870, 1, 110, 254, 343, 484, 543, 601, 758, 808, 62, 174, 252, 349, 443, 567, 649, 714, 834, 45, 135, 205, 339, 436, 510, 683, 791, 856, 30, 134, 238, 367, 473, 539, 628, 728, 890, 76, 148, 275, 325, 474, 544, 618, 722, 866, 37, 173, 280, 359, 407, 557, 691, 747, 803, 38, 137, 297, 377, 427, 535, 678, 793, 812, 23, 166, 233, 399, 453, 523, 656, 726, 855, 57, 132, 260, 365, 442, 526, 680, 727, 865, 75, 108, 264, 333, 451, 563, 636, 738, 854, 35, 145, 202, 312, 411, 573, 686, 749, 869, 55, 159, 269, 340, 460, 566, 688, 718, 864, 50, 164, 225, 344, 500, 579, 645, 731, 821, 95, 103, 300, 395, 452, 527, 641, 713, 842, 61, 155, 212, 386, 471, 600, 603, 736, 816, 82, 105, 228, 387, 446, 518, 659, 716, 817, 12, 161, 216, 383, 493, 575, 651, 721, 853, 74, 112, 206, 381, 444, 509, 654, 794, 819, 94, 180, 230, 390, 423, 504, 604, 740, 813, 49, 109, 293, 336, 409, 555, 633, 797, 825, 6, 184, 221, 324, 456, 549, 684, 756, 858, 24, 187, 241, 345, 495, 546, 625, 766, 826, 90, 114, 265, 364, 449, 558, 620, 786, 860, 93, 121, 251, 351, 412, 556, 695, 788, 874, 14, 177, 272, 358, 467, 587, 677, 703, 839, 47, 169, 239, 400, 431, 533, 643, 792, 846, 89, 194, 263, 391, 445, 528, 642, 777, 892, 81, 147, 211, 369, 403, 522, 607, 734, 848, 39, 127, 242, 397, 405, 571, 674, 780, 887, 11, 195, 208, 334, 459, 569, 614, 770, 827, 58, 192, 207, 319, 490, 599, 644, 787, 880, 92, 199, 209, 388, 487, 572, 667, 772, 867, 52, 104, 203, 396, 439, 576, 637, 795, 881, 59, 188, 227, 348, 441, 540, 657, 774, 841, 48, 193, 237, 315, 402, 542, 610, 739, 802, 7, 122, 283, 317, 457, 598, 608, 735, 857, 54, 141, 246, 303, 488, 561, 616, 757, 878, 17, 126, 285, 389, 478, 512, 687, 767, 824, 56, 171, 248, 398, 434, 517, 690, 800, 879, 97, 133, 271, 318, 481, 541, 679, 715, 875, 29, 189, 245, 322, 440, 589, 669, 705, 843, 34, 163, 296, 356, 450, 596, 692, 762, 886, 77, 185, 292, 328, 414, 584, 630, 754, 833, 46, 107, 236, 326, 419, 565, 619, 730, 852, 71, 116, 257, 394, 465, 507, 648, 776, 820, 31, 183, 247, 366, 494, 594, 602, 720, 891, 26, 198, 279, 357, 410, 564, 634, 778, 888, 25, 190, 224, 355, 455, 524, 653, 790, 863, 65, 178, 231, 313, 499, 536, 672, 719, 845, 83, 146, 219, 350, 480, 591, 665, 706, 832, 2, 152, 267, 320, 415, 574, 605, 704, 895, 8, 154, 295, 376, 408, 586, 647, 771, 898, 27, 157, 276, 321, 463, 592, 699, 768, 850, 85, 181, 268, 362, 458, 588, 689, 783, 829, 86, 125, 278, 331, 424, 580, 682, 782, 849, 36, 111, 243, 307, 432, 582, 685, 702, 884, 78, 117, 299, 306, 413, 548, 626, 789, 828, 44, 197, 210, 335, 497, 519, 666, 755, 815, 10, 175, 273, 314, 476, 501, 629, 785, 840, 98, 191, 256, 302, 428, 597, 650, 760, 889, 69, 139, 274, 374, 422, 520, 652, 744, 897, 67, 165, 281, 360, 426, 559, 639, 759, 831, 16, 149, 249, 310, 462, 590, 696, 775, 894, 13, 129, 255, 368, 447, 583, 670, 741, 861, 5, 136, 213, 370, 448, 593, 617, 763, 883, 41, 142, 218, 301, 433, 545, 697, 761, 836, 88, 130, 262, 323, 475, 568, 623, 796, 885, 100, 119, 294, 371, 430, 503, 675, 733, 837]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1019.01 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	814.75 MBs	(shape (3, 4, 3, 4, 720, 1030, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 15:05:27 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (464+256=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A99 ⫹₇₀ 16270), purity -1.6074925509690732
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (229+235=464 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A6 ⫺₇₀ 11474), purity -1.18048994850763
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (175+81=256 samples) on frame 1 with decision: {1} ⟨DR⟩ (A56 ⫹ 5678), purity -0.6542218032297574
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (136+93=229 samples) on frame 1 with decision: {1} ⟨DR⟩ (A54 ⫹ 5043), purity -0.5987136045907232
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+99=175 samples) on frame 1 with decision: {1} ⟨PO⟩ (A16 ⫹₆₀ 12078), purity -0.5142833865044105
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (156+79=235 samples) on frame 1 with decision: {1} A1 ⫺ 17637, purity -0.6018600189164286
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (108+28=136 samples) on frame 1 with decision: {1} ⟨DR⟩ (A30 ⫺ 13426), purity -0.558922376456862
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+78=93 samples) on frame 1 with decision: {1} ⟨DR⟩ (A73 ⫹ 17261), purity -0.1382398640013687
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+82=99 samples) on frame 1 with decision: {1} ⟨DR⟩ (A102 ⫹ 13832), purity -0.4336475178582113
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+144=156 samples) on frame 1 with decision: {1} A72 ⫹₇₀ 22403, purity -0.635458732377135
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+11=15 samples) on frame 1 with decision: {1} A6 ⫹ 2764, purity -0.14995603856501555
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+12=17 samples) on frame 1 with decision: {1} A86 ⫺ 15507, purity -0.14717718339358465
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (65+43=108 samples) on frame 1 with decision: {1} ⟨DR⟩ (A102 ⫹ 21630), purity -0.4684413402821472
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (65+17=82 samples) on frame 1 with decision: {1} ⟨PP⟩ (A103 ⫺ 13743), purity -0.2446367974423869
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+65=144 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A17 ⫹₈₀ 14397), purity -0.5283474403218806
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+8=17 samples) on frame 1 with decision: {1} ⟨DR⟩ (A35 ⫺ 14377), purity -0.36197942074345785
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+42=65 samples) on frame 1 with decision: {1} ⟨DR⟩ (A82 ⫺ 25663), purity -0.3357285114381791
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+30=43 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A83 ⫺₈₀ 19976), purity -0.26527898212353723
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (48+17=65 samples) on frame 1 with decision: {1} ⟨PP⟩ (A31 ⫹ 14298), purity -0.3153401134674802
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (63+16=79 samples) on frame 1 with decision: {1} ⟨DR⟩ (A58 ⫺ 21601), purity -0.3024678916664616
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A1 ⫺ 10424, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A1 ⫺ 12891, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+6=17 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A3 ⫺₈₀ 11286), purity -0.2246520593981692
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+10=16 samples) on frame 1 with decision: {1} ⟨DR⟩ (A85 ⫺ 22403), purity -0.2386928131105548
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+4=13 samples) on frame 1 with decision: {1} A1 ⫹ 3864, purity -0.1730261983442487
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (35+7=42 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A89 ⫹₇₀ 25475), purity -0.31210977677506535
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
495.450849 seconds (6.20 G allocations: 139.446 GiB, 19.02% gc time, 0.01% compilation time)
Train tree:
Decision Tree
Leaves: 27
Tot nodes: 53
Height: 7
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A99 ⫹₇₀ 16270)
✔ {1} ⟨DR⟩ (A56 ⫹ 5678)
│✔ Shadows : 80/81 (conf: 0.9876543209876543)
│✘ {1} ⟨PO⟩ (A16 ⫹₆₀ 12078)
│ ✔ {1} ⟨DR⟩ (A102 ⫹ 13832)
│ │✔ {1} ⟨PP⟩ (A103 ⫺ 13743)
│ ││✔ {1} ⟨DR⟩ (A35 ⫺ 14377)
│ │││✔ {1} A1 ⫺ 12891
│ ││││✔ Asphalt : 3/4 (conf: 0.75)
│ ││││✘ Asphalt : 4/4 (conf: 1.0)
│ │││✘ {1} A1 ⫺ 10424
│ │││ ✔ Bitumen : 5/5 (conf: 1.0)
│ │││ ✘ Bitumen : 3/4 (conf: 0.75)
│ ││✘ Asphalt : 64/65 (conf: 0.9846153846153847)
│ │✘ {1} A86 ⫺ 15507
│ │ ✔ Gravel : 12/12 (conf: 1.0)
│ │ ✘ Asphalt : 4/5 (conf: 0.8)
│ ✘ Bitumen : 71/76 (conf: 0.9342105263157895)
✘ {1} ⟨P̅P̅⟩ (A6 ⫺₇₀ 11474)
 ✔ {1} A1 ⫺ 17637
 │✔ Painted metal sheets : 79/79 (conf: 1.0)
 │✘ {1} A72 ⫹₇₀ 22403
 │ ✔ {1} ⟨P̅P̅⟩ (A17 ⫹₈₀ 14397)
 │ │✔ {1} ⟨PP⟩ (A31 ⫹ 14298)
 │ ││✔ {1} ⟨P̅P̅⟩ (A3 ⫺₈₀ 11286)
 │ │││✔ Gravel : 4/6 (conf: 0.6666666666666666)
 │ │││✘ Self-Blocking Bricks : 11/11 (conf: 1.0)
 │ ││✘ Gravel : 45/48 (conf: 0.9375)
 │ │✘ {1} ⟨DR⟩ (A58 ⫺ 21601)
 │ │ ✔ {1} ⟨DR⟩ (A85 ⫺ 22403)
 │ │ │✔ Gravel : 10/10 (conf: 1.0)
 │ │ │✘ Self-Blocking Bricks : 4/6 (conf: 0.6666666666666666)
 │ │ ✘ Self-Blocking Bricks : 59/63 (conf: 0.9365079365079365)
 │ ✘ Bare Soil : 12/12 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A54 ⫹ 5043)
  ✔ {1} ⟨DR⟩ (A73 ⫹ 17261)
  │✔ Trees : 77/78 (conf: 0.9871794871794872)
  │✘ {1} A6 ⫹ 2764
  │ ✔ Meadows : 11/11 (conf: 1.0)
  │ ✘ Trees : 3/4 (conf: 0.75)
  ✘ {1} ⟨DR⟩ (A30 ⫺ 13426)
   ✔ Bare Soil : 27/28 (conf: 0.9642857142857143)
   ✘ {1} ⟨DR⟩ (A102 ⫹ 21630)
    ✔ {1} ⟨P̅P̅⟩ (A83 ⫺₈₀ 19976)
    │✔ Bare Soil : 29/30 (conf: 0.9666666666666667)
    │✘ {1} A1 ⫹ 3864
    │ ✔ Bare Soil : 3/4 (conf: 0.75)
    │ ✘ Meadows : 9/9 (conf: 1.0)
    ✘ {1} ⟨DR⟩ (A82 ⫺ 25663)
     ✔ {1} ⟨P̅P̅⟩ (A89 ⫹₇₀ 25475)
     │✔ Bare Soil : 6/7 (conf: 0.8571428571428571)
     │✘ Meadows : 32/35 (conf: 0.9142857142857143)
     ✘ Meadows : 23/23 (conf: 1.0)
● [ 01/07/2021 15:13:43 ] Saving tree to file ./gandalf/trees/tree_2e4b41e31136a47df5aaf803cb84b21f148b613de2accf36ea6d1d6db79937e6.jld...
Test tree:
Decision Tree
Leaves: 27
Tot nodes: 53
Height: 7
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A99 ⫹₇₀ 16270)
✔ {1} ⟨DR⟩ (A56 ⫹ 5678)
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A16 ⫹₆₀ 12078)
│ ✔ {1} ⟨DR⟩ (A102 ⫹ 13832)
│ │✔ {1} ⟨PP⟩ (A103 ⫺ 13743)
│ ││✔ {1} ⟨DR⟩ (A35 ⫺ 14377)
│ │││✔ {1} A1 ⫺ 12891
│ ││││✔ Asphalt : 0/0 (conf: NaN)
│ ││││✘ Asphalt : 0/0 (conf: NaN)
│ │││✘ {1} A1 ⫺ 10424
│ │││ ✔ Bitumen : 2/3 (conf: 0.6666666666666666)
│ │││ ✘ Bitumen : 1/2 (conf: 0.5)
│ ││✘ Asphalt : 17/18 (conf: 0.9444444444444444)
│ │✘ {1} A86 ⫺ 15507
│ │ ✔ Gravel : 4/4 (conf: 1.0)
│ │ ✘ Asphalt : 1/2 (conf: 0.5)
│ ✘ Bitumen : 15/15 (conf: 1.0)
✘ {1} ⟨P̅P̅⟩ (A6 ⫺₇₀ 11474)
 ✔ {1} A1 ⫺ 17637
 │✔ Painted metal sheets : 20/23 (conf: 0.8695652173913043)
 │✘ {1} A72 ⫹₇₀ 22403
 │ ✔ {1} ⟨P̅P̅⟩ (A17 ⫹₈₀ 14397)
 │ │✔ {1} ⟨PP⟩ (A31 ⫹ 14298)
 │ ││✔ {1} ⟨P̅P̅⟩ (A3 ⫺₈₀ 11286)
 │ │││✔ Gravel : 0/0 (conf: NaN)
 │ │││✘ Self-Blocking Bricks : 3/4 (conf: 0.75)
 │ ││✘ Gravel : 5/8 (conf: 0.625)
 │ │✘ {1} ⟨DR⟩ (A58 ⫺ 21601)
 │ │ ✔ {1} ⟨DR⟩ (A85 ⫺ 22403)
 │ │ │✔ Gravel : 0/0 (conf: NaN)
 │ │ │✘ Self-Blocking Bricks : 0/2 (conf: 0.0)
 │ │ ✘ Self-Blocking Bricks : 14/21 (conf: 0.6666666666666666)
 │ ✘ Bare Soil : 4/4 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A54 ⫹ 5043)
  ✔ {1} ⟨DR⟩ (A73 ⫹ 17261)
  │✔ Trees : 19/23 (conf: 0.8260869565217391)
  │✘ {1} A6 ⫹ 2764
  │ ✔ Meadows : 2/2 (conf: 1.0)
  │ ✘ Trees : 0/1 (conf: 0.0)
  ✘ {1} ⟨DR⟩ (A30 ⫺ 13426)
   ✔ Bare Soil : 1/1 (conf: 1.0)
   ✘ {1} ⟨DR⟩ (A102 ⫹ 21630)
    ✔ {1} ⟨P̅P̅⟩ (A83 ⫺₈₀ 19976)
    │✔ Bare Soil : 5/6 (conf: 0.8333333333333334)
    │✘ {1} A1 ⫹ 3864
    │ ✔ Bare Soil : 1/3 (conf: 0.3333333333333333)
    │ ✘ Meadows : 1/3 (conf: 0.3333333333333333)
    ✘ {1} ⟨DR⟩ (A82 ⫺ 25663)
     ✔ {1} ⟨P̅P̅⟩ (A89 ⫹₇₀ 25475)
     │✔ Bare Soil : 1/1 (conf: 1.0)
     │✘ Meadows : 6/8 (conf: 0.75)
     ✘ Meadows : 3/6 (conf: 0.5)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	80.56%	90.0%	60.0%	90.0%	45.0%	60.0%	100.0%	85.0%	100.0%	95.0%	90.0%	80.0%	90.0%	75.0%	63.16%	86.96%	62.96%	100.0%	79.17%	||	78.12%	[90.0, 68.57, 90.0, 56.25, 61.54, 93.02, 72.34, 100.0, 86.36]%	
  accuracy: 80.56% kappa: 78.12% 
 18  0  1  0  0  0  1  0  0	90.0%		Asphalt
  0 12  0  0  6  2  0  0  0	60.0%		Bare Soil
  2  0 18  0  0  0  0  0  0	90.0%		Bitumen
  0  0  1  9  0  1  9  0  0	45.0%		Gravel
  0  3  0  0 12  0  0  0  5	60.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  0  0  3  0  0 17  0  0	85.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  1  0  0  0 19	95.0%		Trees

overall_acc:	0.8055555555555556
κ =		0.78125
sensitivities:	[0.9, 0.6, 0.9, 0.45, 0.6, 1.0, 0.85, 1.0, 0.95]
specificities:	[0.9875, 0.98125, 0.9875, 0.98125, 0.95625, 0.98125, 0.9375, 1.0, 0.96875]
PPVs:		[0.9, 0.8, 0.9, 0.75, 0.631578947368421, 0.8695652173913043, 0.6296296296296297, 1.0, 0.7916666666666666]
NPVs:		[0.9875, 0.9515151515151515, 0.9875, 0.9345238095238095, 0.9503105590062112, 1.0, 0.9803921568627451, 1.0, 0.9935897435897436]
F1s:		[0.9, 0.6857142857142857, 0.9, 0.5625, 0.6153846153846154, 0.9302325581395349, 0.723404255319149, 1.0, 0.8636363636363636]
accuracies:	[0.9777777777777777, 0.9388888888888889, 0.9777777777777777, 0.9222222222222223, 0.9166666666666666, 0.9833333333333333, 0.9277777777777778, 1.0, 0.9666666666666667]
mean_accuracy:	0.95679012345679
Dataset_slice = (900) -> [20, 148, 247, 348, 409, 562, 685, 736, 873, 36, 113, 203, 353, 426, 567, 608, 720, 812, 75, 145, 228, 390, 401, 547, 663, 735, 807, 9, 112, 249, 319, 421, 510, 661, 792, 865, 92, 159, 288, 325, 482, 513, 648, 741, 803, 88, 121, 212, 365, 407, 588, 626, 748, 885, 28, 186, 224, 360, 406, 551, 662, 734, 857, 79, 198, 274, 367, 408, 523, 633, 708, 826, 8, 118, 297, 387, 439, 502, 687, 737, 890, 73, 122, 204, 330, 479, 565, 683, 789, 836, 83, 194, 243, 374, 472, 552, 632, 775, 856, 40, 185, 275, 366, 446, 594, 700, 784, 821, 61, 195, 273, 356, 473, 528, 620, 745, 810, 70, 136, 202, 343, 455, 558, 673, 783, 830, 51, 155, 282, 397, 450, 533, 647, 777, 892, 48, 161, 245, 331, 499, 518, 676, 728, 872, 50, 130, 281, 361, 425, 537, 671, 701, 852, 13, 103, 293, 378, 444, 583, 627, 788, 815, 27, 187, 240, 372, 415, 579, 606, 722, 823, 35, 125, 217, 391, 440, 535, 609, 706, 867, 69, 120, 236, 354, 466, 524, 628, 730, 868, 45, 157, 253, 309, 458, 517, 610, 791, 811, 97, 200, 277, 334, 485, 573, 617, 733, 900, 68, 197, 294, 394, 476, 543, 646, 727, 833, 3, 156, 264, 335, 423, 548, 640, 757, 831, 85, 102, 260, 381, 437, 597, 642, 723, 881, 94, 191, 234, 313, 416, 509, 653, 781, 893, 7, 140, 238, 399, 434, 566, 645, 763, 848, 19, 119, 226, 369, 462, 598, 680, 709, 835, 87, 167, 287, 318, 478, 563, 604, 755, 883, 1, 184, 262, 326, 483, 544, 636, 715, 820, 16, 163, 235, 306, 412, 532, 615, 766, 814, 25, 123, 284, 373, 414, 526, 691, 786, 859, 31, 196, 270, 398, 449, 557, 693, 751, 825, 64, 129, 211, 338, 500, 534, 619, 762, 828, 81, 146, 206, 388, 447, 515, 681, 796, 889, 57, 138, 246, 358, 420, 555, 605, 710, 824, 23, 115, 209, 322, 452, 504, 694, 761, 888, 90, 199, 232, 344, 492, 572, 614, 773, 874, 42, 164, 244, 310, 465, 568, 695, 760, 805, 26, 181, 248, 347, 428, 527, 650, 753, 891, 30, 128, 261, 345, 431, 595, 670, 785, 875, 91, 153, 227, 332, 471, 520, 689, 759, 866, 17, 134, 207, 385, 494, 577, 607, 747, 895, 59, 141, 229, 376, 457, 511, 675, 731, 858, 96, 150, 252, 302, 441, 507, 643, 705, 827, 2, 126, 300, 350, 445, 584, 602, 764, 846, 52, 131, 299, 357, 448, 550, 677, 704, 860, 24, 189, 223, 396, 489, 560, 659, 717, 896, 15, 193, 237, 351, 470, 576, 644, 770, 838, 86, 142, 205, 375, 477, 549, 624, 732, 851, 46, 106, 266, 327, 461, 581, 638, 726, 882, 67, 124, 286, 362, 495, 553, 667, 743, 840, 71, 174, 233, 389, 433, 592, 630, 765, 849, 66, 110, 213, 307, 419, 600, 634, 738, 845, 18, 114, 201, 364, 480, 546, 688, 767, 817, 58, 151, 290, 363, 411, 508, 655, 768, 899, 39, 108, 276, 340, 463, 599, 629, 718, 806, 34, 116, 256, 324, 464, 587, 699, 800, 841, 80, 162, 258, 314, 459, 593, 658, 707, 887, 82, 158, 231, 305, 493, 596, 652, 795, 870, 6, 171, 285, 352, 498, 539, 674, 794, 854, 53, 182, 272, 336, 403, 569, 668, 721, 864, 60, 105, 268, 386, 438, 582, 613, 714, 898, 93, 179, 271, 301, 443, 556, 612, 756, 832, 44, 170, 251, 329, 413, 540, 690, 713, 822, 32, 180, 289, 380, 424, 554, 697, 746, 837, 49, 111, 225, 337, 456, 503, 625, 787, 804, 43, 192, 219, 393, 475, 505, 603, 776, 842, 100, 152, 220, 346, 496, 516, 622, 750, 801, 41, 190, 230, 321, 469, 578, 682, 797, 884, 5, 178, 255, 368, 427, 525, 657, 782, 829, 54, 132, 280, 349, 410, 531, 635, 703, 802, 65, 154, 210, 384, 429, 521, 639, 754, 894, 72, 144, 296, 392, 490, 506, 684, 716, 816, 76, 147, 241, 341, 432, 536, 696, 719, 839, 98, 101, 216, 342, 484, 585, 665, 779, 897, 11, 149, 257, 333, 497, 541, 649, 780, 844, 78, 177, 218, 303, 481, 501, 631, 712, 834, 21, 117, 215, 315, 436, 571, 651, 790, 886, 62, 173, 214, 355, 488, 529, 686, 711, 808, 14, 139, 222, 339, 435, 586, 669, 702, 861, 22, 143, 208, 317, 442, 522, 660, 752, 880, 12, 176, 298, 328, 418, 512, 623, 725, 809, 37, 168, 269, 370, 453, 589, 641, 740, 847, 95, 135, 259, 323, 417, 574, 664, 749, 878, 74, 107, 254, 311, 404, 514, 698, 798, 818, 33, 183, 278, 304, 491, 591, 678, 799, 879, 99, 172, 239, 395, 402, 545, 654, 769, 853, 63, 127, 250, 316, 451, 519, 692, 724, 877, 29, 160, 292, 371, 474, 530, 672, 744, 813, 56, 109, 242, 312, 460, 542, 621, 793, 871, 10, 169, 279, 359, 405, 570, 601, 774, 876, 47, 137, 267, 377, 467, 559, 611, 739, 869, 4, 104, 291, 400, 422, 580, 616, 758, 863, 38, 188, 283, 320, 430, 538, 618, 778, 855, 84, 165, 221, 308, 454, 590, 656, 771, 850, 89, 175, 263, 382, 486, 564, 637, 729, 843, 55, 133, 265, 383, 487, 575, 666, 742, 819, 77, 166, 295, 379, 468, 561, 679, 772, 862]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1019.01 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	814.75 MBs	(shape (3, 4, 3, 4, 720, 1030, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 15:13:51 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (464+256=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A103 ⫹₈₀ 16438), purity -1.6020067707466827
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (227+237=464 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 11207), purity -1.1872599177312542
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (176+80=256 samples) on frame 1 with decision: {1} A9 ⫹₇₀ 6054, purity -0.6426543047775671
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (134+93=227 samples) on frame 1 with decision: {1} ⟨DR⟩ (A66 ⫹ 5400), purity -0.5978158377216994
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (74+102=176 samples) on frame 1 with decision: {1} ⟨PO⟩ (A16 ⫹₆₀ 12078), purity -0.5432721347138615
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (157+80=237 samples) on frame 1 with decision: {1} A2 ⫺₇₀ 21571, purity -0.6140459541989752
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (112+22=134 samples) on frame 1 with decision: {1} ⟨DR⟩ (A30 ⫺ 13426), purity -0.5934747673722578
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+72=93 samples) on frame 1 with decision: {1} A73 ⫹ 17112, purity -0.15005480872852917
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+80=102 samples) on frame 1 with decision: {1} ⟨DR⟩ (A76 ⫹ 13486), purity -0.4284607548725589
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+143=157 samples) on frame 1 with decision: {1} A72 ⫹₇₀ 22403, purity -0.6263177353328225
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+8=21 samples) on frame 1 with decision: {1} ⟨DR⟩ (A5 ⫺ 5608), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+9=22 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A15 ⫺₆₀ 11444), purity -0.39475755941212964
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (62+50=112 samples) on frame 1 with decision: {1} ⟨DR⟩ (A102 ⫹ 21670), purity -0.4940134386685798
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (77+66=143 samples) on frame 1 with decision: {1} A17 ⫹₈₀ 14437, purity -0.5456025525899266
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A1 ⫺₇₀ 10364, purity -0.2780013464101044
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (40+22=62 samples) on frame 1 with decision: {1} ⟨DR⟩ (A82 ⫺ 27169), purity -0.30801408050535345
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+37=50 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A83 ⫺₈₀ 19966), purity -0.3198613469996098
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+52=66 samples) on frame 1 with decision: {1} A3 ⫺₇₀ 11018, purity -0.3039849619894639
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (69+8=77 samples) on frame 1 with decision: {1} ⟨DR⟩ (A9 ⫺ 17716), purity -0.3214871528467561
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+6=22 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A96 ⫹₇₀ 26446), purity -0.2740146627319542
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+4=13 samples) on frame 1 with decision: {1} A1 ⫹ 3805, purity -0.21327605555690624
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (37+15=52 samples) on frame 1 with decision: {1} ⟨PO⟩ (A5 ⫹₆₀ 11811), purity -0.1836098562388883
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+35=69 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 13812), purity -0.2726674556025202
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+10=15 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A11 ⫹₇₀ 13228), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+4=16 samples) on frame 1 with decision: {1} ⟨PO⟩ (A75 ⫹₇₀ 21630), purity -0.17328679513998632
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+22=35 samples) on frame 1 with decision: {1} ⟨PO⟩ (A22 ⫺₆₀ 16835), purity -0.2474748500397366
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+7=13 samples) on frame 1 with decision: {1} A39 ⫺₆₀ 18648, purity -0.2079513271690637
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
514.367188 seconds (6.26 G allocations: 140.806 GiB, 19.14% gc time)
Train tree:
Decision Tree
Leaves: 28
Tot nodes: 55
Height: 9
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₈₀ 16438)
✔ {1} A9 ⫹₇₀ 6054
│✔ Shadows : 80/80 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A16 ⫹₆₀ 12078)
│ ✔ {1} ⟨DR⟩ (A76 ⫹ 13486)
│ │✔ Asphalt : 73/80 (conf: 0.9125)
│ │✘ {1} ⟨P̅P̅⟩ (A15 ⫺₆₀ 11444)
│ │ ✔ {1} A1 ⫺₇₀ 10364
│ │ │✔ Asphalt : 4/4 (conf: 1.0)
│ │ │✘ Bitumen : 4/5 (conf: 0.8)
│ │ ✘ Gravel : 13/13 (conf: 1.0)
│ ✘ Bitumen : 69/74 (conf: 0.9324324324324325)
✘ {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 11207)
 ✔ {1} A2 ⫺₇₀ 21571
 │✔ Painted metal sheets : 80/80 (conf: 1.0)
 │✘ {1} A72 ⫹₇₀ 22403
 │ ✔ {1} A17 ⫹₈₀ 14437
 │ │✔ {1} A3 ⫺₇₀ 11018
 │ ││✔ {1} ⟨PO⟩ (A5 ⫹₆₀ 11811)
 │ │││✔ {1} ⟨P̅P̅⟩ (A11 ⫹₇₀ 13228)
 │ ││││✔ Gravel : 10/10 (conf: 1.0)
 │ ││││✘ Self-Blocking Bricks : 5/5 (conf: 1.0)
 │ │││✘ Gravel : 37/37 (conf: 1.0)
 │ ││✘ Self-Blocking Bricks : 13/14 (conf: 0.9285714285714286)
 │ │✘ {1} ⟨DR⟩ (A9 ⫺ 17716)
 │ │ ✔ Gravel : 8/8 (conf: 1.0)
 │ │ ✘ {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 13812)
 │ │  ✔ {1} ⟨PO⟩ (A22 ⫺₆₀ 16835)
 │ │  │✔ Self-Blocking Bricks : 22/22 (conf: 1.0)
 │ │  │✘ {1} A39 ⫺₆₀ 18648
 │ │  │ ✔ Gravel : 7/7 (conf: 1.0)
 │ │  │ ✘ Self-Blocking Bricks : 5/6 (conf: 0.8333333333333334)
 │ │  ✘ Self-Blocking Bricks : 34/34 (conf: 1.0)
 │ ✘ Bare Soil : 14/14 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5400)
  ✔ {1} A73 ⫹ 17112
  │✔ Trees : 72/72 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A5 ⫺ 5608)
  │ ✔ Trees : 8/8 (conf: 1.0)
  │ ✘ Meadows : 13/13 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A30 ⫺ 13426)
   ✔ Bare Soil : 21/22 (conf: 0.9545454545454546)
   ✘ {1} ⟨DR⟩ (A102 ⫹ 21670)
    ✔ {1} ⟨P̅P̅⟩ (A83 ⫺₈₀ 19966)
    │✔ Bare Soil : 34/37 (conf: 0.918918918918919)
    │✘ {1} A1 ⫹ 3805
    │ ✔ Bare Soil : 2/4 (conf: 0.5)
    │ ✘ Meadows : 9/9 (conf: 1.0)
    ✘ {1} ⟨DR⟩ (A82 ⫺ 27169)
     ✔ {1} ⟨P̅P̅⟩ (A96 ⫹₇₀ 26446)
     │✔ Bare Soil : 6/6 (conf: 1.0)
     │✘ {1} ⟨PO⟩ (A75 ⫹₇₀ 21630)
     │ ✔ Bare Soil : 2/4 (conf: 0.5)
     │ ✘ Meadows : 12/12 (conf: 1.0)
     ✘ Meadows : 39/40 (conf: 0.975)
● [ 01/07/2021 15:22:25 ] Saving tree to file ./gandalf/trees/tree_04f196a056b60fd32a056662e0a10802ece6846ffd6d2dbc574516606ffd7d72.jld...
Test tree:
Decision Tree
Leaves: 28
Tot nodes: 55
Height: 9
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₈₀ 16438)
✔ {1} A9 ⫹₇₀ 6054
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A16 ⫹₆₀ 12078)
│ ✔ {1} ⟨DR⟩ (A76 ⫹ 13486)
│ │✔ Asphalt : 16/20 (conf: 0.8)
│ │✘ {1} ⟨P̅P̅⟩ (A15 ⫺₆₀ 11444)
│ │ ✔ {1} A1 ⫺₇₀ 10364
│ │ │✔ Asphalt : 1/2 (conf: 0.5)
│ │ │✘ Bitumen : 0/2 (conf: 0.0)
│ │ ✘ Gravel : 2/2 (conf: 1.0)
│ ✘ Bitumen : 17/19 (conf: 0.8947368421052632)
✘ {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 11207)
 ✔ {1} A2 ⫺₇₀ 21571
 │✔ Painted metal sheets : 20/21 (conf: 0.9523809523809523)
 │✘ {1} A72 ⫹₇₀ 22403
 │ ✔ {1} A17 ⫹₈₀ 14437
 │ │✔ {1} A3 ⫺₇₀ 11018
 │ ││✔ {1} ⟨PO⟩ (A5 ⫹₆₀ 11811)
 │ │││✔ {1} ⟨P̅P̅⟩ (A11 ⫹₇₀ 13228)
 │ ││││✔ Gravel : 1/2 (conf: 0.5)
 │ ││││✘ Self-Blocking Bricks : 0/2 (conf: 0.0)
 │ │││✘ Gravel : 5/8 (conf: 0.625)
 │ ││✘ Self-Blocking Bricks : 2/3 (conf: 0.6666666666666666)
 │ │✘ {1} ⟨DR⟩ (A9 ⫺ 17716)
 │ │ ✔ Gravel : 0/1 (conf: 0.0)
 │ │ ✘ {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 13812)
 │ │  ✔ {1} ⟨PO⟩ (A22 ⫺₆₀ 16835)
 │ │  │✔ Self-Blocking Bricks : 7/8 (conf: 0.875)
 │ │  │✘ {1} A39 ⫺₆₀ 18648
 │ │  │ ✔ Gravel : 3/5 (conf: 0.6)
 │ │  │ ✘ Self-Blocking Bricks : 0/0 (conf: NaN)
 │ │  ✘ Self-Blocking Bricks : 3/5 (conf: 0.6)
 │ ✘ Bare Soil : 3/3 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5400)
  ✔ {1} A73 ⫹ 17112
  │✔ Trees : 17/17 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A5 ⫺ 5608)
  │ ✔ Trees : 3/6 (conf: 0.5)
  │ ✘ Meadows : 3/3 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A30 ⫺ 13426)
   ✔ Bare Soil : 7/8 (conf: 0.875)
   ✘ {1} ⟨DR⟩ (A102 ⫹ 21670)
    ✔ {1} ⟨P̅P̅⟩ (A83 ⫺₈₀ 19966)
    │✔ Bare Soil : 3/4 (conf: 0.75)
    │✘ {1} A1 ⫹ 3805
    │ ✔ Bare Soil : 1/2 (conf: 0.5)
    │ ✘ Meadows : 1/2 (conf: 0.5)
    ✘ {1} ⟨DR⟩ (A82 ⫺ 27169)
     ✔ {1} ⟨P̅P̅⟩ (A96 ⫹₇₀ 26446)
     │✔ Bare Soil : 0/0 (conf: NaN)
     │✘ {1} ⟨PO⟩ (A75 ⫹₇₀ 21630)
     │ ✔ Bare Soil : 0/0 (conf: NaN)
     │ ✘ Meadows : 4/4 (conf: 1.0)
     ✘ Meadows : 7/11 (conf: 0.6363636363636364)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	81.11%	85.0%	70.0%	85.0%	55.0%	75.0%	100.0%	60.0%	100.0%	100.0%	77.27%	82.35%	80.95%	61.11%	75.0%	95.24%	66.67%	100.0%	86.96%	||	78.75%	[80.95, 75.68, 82.93, 57.89, 75.0, 97.56, 63.16, 100.0, 93.02]%	
  accuracy: 81.11% kappa: 78.75% 
 17  0  2  0  0  0  1  0  0	85.0%		Asphalt
  0 14  0  0  5  1  0  0  0	70.0%		Bare Soil
  3  0 17  0  0  0  0  0  0	85.0%		Bitumen
  2  0  2 11  0  0  5  0  0	55.0%		Gravel
  0  2  0  0 15  0  0  0  3	75.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  1  0  7  0  0 12  0  0	60.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  0  0  0  0 20	100.0%		Trees

overall_acc:	0.8111111111111111
κ =		0.7875
sensitivities:	[0.85, 0.7, 0.85, 0.55, 0.75, 1.0, 0.6, 1.0, 1.0]
specificities:	[0.96875, 0.98125, 0.975, 0.95625, 0.96875, 0.99375, 0.9625, 1.0, 0.98125]
PPVs:		[0.7727272727272727, 0.8235294117647058, 0.8095238095238095, 0.6111111111111112, 0.75, 0.9523809523809523, 0.6666666666666666, 1.0, 0.8695652173913043]
NPVs:		[0.9810126582278481, 0.9631901840490797, 0.9811320754716981, 0.9444444444444444, 0.96875, 1.0, 0.9506172839506173, 1.0, 1.0]
F1s:		[0.8095238095238095, 0.7567567567567568, 0.8292682926829268, 0.5789473684210527, 0.75, 0.975609756097561, 0.631578947368421, 1.0, 0.9302325581395349]
accuracies:	[0.9555555555555556, 0.95, 0.9611111111111111, 0.9111111111111111, 0.9444444444444444, 0.9944444444444445, 0.9222222222222223, 1.0, 0.9833333333333333]
mean_accuracy:	0.9580246913580246
Dataset_slice = (900) -> [14, 145, 209, 319, 413, 525, 605, 718, 878, 59, 126, 201, 393, 450, 561, 606, 736, 841, 55, 102, 207, 312, 445, 527, 660, 764, 888, 87, 121, 255, 362, 475, 501, 637, 796, 884, 44, 116, 271, 308, 421, 555, 635, 715, 875, 11, 131, 219, 380, 474, 532, 648, 743, 873, 60, 110, 268, 310, 440, 528, 674, 739, 876, 6, 101, 211, 304, 437, 518, 694, 795, 857, 83, 167, 283, 357, 414, 597, 655, 701, 854, 46, 162, 229, 318, 456, 585, 678, 770, 861, 20, 123, 288, 395, 424, 584, 666, 774, 882, 74, 140, 291, 373, 481, 551, 623, 763, 829, 32, 165, 281, 315, 434, 589, 634, 732, 820, 22, 135, 220, 398, 486, 544, 691, 780, 858, 40, 152, 286, 316, 451, 593, 610, 719, 855, 24, 103, 221, 350, 429, 515, 686, 709, 851, 18, 137, 230, 355, 438, 543, 665, 772, 848, 89, 125, 262, 390, 443, 595, 681, 710, 825, 62, 124, 264, 383, 406, 529, 653, 703, 818, 12, 172, 276, 377, 411, 517, 700, 741, 822, 31, 163, 204, 369, 471, 503, 687, 707, 839, 58, 168, 208, 302, 407, 547, 614, 742, 899, 30, 129, 224, 325, 415, 505, 642, 735, 801, 79, 104, 235, 326, 495, 519, 668, 753, 852, 99, 197, 213, 343, 464, 581, 676, 773, 897, 48, 173, 284, 388, 410, 568, 679, 760, 898, 67, 149, 275, 391, 455, 548, 695, 798, 842, 10, 198, 289, 360, 485, 554, 697, 766, 831, 5, 182, 244, 397, 487, 599, 698, 747, 844, 93, 164, 257, 384, 457, 530, 611, 756, 869, 64, 187, 246, 354, 458, 583, 659, 761, 837, 70, 134, 242, 371, 422, 577, 612, 784, 846, 41, 133, 256, 351, 473, 512, 630, 726, 865, 82, 158, 299, 322, 404, 507, 693, 724, 802, 84, 120, 290, 314, 423, 522, 661, 757, 867, 51, 199, 261, 359, 412, 523, 646, 771, 812, 81, 175, 206, 340, 472, 539, 609, 711, 824, 94, 181, 300, 303, 426, 514, 654, 729, 891, 23, 179, 266, 321, 459, 572, 669, 779, 856, 100, 176, 270, 376, 432, 560, 601, 751, 874, 90, 109, 278, 346, 418, 510, 602, 792, 823, 68, 186, 274, 379, 467, 556, 645, 762, 894, 43, 117, 265, 382, 480, 570, 617, 708, 879, 1, 178, 280, 344, 425, 504, 650, 794, 819, 95, 132, 277, 332, 491, 524, 683, 787, 828, 19, 113, 282, 378, 476, 579, 608, 720, 887, 98, 112, 292, 348, 462, 563, 640, 767, 849, 50, 106, 285, 352, 444, 550, 656, 791, 886, 33, 170, 295, 386, 493, 537, 643, 777, 850, 27, 136, 241, 337, 408, 564, 624, 783, 859, 63, 148, 279, 324, 427, 511, 696, 744, 893, 54, 119, 216, 372, 401, 575, 633, 740, 838, 86, 193, 254, 306, 428, 567, 652, 721, 805, 17, 188, 293, 399, 496, 508, 671, 758, 895, 91, 142, 273, 328, 494, 574, 641, 785, 835, 97, 189, 297, 320, 430, 531, 647, 790, 883, 57, 155, 263, 301, 492, 557, 690, 733, 847, 61, 196, 294, 347, 405, 594, 677, 745, 890, 75, 141, 205, 349, 436, 590, 675, 789, 814, 71, 183, 203, 341, 409, 562, 639, 716, 868, 92, 180, 258, 394, 441, 520, 616, 759, 881, 65, 177, 249, 309, 449, 598, 644, 722, 840, 37, 166, 272, 356, 498, 582, 657, 737, 815, 29, 195, 234, 331, 469, 513, 628, 778, 853, 21, 127, 218, 313, 435, 541, 670, 752, 804, 69, 184, 267, 368, 500, 534, 604, 793, 862, 3, 185, 298, 334, 488, 588, 673, 754, 872, 77, 139, 225, 327, 403, 516, 663, 788, 836, 56, 107, 260, 396, 490, 558, 619, 705, 811, 72, 200, 217, 342, 416, 580, 607, 768, 870, 8, 111, 227, 366, 465, 571, 620, 786, 821, 2, 190, 237, 374, 419, 596, 638, 755, 808, 73, 130, 233, 363, 482, 538, 667, 746, 863, 36, 159, 238, 307, 448, 578, 682, 765, 816, 45, 146, 250, 375, 463, 587, 621, 706, 866, 52, 153, 212, 335, 460, 566, 662, 717, 845, 53, 156, 287, 311, 478, 552, 629, 799, 860, 34, 143, 222, 389, 453, 526, 689, 769, 832, 28, 169, 259, 323, 452, 569, 699, 782, 826, 39, 128, 243, 365, 454, 533, 632, 712, 896, 76, 115, 231, 364, 461, 546, 692, 748, 803, 85, 105, 228, 400, 499, 559, 625, 775, 809, 66, 171, 240, 305, 402, 573, 631, 704, 833, 88, 108, 248, 387, 497, 521, 651, 727, 806, 15, 174, 247, 370, 417, 549, 626, 738, 813, 38, 154, 253, 339, 446, 586, 627, 702, 900, 9, 114, 202, 367, 489, 535, 688, 797, 810, 80, 192, 251, 353, 442, 540, 615, 728, 843, 25, 160, 223, 392, 447, 565, 636, 723, 880, 26, 191, 215, 329, 483, 591, 672, 749, 892, 7, 151, 252, 381, 484, 576, 603, 734, 871, 96, 194, 210, 338, 477, 536, 684, 781, 864, 16, 144, 296, 317, 466, 545, 649, 776, 817, 13, 147, 269, 333, 431, 553, 618, 730, 885, 47, 150, 236, 336, 470, 600, 613, 714, 830, 49, 157, 214, 385, 468, 509, 680, 725, 834, 35, 118, 239, 358, 479, 542, 622, 750, 889, 78, 122, 232, 345, 420, 502, 658, 800, 827, 42, 161, 245, 361, 433, 506, 664, 713, 877, 4, 138, 226, 330, 439, 592, 685, 731, 807]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1019.01 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	814.75 MBs	(shape (3, 4, 3, 4, 720, 1030, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 15:22:32 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (464+256=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A102 ⫹₆₀ 16141), purity -1.6074925509690732
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (227+237=464 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 11623), purity -1.172687963494111
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (175+81=256 samples) on frame 1 with decision: {1} ⟨DR⟩ (A56 ⫹ 5678), purity -0.6542218032297574
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (132+95=227 samples) on frame 1 with decision: {1} ⟨DR⟩ (A66 ⫹ 5400), purity -0.5855317033065968
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (75+100=175 samples) on frame 1 with decision: {1} ⟨PO⟩ (A16 ⫹ 12078), purity -0.5273165446844715
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (93+144=237 samples) on frame 1 with decision: {1} A35 ⫹₈₀ 20927, purity -0.5988333244783663
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (109+23=132 samples) on frame 1 with decision: {1} ⟨DR⟩ (A30 ⫺ 13436), purity -0.5569500206617933
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+79=93 samples) on frame 1 with decision: {1} A3 ⫺₇₀ 22730, purity -0.03873613943670581
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+74=95 samples) on frame 1 with decision: {1} A74 ⫹ 19976, purity -0.13224906695042526
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+88=100 samples) on frame 1 with decision: {1} ⟨DR⟩ (A86 ⫹ 14922), purity -0.4045776052126066
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+66=144 samples) on frame 1 with decision: {1} A17 ⫹₈₀ 14536, purity -0.5434195129249326
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+6=21 samples) on frame 1 with decision: {1} ⟨DR⟩ (A25 ⫺ 6896), purity 6.344131569286608e-17
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (61+48=109 samples) on frame 1 with decision: {1} ⟨DR⟩ (A102 ⫹ 21928), purity -0.4913737236400106
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (32+34=66 samples) on frame 1 with decision: {1} ⟨PO⟩ (A43 ⫺ 18182), purity -0.33227355504313144
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (54+24=78 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A1 ⫺₈₀ 13089), purity -0.3186513996270941
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+60=88 samples) on frame 1 with decision: {1} ⟨PO⟩ (A83 ⫹ 13079), purity -0.3090592391920243
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+14=24 samples) on frame 1 with decision: {1} A24 ⫹₆₀ 16934, purity -0.28555377923033853
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (45+16=61 samples) on frame 1 with decision: {1} ⟨DR⟩ (A31 ⫺ 11137), purity -0.31388426262532215
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+20=32 samples) on frame 1 with decision: {1} ⟨PP⟩ (A83 ⫺ 18370), purity -0.20317685836965527
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+14=28 samples) on frame 1 with decision: {1} ⟨DR⟩ (A99 ⫺ 16498), purity -0.37946838638102953
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+37=48 samples) on frame 1 with decision: {1} ⟨DR⟩ (A83 ⫺ 20491), purity -0.372699338304148
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A1 ⫺ 13386, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+6=16 samples) on frame 1 with decision: {1} ⟨DR⟩ (A6 ⫹ 5321), purity -0.20317685836965518
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A3 ⫺ 7124, purity -0.2520535202036165
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+4=14 samples) on frame 1 with decision: {1} A1 ⫺ 14387, purity -0.16066718417680237
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+16=20 samples) on frame 1 with decision: {1} A9 ⫹ 12841, purity -0.13862943611198905
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+28=37 samples) on frame 1 with decision: {1} A85 ⫹ 21264, purity -0.1670987618750246
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A1 ⫺ 10790, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A83 ⫹ 21224, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
496.167637 seconds (6.26 G allocations: 142.313 GiB, 21.34% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 8
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A102 ⫹₆₀ 16141)
✔ {1} ⟨DR⟩ (A56 ⫹ 5678)
│✔ Shadows : 80/81 (conf: 0.9876543209876543)
│✘ {1} ⟨PO⟩ (A16 ⫹ 12078)
│ ✔ {1} ⟨DR⟩ (A86 ⫹ 14922)
│ │✔ {1} ⟨PO⟩ (A83 ⫹ 13079)
│ ││✔ Asphalt : 59/60 (conf: 0.9833333333333333)
│ ││✘ {1} ⟨DR⟩ (A99 ⫺ 16498)
│ ││ ✔ Asphalt : 14/14 (conf: 1.0)
│ ││ ✘ {1} A1 ⫺ 14387
│ ││  ✔ Asphalt : 3/4 (conf: 0.75)
│ ││  ✘ Bitumen : 10/10 (conf: 1.0)
│ │✘ Gravel : 12/12 (conf: 1.0)
│ ✘ Bitumen : 70/75 (conf: 0.9333333333333333)
✘ {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 11623)
 ✔ {1} A35 ⫹₈₀ 20927
 │✔ {1} A17 ⫹₈₀ 14536
 ││✔ {1} ⟨PO⟩ (A43 ⫺ 18182)
 │││✔ Gravel : 34/34 (conf: 1.0)
 │││✘ {1} ⟨PP⟩ (A83 ⫺ 18370)
 │││ ✔ {1} A9 ⫹ 12841
 │││ │✔ Self-Blocking Bricks : 16/16 (conf: 1.0)
 │││ │✘ Self-Blocking Bricks : 2/4 (conf: 0.5)
 │││ ✘ Gravel : 12/12 (conf: 1.0)
 ││✘ {1} ⟨P̅P̅⟩ (A1 ⫺₈₀ 13089)
 ││ ✔ {1} A24 ⫹₆₀ 16934
 ││ │✔ Gravel : 13/14 (conf: 0.9285714285714286)
 ││ │✘ {1} A1 ⫺ 13386
 ││ │ ✔ Self-Blocking Bricks : 6/6 (conf: 1.0)
 ││ │ ✘ Self-Blocking Bricks : 3/4 (conf: 0.75)
 ││ ✘ Self-Blocking Bricks : 52/54 (conf: 0.9629629629629629)
 │✘ {1} A3 ⫺₇₀ 22730
 │ ✔ Painted metal sheets : 79/79 (conf: 1.0)
 │ ✘ Bare Soil : 13/14 (conf: 0.9285714285714286)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5400)
  ✔ {1} A74 ⫹ 19976
  │✔ Trees : 74/74 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A25 ⫺ 6896)
  │ ✔ Trees : 6/6 (conf: 1.0)
  │ ✘ Meadows : 15/15 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A30 ⫺ 13436)
   ✔ Bare Soil : 23/23 (conf: 1.0)
   ✘ {1} ⟨DR⟩ (A102 ⫹ 21928)
    ✔ {1} ⟨DR⟩ (A83 ⫺ 20491)
    │✔ {1} A85 ⫹ 21264
    ││✔ Bare Soil : 28/28 (conf: 1.0)
    ││✘ {1} A83 ⫹ 21224
    ││ ✔ Meadows : 4/4 (conf: 1.0)
    ││ ✘ Bare Soil : 5/5 (conf: 1.0)
    │✘ {1} A3 ⫺ 7124
    │ ✔ Meadows : 7/7 (conf: 1.0)
    │ ✘ Bare Soil : 2/4 (conf: 0.5)
    ✘ {1} ⟨DR⟩ (A31 ⫺ 11137)
     ✔ {1} ⟨DR⟩ (A6 ⫹ 5321)
     │✔ Bare Soil : 6/6 (conf: 1.0)
     │✘ {1} A1 ⫺ 10790
     │ ✔ Meadows : 6/6 (conf: 1.0)
     │ ✘ Meadows : 3/4 (conf: 0.75)
     ✘ Meadows : 43/45 (conf: 0.9555555555555556)
● [ 01/07/2021 15:30:48 ] Saving tree to file ./gandalf/trees/tree_7ee47537c457a34b2388dd255e1ef2907977264161817264ae350c306a494735.jld...
Test tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 8
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A102 ⫹₆₀ 16141)
✔ {1} ⟨DR⟩ (A56 ⫹ 5678)
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A16 ⫹ 12078)
│ ✔ {1} ⟨DR⟩ (A86 ⫹ 14922)
│ │✔ {1} ⟨PO⟩ (A83 ⫹ 13079)
│ ││✔ Asphalt : 15/17 (conf: 0.8823529411764706)
│ ││✘ {1} ⟨DR⟩ (A99 ⫺ 16498)
│ ││ ✔ Asphalt : 3/5 (conf: 0.6)
│ ││ ✘ {1} A1 ⫺ 14387
│ ││  ✔ Asphalt : 1/3 (conf: 0.3333333333333333)
│ ││  ✘ Bitumen : 1/2 (conf: 0.5)
│ │✘ Gravel : 0/0 (conf: NaN)
│ ✘ Bitumen : 17/20 (conf: 0.85)
✘ {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 11623)
 ✔ {1} A35 ⫹₈₀ 20927
 │✔ {1} A17 ⫹₈₀ 14536
 ││✔ {1} ⟨PO⟩ (A43 ⫺ 18182)
 │││✔ Gravel : 5/7 (conf: 0.7142857142857143)
 │││✘ {1} ⟨PP⟩ (A83 ⫺ 18370)
 │││ ✔ {1} A9 ⫹ 12841
 │││ │✔ Self-Blocking Bricks : 1/1 (conf: 1.0)
 │││ │✘ Self-Blocking Bricks : 0/0 (conf: NaN)
 │││ ✘ Gravel : 5/5 (conf: 1.0)
 ││✘ {1} ⟨P̅P̅⟩ (A1 ⫺₈₀ 13089)
 ││ ✔ {1} A24 ⫹₆₀ 16934
 ││ │✔ Gravel : 2/5 (conf: 0.4)
 ││ │✘ {1} A1 ⫺ 13386
 ││ │ ✔ Self-Blocking Bricks : 2/2 (conf: 1.0)
 ││ │ ✘ Self-Blocking Bricks : 0/0 (conf: NaN)
 ││ ✘ Self-Blocking Bricks : 9/12 (conf: 0.75)
 │✘ {1} A3 ⫺₇₀ 22730
 │ ✔ Painted metal sheets : 20/20 (conf: 1.0)
 │ ✘ Bare Soil : 3/3 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5400)
  ✔ {1} A74 ⫹ 19976
  │✔ Trees : 16/17 (conf: 0.9411764705882353)
  │✘ {1} ⟨DR⟩ (A25 ⫺ 6896)
  │ ✔ Trees : 4/4 (conf: 1.0)
  │ ✘ Meadows : 3/3 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A30 ⫺ 13436)
   ✔ Bare Soil : 5/7 (conf: 0.7142857142857143)
   ✘ {1} ⟨DR⟩ (A102 ⫹ 21928)
    ✔ {1} ⟨DR⟩ (A83 ⫺ 20491)
    │✔ {1} A85 ⫹ 21264
    ││✔ Bare Soil : 5/5 (conf: 1.0)
    ││✘ {1} A83 ⫹ 21224
    ││ ✔ Meadows : 3/3 (conf: 1.0)
    ││ ✘ Bare Soil : 3/3 (conf: 1.0)
    │✘ {1} A3 ⫺ 7124
    │ ✔ Meadows : 1/1 (conf: 1.0)
    │ ✘ Bare Soil : 1/4 (conf: 0.25)
    ✘ {1} ⟨DR⟩ (A31 ⫺ 11137)
     ✔ {1} ⟨DR⟩ (A6 ⫹ 5321)
     │✔ Bare Soil : 0/0 (conf: NaN)
     │✘ {1} A1 ⫺ 10790
     │ ✔ Meadows : 1/1 (conf: 1.0)
     │ ✘ Meadows : 1/2 (conf: 0.5)
     ✘ Meadows : 7/8 (conf: 0.875)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	85.56%	95.0%	85.0%	90.0%	60.0%	80.0%	100.0%	60.0%	100.0%	100.0%	76.0%	77.27%	81.82%	70.59%	88.89%	100.0%	80.0%	100.0%	95.24%	||	83.75%	[84.44, 80.95, 85.71, 64.86, 84.21, 100.0, 68.57, 100.0, 97.56]%	
  accuracy: 85.56% kappa: 83.75% 
 19  0  1  0  0  0  0  0  0	95.0%		Asphalt
  0 17  0  0  2  0  1  0  0	85.0%		Bare Soil
  2  0 18  0  0  0  0  0  0	90.0%		Bitumen
  3  0  3 12  0  0  2  0  0	60.0%		Gravel
  0  3  0  0 16  0  0  0  1	80.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  1  2  0  5  0  0 12  0  0	60.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  0  0  0  0 20	100.0%		Trees

overall_acc:	0.8555555555555555
κ =		0.8375
sensitivities:	[0.95, 0.85, 0.9, 0.6, 0.8, 1.0, 0.6, 1.0, 1.0]
specificities:	[0.9625, 0.96875, 0.975, 0.96875, 0.9875, 1.0, 0.98125, 1.0, 0.99375]
PPVs:		[0.76, 0.7727272727272727, 0.8181818181818182, 0.7058823529411765, 0.8888888888888888, 1.0, 0.8, 1.0, 0.9523809523809523]
NPVs:		[0.9935483870967742, 0.9810126582278481, 0.9873417721518988, 0.950920245398773, 0.9753086419753086, 1.0, 0.9515151515151515, 1.0, 1.0]
F1s:		[0.8444444444444444, 0.8095238095238095, 0.8571428571428571, 0.6486486486486487, 0.8421052631578947, 1.0, 0.6857142857142857, 1.0, 0.975609756097561]
accuracies:	[0.9611111111111111, 0.9555555555555556, 0.9666666666666667, 0.9277777777777778, 0.9666666666666667, 1.0, 0.9388888888888889, 1.0, 0.9944444444444445]
mean_accuracy:	0.9679012345679013
Dataset_slice = (900) -> [70, 177, 261, 314, 419, 581, 639, 713, 846, 28, 119, 212, 327, 454, 562, 671, 731, 805, 31, 139, 280, 374, 459, 507, 684, 793, 820, 19, 178, 249, 324, 453, 509, 643, 732, 831, 5, 145, 248, 337, 422, 598, 659, 780, 874, 75, 174, 287, 378, 420, 519, 670, 791, 844, 12, 144, 202, 385, 465, 588, 689, 721, 897, 26, 108, 298, 344, 403, 544, 641, 785, 801, 67, 162, 228, 360, 498, 513, 628, 725, 881, 14, 125, 236, 322, 482, 571, 638, 706, 857, 50, 105, 214, 320, 440, 559, 627, 737, 841, 25, 148, 229, 376, 423, 535, 679, 712, 826, 11, 196, 219, 397, 434, 552, 633, 714, 893, 51, 170, 257, 399, 417, 534, 607, 764, 888, 6, 199, 207, 301, 427, 583, 696, 781, 812, 4, 127, 273, 338, 450, 590, 602, 738, 827, 63, 141, 270, 302, 486, 586, 654, 716, 814, 62, 118, 276, 392, 435, 511, 680, 703, 829, 54, 194, 216, 336, 437, 569, 669, 701, 880, 73, 190, 251, 349, 411, 582, 631, 724, 885, 16, 168, 238, 312, 449, 597, 657, 787, 860, 76, 133, 292, 308, 436, 560, 606, 704, 843, 94, 191, 234, 307, 469, 566, 656, 752, 808, 21, 172, 253, 370, 461, 556, 667, 789, 863, 96, 176, 295, 388, 401, 578, 687, 794, 832, 97, 132, 275, 382, 475, 555, 624, 796, 878, 60, 173, 217, 325, 470, 514, 683, 763, 894, 9, 109, 272, 398, 402, 510, 619, 735, 869, 40, 154, 250, 303, 443, 524, 652, 799, 851, 72, 113, 240, 368, 431, 501, 663, 756, 899, 99, 156, 279, 381, 497, 540, 664, 759, 806, 44, 167, 220, 335, 489, 523, 661, 710, 866, 91, 104, 245, 357, 416, 533, 608, 777, 872, 92, 116, 297, 355, 412, 553, 647, 779, 855, 71, 166, 246, 351, 426, 536, 646, 745, 853, 13, 192, 203, 394, 410, 529, 697, 798, 828, 98, 129, 206, 331, 414, 537, 640, 743, 858, 79, 122, 281, 346, 448, 504, 682, 723, 879, 18, 137, 224, 371, 442, 549, 666, 782, 816, 48, 101, 289, 362, 487, 589, 695, 746, 835, 56, 175, 285, 350, 456, 516, 677, 775, 833, 22, 103, 242, 356, 408, 502, 693, 741, 882, 35, 124, 293, 361, 428, 577, 698, 707, 883, 81, 189, 262, 364, 460, 547, 691, 773, 807, 84, 187, 230, 342, 478, 557, 681, 795, 849, 37, 181, 208, 310, 418, 521, 673, 772, 867, 87, 120, 299, 359, 458, 530, 630, 768, 822, 77, 117, 237, 354, 462, 538, 668, 771, 854, 34, 115, 231, 379, 429, 525, 637, 727, 815, 65, 155, 205, 316, 495, 550, 690, 733, 875, 7, 121, 252, 319, 488, 508, 625, 748, 802, 41, 123, 264, 358, 499, 503, 672, 790, 852, 3, 182, 201, 353, 452, 531, 623, 786, 837, 59, 193, 290, 345, 439, 558, 653, 758, 850, 55, 186, 296, 372, 457, 546, 636, 766, 877, 43, 126, 241, 377, 463, 554, 699, 709, 809, 29, 161, 263, 395, 405, 551, 605, 749, 870, 8, 159, 221, 333, 471, 543, 658, 715, 817, 86, 158, 227, 347, 413, 592, 662, 722, 810, 46, 157, 274, 304, 424, 561, 613, 719, 896, 64, 112, 204, 332, 445, 585, 610, 753, 886, 78, 195, 211, 391, 430, 545, 676, 757, 868, 85, 198, 209, 340, 493, 575, 655, 740, 803, 15, 152, 282, 317, 433, 600, 688, 755, 818, 1, 149, 258, 400, 477, 595, 604, 765, 821, 42, 128, 254, 309, 464, 584, 615, 761, 813, 100, 130, 271, 326, 500, 573, 603, 744, 871, 30, 197, 267, 323, 425, 594, 635, 797, 864, 10, 140, 283, 393, 468, 542, 674, 788, 840, 89, 134, 218, 389, 441, 596, 634, 767, 839, 88, 114, 278, 318, 446, 532, 617, 728, 873, 49, 179, 277, 365, 467, 528, 620, 754, 865, 17, 160, 247, 383, 481, 568, 618, 792, 892, 23, 183, 223, 339, 479, 587, 629, 750, 898, 27, 142, 286, 311, 415, 570, 692, 776, 823, 20, 150, 259, 305, 421, 522, 651, 736, 884, 68, 171, 288, 329, 407, 526, 694, 729, 834, 69, 169, 243, 352, 494, 567, 644, 747, 804, 24, 106, 284, 384, 491, 520, 675, 730, 811, 74, 110, 235, 390, 473, 579, 650, 717, 887, 36, 163, 256, 373, 406, 515, 611, 720, 830, 57, 185, 266, 343, 480, 548, 601, 705, 856, 53, 180, 239, 306, 476, 527, 614, 734, 819, 95, 200, 255, 369, 404, 541, 626, 708, 842, 61, 107, 226, 348, 409, 518, 660, 702, 889, 66, 135, 265, 380, 484, 512, 649, 762, 890, 52, 111, 233, 328, 472, 565, 700, 800, 900, 58, 147, 210, 315, 447, 506, 642, 778, 862, 47, 153, 232, 367, 474, 517, 678, 742, 845, 83, 143, 268, 341, 432, 574, 632, 784, 891, 39, 146, 215, 313, 490, 572, 616, 739, 861, 93, 165, 244, 330, 466, 591, 612, 774, 838, 90, 138, 225, 363, 451, 539, 686, 718, 847, 33, 184, 291, 396, 455, 593, 648, 783, 825, 2, 151, 300, 334, 496, 505, 665, 770, 848, 38, 102, 260, 366, 492, 576, 622, 769, 859, 80, 131, 269, 375, 483, 580, 609, 751, 895, 82, 136, 222, 386, 485, 563, 645, 760, 836, 45, 188, 213, 321, 444, 599, 685, 726, 876, 32, 164, 294, 387, 438, 564, 621, 711, 824]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1019.01 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	814.75 MBs	(shape (3, 4, 3, 4, 720, 1030, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 15:30:56 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (464+256=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A101 ⫹₇₀ 15982), purity -1.6074925509690732
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (228+236=464 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A6 ⫺₇₀ 11474), purity -1.1841900160789554
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (175+81=256 samples) on frame 1 with decision: {1} ⟨DR⟩ (A50 ⫹ 6916), purity -0.6542218032297574
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (133+95=228 samples) on frame 1 with decision: {1} ⟨DR⟩ (A66 ⫹ 5400), purity -0.6087819163275868
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (89+86=175 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A16 ⫺ 12069), purity -0.505768559983705
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (157+79=236 samples) on frame 1 with decision: {1} A2 ⫺₇₀ 21571, purity -0.6100199021380223
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (106+27=133 samples) on frame 1 with decision: {1} ⟨DR⟩ (A28 ⫺ 12782), purity -0.563984978130409
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (77+9=86 samples) on frame 1 with decision: {1} ⟨PO⟩ (A72 ⫹ 13159), purity -0.16047555616392703
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+67=89 samples) on frame 1 with decision: {1} ⟨PP⟩ (A76 ⫹ 13307), purity -0.313620435703815
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+72=95 samples) on frame 1 with decision: {1} A73 ⫹ 17112, purity -0.15642191175156434
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+144=157 samples) on frame 1 with decision: {1} A72 ⫹₇₀ 22403, purity -0.6314112245275991
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A1 ⫺ 10562, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+7=22 samples) on frame 1 with decision: {1} ⟨DR⟩ (A12 ⫺ 12663), purity -0.2974893013608361
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+8=23 samples) on frame 1 with decision: {1} ⟨DR⟩ (A4 ⫺ 6936), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (65+41=106 samples) on frame 1 with decision: {1} ⟨DR⟩ (A102 ⫹ 21630), purity -0.47814148010742097
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+68=144 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A16 ⫹₈₀ 14377), purity -0.5513654813402143
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+27=65 samples) on frame 1 with decision: {1} A75 ⫺ 21680, purity -0.33693379776548427
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+30=41 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A83 ⫺₈₀ 19738), purity -0.3364238928092223
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (30+38=68 samples) on frame 1 with decision: {1} ⟨PO⟩ (A3 ⫹₆₀ 11514), purity -0.38734695384232243
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (68+8=76 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A1 ⫺₇₀ 15309), purity -0.32408313006855965
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A1 ⫺ 9046, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+11=38 samples) on frame 1 with decision: {1} ⟨DR⟩ (A81 ⫺ 26446), purity -0.3572337947534483
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+15=38 samples) on frame 1 with decision: {1} ⟨PO⟩ (A17 ⫺ 14209), purity -0.4135904253681186
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+62=68 samples) on frame 1 with decision: {1} A55 ⫹₇₀ 20699, purity -0.21639930984634884
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} ⟨DR⟩ (A77 ⫹ 21799), purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+7=23 samples) on frame 1 with decision: {1} ⟨DR⟩ (A29 ⫹ 13525), purity -0.18208204869986086
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
508.664284 seconds (6.18 G allocations: 138.112 GiB, 18.57% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 27
Tot nodes: 53
Height: 8
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A101 ⫹₇₀ 15982)
✔ {1} ⟨DR⟩ (A50 ⫹ 6916)
│✔ Shadows : 80/81 (conf: 0.9876543209876543)
│✘ {1} ⟨P̅P̅⟩ (A16 ⫺ 12069)
│ ✔ {1} ⟨PO⟩ (A72 ⫹ 13159)
│ │✔ {1} A1 ⫺ 10562
│ ││✔ Asphalt : 5/5 (conf: 1.0)
│ ││✘ Asphalt : 3/4 (conf: 0.75)
│ │✘ Bitumen : 75/77 (conf: 0.974025974025974)
│ ✘ {1} ⟨PP⟩ (A76 ⫹ 13307)
│  ✔ Asphalt : 65/67 (conf: 0.9701492537313433)
│  ✘ {1} ⟨DR⟩ (A12 ⫺ 12663)
│   ✔ Asphalt : 6/7 (conf: 0.8571428571428571)
│   ✘ Gravel : 14/15 (conf: 0.9333333333333333)
✘ {1} ⟨P̅P̅⟩ (A6 ⫺₇₀ 11474)
 ✔ {1} A2 ⫺₇₀ 21571
 │✔ Painted metal sheets : 79/79 (conf: 1.0)
 │✘ {1} A72 ⫹₇₀ 22403
 │ ✔ {1} ⟨P̅P̅⟩ (A16 ⫹₈₀ 14377)
 │ │✔ {1} ⟨PO⟩ (A3 ⫹₆₀ 11514)
 │ ││✔ {1} ⟨PO⟩ (A17 ⫺ 14209)
 │ │││✔ Self-Blocking Bricks : 14/15 (conf: 0.9333333333333333)
 │ │││✘ {1} ⟨DR⟩ (A29 ⫹ 13525)
 │ │││ ✔ Self-Blocking Bricks : 5/7 (conf: 0.7142857142857143)
 │ │││ ✘ Gravel : 16/16 (conf: 1.0)
 │ ││✘ Gravel : 30/30 (conf: 1.0)
 │ │✘ {1} ⟨P̅P̅⟩ (A1 ⫺₇₀ 15309)
 │ │ ✔ Gravel : 8/8 (conf: 1.0)
 │ │ ✘ {1} A55 ⫹₇₀ 20699
 │ │  ✔ Self-Blocking Bricks : 59/62 (conf: 0.9516129032258065)
 │ │  ✘ Gravel : 5/6 (conf: 0.8333333333333334)
 │ ✘ Bare Soil : 13/13 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5400)
  ✔ {1} A73 ⫹ 17112
  │✔ Trees : 72/72 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A4 ⫺ 6936)
  │ ✔ Trees : 8/8 (conf: 1.0)
  │ ✘ Meadows : 15/15 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A28 ⫺ 12782)
   ✔ Bare Soil : 26/27 (conf: 0.9629629629629629)
   ✘ {1} ⟨DR⟩ (A102 ⫹ 21630)
    ✔ {1} ⟨P̅P̅⟩ (A83 ⫺₈₀ 19738)
    │✔ Bare Soil : 28/30 (conf: 0.9333333333333333)
    │✘ {1} A1 ⫺ 9046
    │ ✔ Meadows : 7/7 (conf: 1.0)
    │ ✘ Bare Soil : 3/4 (conf: 0.75)
    ✘ {1} A75 ⫺ 21680
     ✔ Meadows : 27/27 (conf: 1.0)
     ✘ {1} ⟨DR⟩ (A81 ⫺ 26446)
      ✔ {1} ⟨DR⟩ (A77 ⫹ 21799)
      │✔ Bare Soil : 7/7 (conf: 1.0)
      │✘ Meadows : 3/4 (conf: 0.75)
      ✘ Meadows : 25/27 (conf: 0.9259259259259259)
● [ 01/07/2021 15:39:25 ] Saving tree to file ./gandalf/trees/tree_005b990c6f08f423af0c179ee3d68077fba727b0a7927be127b4d16f3b2d0077.jld...
Test tree:
Decision Tree
Leaves: 27
Tot nodes: 53
Height: 8
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A101 ⫹₇₀ 15982)
✔ {1} ⟨DR⟩ (A50 ⫹ 6916)
│✔ Shadows : 20/21 (conf: 0.9523809523809523)
│✘ {1} ⟨P̅P̅⟩ (A16 ⫺ 12069)
│ ✔ {1} ⟨PO⟩ (A72 ⫹ 13159)
│ │✔ {1} A1 ⫺ 10562
│ ││✔ Asphalt : 3/3 (conf: 1.0)
│ ││✘ Asphalt : 0/0 (conf: NaN)
│ │✘ Bitumen : 17/18 (conf: 0.9444444444444444)
│ ✘ {1} ⟨PP⟩ (A76 ⫹ 13307)
│  ✔ Asphalt : 14/15 (conf: 0.9333333333333333)
│  ✘ {1} ⟨DR⟩ (A12 ⫺ 12663)
│   ✔ Asphalt : 1/2 (conf: 0.5)
│   ✘ Gravel : 2/2 (conf: 1.0)
✘ {1} ⟨P̅P̅⟩ (A6 ⫺₇₀ 11474)
 ✔ {1} A2 ⫺₇₀ 21571
 │✔ Painted metal sheets : 20/21 (conf: 0.9523809523809523)
 │✘ {1} A72 ⫹₇₀ 22403
 │ ✔ {1} ⟨P̅P̅⟩ (A16 ⫹₈₀ 14377)
 │ │✔ {1} ⟨PO⟩ (A3 ⫹₆₀ 11514)
 │ ││✔ {1} ⟨PO⟩ (A17 ⫺ 14209)
 │ │││✔ Self-Blocking Bricks : 2/7 (conf: 0.2857142857142857)
 │ │││✘ {1} ⟨DR⟩ (A29 ⫹ 13525)
 │ │││ ✔ Self-Blocking Bricks : 1/2 (conf: 0.5)
 │ │││ ✘ Gravel : 5/8 (conf: 0.625)
 │ ││✘ Gravel : 3/3 (conf: 1.0)
 │ │✘ {1} ⟨P̅P̅⟩ (A1 ⫺₇₀ 15309)
 │ │ ✔ Gravel : 1/3 (conf: 0.3333333333333333)
 │ │ ✘ {1} A55 ⫹₇₀ 20699
 │ │  ✔ Self-Blocking Bricks : 11/15 (conf: 0.7333333333333333)
 │ │  ✘ Gravel : 0/1 (conf: 0.0)
 │ ✘ Bare Soil : 4/4 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5400)
  ✔ {1} A73 ⫹ 17112
  │✔ Trees : 17/17 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A4 ⫺ 6936)
  │ ✔ Trees : 0/0 (conf: NaN)
  │ ✘ Meadows : 4/7 (conf: 0.5714285714285714)
  ✘ {1} ⟨DR⟩ (A28 ⫺ 12782)
   ✔ Bare Soil : 3/4 (conf: 0.75)
   ✘ {1} ⟨DR⟩ (A102 ⫹ 21630)
    ✔ {1} ⟨P̅P̅⟩ (A83 ⫺₈₀ 19738)
    │✔ Bare Soil : 8/9 (conf: 0.8888888888888888)
    │✘ {1} A1 ⫺ 9046
    │ ✔ Meadows : 1/2 (conf: 0.5)
    │ ✘ Bare Soil : 0/3 (conf: 0.0)
    ✘ {1} A75 ⫺ 21680
     ✔ Meadows : 3/4 (conf: 0.75)
     ✘ {1} ⟨DR⟩ (A81 ⫺ 26446)
      ✔ {1} ⟨DR⟩ (A77 ⫹ 21799)
      │✔ Bare Soil : 0/2 (conf: 0.0)
      │✘ Meadows : 0/0 (conf: NaN)
      ✘ Meadows : 5/7 (conf: 0.7142857142857143)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	80.56%	90.0%	75.0%	85.0%	55.0%	65.0%	100.0%	70.0%	100.0%	85.0%	90.0%	68.18%	94.44%	64.71%	65.0%	95.24%	58.33%	95.24%	100.0%	||	78.12%	[90.0, 71.43, 89.47, 59.46, 65.0, 97.56, 63.64, 97.56, 91.89]%	
  accuracy: 80.56% kappa: 78.12% 
 18  0  1  0  0  0  1  0  0	90.0%		Asphalt
  0 15  0  0  4  1  0  0  0	75.0%		Bare Soil
  1  0 17  0  0  0  2  0  0	85.0%		Bitumen
  1  0  0 11  0  0  7  1  0	55.0%		Gravel
  0  7  0  0 13  0  0  0  0	65.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  0  0  6  0  0 14  0  0	70.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  3  0  0  0 17	85.0%		Trees

overall_acc:	0.8055555555555556
κ =		0.78125
sensitivities:	[0.9, 0.75, 0.85, 0.55, 0.65, 1.0, 0.7, 1.0, 0.85]
specificities:	[0.9875, 0.95625, 0.99375, 0.9625, 0.95625, 0.99375, 0.9375, 0.99375, 1.0]
PPVs:		[0.9, 0.6818181818181818, 0.9444444444444444, 0.6470588235294118, 0.65, 0.9523809523809523, 0.5833333333333334, 0.9523809523809523, 1.0]
NPVs:		[0.9875, 0.9683544303797469, 0.9814814814814815, 0.9447852760736196, 0.95625, 1.0, 0.9615384615384616, 1.0, 0.9815950920245399]
F1s:		[0.9, 0.7142857142857143, 0.8947368421052632, 0.5945945945945946, 0.65, 0.975609756097561, 0.6363636363636364, 0.975609756097561, 0.918918918918919]
accuracies:	[0.9777777777777777, 0.9333333333333333, 0.9777777777777777, 0.9166666666666666, 0.9222222222222223, 0.9944444444444445, 0.9111111111111111, 0.9944444444444445, 0.9833333333333333]
mean_accuracy:	0.95679012345679
Dataset_slice = (900) -> [21, 173, 279, 381, 499, 569, 691, 744, 847, 64, 138, 231, 310, 469, 582, 680, 764, 808, 10, 149, 269, 301, 481, 525, 602, 729, 862, 84, 168, 271, 334, 458, 600, 640, 775, 883, 13, 194, 289, 400, 497, 548, 626, 769, 896, 73, 107, 225, 375, 444, 512, 628, 755, 891, 20, 174, 213, 347, 441, 545, 677, 706, 849, 60, 159, 210, 398, 448, 505, 611, 742, 854, 22, 196, 237, 354, 492, 558, 667, 779, 832, 27, 187, 300, 345, 461, 572, 696, 704, 877, 3, 110, 264, 394, 498, 583, 655, 772, 813, 48, 125, 238, 341, 464, 565, 688, 721, 814, 24, 171, 293, 356, 470, 502, 631, 757, 836, 1, 123, 260, 339, 417, 519, 685, 712, 838, 95, 165, 224, 315, 422, 550, 652, 762, 880, 30, 190, 294, 327, 484, 589, 684, 713, 829, 29, 188, 211, 359, 429, 586, 645, 733, 889, 65, 176, 232, 305, 500, 559, 698, 780, 885, 85, 157, 282, 357, 472, 516, 647, 800, 898, 4, 179, 202, 362, 436, 585, 681, 752, 801, 50, 169, 261, 371, 460, 594, 694, 796, 815, 8, 131, 256, 343, 439, 590, 610, 785, 843, 89, 192, 240, 382, 447, 557, 606, 756, 804, 68, 144, 221, 342, 438, 560, 683, 751, 876, 23, 134, 277, 335, 419, 587, 635, 748, 895, 56, 116, 278, 364, 459, 581, 644, 797, 865, 70, 121, 292, 307, 440, 520, 633, 793, 866, 71, 155, 247, 324, 425, 508, 608, 724, 818, 62, 133, 204, 374, 405, 551, 604, 740, 824, 31, 129, 299, 368, 479, 501, 636, 741, 807, 49, 162, 227, 308, 401, 579, 692, 754, 855, 15, 119, 249, 361, 467, 546, 630, 795, 846, 77, 115, 265, 388, 426, 598, 646, 716, 894, 61, 126, 242, 396, 463, 517, 622, 735, 857, 52, 189, 275, 372, 491, 521, 660, 709, 872, 11, 195, 234, 365, 468, 544, 661, 777, 890, 75, 154, 222, 316, 480, 555, 675, 701, 856, 67, 105, 226, 393, 466, 593, 659, 731, 881, 81, 178, 267, 379, 477, 596, 656, 746, 886, 44, 153, 266, 366, 476, 542, 662, 720, 828, 38, 127, 245, 352, 452, 518, 648, 728, 848, 17, 147, 219, 340, 427, 515, 624, 771, 850, 96, 193, 229, 344, 457, 578, 663, 732, 817, 35, 128, 262, 325, 431, 543, 699, 737, 822, 36, 113, 230, 392, 414, 554, 620, 719, 812, 40, 139, 281, 314, 435, 561, 674, 749, 806, 93, 135, 268, 380, 430, 562, 682, 767, 863, 55, 132, 285, 312, 421, 528, 668, 776, 845, 90, 199, 212, 326, 486, 511, 616, 723, 816, 72, 151, 208, 331, 434, 536, 638, 781, 874, 19, 166, 283, 322, 403, 599, 625, 705, 864, 87, 180, 244, 351, 462, 513, 651, 794, 893, 74, 140, 254, 333, 490, 524, 621, 790, 830, 39, 141, 241, 391, 412, 580, 637, 798, 844, 18, 142, 207, 350, 485, 591, 687, 707, 882, 25, 148, 246, 383, 410, 573, 697, 789, 823, 2, 175, 239, 337, 495, 523, 673, 708, 873, 91, 197, 209, 378, 478, 529, 676, 773, 887, 83, 114, 274, 373, 474, 553, 650, 788, 834, 99, 182, 255, 360, 489, 533, 666, 787, 851, 43, 106, 258, 304, 454, 509, 623, 792, 803, 53, 170, 218, 353, 404, 503, 671, 727, 811, 6, 101, 235, 399, 445, 597, 612, 718, 871, 28, 145, 263, 309, 442, 510, 603, 739, 859, 79, 146, 257, 328, 456, 556, 601, 702, 861, 42, 200, 273, 319, 496, 574, 617, 791, 853, 66, 158, 206, 389, 493, 541, 695, 761, 884, 92, 143, 201, 397, 443, 568, 653, 738, 831, 76, 161, 290, 318, 424, 527, 693, 747, 820, 7, 102, 297, 311, 413, 547, 665, 715, 821, 14, 150, 216, 336, 415, 507, 669, 783, 840, 5, 137, 284, 348, 406, 564, 700, 760, 825, 57, 130, 296, 346, 402, 532, 686, 758, 842, 88, 177, 295, 384, 450, 506, 639, 736, 809, 86, 104, 203, 367, 423, 595, 609, 786, 868, 63, 191, 217, 349, 451, 514, 641, 717, 867, 16, 183, 250, 302, 420, 538, 658, 714, 888, 32, 185, 236, 355, 446, 537, 679, 766, 899, 100, 118, 287, 306, 473, 534, 654, 734, 860, 80, 136, 252, 330, 418, 530, 607, 759, 878, 33, 112, 286, 376, 407, 504, 618, 753, 805, 69, 117, 233, 370, 471, 571, 690, 782, 858, 37, 111, 223, 303, 433, 577, 678, 725, 841, 26, 164, 276, 317, 449, 588, 627, 743, 819, 59, 167, 251, 323, 408, 575, 615, 711, 879, 41, 160, 280, 358, 483, 567, 672, 765, 839, 12, 172, 228, 321, 455, 566, 657, 768, 897, 9, 108, 272, 386, 437, 584, 649, 722, 826, 47, 156, 253, 369, 482, 531, 643, 774, 900, 46, 103, 259, 313, 428, 576, 619, 745, 810, 51, 198, 220, 332, 487, 563, 664, 778, 833, 45, 181, 215, 329, 409, 526, 605, 784, 802, 98, 152, 291, 320, 453, 592, 629, 799, 827, 94, 184, 288, 363, 488, 535, 689, 726, 869, 34, 122, 205, 338, 411, 522, 614, 770, 875, 54, 163, 214, 385, 416, 570, 613, 763, 837, 78, 109, 298, 377, 494, 539, 642, 703, 870, 58, 124, 270, 387, 432, 549, 632, 750, 835, 97, 186, 248, 390, 475, 552, 670, 710, 892, 82, 120, 243, 395, 465, 540, 634, 730, 852]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1019.01 MBs
     ├ fmd	204.26 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	814.75 MBs	(shape (3, 4, 3, 4, 720, 1030, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.32 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 01/07/2021 15:39:32 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (462+258=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A101 ⫹₆₀ 16042), purity -1.6097099197439586
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (226+236=462 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 11207), purity -1.190551472427607
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (177+81=258 samples) on frame 1 with decision: {1} ⟨DR⟩ (A56 ⫹ 5678), purity -0.6677436628811942
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (132+94=226 samples) on frame 1 with decision: {1} ⟨DR⟩ (A57 ⫹ 4558), purity -0.6028240903066227
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (88+89=177 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A16 ⫺ 12069), purity -0.5520143614052775
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (157+79=236 samples) on frame 1 with decision: {1} A3 ⫺₇₀ 22730, purity -0.6229066538796183
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (108+24=132 samples) on frame 1 with decision: {1} ⟨DR⟩ (A30 ⫺ 13426), purity -0.5782406102253825
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+70=89 samples) on frame 1 with decision: {1} A5 ⫹₈₀ 13198, purity -0.17275173023975315
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+67=88 samples) on frame 1 with decision: {1} ⟨DR⟩ (A42 ⫹ 12217), purity -0.37122851686377323
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+73=94 samples) on frame 1 with decision: {1} ⟨DR⟩ (A72 ⫹ 14209), purity -0.14219997376799018
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+142=157 samples) on frame 1 with decision: {1} A72 ⫹₇₀ 22403, purity -0.6211692616039355
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+12=19 samples) on frame 1 with decision: {1} ⟨DR⟩ (A16 ⫹ 11821), purity -0.15109548568520328
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+6=21 samples) on frame 1 with decision: {1} A11 ⫺₇₀ 11543, purity -0.12873177396180133
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+7=21 samples) on frame 1 with decision: {1} ⟨DR⟩ (A25 ⫺ 7104), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (55+53=108 samples) on frame 1 with decision: {1} ⟨DR⟩ (A103 ⫹ 22017), purity -0.48340496805447875
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (69+73=142 samples) on frame 1 with decision: {1} A17 ⫹₈₀ 14486, purity -0.5554601017964602
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (49+6=55 samples) on frame 1 with decision: {1} ⟨DR⟩ (A37 ⫺ 12841), purity -0.2213645086490351
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+38=53 samples) on frame 1 with decision: {1} ⟨DR⟩ (A83 ⫺ 20491), purity -0.3523953923884317
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (39+34=73 samples) on frame 1 with decision: {1} ⟨PP⟩ (A38 ⫺ 18539), purity -0.4277102970516877
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (62+7=69 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A1 ⫺₇₀ 15447), purity -0.2856823242936083
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+4=15 samples) on frame 1 with decision: {1} A3 ⫹ 2229, purity -0.18483924814931874
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (20+19=39 samples) on frame 1 with decision: {1} ⟨PO⟩ (A83 ⫺ 18162), purity -0.3570691649434656
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+28=38 samples) on frame 1 with decision: {1} A85 ⫹ 21264, purity -0.17710833342348856
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+58=62 samples) on frame 1 with decision: {1} A42 ⫹₇₀ 20431, purity -0.22670763123189178
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A83 ⫹ 21224, purity 1.3322676295501878e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+13=20 samples) on frame 1 with decision: {1} ⟨PP⟩ (A5 ⫺ 13644), purity -0.23901783664516502
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
507.078460 seconds (6.32 G allocations: 142.883 GiB, 19.04% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 27
Tot nodes: 53
Height: 8
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A101 ⫹₆₀ 16042)
✔ {1} ⟨DR⟩ (A56 ⫹ 5678)
│✔ Shadows : 80/81 (conf: 0.9876543209876543)
│✘ {1} ⟨P̅P̅⟩ (A16 ⫺ 12069)
│ ✔ {1} A5 ⫹₈₀ 13198
│ │✔ Bitumen : 70/70 (conf: 1.0)
│ │✘ {1} ⟨DR⟩ (A16 ⫹ 11821)
│ │ ✔ Asphalt : 12/12 (conf: 1.0)
│ │ ✘ Bitumen : 6/7 (conf: 0.8571428571428571)
│ ✘ {1} ⟨DR⟩ (A42 ⫹ 12217)
│  ✔ Asphalt : 63/67 (conf: 0.9402985074626866)
│  ✘ {1} A11 ⫺₇₀ 11543
│   ✔ Asphalt : 5/6 (conf: 0.8333333333333334)
│   ✘ Gravel : 15/15 (conf: 1.0)
✘ {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 11207)
 ✔ {1} A3 ⫺₇₀ 22730
 │✔ Painted metal sheets : 79/79 (conf: 1.0)
 │✘ {1} A72 ⫹₇₀ 22403
 │ ✔ {1} A17 ⫹₈₀ 14486
 │ │✔ {1} ⟨PP⟩ (A38 ⫺ 18539)
 │ ││✔ Gravel : 33/34 (conf: 0.9705882352941176)
 │ ││✘ {1} ⟨PO⟩ (A83 ⫺ 18162)
 │ ││ ✔ Self-Blocking Bricks : 18/19 (conf: 0.9473684210526315)
 │ ││ ✘ {1} ⟨PP⟩ (A5 ⫺ 13644)
 │ ││  ✔ Gravel : 13/13 (conf: 1.0)
 │ ││  ✘ Self-Blocking Bricks : 4/7 (conf: 0.5714285714285714)
 │ │✘ {1} ⟨P̅P̅⟩ (A1 ⫺₇₀ 15447)
 │ │ ✔ Gravel : 7/7 (conf: 1.0)
 │ │ ✘ {1} A42 ⫹₇₀ 20431
 │ │  ✔ Self-Blocking Bricks : 55/58 (conf: 0.9482758620689655)
 │ │  ✘ Gravel : 3/4 (conf: 0.75)
 │ ✘ Bare Soil : 15/15 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A57 ⫹ 4558)
  ✔ {1} ⟨DR⟩ (A72 ⫹ 14209)
  │✔ Trees : 73/73 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A25 ⫺ 7104)
  │ ✔ Trees : 7/7 (conf: 1.0)
  │ ✘ Meadows : 14/14 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A30 ⫺ 13426)
   ✔ Bare Soil : 23/24 (conf: 0.9583333333333334)
   ✘ {1} ⟨DR⟩ (A103 ⫹ 22017)
    ✔ {1} ⟨DR⟩ (A83 ⫺ 20491)
    │✔ {1} A85 ⫹ 21264
    ││✔ Bare Soil : 28/28 (conf: 1.0)
    ││✘ {1} A83 ⫹ 21224
    ││ ✔ Meadows : 4/4 (conf: 1.0)
    ││ ✘ Bare Soil : 6/6 (conf: 1.0)
    │✘ {1} A3 ⫹ 2229
    │ ✔ Bare Soil : 2/4 (conf: 0.5)
    │ ✘ Meadows : 11/11 (conf: 1.0)
    ✘ {1} ⟨DR⟩ (A37 ⫺ 12841)
     ✔ Bare Soil : 4/6 (conf: 0.6666666666666666)
     ✘ Meadows : 47/49 (conf: 0.9591836734693877)
● [ 01/07/2021 15:47:59 ] Saving tree to file ./gandalf/trees/tree_4db52186fea6f3d9eb5afdf44c64a244cc1d0e82b936af74d2fc09e1f2b3b1f2.jld...
Test tree:
Decision Tree
Leaves: 27
Tot nodes: 53
Height: 8
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A101 ⫹₆₀ 16042)
✔ {1} ⟨DR⟩ (A56 ⫹ 5678)
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} ⟨P̅P̅⟩ (A16 ⫺ 12069)
│ ✔ {1} A5 ⫹₈₀ 13198
│ │✔ Bitumen : 16/17 (conf: 0.9411764705882353)
│ │✘ {1} ⟨DR⟩ (A16 ⫹ 11821)
│ │ ✔ Asphalt : 1/2 (conf: 0.5)
│ │ ✘ Bitumen : 1/1 (conf: 1.0)
│ ✘ {1} ⟨DR⟩ (A42 ⫹ 12217)
│  ✔ Asphalt : 17/18 (conf: 0.9444444444444444)
│  ✘ {1} A11 ⫺₇₀ 11543
│   ✔ Asphalt : 1/1 (conf: 1.0)
│   ✘ Gravel : 2/2 (conf: 1.0)
✘ {1} ⟨P̅P̅⟩ (A5 ⫺₇₀ 11207)
 ✔ {1} A3 ⫺₇₀ 22730
 │✔ Painted metal sheets : 20/20 (conf: 1.0)
 │✘ {1} A72 ⫹₇₀ 22403
 │ ✔ {1} A17 ⫹₈₀ 14486
 │ │✔ {1} ⟨PP⟩ (A38 ⫺ 18539)
 │ ││✔ Gravel : 4/4 (conf: 1.0)
 │ ││✘ {1} ⟨PO⟩ (A83 ⫺ 18162)
 │ ││ ✔ Self-Blocking Bricks : 2/3 (conf: 0.6666666666666666)
 │ ││ ✘ {1} ⟨PP⟩ (A5 ⫺ 13644)
 │ ││  ✔ Gravel : 6/7 (conf: 0.8571428571428571)
 │ ││  ✘ Self-Blocking Bricks : 0/0 (conf: NaN)
 │ │✘ {1} ⟨P̅P̅⟩ (A1 ⫺₇₀ 15447)
 │ │ ✔ Gravel : 1/2 (conf: 0.5)
 │ │ ✘ {1} A42 ⫹₇₀ 20431
 │ │  ✔ Self-Blocking Bricks : 14/20 (conf: 0.7)
 │ │  ✘ Gravel : 1/2 (conf: 0.5)
 │ ✘ Bare Soil : 3/3 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A57 ⫹ 4558)
  ✔ {1} ⟨DR⟩ (A72 ⫹ 14209)
  │✔ Trees : 16/16 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A25 ⫺ 7104)
  │ ✔ Trees : 3/4 (conf: 0.75)
  │ ✘ Meadows : 5/6 (conf: 0.8333333333333334)
  ✘ {1} ⟨DR⟩ (A30 ⫺ 13426)
   ✔ Bare Soil : 5/6 (conf: 0.8333333333333334)
   ✘ {1} ⟨DR⟩ (A103 ⫹ 22017)
    ✔ {1} ⟨DR⟩ (A83 ⫺ 20491)
    │✔ {1} A85 ⫹ 21264
    ││✔ Bare Soil : 6/6 (conf: 1.0)
    ││✘ {1} A83 ⫹ 21224
    ││ ✔ Meadows : 2/2 (conf: 1.0)
    ││ ✘ Bare Soil : 0/0 (conf: NaN)
    │✘ {1} A3 ⫹ 2229
    │ ✔ Bare Soil : 0/0 (conf: NaN)
    │ ✘ Meadows : 1/2 (conf: 0.5)
    ✘ {1} ⟨DR⟩ (A37 ⫺ 12841)
     ✔ Bare Soil : 2/3 (conf: 0.6666666666666666)
     ✘ Meadows : 10/13 (conf: 0.7692307692307693)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	88.33%	95.0%	80.0%	85.0%	70.0%	90.0%	100.0%	80.0%	100.0%	95.0%	90.48%	88.89%	94.44%	82.35%	78.26%	100.0%	69.57%	100.0%	95.0%	||	86.87%	[92.68, 84.21, 89.47, 75.68, 83.72, 100.0, 74.42, 100.0, 95.0]%	
  accuracy: 88.33% kappa: 86.87% 
 19  0  1  0  0  0  0  0  0	95.0%		Asphalt
  0 16  0  0  4  0  0  0  0	80.0%		Bare Soil
  2  0 17  0  0  0  1  0  0	85.0%		Bitumen
  0  0  0 14  0  0  6  0  0	70.0%		Gravel
  0  1  0  0 18  0  0  0  1	90.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  1  0  3  0  0 16  0  0	80.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  1  0  0  0 19	95.0%		Trees

overall_acc:	0.8833333333333333
κ =		0.8687499999999999
sensitivities:	[0.95, 0.8, 0.85, 0.7, 0.9, 1.0, 0.8, 1.0, 0.95]
specificities:	[0.9875, 0.9875, 0.99375, 0.98125, 0.96875, 1.0, 0.95625, 1.0, 0.99375]
PPVs:		[0.9047619047619048, 0.8888888888888888, 0.9444444444444444, 0.8235294117647058, 0.782608695652174, 1.0, 0.6956521739130435, 1.0, 0.95]
NPVs:		[0.9937106918238994, 0.9753086419753086, 0.9814814814814815, 0.9631901840490797, 0.9872611464968153, 1.0, 0.9745222929936306, 1.0, 0.99375]
F1s:		[0.926829268292683, 0.8421052631578947, 0.8947368421052632, 0.7567567567567568, 0.8372093023255814, 1.0, 0.7441860465116279, 1.0, 0.95]
accuracies:	[0.9833333333333333, 0.9666666666666667, 0.9777777777777777, 0.95, 0.9611111111111111, 1.0, 0.9388888888888889, 1.0, 0.9888888888888889]
mean_accuracy:	0.974074074074074
Iteration "Salinas-A,(1,false,"o_None","TestOpGeq")"...
● [ 01/07/2021 15:48:01 ] Computing dataset...
● [ 01/07/2021 15:48:01 ] Computed dataset in 00:00:00
● [ 01/07/2021 15:48:01 ] Saving dataset to file ./gandalf/cache/dataset_66a03ed79eadf88c562f2b27d90f7c6e45b2a98b23a11407434e5f5609dcfd3c.jld...
Dataseeds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

executing run 'Salinas-A,(1,false,"o_None","TestOpGeq")'...
dataset type = Tuple{Matrix{Int64}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (test_operators = [⫺], ontology = OneWorldOntology)
dataset_slices    = (10 dataset_slices)

Frame 1/1
┌ LogLevel(-500): OntologicalDataset -> FeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:12
┌ LogLevel(-500): Instance 1/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 362/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 483/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 120/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 241/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): FeatModalDataset -> StumpFeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:358
┌ LogLevel(-500): Instance 1/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 362/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 120/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 483/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 241/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
  0.720551 seconds (1.90 M allocations: 84.723 MiB, 4.71% gc time, 89.75% compilation time)
Dataset_slice = (600) -> [10, 122, 267, 386, 478, 583, 3, 166, 252, 331, 497, 503, 27, 190, 228, 353, 403, 521, 63, 130, 246, 366, 462, 566, 50, 195, 235, 350, 474, 501, 57, 186, 201, 397, 447, 511, 36, 116, 254, 326, 457, 542, 21, 123, 248, 340, 469, 593, 75, 157, 258, 336, 417, 509, 78, 183, 238, 394, 408, 596, 35, 154, 264, 376, 477, 599, 66, 191, 274, 307, 448, 548, 20, 167, 215, 392, 467, 549, 67, 188, 239, 310, 434, 568, 25, 141, 231, 330, 490, 594, 24, 117, 270, 400, 492, 592, 82, 194, 226, 387, 455, 560, 74, 197, 289, 378, 441, 565, 69, 105, 227, 341, 461, 539, 81, 187, 300, 388, 427, 585, 28, 159, 210, 342, 405, 531, 15, 179, 244, 323, 420, 554, 59, 163, 223, 332, 416, 558, 29, 124, 268, 351, 459, 564, 18, 153, 232, 329, 500, 582, 31, 162, 220, 319, 418, 535, 43, 177, 288, 346, 465, 576, 40, 155, 249, 325, 470, 575, 12, 149, 205, 327, 496, 578, 83, 192, 275, 305, 464, 597, 100, 145, 247, 398, 415, 508, 94, 178, 261, 322, 488, 519, 16, 110, 291, 347, 485, 551, 51, 119, 204, 337, 466, 590, 73, 148, 297, 362, 449, 522, 19, 103, 292, 358, 425, 533, 8, 142, 213, 382, 499, 530, 11, 134, 207, 345, 472, 598, 95, 136, 296, 357, 407, 515, 58, 169, 284, 339, 458, 595, 72, 101, 241, 321, 491, 581, 13, 127, 230, 349, 432, 550, 53, 172, 240, 301, 435, 555, 22, 200, 285, 335, 483, 532, 71, 176, 260, 379, 437, 517, 87, 139, 202, 399, 439, 514, 33, 160, 299, 389, 451, 544, 61, 168, 208, 343, 480, 540, 90, 180, 233, 309, 428, 586, 55, 175, 216, 348, 476, 518, 60, 137, 290, 383, 443, 573, 96, 198, 211, 308, 456, 552, 68, 144, 214, 317, 431, 563, 77, 189, 203, 315, 471, 507, 9, 135, 279, 361, 473, 536, 42, 147, 221, 352, 481, 553, 64, 115, 287, 391, 423, 528, 85, 196, 256, 390, 453, 516, 54, 182, 280, 359, 442, 588, 2, 140, 245, 320, 429, 541, 23, 170, 272, 313, 402, 559, 91, 104, 269, 324, 413, 538, 65, 181, 257, 344, 414, 505, 48, 132, 224, 367, 487, 523, 70, 173, 271, 303, 444, 589, 80, 118, 276, 338, 460, 570, 49, 171, 265, 333, 454, 577, 7, 120, 281, 360, 438, 572, 88, 193, 218, 372, 482, 584, 45, 121, 229, 381, 475, 510, 14, 174, 236, 364, 450, 534, 97, 128, 283, 304, 436, 562, 26, 111, 243, 311, 463, 561, 52, 112, 294, 302, 412, 506, 4, 158, 234, 384, 410, 569, 32, 150, 253, 371, 409, 512, 34, 146, 277, 374, 493, 579, 99, 125, 266, 380, 430, 504, 93, 102, 206, 363, 422, 587, 56, 152, 286, 375, 445, 513, 46, 113, 250, 306, 498, 524, 47, 185, 263, 373, 404, 525, 84, 108, 242, 385, 419, 600, 79, 129, 217, 318, 486, 546, 39, 156, 282, 365, 494, 591, 17, 114, 251, 312, 468, 574, 38, 143, 225, 369, 452, 556, 5, 151, 212, 368, 426, 502, 44, 138, 278, 355, 433, 526, 98, 126, 237, 395, 489, 529, 86, 109, 273, 334, 421, 537, 92, 199, 262, 354, 479, 527, 41, 184, 209, 328, 446, 547, 89, 107, 259, 370, 411, 567, 6, 131, 222, 377, 495, 545, 1, 106, 295, 314, 401, 557, 76, 161, 255, 396, 406, 520, 37, 164, 298, 393, 484, 543, 30, 133, 219, 356, 440, 580, 62, 165, 293, 316, 424, 571]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:48:07 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (242+238=480 samples) on frame 1 with decision: {1} A41 ⫺ 25838, purity -1.1512173600394553
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+159=242 samples) on frame 1 with decision: {1} A89 ⫺ 11313, purity -0.5695400811385262
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+156=238 samples) on frame 1 with decision: {1} A16 ⫺ 12120, purity -0.4936227967894728
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+80=156 samples) on frame 1 with decision: {1} A40 ⫺ 27875, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+77=159 samples) on frame 1 with decision: {1} A5 ⫺ 12496, purity -0.1146657416847564
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  5.418667 seconds (47.98 M allocations: 992.678 MiB, 9.28% gc time, 20.75% compilation time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A41 ⫺ 25838
✔ {1} A16 ⫺ 12120
│✔ {1} A40 ⫺ 27875
││✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_6wk : 76/76 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/82 (conf: 0.975609756097561)
✘ {1} A89 ⫺ 11313
 ✔ {1} A5 ⫺ 12496
 │✔ Lettuce_romaine_4wk : 77/77 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 78/82 (conf: 0.9512195121951219)
 ✘ Lettuce_romaine_5wk : 80/83 (conf: 0.963855421686747)
● [ 01/07/2021 15:48:12 ] Saving tree to file ./gandalf/trees/tree_89838a5ffee9e4a3c1293885f3ec4df0a98ef4351e97ba7b775cc3894fdab5cd.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A41 ⫺ 25838
✔ {1} A16 ⫺ 12120
│✔ {1} A40 ⫺ 27875
││✔ Lettuce_romaine_7wk : 19/19 (conf: 1.0)
││✘ Lettuce_romaine_6wk : 18/21 (conf: 0.8571428571428571)
│✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
✘ {1} A89 ⫺ 11313
 ✔ {1} A5 ⫺ 12496
 │✔ Lettuce_romaine_4wk : 16/16 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 18/20 (conf: 0.9)
 ✘ Lettuce_romaine_5wk : 20/24 (conf: 0.8333333333333334)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(1,false,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	92.5%	100.0%	90.0%	80.0%	100.0%	90.0%	95.0%	100.0%	90.0%	100.0%	83.33%	85.71%	100.0%	||	91.0%	[100.0, 90.0, 88.89, 90.91, 87.8, 97.44]%	
  accuracy: 92.5% kappa: 91.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 18  0  0  2  0	90.0%		Corn_senesced_green_weeds
  0  2 16  2  0  0	80.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  2 18  0	90.0%		Lettuce_romaine_6wk
  0  0  0  0  1 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.925
κ =		0.91
sensitivities:	[1.0, 0.9, 0.8, 1.0, 0.9, 0.95]
specificities:	[1.0, 0.98, 1.0, 0.96, 0.97, 1.0]
PPVs:		[1.0, 0.9, 1.0, 0.8333333333333334, 0.8571428571428571, 1.0]
NPVs:		[1.0, 0.98, 0.9615384615384616, 1.0, 0.9797979797979798, 0.9900990099009901]
F1s:		[1.0, 0.9, 0.8888888888888888, 0.9090909090909091, 0.8780487804878049, 0.9743589743589743]
accuracies:	[1.0, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9583333333333334, 0.9916666666666667]
mean_accuracy:	0.975
Dataset_slice = (600) -> [19, 131, 215, 348, 496, 545, 50, 123, 292, 322, 459, 579, 6, 121, 285, 331, 464, 513, 53, 110, 205, 315, 435, 505, 51, 109, 209, 311, 473, 521, 80, 124, 226, 364, 462, 528, 76, 158, 287, 370, 471, 541, 54, 114, 245, 399, 458, 519, 24, 151, 225, 332, 409, 527, 38, 128, 231, 316, 429, 518, 86, 191, 265, 391, 487, 566, 56, 141, 221, 356, 402, 555, 28, 200, 232, 346, 467, 520, 100, 140, 259, 325, 420, 595, 21, 171, 206, 379, 454, 589, 46, 184, 222, 395, 468, 560, 74, 146, 214, 343, 418, 540, 79, 143, 237, 320, 448, 558, 98, 188, 201, 390, 442, 600, 83, 186, 235, 338, 484, 503, 10, 119, 286, 398, 422, 547, 52, 167, 293, 396, 449, 544, 42, 176, 202, 326, 476, 509, 62, 154, 269, 304, 461, 561, 45, 144, 278, 334, 417, 597, 33, 163, 250, 333, 474, 534, 90, 134, 256, 388, 431, 549, 77, 172, 271, 367, 450, 584, 75, 189, 233, 387, 405, 573, 47, 182, 247, 312, 432, 501, 37, 137, 299, 340, 440, 568, 59, 125, 273, 345, 411, 506, 78, 149, 229, 305, 480, 529, 82, 102, 243, 374, 407, 533, 34, 104, 253, 329, 427, 585, 67, 108, 224, 335, 408, 526, 44, 198, 261, 357, 452, 569, 89, 180, 279, 363, 414, 580, 68, 105, 267, 306, 413, 557, 85, 166, 274, 365, 447, 542, 26, 145, 220, 369, 404, 578, 39, 142, 227, 376, 428, 590, 99, 193, 264, 321, 483, 512, 20, 147, 272, 381, 481, 572, 9, 130, 204, 301, 424, 565, 7, 156, 257, 344, 438, 570, 12, 199, 230, 336, 466, 571, 41, 132, 289, 337, 415, 593, 16, 170, 262, 373, 444, 543, 58, 196, 210, 347, 433, 551, 31, 107, 260, 383, 477, 535, 92, 164, 254, 355, 463, 502, 97, 174, 298, 397, 478, 508, 88, 106, 219, 317, 446, 531, 27, 115, 248, 360, 470, 515, 32, 153, 291, 330, 489, 582, 63, 185, 251, 362, 500, 524, 22, 160, 207, 352, 401, 577, 55, 152, 283, 353, 485, 525, 96, 169, 280, 389, 403, 586, 70, 173, 255, 366, 493, 550, 43, 127, 300, 339, 451, 507, 72, 155, 236, 400, 492, 539, 84, 168, 203, 324, 455, 564, 69, 187, 239, 378, 419, 546, 4, 139, 268, 368, 498, 598, 15, 111, 241, 319, 479, 536, 93, 175, 294, 302, 439, 548, 17, 122, 297, 307, 421, 538, 48, 190, 295, 318, 456, 594, 57, 138, 208, 354, 488, 563, 49, 183, 281, 385, 469, 517, 66, 195, 258, 372, 472, 583, 61, 118, 266, 351, 425, 599, 94, 116, 277, 349, 475, 537, 8, 135, 213, 375, 457, 504, 29, 197, 263, 394, 441, 588, 91, 117, 290, 342, 494, 567, 64, 113, 284, 380, 445, 514, 30, 181, 282, 303, 486, 581, 40, 179, 296, 350, 430, 552, 5, 157, 223, 384, 453, 522, 18, 161, 270, 314, 499, 576, 87, 177, 275, 308, 443, 554, 73, 129, 242, 382, 490, 574, 60, 136, 212, 358, 416, 523, 71, 148, 238, 393, 434, 511, 81, 150, 228, 371, 437, 510, 23, 178, 276, 328, 497, 556, 95, 101, 252, 392, 410, 591, 3, 165, 246, 323, 460, 530, 36, 133, 217, 361, 423, 559, 35, 126, 218, 386, 491, 562, 2, 103, 216, 359, 436, 532, 13, 162, 240, 309, 412, 553, 14, 192, 288, 341, 406, 587, 25, 159, 249, 310, 465, 592, 11, 112, 211, 377, 495, 575, 65, 120, 234, 313, 482, 596, 1, 194, 244, 327, 426, 516]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:48:12 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (320+160=480 samples) on frame 1 with decision: {1} A40 ⫺ 27875, purity -1.1552453009332424
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A13 ⫺ 11673, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (166+154=320 samples) on frame 1 with decision: {1} A104 ⫺ 7639, purity -0.8215040862372966
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+76=154 samples) on frame 1 with decision: {1} A8 ⫺ 14361, purity -0.09497003639899339
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+83=166 samples) on frame 1 with decision: {1} A22 ⫺ 17244, purity -0.19156081452025164
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  4.605068 seconds (47.21 M allocations: 860.634 MiB, 6.65% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 27875
✔ {1} A13 ⫺ 11673
│✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
✘ {1} A104 ⫺ 7639
 ✔ {1} A8 ⫺ 14361
 │✔ Lettuce_romaine_4wk : 76/76 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 75/78 (conf: 0.9615384615384616)
 ✘ {1} A22 ⫺ 17244
  ✔ Lettuce_romaine_5wk : 80/83 (conf: 0.963855421686747)
  ✘ Lettuce_romaine_6wk : 78/83 (conf: 0.9397590361445783)
● [ 01/07/2021 15:48:17 ] Saving tree to file ./gandalf/trees/tree_88e57a602ca84b16a82021c00221b83be8b06176103f72029e8f523f2ba67b54.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 27875
✔ {1} A13 ⫺ 11673
│✔ Lettuce_romaine_7wk : 18/18 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 20/21 (conf: 0.9523809523809523)
✘ {1} A104 ⫺ 7639
 ✔ {1} A8 ⫺ 14361
 │✔ Lettuce_romaine_4wk : 19/19 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 18/19 (conf: 0.9473684210526315)
 ✘ {1} A22 ⫺ 17244
  ✔ Lettuce_romaine_5wk : 20/22 (conf: 0.9090909090909091)
  ✘ Lettuce_romaine_6wk : 20/21 (conf: 0.9523809523809523)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(1,false,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	95.83%	100.0%	90.0%	95.0%	100.0%	100.0%	90.0%	95.24%	94.74%	100.0%	90.91%	95.24%	100.0%	||	95.0%	[97.56, 92.31, 97.44, 95.24, 97.56, 94.74]%	
  accuracy: 95.83% kappa: 95.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 18  0  1  1  0	90.0%		Corn_senesced_green_weeds
  0  0 19  1  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  1  1  0  0  0 18	90.0%		Lettuce_romaine_7wk

overall_acc:	0.9583333333333334
κ =		0.9500000000000001
sensitivities:	[1.0, 0.9, 0.95, 1.0, 1.0, 0.9]
specificities:	[0.99, 0.99, 1.0, 0.98, 0.99, 1.0]
PPVs:		[0.9523809523809523, 0.9473684210526315, 1.0, 0.9090909090909091, 0.9523809523809523, 1.0]
NPVs:		[1.0, 0.9801980198019802, 0.9900990099009901, 1.0, 1.0, 0.9803921568627451]
F1s:		[0.975609756097561, 0.9230769230769231, 0.9743589743589743, 0.9523809523809523, 0.975609756097561, 0.9473684210526315]
accuracies:	[0.9916666666666667, 0.975, 0.9916666666666667, 0.9833333333333333, 0.9916666666666667, 0.9833333333333333]
mean_accuracy:	0.9861111111111112
Dataset_slice = (600) -> [69, 125, 224, 361, 493, 514, 56, 174, 287, 365, 435, 502, 62, 169, 286, 356, 466, 569, 91, 135, 227, 360, 414, 522, 63, 180, 272, 321, 443, 562, 66, 141, 201, 312, 426, 509, 98, 175, 260, 368, 409, 518, 32, 187, 210, 383, 490, 549, 41, 185, 278, 364, 500, 551, 100, 165, 256, 334, 417, 567, 48, 101, 289, 351, 477, 597, 95, 137, 246, 338, 464, 563, 38, 149, 277, 328, 480, 578, 57, 146, 293, 341, 412, 552, 14, 176, 298, 390, 442, 594, 22, 126, 218, 309, 441, 582, 1, 120, 266, 344, 405, 592, 93, 168, 254, 381, 419, 556, 37, 123, 225, 313, 453, 533, 54, 138, 204, 315, 437, 568, 49, 156, 203, 335, 402, 507, 58, 164, 257, 343, 440, 577, 15, 155, 234, 394, 489, 542, 60, 186, 285, 306, 423, 583, 71, 107, 291, 348, 459, 513, 85, 160, 283, 353, 496, 547, 77, 178, 247, 316, 469, 544, 25, 189, 237, 387, 495, 599, 45, 182, 292, 373, 482, 584, 39, 117, 250, 392, 456, 520, 83, 162, 274, 346, 421, 576, 44, 194, 231, 366, 448, 527, 35, 112, 219, 333, 497, 560, 28, 106, 236, 311, 468, 600, 51, 119, 261, 310, 431, 516, 96, 114, 273, 347, 465, 536, 78, 163, 251, 352, 404, 538, 2, 129, 213, 359, 403, 591, 26, 183, 288, 308, 454, 598, 19, 113, 282, 400, 401, 540, 5, 111, 252, 302, 473, 566, 10, 108, 211, 393, 427, 581, 55, 152, 235, 342, 470, 541, 65, 148, 276, 327, 428, 511, 99, 136, 233, 304, 472, 546, 6, 184, 230, 332, 413, 517, 23, 131, 244, 330, 452, 515, 7, 199, 240, 322, 422, 529, 74, 142, 214, 319, 467, 505, 86, 128, 264, 399, 494, 559, 75, 200, 212, 389, 449, 573, 42, 122, 300, 388, 418, 561, 9, 150, 259, 339, 491, 510, 11, 170, 296, 382, 484, 554, 80, 140, 208, 374, 457, 596, 73, 130, 239, 354, 458, 595, 16, 134, 294, 370, 475, 519, 31, 177, 202, 336, 432, 580, 89, 151, 275, 317, 438, 572, 13, 104, 243, 391, 479, 504, 72, 144, 262, 375, 436, 548, 84, 173, 258, 320, 451, 575, 64, 109, 221, 350, 474, 555, 97, 102, 228, 325, 408, 508, 61, 118, 248, 378, 487, 553, 59, 172, 279, 395, 434, 545, 40, 132, 241, 358, 406, 574, 43, 171, 217, 380, 425, 526, 20, 124, 215, 385, 486, 501, 30, 105, 269, 355, 445, 558, 53, 195, 280, 369, 463, 550, 12, 157, 297, 377, 439, 565, 50, 159, 238, 345, 499, 589, 34, 193, 284, 398, 424, 579, 81, 115, 253, 397, 416, 570, 67, 166, 222, 372, 450, 585, 24, 127, 281, 371, 481, 524, 4, 145, 263, 384, 492, 539, 68, 154, 265, 324, 410, 503, 90, 139, 255, 349, 462, 534, 3, 143, 249, 357, 455, 506, 52, 181, 220, 305, 420, 523, 94, 188, 229, 329, 483, 543, 29, 153, 270, 303, 446, 535, 36, 179, 226, 307, 433, 564, 82, 158, 209, 314, 478, 530, 27, 190, 245, 318, 485, 521, 70, 197, 206, 376, 476, 537, 92, 196, 271, 363, 415, 532, 76, 191, 295, 331, 447, 571, 21, 110, 268, 337, 498, 557, 17, 167, 242, 396, 407, 588, 46, 192, 290, 301, 429, 531, 18, 161, 216, 362, 430, 525, 87, 103, 267, 379, 471, 590, 8, 147, 232, 323, 411, 593, 47, 198, 223, 326, 444, 586, 33, 133, 207, 386, 488, 512, 88, 121, 299, 340, 460, 528, 79, 116, 205, 367, 461, 587]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:48:17 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (320+160=480 samples) on frame 1 with decision: {1} A40 ⫺ 26896, purity -1.1552453009332424
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A13 ⫺ 11352, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (175+145=320 samples) on frame 1 with decision: {1} A105 ⫺ 5719, purity -0.8472767762985732
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (70+75=145 samples) on frame 1 with decision: {1} A8 ⫺ 14361, purity -0.036147021560304755
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (95+80=175 samples) on frame 1 with decision: {1} A40 ⫺ 21913, purity -0.28648084847359534
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+11=95 samples) on frame 1 with decision: {1} A89 ⫺ 11313, purity -0.16927687246787668
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  5.055170 seconds (49.26 M allocations: 904.218 MiB, 8.04% gc time)
Train tree:
Decision Tree
Leaves: 7
Tot nodes: 13
Height: 4
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 26896
✔ {1} A13 ⫺ 11352
│✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
✘ {1} A105 ⫺ 5719
 ✔ {1} A8 ⫺ 14361
 │✔ Lettuce_romaine_4wk : 75/75 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 69/70 (conf: 0.9857142857142858)
 ✘ {1} A40 ⫺ 21913
  ✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
  ✘ {1} A89 ⫺ 11313
   ✔ Corn_senesced_green_weeds : 11/11 (conf: 1.0)
   ✘ Lettuce_romaine_5wk : 80/84 (conf: 0.9523809523809523)
● [ 01/07/2021 15:48:22 ] Saving tree to file ./gandalf/trees/tree_0ebceedcb2ed295031688cd770c39c839c89c520164e571089a321a595fe6e6b.jld...
Test tree:
Decision Tree
Leaves: 7
Tot nodes: 13
Height: 4
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 26896
✔ {1} A13 ⫺ 11352
│✔ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
✘ {1} A105 ⫺ 5719
 ✔ {1} A8 ⫺ 14361
 │✔ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 20/21 (conf: 0.9523809523809523)
 ✘ {1} A40 ⫺ 21913
  ✔ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
  ✘ {1} A89 ⫺ 11313
   ✔ Corn_senesced_green_weeds : 0/0 (conf: NaN)
   ✘ Lettuce_romaine_5wk : 19/19 (conf: 1.0)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(1,false,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	99.17%	100.0%	100.0%	100.0%	95.0%	100.0%	100.0%	100.0%	95.24%	100.0%	100.0%	100.0%	100.0%	||	99.0%	[100.0, 97.56, 100.0, 97.44, 100.0, 100.0]%	
  accuracy: 99.17% kappa: 99.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0	100.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  1  0 19  0  0	95.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9916666666666667
κ =		0.99
sensitivities:	[1.0, 1.0, 1.0, 0.95, 1.0, 1.0]
specificities:	[1.0, 0.99, 1.0, 1.0, 1.0, 1.0]
PPVs:		[1.0, 0.9523809523809523, 1.0, 1.0, 1.0, 1.0]
NPVs:		[1.0, 1.0, 1.0, 0.9900990099009901, 1.0, 1.0]
F1s:		[1.0, 0.975609756097561, 1.0, 0.9743589743589743, 1.0, 1.0]
accuracies:	[1.0, 0.9916666666666667, 1.0, 0.9916666666666667, 1.0, 1.0]
mean_accuracy:	0.9972222222222222
Dataset_slice = (600) -> [60, 161, 270, 359, 480, 580, 46, 140, 238, 345, 460, 561, 23, 131, 243, 309, 470, 560, 40, 121, 266, 306, 436, 558, 68, 185, 240, 312, 488, 534, 29, 183, 233, 332, 495, 531, 53, 164, 208, 386, 441, 511, 24, 154, 269, 393, 440, 551, 83, 153, 226, 339, 425, 590, 1, 112, 263, 302, 429, 515, 47, 146, 273, 387, 432, 545, 65, 110, 300, 341, 426, 529, 98, 115, 209, 348, 419, 530, 51, 176, 286, 395, 442, 516, 6, 148, 212, 336, 452, 556, 12, 103, 204, 303, 453, 600, 45, 122, 237, 366, 420, 541, 93, 167, 293, 368, 415, 521, 80, 106, 241, 323, 496, 563, 97, 193, 276, 365, 414, 592, 5, 132, 232, 390, 444, 528, 73, 124, 231, 358, 433, 504, 85, 174, 265, 329, 462, 524, 44, 134, 255, 322, 489, 578, 18, 160, 258, 372, 493, 501, 32, 188, 290, 394, 409, 554, 62, 200, 206, 320, 473, 587, 74, 111, 234, 360, 463, 514, 49, 128, 289, 355, 406, 533, 76, 191, 257, 381, 478, 566, 88, 125, 274, 349, 424, 546, 34, 101, 262, 318, 408, 573, 2, 162, 246, 324, 486, 570, 95, 105, 292, 337, 421, 595, 36, 197, 207, 343, 492, 520, 27, 147, 203, 362, 437, 577, 35, 149, 202, 375, 411, 539, 31, 170, 242, 374, 430, 571, 7, 126, 247, 344, 500, 552, 11, 184, 298, 338, 428, 532, 52, 109, 282, 370, 456, 562, 75, 142, 213, 328, 446, 576, 69, 152, 287, 330, 455, 564, 41, 172, 248, 354, 407, 582, 22, 194, 249, 397, 466, 572, 10, 136, 253, 399, 435, 542, 16, 157, 228, 357, 448, 585, 72, 178, 291, 313, 494, 526, 61, 173, 210, 319, 404, 586, 96, 143, 220, 351, 464, 598, 56, 158, 299, 378, 401, 557, 48, 175, 211, 367, 431, 509, 89, 104, 236, 389, 417, 527, 71, 139, 260, 376, 491, 536, 15, 168, 280, 327, 443, 599, 30, 119, 288, 310, 449, 594, 90, 138, 294, 305, 459, 549, 50, 118, 205, 400, 477, 518, 66, 130, 252, 380, 483, 589, 14, 144, 261, 369, 454, 503, 100, 145, 215, 371, 447, 579, 17, 156, 296, 356, 457, 508, 84, 186, 227, 315, 475, 565, 86, 179, 283, 304, 439, 548, 92, 113, 281, 335, 461, 537, 78, 163, 279, 342, 418, 596, 43, 133, 217, 311, 469, 519, 59, 169, 251, 316, 498, 547, 54, 177, 245, 361, 403, 591, 25, 117, 254, 384, 422, 543, 64, 108, 264, 346, 434, 505, 55, 165, 297, 352, 484, 593, 99, 159, 278, 307, 416, 538, 58, 150, 256, 388, 467, 502, 42, 196, 250, 326, 427, 569, 67, 141, 216, 331, 487, 525, 3, 137, 219, 373, 445, 544, 13, 195, 222, 377, 402, 583, 8, 102, 259, 340, 476, 535, 79, 151, 272, 398, 405, 512, 91, 180, 224, 325, 471, 522, 33, 189, 284, 333, 468, 510, 38, 182, 268, 379, 472, 517, 77, 166, 275, 391, 479, 523, 9, 181, 271, 353, 499, 588, 39, 155, 221, 317, 412, 553, 4, 198, 277, 392, 458, 513, 87, 199, 295, 383, 481, 550, 21, 114, 201, 334, 465, 507, 19, 120, 230, 363, 497, 567, 94, 190, 229, 314, 485, 575, 57, 116, 214, 308, 423, 597, 82, 192, 223, 350, 450, 581, 28, 171, 285, 347, 451, 559, 26, 127, 225, 385, 474, 574, 20, 107, 244, 301, 438, 506, 81, 135, 239, 396, 482, 540, 70, 123, 235, 321, 410, 568, 63, 129, 267, 382, 413, 555, 37, 187, 218, 364, 490, 584]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:48:22 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (320+160=480 samples) on frame 1 with decision: {1} A40 ⫺ 26896, purity -1.1552453009332424
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A13 ⫺ 11352, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (166+154=320 samples) on frame 1 with decision: {1} A104 ⫺ 7639, purity -0.8215040862372966
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+76=154 samples) on frame 1 with decision: {1} A6 ⫺ 13146, purity -0.09497003639899339
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (88+78=166 samples) on frame 1 with decision: {1} A40 ⫺ 21913, purity -0.1933764004337163
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+5=88 samples) on frame 1 with decision: {1} A89 ⫺ 11313, purity -0.14665685008185003
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  4.887379 seconds (48.55 M allocations: 891.213 MiB, 8.34% gc time)
Train tree:
Decision Tree
Leaves: 7
Tot nodes: 13
Height: 4
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 26896
✔ {1} A13 ⫺ 11352
│✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
✘ {1} A104 ⫺ 7639
 ✔ {1} A6 ⫺ 13146
 │✔ Lettuce_romaine_4wk : 76/76 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 75/78 (conf: 0.9615384615384616)
 ✘ {1} A40 ⫺ 21913
  ✔ Lettuce_romaine_6wk : 78/78 (conf: 1.0)
  ✘ {1} A89 ⫺ 11313
   ✔ Corn_senesced_green_weeds : 5/5 (conf: 1.0)
   ✘ Lettuce_romaine_5wk : 80/83 (conf: 0.963855421686747)
● [ 01/07/2021 15:48:27 ] Saving tree to file ./gandalf/trees/tree_145b2cae11fd41b1346da9513b9e653a7a9379f92c329d853bfa971f984ec520.jld...
Test tree:
Decision Tree
Leaves: 7
Tot nodes: 13
Height: 4
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 26896
✔ {1} A13 ⫺ 11352
│✔ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
✘ {1} A104 ⫺ 7639
 ✔ {1} A6 ⫺ 13146
 │✔ Lettuce_romaine_4wk : 19/20 (conf: 0.95)
 │✘ Corn_senesced_green_weeds : 17/17 (conf: 1.0)
 ✘ {1} A40 ⫺ 21913
  ✔ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
  ✘ {1} A89 ⫺ 11313
   ✔ Corn_senesced_green_weeds : 2/2 (conf: 1.0)
   ✘ Lettuce_romaine_5wk : 20/21 (conf: 0.9523809523809523)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(1,false,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	98.33%	100.0%	95.0%	95.0%	100.0%	100.0%	100.0%	100.0%	100.0%	95.0%	95.24%	100.0%	100.0%	||	98.0%	[100.0, 97.44, 95.0, 97.56, 100.0, 100.0]%	
  accuracy: 98.33% kappa: 98.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 19  1  0  0  0	95.0%		Corn_senesced_green_weeds
  0  0 19  1  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9833333333333333
κ =		0.98
sensitivities:	[1.0, 0.95, 0.95, 1.0, 1.0, 1.0]
specificities:	[1.0, 1.0, 0.99, 0.99, 1.0, 1.0]
PPVs:		[1.0, 1.0, 0.95, 0.9523809523809523, 1.0, 1.0]
NPVs:		[1.0, 0.9900990099009901, 0.99, 1.0, 1.0, 1.0]
F1s:		[1.0, 0.9743589743589743, 0.95, 0.975609756097561, 1.0, 1.0]
accuracies:	[1.0, 0.9916666666666667, 0.9833333333333333, 0.9916666666666667, 1.0, 1.0]
mean_accuracy:	0.9944444444444445
Dataset_slice = (600) -> [10, 116, 221, 307, 469, 514, 12, 188, 231, 354, 401, 560, 84, 193, 239, 362, 483, 542, 52, 131, 230, 337, 491, 527, 45, 175, 218, 385, 492, 523, 87, 192, 265, 383, 486, 503, 14, 190, 264, 381, 480, 580, 20, 142, 242, 352, 422, 531, 39, 159, 210, 355, 453, 561, 9, 138, 279, 380, 488, 544, 38, 119, 250, 391, 454, 541, 43, 155, 289, 365, 495, 512, 23, 187, 292, 316, 457, 600, 92, 132, 205, 389, 403, 504, 93, 113, 286, 356, 440, 519, 51, 145, 296, 366, 418, 557, 89, 158, 240, 368, 433, 584, 67, 146, 259, 336, 449, 515, 100, 176, 244, 372, 464, 534, 71, 164, 283, 390, 460, 546, 36, 128, 243, 325, 404, 567, 19, 153, 236, 306, 412, 596, 94, 126, 237, 400, 496, 537, 68, 137, 260, 308, 466, 533, 22, 120, 222, 360, 493, 517, 21, 169, 214, 332, 445, 506, 1, 136, 290, 397, 413, 554, 5, 189, 238, 315, 414, 592, 53, 148, 235, 318, 456, 505, 46, 104, 300, 311, 497, 569, 91, 179, 297, 303, 416, 572, 3, 194, 248, 304, 408, 599, 34, 108, 285, 335, 407, 502, 41, 197, 247, 320, 437, 529, 62, 167, 281, 384, 431, 579, 75, 199, 272, 331, 411, 552, 73, 129, 257, 317, 439, 564, 97, 105, 209, 377, 420, 516, 55, 161, 217, 324, 475, 508, 80, 180, 298, 305, 430, 538, 59, 173, 212, 328, 424, 536, 63, 124, 206, 338, 438, 556, 4, 112, 204, 394, 417, 553, 54, 191, 220, 369, 435, 524, 74, 182, 274, 359, 443, 543, 95, 195, 234, 375, 470, 551, 78, 117, 277, 312, 487, 521, 96, 107, 226, 321, 451, 522, 99, 184, 255, 392, 410, 597, 16, 178, 232, 347, 423, 571, 72, 106, 249, 346, 479, 568, 90, 162, 295, 326, 406, 588, 60, 121, 288, 313, 471, 558, 44, 122, 219, 393, 434, 555, 18, 115, 275, 327, 402, 562, 25, 109, 299, 358, 473, 587, 32, 125, 252, 334, 429, 548, 77, 147, 211, 343, 459, 595, 28, 200, 251, 363, 444, 539, 24, 133, 284, 322, 481, 525, 76, 130, 213, 357, 432, 578, 17, 101, 293, 344, 499, 582, 65, 114, 227, 314, 442, 511, 31, 183, 203, 349, 482, 513, 30, 149, 291, 373, 450, 535, 50, 141, 225, 310, 500, 590, 85, 139, 233, 341, 468, 507, 26, 165, 258, 333, 447, 509, 33, 144, 270, 378, 462, 598, 37, 123, 269, 398, 441, 545, 64, 110, 215, 345, 474, 570, 56, 177, 266, 329, 425, 589, 27, 170, 246, 350, 472, 520, 49, 118, 268, 376, 465, 576, 57, 196, 262, 351, 476, 577, 69, 174, 245, 388, 428, 518, 70, 154, 224, 399, 455, 540, 8, 198, 253, 370, 494, 573, 83, 181, 208, 340, 478, 594, 15, 186, 254, 309, 458, 547, 98, 102, 267, 323, 490, 565, 11, 171, 223, 386, 498, 575, 7, 150, 261, 339, 477, 549, 29, 151, 278, 364, 463, 510, 2, 156, 273, 342, 426, 559, 48, 143, 263, 301, 467, 563, 61, 185, 256, 367, 461, 574, 82, 152, 202, 330, 436, 530, 6, 160, 280, 348, 485, 585, 81, 168, 207, 396, 421, 526, 79, 166, 276, 353, 419, 591, 88, 140, 294, 361, 415, 583, 35, 111, 229, 382, 489, 581, 13, 103, 201, 302, 427, 532, 66, 127, 287, 395, 452, 501, 47, 135, 271, 387, 446, 566, 42, 157, 241, 374, 448, 528, 40, 163, 282, 319, 484, 593, 86, 172, 228, 371, 405, 586, 58, 134, 216, 379, 409, 550]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:48:27 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (320+160=480 samples) on frame 1 with decision: {1} A40 ⫺ 26896, purity -1.1552453009332424
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A13 ⫺ 11352, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (168+152=320 samples) on frame 1 with decision: {1} A104 ⫺ 7639, purity -0.8398493408526413
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (77+75=152 samples) on frame 1 with decision: {1} A8 ⫺ 14368, purity -0.09595990937174463
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (90+78=168 samples) on frame 1 with decision: {1} A40 ⫺ 21913, purity -0.2269345553331278
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+6=90 samples) on frame 1 with decision: {1} A89 ⫺ 11313, purity -0.1786811431605365
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  4.912147 seconds (48.85 M allocations: 896.509 MiB, 8.08% gc time)
Train tree:
Decision Tree
Leaves: 7
Tot nodes: 13
Height: 4
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 26896
✔ {1} A13 ⫺ 11352
│✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
✘ {1} A104 ⫺ 7639
 ✔ {1} A8 ⫺ 14368
 │✔ Lettuce_romaine_4wk : 75/75 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 74/77 (conf: 0.961038961038961)
 ✘ {1} A40 ⫺ 21913
  ✔ Lettuce_romaine_6wk : 78/78 (conf: 1.0)
  ✘ {1} A89 ⫺ 11313
   ✔ Corn_senesced_green_weeds : 6/6 (conf: 1.0)
   ✘ Lettuce_romaine_5wk : 80/84 (conf: 0.9523809523809523)
● [ 01/07/2021 15:48:32 ] Saving tree to file ./gandalf/trees/tree_df2870a4f7d29695115734c273d83451dfb9b9ab1bc9e8ec98ed48ac9e0600ec.jld...
Test tree:
Decision Tree
Leaves: 7
Tot nodes: 13
Height: 4
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 26896
✔ {1} A13 ⫺ 11352
│✔ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
✘ {1} A104 ⫺ 7639
 ✔ {1} A8 ⫺ 14368
 │✔ Lettuce_romaine_4wk : 19/19 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 19/20 (conf: 0.95)
 ✘ {1} A40 ⫺ 21913
  ✔ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
  ✘ {1} A89 ⫺ 11313
   ✔ Corn_senesced_green_weeds : 1/1 (conf: 1.0)
   ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(1,false,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	99.17%	100.0%	100.0%	95.0%	100.0%	100.0%	100.0%	100.0%	95.24%	100.0%	100.0%	100.0%	100.0%	||	99.0%	[100.0, 97.56, 97.44, 100.0, 100.0, 100.0]%	
  accuracy: 99.17% kappa: 99.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0	100.0%		Corn_senesced_green_weeds
  0  1 19  0  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9916666666666667
κ =		0.99
sensitivities:	[1.0, 1.0, 0.95, 1.0, 1.0, 1.0]
specificities:	[1.0, 0.99, 1.0, 1.0, 1.0, 1.0]
PPVs:		[1.0, 0.9523809523809523, 1.0, 1.0, 1.0, 1.0]
NPVs:		[1.0, 1.0, 0.9900990099009901, 1.0, 1.0, 1.0]
F1s:		[1.0, 0.975609756097561, 0.9743589743589743, 1.0, 1.0, 1.0]
accuracies:	[1.0, 0.9916666666666667, 0.9916666666666667, 1.0, 1.0, 1.0]
mean_accuracy:	0.9972222222222222
Dataset_slice = (600) -> [68, 113, 288, 329, 406, 554, 53, 120, 291, 341, 461, 505, 72, 123, 234, 372, 472, 560, 28, 128, 298, 379, 479, 553, 84, 172, 287, 311, 466, 538, 96, 182, 229, 309, 491, 516, 91, 200, 222, 382, 418, 508, 42, 156, 226, 342, 429, 562, 33, 167, 204, 385, 498, 502, 4, 158, 259, 316, 486, 511, 63, 102, 220, 354, 496, 551, 21, 101, 266, 327, 485, 570, 79, 179, 270, 393, 404, 537, 15, 151, 214, 332, 454, 532, 22, 115, 217, 375, 468, 578, 51, 118, 235, 378, 469, 525, 32, 153, 232, 352, 470, 506, 70, 160, 244, 373, 464, 595, 66, 138, 250, 380, 437, 514, 99, 176, 277, 338, 417, 547, 40, 168, 258, 305, 482, 577, 64, 196, 240, 363, 477, 521, 19, 150, 282, 347, 401, 529, 73, 140, 201, 337, 489, 550, 18, 186, 215, 304, 492, 581, 80, 106, 289, 353, 425, 585, 60, 170, 223, 330, 416, 515, 3, 144, 290, 392, 435, 530, 87, 124, 286, 384, 483, 534, 43, 131, 284, 346, 420, 552, 9, 143, 253, 361, 421, 531, 20, 162, 261, 308, 438, 513, 1, 110, 254, 343, 484, 543, 62, 174, 252, 349, 443, 567, 45, 135, 205, 339, 436, 510, 30, 134, 238, 367, 473, 539, 76, 148, 275, 325, 474, 544, 37, 173, 280, 359, 407, 557, 38, 137, 297, 377, 427, 535, 23, 166, 233, 399, 453, 523, 57, 132, 260, 365, 442, 526, 75, 108, 264, 333, 451, 563, 35, 145, 202, 312, 411, 573, 55, 159, 269, 340, 460, 566, 50, 164, 225, 344, 500, 579, 95, 103, 300, 395, 452, 527, 61, 155, 212, 386, 471, 600, 82, 105, 228, 387, 446, 518, 12, 161, 216, 383, 493, 575, 74, 112, 206, 381, 444, 509, 94, 180, 230, 390, 423, 504, 49, 109, 293, 336, 409, 555, 6, 184, 221, 324, 456, 549, 24, 187, 241, 345, 495, 546, 90, 114, 265, 364, 449, 558, 93, 121, 251, 351, 412, 556, 14, 177, 272, 358, 467, 587, 47, 169, 239, 400, 431, 533, 89, 194, 263, 391, 445, 528, 81, 147, 211, 369, 403, 522, 39, 127, 242, 397, 405, 571, 11, 195, 208, 334, 459, 569, 58, 192, 207, 319, 490, 599, 92, 199, 209, 388, 487, 572, 52, 104, 203, 396, 439, 576, 59, 188, 227, 348, 441, 540, 48, 193, 237, 315, 402, 542, 7, 122, 283, 317, 457, 598, 54, 141, 246, 303, 488, 561, 17, 126, 285, 389, 478, 512, 56, 171, 248, 398, 434, 517, 97, 133, 271, 318, 481, 541, 29, 189, 245, 322, 440, 589, 34, 163, 296, 356, 450, 596, 77, 185, 292, 328, 414, 584, 46, 107, 236, 326, 419, 565, 71, 116, 257, 394, 465, 507, 31, 183, 247, 366, 494, 594, 26, 198, 279, 357, 410, 564, 25, 190, 224, 355, 455, 524, 65, 178, 231, 313, 499, 536, 83, 146, 219, 350, 480, 591, 2, 152, 267, 320, 415, 574, 8, 154, 295, 376, 408, 586, 27, 157, 276, 321, 463, 592, 85, 181, 268, 362, 458, 588, 86, 125, 278, 331, 424, 580, 36, 111, 243, 307, 432, 582, 78, 117, 299, 306, 413, 548, 44, 197, 210, 335, 497, 519, 10, 175, 273, 314, 476, 501, 98, 191, 256, 302, 428, 597, 69, 139, 274, 374, 422, 520, 67, 165, 281, 360, 426, 559, 16, 149, 249, 310, 462, 590, 13, 129, 255, 368, 447, 583, 5, 136, 213, 370, 448, 593, 41, 142, 218, 301, 433, 545, 88, 130, 262, 323, 475, 568, 100, 119, 294, 371, 430, 503]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:48:32 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (320+160=480 samples) on frame 1 with decision: {1} A40 ⫺ 26896, purity -1.1552453009332424
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A12 ⫺ 12378, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (170+150=320 samples) on frame 1 with decision: {1} A104 ⫺ 7670, purity -0.8357084241897412
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (75+75=150 samples) on frame 1 with decision: {1} A5 ⫺ 12488, purity -0.07072046207593807
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (91+79=170 samples) on frame 1 with decision: {1} A40 ⫺ 21913, purity -0.2397619754779769
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+7=91 samples) on frame 1 with decision: {1} A89 ⫺ 11313, purity -0.17671761411481632
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  4.911548 seconds (48.81 M allocations: 895.961 MiB, 7.96% gc time)
Train tree:
Decision Tree
Leaves: 7
Tot nodes: 13
Height: 4
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 26896
✔ {1} A12 ⫺ 12378
│✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
✘ {1} A104 ⫺ 7670
 ✔ {1} A5 ⫺ 12488
 │✔ Lettuce_romaine_4wk : 75/75 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 73/75 (conf: 0.9733333333333334)
 ✘ {1} A40 ⫺ 21913
  ✔ Lettuce_romaine_6wk : 79/79 (conf: 1.0)
  ✘ {1} A89 ⫺ 11313
   ✔ Corn_senesced_green_weeds : 7/7 (conf: 1.0)
   ✘ Lettuce_romaine_5wk : 80/84 (conf: 0.9523809523809523)
● [ 01/07/2021 15:48:37 ] Saving tree to file ./gandalf/trees/tree_1eb295b0f2f4c0b55b8652888200a198337f9dfb807902f82cef6960c33f69c8.jld...
Test tree:
Decision Tree
Leaves: 7
Tot nodes: 13
Height: 4
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 26896
✔ {1} A12 ⫺ 12378
│✔ Lettuce_romaine_7wk : 17/17 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 20/23 (conf: 0.8695652173913043)
✘ {1} A104 ⫺ 7670
 ✔ {1} A5 ⫺ 12488
 │✔ Lettuce_romaine_4wk : 19/19 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 19/19 (conf: 1.0)
 ✘ {1} A40 ⫺ 21913
  ✔ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
  ✘ {1} A89 ⫺ 11313
   ✔ Corn_senesced_green_weeds : 1/2 (conf: 0.5)
   ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(1,false,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	96.67%	100.0%	100.0%	95.0%	100.0%	100.0%	85.0%	86.96%	95.24%	100.0%	100.0%	100.0%	100.0%	||	96.0%	[93.02, 97.56, 97.44, 100.0, 100.0, 91.89]%	
  accuracy: 96.67% kappa: 96.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0	100.0%		Corn_senesced_green_weeds
  0  1 19  0  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  3  0  0  0  0 17	85.0%		Lettuce_romaine_7wk

overall_acc:	0.9666666666666667
κ =		0.96
sensitivities:	[1.0, 1.0, 0.95, 1.0, 1.0, 0.85]
specificities:	[0.97, 0.99, 1.0, 1.0, 1.0, 1.0]
PPVs:		[0.8695652173913043, 0.9523809523809523, 1.0, 1.0, 1.0, 1.0]
NPVs:		[1.0, 1.0, 0.9900990099009901, 1.0, 1.0, 0.970873786407767]
F1s:		[0.9302325581395349, 0.975609756097561, 0.9743589743589743, 1.0, 1.0, 0.918918918918919]
accuracies:	[0.975, 0.9916666666666667, 0.9916666666666667, 1.0, 1.0, 0.975]
mean_accuracy:	0.9888888888888889
Dataset_slice = (600) -> [20, 148, 247, 348, 409, 562, 36, 113, 203, 353, 426, 567, 75, 145, 228, 390, 401, 547, 9, 112, 249, 319, 421, 510, 92, 159, 288, 325, 482, 513, 88, 121, 212, 365, 407, 588, 28, 186, 224, 360, 406, 551, 79, 198, 274, 367, 408, 523, 8, 118, 297, 387, 439, 502, 73, 122, 204, 330, 479, 565, 83, 194, 243, 374, 472, 552, 40, 185, 275, 366, 446, 594, 61, 195, 273, 356, 473, 528, 70, 136, 202, 343, 455, 558, 51, 155, 282, 397, 450, 533, 48, 161, 245, 331, 499, 518, 50, 130, 281, 361, 425, 537, 13, 103, 293, 378, 444, 583, 27, 187, 240, 372, 415, 579, 35, 125, 217, 391, 440, 535, 69, 120, 236, 354, 466, 524, 45, 157, 253, 309, 458, 517, 97, 200, 277, 334, 485, 573, 68, 197, 294, 394, 476, 543, 3, 156, 264, 335, 423, 548, 85, 102, 260, 381, 437, 597, 94, 191, 234, 313, 416, 509, 7, 140, 238, 399, 434, 566, 19, 119, 226, 369, 462, 598, 87, 167, 287, 318, 478, 563, 1, 184, 262, 326, 483, 544, 16, 163, 235, 306, 412, 532, 25, 123, 284, 373, 414, 526, 31, 196, 270, 398, 449, 557, 64, 129, 211, 338, 500, 534, 81, 146, 206, 388, 447, 515, 57, 138, 246, 358, 420, 555, 23, 115, 209, 322, 452, 504, 90, 199, 232, 344, 492, 572, 42, 164, 244, 310, 465, 568, 26, 181, 248, 347, 428, 527, 30, 128, 261, 345, 431, 595, 91, 153, 227, 332, 471, 520, 17, 134, 207, 385, 494, 577, 59, 141, 229, 376, 457, 511, 96, 150, 252, 302, 441, 507, 2, 126, 300, 350, 445, 584, 52, 131, 299, 357, 448, 550, 24, 189, 223, 396, 489, 560, 15, 193, 237, 351, 470, 576, 86, 142, 205, 375, 477, 549, 46, 106, 266, 327, 461, 581, 67, 124, 286, 362, 495, 553, 71, 174, 233, 389, 433, 592, 66, 110, 213, 307, 419, 600, 18, 114, 201, 364, 480, 546, 58, 151, 290, 363, 411, 508, 39, 108, 276, 340, 463, 599, 34, 116, 256, 324, 464, 587, 80, 162, 258, 314, 459, 593, 82, 158, 231, 305, 493, 596, 6, 171, 285, 352, 498, 539, 53, 182, 272, 336, 403, 569, 60, 105, 268, 386, 438, 582, 93, 179, 271, 301, 443, 556, 44, 170, 251, 329, 413, 540, 32, 180, 289, 380, 424, 554, 49, 111, 225, 337, 456, 503, 43, 192, 219, 393, 475, 505, 100, 152, 220, 346, 496, 516, 41, 190, 230, 321, 469, 578, 5, 178, 255, 368, 427, 525, 54, 132, 280, 349, 410, 531, 65, 154, 210, 384, 429, 521, 72, 144, 296, 392, 490, 506, 76, 147, 241, 341, 432, 536, 98, 101, 216, 342, 484, 585, 11, 149, 257, 333, 497, 541, 78, 177, 218, 303, 481, 501, 21, 117, 215, 315, 436, 571, 62, 173, 214, 355, 488, 529, 14, 139, 222, 339, 435, 586, 22, 143, 208, 317, 442, 522, 12, 176, 298, 328, 418, 512, 37, 168, 269, 370, 453, 589, 95, 135, 259, 323, 417, 574, 74, 107, 254, 311, 404, 514, 33, 183, 278, 304, 491, 591, 99, 172, 239, 395, 402, 545, 63, 127, 250, 316, 451, 519, 29, 160, 292, 371, 474, 530, 56, 109, 242, 312, 460, 542, 10, 169, 279, 359, 405, 570, 47, 137, 267, 377, 467, 559, 4, 104, 291, 400, 422, 580, 38, 188, 283, 320, 430, 538, 84, 165, 221, 308, 454, 590, 89, 175, 263, 382, 486, 564, 55, 133, 265, 383, 487, 575, 77, 166, 295, 379, 468, 561]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:48:37 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (320+160=480 samples) on frame 1 with decision: {1} A40 ⫺ 26896, purity -1.1552453009332424
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A13 ⫺ 11352, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (165+155=320 samples) on frame 1 with decision: {1} A104 ⫺ 7639, purity -0.8105368805592456
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+77=155 samples) on frame 1 with decision: {1} A8 ⫺ 14361, purity -0.09435732648674182
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (87+78=165 samples) on frame 1 with decision: {1} A40 ⫺ 21913, purity -0.1729599492469571
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+5=87 samples) on frame 1 with decision: {1} A89 ⫺ 11313, purity -0.10807532345561334
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  4.920943 seconds (48.98 M allocations: 898.534 MiB, 8.37% gc time)
Train tree:
Decision Tree
Leaves: 7
Tot nodes: 13
Height: 4
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 26896
✔ {1} A13 ⫺ 11352
│✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
✘ {1} A104 ⫺ 7639
 ✔ {1} A8 ⫺ 14361
 │✔ Lettuce_romaine_4wk : 77/77 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 75/78 (conf: 0.9615384615384616)
 ✘ {1} A40 ⫺ 21913
  ✔ Lettuce_romaine_6wk : 78/78 (conf: 1.0)
  ✘ {1} A89 ⫺ 11313
   ✔ Corn_senesced_green_weeds : 5/5 (conf: 1.0)
   ✘ Lettuce_romaine_5wk : 80/82 (conf: 0.975609756097561)
● [ 01/07/2021 15:48:42 ] Saving tree to file ./gandalf/trees/tree_f9c2113179cde9d8c448411a23e40c72da09d4cf93dd3c6044589c7830b4edc9.jld...
Test tree:
Decision Tree
Leaves: 7
Tot nodes: 13
Height: 4
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 26896
✔ {1} A13 ⫺ 11352
│✔ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
✘ {1} A104 ⫺ 7639
 ✔ {1} A8 ⫺ 14361
 │✔ Lettuce_romaine_4wk : 18/18 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 18/18 (conf: 1.0)
 ✘ {1} A40 ⫺ 21913
  ✔ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
  ✘ {1} A89 ⫺ 11313
   ✔ Corn_senesced_green_weeds : 2/2 (conf: 1.0)
   ✘ Lettuce_romaine_5wk : 20/22 (conf: 0.9090909090909091)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(1,false,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	98.33%	100.0%	100.0%	90.0%	100.0%	100.0%	100.0%	100.0%	100.0%	100.0%	90.91%	100.0%	100.0%	||	98.0%	[100.0, 100.0, 94.74, 95.24, 100.0, 100.0]%	
  accuracy: 98.33% kappa: 98.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0	100.0%		Corn_senesced_green_weeds
  0  0 18  2  0  0	90.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9833333333333333
κ =		0.98
sensitivities:	[1.0, 1.0, 0.9, 1.0, 1.0, 1.0]
specificities:	[1.0, 1.0, 1.0, 0.98, 1.0, 1.0]
PPVs:		[1.0, 1.0, 1.0, 0.9090909090909091, 1.0, 1.0]
NPVs:		[1.0, 1.0, 0.9803921568627451, 1.0, 1.0, 1.0]
F1s:		[1.0, 1.0, 0.9473684210526315, 0.9523809523809523, 1.0, 1.0]
accuracies:	[1.0, 1.0, 0.9833333333333333, 0.9833333333333333, 1.0, 1.0]
mean_accuracy:	0.9944444444444445
Dataset_slice = (600) -> [14, 145, 209, 319, 413, 525, 59, 126, 201, 393, 450, 561, 55, 102, 207, 312, 445, 527, 87, 121, 255, 362, 475, 501, 44, 116, 271, 308, 421, 555, 11, 131, 219, 380, 474, 532, 60, 110, 268, 310, 440, 528, 6, 101, 211, 304, 437, 518, 83, 167, 283, 357, 414, 597, 46, 162, 229, 318, 456, 585, 20, 123, 288, 395, 424, 584, 74, 140, 291, 373, 481, 551, 32, 165, 281, 315, 434, 589, 22, 135, 220, 398, 486, 544, 40, 152, 286, 316, 451, 593, 24, 103, 221, 350, 429, 515, 18, 137, 230, 355, 438, 543, 89, 125, 262, 390, 443, 595, 62, 124, 264, 383, 406, 529, 12, 172, 276, 377, 411, 517, 31, 163, 204, 369, 471, 503, 58, 168, 208, 302, 407, 547, 30, 129, 224, 325, 415, 505, 79, 104, 235, 326, 495, 519, 99, 197, 213, 343, 464, 581, 48, 173, 284, 388, 410, 568, 67, 149, 275, 391, 455, 548, 10, 198, 289, 360, 485, 554, 5, 182, 244, 397, 487, 599, 93, 164, 257, 384, 457, 530, 64, 187, 246, 354, 458, 583, 70, 134, 242, 371, 422, 577, 41, 133, 256, 351, 473, 512, 82, 158, 299, 322, 404, 507, 84, 120, 290, 314, 423, 522, 51, 199, 261, 359, 412, 523, 81, 175, 206, 340, 472, 539, 94, 181, 300, 303, 426, 514, 23, 179, 266, 321, 459, 572, 100, 176, 270, 376, 432, 560, 90, 109, 278, 346, 418, 510, 68, 186, 274, 379, 467, 556, 43, 117, 265, 382, 480, 570, 1, 178, 280, 344, 425, 504, 95, 132, 277, 332, 491, 524, 19, 113, 282, 378, 476, 579, 98, 112, 292, 348, 462, 563, 50, 106, 285, 352, 444, 550, 33, 170, 295, 386, 493, 537, 27, 136, 241, 337, 408, 564, 63, 148, 279, 324, 427, 511, 54, 119, 216, 372, 401, 575, 86, 193, 254, 306, 428, 567, 17, 188, 293, 399, 496, 508, 91, 142, 273, 328, 494, 574, 97, 189, 297, 320, 430, 531, 57, 155, 263, 301, 492, 557, 61, 196, 294, 347, 405, 594, 75, 141, 205, 349, 436, 590, 71, 183, 203, 341, 409, 562, 92, 180, 258, 394, 441, 520, 65, 177, 249, 309, 449, 598, 37, 166, 272, 356, 498, 582, 29, 195, 234, 331, 469, 513, 21, 127, 218, 313, 435, 541, 69, 184, 267, 368, 500, 534, 3, 185, 298, 334, 488, 588, 77, 139, 225, 327, 403, 516, 56, 107, 260, 396, 490, 558, 72, 200, 217, 342, 416, 580, 8, 111, 227, 366, 465, 571, 2, 190, 237, 374, 419, 596, 73, 130, 233, 363, 482, 538, 36, 159, 238, 307, 448, 578, 45, 146, 250, 375, 463, 587, 52, 153, 212, 335, 460, 566, 53, 156, 287, 311, 478, 552, 34, 143, 222, 389, 453, 526, 28, 169, 259, 323, 452, 569, 39, 128, 243, 365, 454, 533, 76, 115, 231, 364, 461, 546, 85, 105, 228, 400, 499, 559, 66, 171, 240, 305, 402, 573, 88, 108, 248, 387, 497, 521, 15, 174, 247, 370, 417, 549, 38, 154, 253, 339, 446, 586, 9, 114, 202, 367, 489, 535, 80, 192, 251, 353, 442, 540, 25, 160, 223, 392, 447, 565, 26, 191, 215, 329, 483, 591, 7, 151, 252, 381, 484, 576, 96, 194, 210, 338, 477, 536, 16, 144, 296, 317, 466, 545, 13, 147, 269, 333, 431, 553, 47, 150, 236, 336, 470, 600, 49, 157, 214, 385, 468, 509, 35, 118, 239, 358, 479, 542, 78, 122, 232, 345, 420, 502, 42, 161, 245, 361, 433, 506, 4, 138, 226, 330, 439, 592]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:48:42 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (320+160=480 samples) on frame 1 with decision: {1} A40 ⫺ 26896, purity -1.1552453009332424
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A12 ⫺ 12190, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (169+151=320 samples) on frame 1 with decision: {1} A104 ⫺ 7670, purity -0.8284250965858128
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (77+74=151 samples) on frame 1 with decision: {1} A5 ⫺ 12488, purity -0.07060535740073136
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (90+79=169 samples) on frame 1 with decision: {1} A40 ⫺ 21913, purity -0.22678319781936304
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+6=90 samples) on frame 1 with decision: {1} A89 ⫺ 11313, purity -0.20871855708495682
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  4.920281 seconds (48.91 M allocations: 897.559 MiB, 8.12% gc time)
Train tree:
Decision Tree
Leaves: 7
Tot nodes: 13
Height: 4
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 26896
✔ {1} A12 ⫺ 12190
│✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
✘ {1} A104 ⫺ 7670
 ✔ {1} A5 ⫺ 12488
 │✔ Lettuce_romaine_4wk : 74/74 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 75/77 (conf: 0.974025974025974)
 ✘ {1} A40 ⫺ 21913
  ✔ Lettuce_romaine_6wk : 79/79 (conf: 1.0)
  ✘ {1} A89 ⫺ 11313
   ✔ Corn_senesced_green_weeds : 5/6 (conf: 0.8333333333333334)
   ✘ Lettuce_romaine_5wk : 80/84 (conf: 0.9523809523809523)
● [ 01/07/2021 15:48:47 ] Saving tree to file ./gandalf/trees/tree_2b530bab91d8338ce729c1c65248a6c4ab8ca050ad658ae9c304e41b348eaee0.jld...
Test tree:
Decision Tree
Leaves: 7
Tot nodes: 13
Height: 4
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 26896
✔ {1} A12 ⫺ 12190
│✔ Lettuce_romaine_7wk : 19/20 (conf: 0.95)
│✘ Brocoli_green_weeds_1 : 19/20 (conf: 0.95)
✘ {1} A104 ⫺ 7670
 ✔ {1} A5 ⫺ 12488
 │✔ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 17/17 (conf: 1.0)
 ✘ {1} A40 ⫺ 21913
  ✔ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
  ✘ {1} A89 ⫺ 11313
   ✔ Corn_senesced_green_weeds : 3/3 (conf: 1.0)
   ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(1,false,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	98.33%	95.0%	100.0%	100.0%	100.0%	100.0%	95.0%	95.0%	100.0%	100.0%	100.0%	100.0%	95.0%	||	98.0%	[95.0, 100.0, 100.0, 100.0, 100.0, 95.0]%	
  accuracy: 98.33% kappa: 98.0% 
 19  0  0  0  0  1	95.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0	100.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  1  0  0  0  0 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.9833333333333333
κ =		0.98
sensitivities:	[0.95, 1.0, 1.0, 1.0, 1.0, 0.95]
specificities:	[0.99, 1.0, 1.0, 1.0, 1.0, 0.99]
PPVs:		[0.95, 1.0, 1.0, 1.0, 1.0, 0.95]
NPVs:		[0.99, 1.0, 1.0, 1.0, 1.0, 0.99]
F1s:		[0.95, 1.0, 1.0, 1.0, 1.0, 0.95]
accuracies:	[0.9833333333333333, 1.0, 1.0, 1.0, 1.0, 0.9833333333333333]
mean_accuracy:	0.9944444444444445
Dataset_slice = (600) -> [70, 177, 261, 314, 419, 581, 28, 119, 212, 327, 454, 562, 31, 139, 280, 374, 459, 507, 19, 178, 249, 324, 453, 509, 5, 145, 248, 337, 422, 598, 75, 174, 287, 378, 420, 519, 12, 144, 202, 385, 465, 588, 26, 108, 298, 344, 403, 544, 67, 162, 228, 360, 498, 513, 14, 125, 236, 322, 482, 571, 50, 105, 214, 320, 440, 559, 25, 148, 229, 376, 423, 535, 11, 196, 219, 397, 434, 552, 51, 170, 257, 399, 417, 534, 6, 199, 207, 301, 427, 583, 4, 127, 273, 338, 450, 590, 63, 141, 270, 302, 486, 586, 62, 118, 276, 392, 435, 511, 54, 194, 216, 336, 437, 569, 73, 190, 251, 349, 411, 582, 16, 168, 238, 312, 449, 597, 76, 133, 292, 308, 436, 560, 94, 191, 234, 307, 469, 566, 21, 172, 253, 370, 461, 556, 96, 176, 295, 388, 401, 578, 97, 132, 275, 382, 475, 555, 60, 173, 217, 325, 470, 514, 9, 109, 272, 398, 402, 510, 40, 154, 250, 303, 443, 524, 72, 113, 240, 368, 431, 501, 99, 156, 279, 381, 497, 540, 44, 167, 220, 335, 489, 523, 91, 104, 245, 357, 416, 533, 92, 116, 297, 355, 412, 553, 71, 166, 246, 351, 426, 536, 13, 192, 203, 394, 410, 529, 98, 129, 206, 331, 414, 537, 79, 122, 281, 346, 448, 504, 18, 137, 224, 371, 442, 549, 48, 101, 289, 362, 487, 589, 56, 175, 285, 350, 456, 516, 22, 103, 242, 356, 408, 502, 35, 124, 293, 361, 428, 577, 81, 189, 262, 364, 460, 547, 84, 187, 230, 342, 478, 557, 37, 181, 208, 310, 418, 521, 87, 120, 299, 359, 458, 530, 77, 117, 237, 354, 462, 538, 34, 115, 231, 379, 429, 525, 65, 155, 205, 316, 495, 550, 7, 121, 252, 319, 488, 508, 41, 123, 264, 358, 499, 503, 3, 182, 201, 353, 452, 531, 59, 193, 290, 345, 439, 558, 55, 186, 296, 372, 457, 546, 43, 126, 241, 377, 463, 554, 29, 161, 263, 395, 405, 551, 8, 159, 221, 333, 471, 543, 86, 158, 227, 347, 413, 592, 46, 157, 274, 304, 424, 561, 64, 112, 204, 332, 445, 585, 78, 195, 211, 391, 430, 545, 85, 198, 209, 340, 493, 575, 15, 152, 282, 317, 433, 600, 1, 149, 258, 400, 477, 595, 42, 128, 254, 309, 464, 584, 100, 130, 271, 326, 500, 573, 30, 197, 267, 323, 425, 594, 10, 140, 283, 393, 468, 542, 89, 134, 218, 389, 441, 596, 88, 114, 278, 318, 446, 532, 49, 179, 277, 365, 467, 528, 17, 160, 247, 383, 481, 568, 23, 183, 223, 339, 479, 587, 27, 142, 286, 311, 415, 570, 20, 150, 259, 305, 421, 522, 68, 171, 288, 329, 407, 526, 69, 169, 243, 352, 494, 567, 24, 106, 284, 384, 491, 520, 74, 110, 235, 390, 473, 579, 36, 163, 256, 373, 406, 515, 57, 185, 266, 343, 480, 548, 53, 180, 239, 306, 476, 527, 95, 200, 255, 369, 404, 541, 61, 107, 226, 348, 409, 518, 66, 135, 265, 380, 484, 512, 52, 111, 233, 328, 472, 565, 58, 147, 210, 315, 447, 506, 47, 153, 232, 367, 474, 517, 83, 143, 268, 341, 432, 574, 39, 146, 215, 313, 490, 572, 93, 165, 244, 330, 466, 591, 90, 138, 225, 363, 451, 539, 33, 184, 291, 396, 455, 593, 2, 151, 300, 334, 496, 505, 38, 102, 260, 366, 492, 576, 80, 131, 269, 375, 483, 580, 82, 136, 222, 386, 485, 563, 45, 188, 213, 321, 444, 599, 32, 164, 294, 387, 438, 564]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:48:47 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (320+160=480 samples) on frame 1 with decision: {1} A40 ⫺ 26896, purity -1.1552453009332424
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A13 ⫺ 11352, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (170+150=320 samples) on frame 1 with decision: {1} A104 ⫺ 7670, purity -0.8092593820912629
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (74+76=150 samples) on frame 1 with decision: {1} A5 ⫺ 12488, purity -0.03531518462184038
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (90+80=170 samples) on frame 1 with decision: {1} A40 ⫺ 21913, purity -0.22060900968483466
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+7=90 samples) on frame 1 with decision: {1} A89 ⫺ 11313, purity -0.14339780896892004
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  4.920839 seconds (48.76 M allocations: 894.922 MiB, 8.14% gc time)
Train tree:
Decision Tree
Leaves: 7
Tot nodes: 13
Height: 4
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 26896
✔ {1} A13 ⫺ 11352
│✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
✘ {1} A104 ⫺ 7670
 ✔ {1} A5 ⫺ 12488
 │✔ Lettuce_romaine_4wk : 76/76 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 73/74 (conf: 0.9864864864864865)
 ✘ {1} A40 ⫺ 21913
  ✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
  ✘ {1} A89 ⫺ 11313
   ✔ Corn_senesced_green_weeds : 7/7 (conf: 1.0)
   ✘ Lettuce_romaine_5wk : 80/83 (conf: 0.963855421686747)
● [ 01/07/2021 15:48:52 ] Saving tree to file ./gandalf/trees/tree_54239e664c3f33ab8671f3a850905ff1c44e39029a1267402aeb3588cba304ee.jld...
Test tree:
Decision Tree
Leaves: 7
Tot nodes: 13
Height: 4
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 26896
✔ {1} A13 ⫺ 11352
│✔ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
✘ {1} A104 ⫺ 7670
 ✔ {1} A5 ⫺ 12488
 │✔ Lettuce_romaine_4wk : 18/18 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 19/20 (conf: 0.95)
 ✘ {1} A40 ⫺ 21913
  ✔ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
  ✘ {1} A89 ⫺ 11313
   ✔ Corn_senesced_green_weeds : 1/2 (conf: 0.5)
   ✘ Lettuce_romaine_5wk : 20/21 (conf: 0.9523809523809523)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(1,false,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	97.5%	100.0%	100.0%	90.0%	100.0%	95.0%	100.0%	100.0%	90.91%	100.0%	95.24%	100.0%	100.0%	||	97.0%	[100.0, 95.24, 94.74, 97.56, 97.44, 100.0]%	
  accuracy: 97.5% kappa: 97.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0	100.0%		Corn_senesced_green_weeds
  0  1 18  1  0  0	90.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  1  0  0 19  0	95.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.975
κ =		0.97
sensitivities:	[1.0, 1.0, 0.9, 1.0, 0.95, 1.0]
specificities:	[1.0, 0.98, 1.0, 0.99, 1.0, 1.0]
PPVs:		[1.0, 0.9090909090909091, 1.0, 0.9523809523809523, 1.0, 1.0]
NPVs:		[1.0, 1.0, 0.9803921568627451, 1.0, 0.9900990099009901, 1.0]
F1s:		[1.0, 0.9523809523809523, 0.9473684210526315, 0.975609756097561, 0.9743589743589743, 1.0]
accuracies:	[1.0, 0.9833333333333333, 0.9833333333333333, 0.9916666666666667, 0.9916666666666667, 1.0]
mean_accuracy:	0.9916666666666667
Dataset_slice = (600) -> [21, 173, 279, 381, 499, 569, 64, 138, 231, 310, 469, 582, 10, 149, 269, 301, 481, 525, 84, 168, 271, 334, 458, 600, 13, 194, 289, 400, 497, 548, 73, 107, 225, 375, 444, 512, 20, 174, 213, 347, 441, 545, 60, 159, 210, 398, 448, 505, 22, 196, 237, 354, 492, 558, 27, 187, 300, 345, 461, 572, 3, 110, 264, 394, 498, 583, 48, 125, 238, 341, 464, 565, 24, 171, 293, 356, 470, 502, 1, 123, 260, 339, 417, 519, 95, 165, 224, 315, 422, 550, 30, 190, 294, 327, 484, 589, 29, 188, 211, 359, 429, 586, 65, 176, 232, 305, 500, 559, 85, 157, 282, 357, 472, 516, 4, 179, 202, 362, 436, 585, 50, 169, 261, 371, 460, 594, 8, 131, 256, 343, 439, 590, 89, 192, 240, 382, 447, 557, 68, 144, 221, 342, 438, 560, 23, 134, 277, 335, 419, 587, 56, 116, 278, 364, 459, 581, 70, 121, 292, 307, 440, 520, 71, 155, 247, 324, 425, 508, 62, 133, 204, 374, 405, 551, 31, 129, 299, 368, 479, 501, 49, 162, 227, 308, 401, 579, 15, 119, 249, 361, 467, 546, 77, 115, 265, 388, 426, 598, 61, 126, 242, 396, 463, 517, 52, 189, 275, 372, 491, 521, 11, 195, 234, 365, 468, 544, 75, 154, 222, 316, 480, 555, 67, 105, 226, 393, 466, 593, 81, 178, 267, 379, 477, 596, 44, 153, 266, 366, 476, 542, 38, 127, 245, 352, 452, 518, 17, 147, 219, 340, 427, 515, 96, 193, 229, 344, 457, 578, 35, 128, 262, 325, 431, 543, 36, 113, 230, 392, 414, 554, 40, 139, 281, 314, 435, 561, 93, 135, 268, 380, 430, 562, 55, 132, 285, 312, 421, 528, 90, 199, 212, 326, 486, 511, 72, 151, 208, 331, 434, 536, 19, 166, 283, 322, 403, 599, 87, 180, 244, 351, 462, 513, 74, 140, 254, 333, 490, 524, 39, 141, 241, 391, 412, 580, 18, 142, 207, 350, 485, 591, 25, 148, 246, 383, 410, 573, 2, 175, 239, 337, 495, 523, 91, 197, 209, 378, 478, 529, 83, 114, 274, 373, 474, 553, 99, 182, 255, 360, 489, 533, 43, 106, 258, 304, 454, 509, 53, 170, 218, 353, 404, 503, 6, 101, 235, 399, 445, 597, 28, 145, 263, 309, 442, 510, 79, 146, 257, 328, 456, 556, 42, 200, 273, 319, 496, 574, 66, 158, 206, 389, 493, 541, 92, 143, 201, 397, 443, 568, 76, 161, 290, 318, 424, 527, 7, 102, 297, 311, 413, 547, 14, 150, 216, 336, 415, 507, 5, 137, 284, 348, 406, 564, 57, 130, 296, 346, 402, 532, 88, 177, 295, 384, 450, 506, 86, 104, 203, 367, 423, 595, 63, 191, 217, 349, 451, 514, 16, 183, 250, 302, 420, 538, 32, 185, 236, 355, 446, 537, 100, 118, 287, 306, 473, 534, 80, 136, 252, 330, 418, 530, 33, 112, 286, 376, 407, 504, 69, 117, 233, 370, 471, 571, 37, 111, 223, 303, 433, 577, 26, 164, 276, 317, 449, 588, 59, 167, 251, 323, 408, 575, 41, 160, 280, 358, 483, 567, 12, 172, 228, 321, 455, 566, 9, 108, 272, 386, 437, 584, 47, 156, 253, 369, 482, 531, 46, 103, 259, 313, 428, 576, 51, 198, 220, 332, 487, 563, 45, 181, 215, 329, 409, 526, 98, 152, 291, 320, 453, 592, 94, 184, 288, 363, 488, 535, 34, 122, 205, 338, 411, 522, 54, 163, 214, 385, 416, 570, 78, 109, 298, 377, 494, 539, 58, 124, 270, 387, 432, 549, 97, 186, 248, 390, 475, 552, 82, 120, 243, 395, 465, 540]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:48:52 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (320+160=480 samples) on frame 1 with decision: {1} A40 ⫺ 26896, purity -1.1552453009332424
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A12 ⫺ 12190, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (169+151=320 samples) on frame 1 with decision: {1} A104 ⫺ 7639, purity -0.8477643844086685
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (75+76=151 samples) on frame 1 with decision: {1} A8 ⫺ 14361, purity -0.0610713572865621
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (91+78=169 samples) on frame 1 with decision: {1} A40 ⫺ 21913, purity -0.24118068539204776
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+7=91 samples) on frame 1 with decision: {1} A89 ⫺ 11313, purity -0.17671761411481632
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  4.975715 seconds (49.21 M allocations: 903.001 MiB, 8.15% gc time)
Train tree:
Decision Tree
Leaves: 7
Tot nodes: 13
Height: 4
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 26896
✔ {1} A12 ⫺ 12190
│✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
✘ {1} A104 ⫺ 7639
 ✔ {1} A8 ⫺ 14361
 │✔ Lettuce_romaine_4wk : 76/76 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 73/75 (conf: 0.9733333333333334)
 ✘ {1} A40 ⫺ 21913
  ✔ Lettuce_romaine_6wk : 78/78 (conf: 1.0)
  ✘ {1} A89 ⫺ 11313
   ✔ Corn_senesced_green_weeds : 7/7 (conf: 1.0)
   ✘ Lettuce_romaine_5wk : 80/84 (conf: 0.9523809523809523)
● [ 01/07/2021 15:48:57 ] Saving tree to file ./gandalf/trees/tree_c66b2aa0e20576eddc3bcd7f504b518a94cfdc9ba420190f1311e6391d39b98a.jld...
Test tree:
Decision Tree
Leaves: 7
Tot nodes: 13
Height: 4
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A40 ⫺ 26896
✔ {1} A12 ⫺ 12190
│✔ Lettuce_romaine_7wk : 19/20 (conf: 0.95)
│✘ Brocoli_green_weeds_1 : 19/20 (conf: 0.95)
✘ {1} A104 ⫺ 7639
 ✔ {1} A8 ⫺ 14361
 │✔ Lettuce_romaine_4wk : 19/19 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 20/21 (conf: 0.9523809523809523)
 ✘ {1} A40 ⫺ 21913
  ✔ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
  ✘ {1} A89 ⫺ 11313
   ✔ Corn_senesced_green_weeds : 0/0 (conf: NaN)
   ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(1,false,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	97.5%	95.0%	100.0%	95.0%	100.0%	100.0%	95.0%	95.0%	95.24%	100.0%	100.0%	100.0%	95.0%	||	97.0%	[95.0, 97.56, 97.44, 100.0, 100.0, 95.0]%	
  accuracy: 97.5% kappa: 97.0% 
 19  0  0  0  0  1	95.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0	100.0%		Corn_senesced_green_weeds
  0  1 19  0  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  1  0  0  0  0 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.975
κ =		0.97
sensitivities:	[0.95, 1.0, 0.95, 1.0, 1.0, 0.95]
specificities:	[0.99, 0.99, 1.0, 1.0, 1.0, 0.99]
PPVs:		[0.95, 0.9523809523809523, 1.0, 1.0, 1.0, 0.95]
NPVs:		[0.99, 1.0, 0.9900990099009901, 1.0, 1.0, 0.99]
F1s:		[0.95, 0.975609756097561, 0.9743589743589743, 1.0, 1.0, 0.95]
accuracies:	[0.9833333333333333, 0.9916666666666667, 0.9916666666666667, 1.0, 1.0, 0.9833333333333333]
mean_accuracy:	0.9916666666666667
Iteration "Salinas-A,(3,:flattened,"o_None","TestOpGeq")"...
● [ 01/07/2021 15:48:57 ] Computing dataset...
● [ 01/07/2021 15:48:58 ] Computed dataset in 00:00:01
● [ 01/07/2021 15:48:58 ] Saving dataset to file ./gandalf/cache/dataset_dd21ca9766defffd4a1241f3133912c1277104edf483f75f4ef0633b1f64705e.jld...
Dataseeds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

executing run 'Salinas-A,(3,:flattened,"o_None","TestOpGeq")'...
dataset type = Tuple{Matrix{Int64}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (test_operators = [⫺], ontology = OneWorldOntology)
dataset_slices    = (10 dataset_slices)

Frame 1/1
┌ LogLevel(-500): OntologicalDataset -> FeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:12
┌ LogLevel(-500): Instance 1/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 362/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 120/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 483/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 241/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): FeatModalDataset -> StumpFeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:358
┌ LogLevel(-500): Instance 1/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 362/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 120/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 483/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 241/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
  0.237214 seconds (6.73 M allocations: 157.621 MiB, 75.09% gc time)
Dataset_slice = (600) -> [10, 122, 267, 386, 478, 583, 3, 166, 252, 331, 497, 503, 27, 190, 228, 353, 403, 521, 63, 130, 246, 366, 462, 566, 50, 195, 235, 350, 474, 501, 57, 186, 201, 397, 447, 511, 36, 116, 254, 326, 457, 542, 21, 123, 248, 340, 469, 593, 75, 157, 258, 336, 417, 509, 78, 183, 238, 394, 408, 596, 35, 154, 264, 376, 477, 599, 66, 191, 274, 307, 448, 548, 20, 167, 215, 392, 467, 549, 67, 188, 239, 310, 434, 568, 25, 141, 231, 330, 490, 594, 24, 117, 270, 400, 492, 592, 82, 194, 226, 387, 455, 560, 74, 197, 289, 378, 441, 565, 69, 105, 227, 341, 461, 539, 81, 187, 300, 388, 427, 585, 28, 159, 210, 342, 405, 531, 15, 179, 244, 323, 420, 554, 59, 163, 223, 332, 416, 558, 29, 124, 268, 351, 459, 564, 18, 153, 232, 329, 500, 582, 31, 162, 220, 319, 418, 535, 43, 177, 288, 346, 465, 576, 40, 155, 249, 325, 470, 575, 12, 149, 205, 327, 496, 578, 83, 192, 275, 305, 464, 597, 100, 145, 247, 398, 415, 508, 94, 178, 261, 322, 488, 519, 16, 110, 291, 347, 485, 551, 51, 119, 204, 337, 466, 590, 73, 148, 297, 362, 449, 522, 19, 103, 292, 358, 425, 533, 8, 142, 213, 382, 499, 530, 11, 134, 207, 345, 472, 598, 95, 136, 296, 357, 407, 515, 58, 169, 284, 339, 458, 595, 72, 101, 241, 321, 491, 581, 13, 127, 230, 349, 432, 550, 53, 172, 240, 301, 435, 555, 22, 200, 285, 335, 483, 532, 71, 176, 260, 379, 437, 517, 87, 139, 202, 399, 439, 514, 33, 160, 299, 389, 451, 544, 61, 168, 208, 343, 480, 540, 90, 180, 233, 309, 428, 586, 55, 175, 216, 348, 476, 518, 60, 137, 290, 383, 443, 573, 96, 198, 211, 308, 456, 552, 68, 144, 214, 317, 431, 563, 77, 189, 203, 315, 471, 507, 9, 135, 279, 361, 473, 536, 42, 147, 221, 352, 481, 553, 64, 115, 287, 391, 423, 528, 85, 196, 256, 390, 453, 516, 54, 182, 280, 359, 442, 588, 2, 140, 245, 320, 429, 541, 23, 170, 272, 313, 402, 559, 91, 104, 269, 324, 413, 538, 65, 181, 257, 344, 414, 505, 48, 132, 224, 367, 487, 523, 70, 173, 271, 303, 444, 589, 80, 118, 276, 338, 460, 570, 49, 171, 265, 333, 454, 577, 7, 120, 281, 360, 438, 572, 88, 193, 218, 372, 482, 584, 45, 121, 229, 381, 475, 510, 14, 174, 236, 364, 450, 534, 97, 128, 283, 304, 436, 562, 26, 111, 243, 311, 463, 561, 52, 112, 294, 302, 412, 506, 4, 158, 234, 384, 410, 569, 32, 150, 253, 371, 409, 512, 34, 146, 277, 374, 493, 579, 99, 125, 266, 380, 430, 504, 93, 102, 206, 363, 422, 587, 56, 152, 286, 375, 445, 513, 46, 113, 250, 306, 498, 524, 47, 185, 263, 373, 404, 525, 84, 108, 242, 385, 419, 600, 79, 129, 217, 318, 486, 546, 39, 156, 282, 365, 494, 591, 17, 114, 251, 312, 468, 574, 38, 143, 225, 369, 452, 556, 5, 151, 212, 368, 426, 502, 44, 138, 278, 355, 433, 526, 98, 126, 237, 395, 489, 529, 86, 109, 273, 334, 421, 537, 92, 199, 262, 354, 479, 527, 41, 184, 209, 328, 446, 547, 89, 107, 259, 370, 411, 567, 6, 131, 222, 377, 495, 545, 1, 106, 295, 314, 401, 557, 76, 161, 255, 396, 406, 520, 37, 164, 298, 393, 484, 543, 30, 133, 219, 356, 440, 580, 62, 165, 293, 316, 424, 571]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	2.65 MBs
     ├ fmd	2.65 MBs	(shape (480, 1836))
     ├ fmd_m	0.0 MBs	(shape (480, 1836, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.42 MBs
     ├ domain shape	(1836, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:49:00 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (240+240=480 samples) on frame 1 with decision: {1} A128 ⫺ 11353, purity -1.09861228866811
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (113+127=240 samples) on frame 1 with decision: {1} A123 ⫺ 15551, purity -0.9197740615768524
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+212=240 samples) on frame 1 with decision: {1} A932 ⫺ 6966, purity -0.987544393314685
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+98=113 samples) on frame 1 with decision: {1} A1439 ⫺ 2541, purity -0.7699755705074428
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (52+75=127 samples) on frame 1 with decision: {1} A867 ⫺ 12471, purity -0.7347109900731206
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (92+120=212 samples) on frame 1 with decision: {1} A1127 ⫺ 7693, purity -0.962889216562127
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+5=15 samples) on frame 1 with decision: {1} A451 ⫺ 55285, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (42+10=52 samples) on frame 1 with decision: {1} A1296 ⫺ 2682, purity -0.3769036740446354
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+69=75 samples) on frame 1 with decision: {1} A129 ⫺ 12275, purity -0.6181842687601722
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+12=92 samples) on frame 1 with decision: {1} A212 ⫺ 18561, purity -0.7197939848771031
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (41+57=98 samples) on frame 1 with decision: {1} A1459 ⫺ 649, purity -0.6174762597071377
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+86=120 samples) on frame 1 with decision: {1} A766 ⫺ 14824, purity -0.8074780083057717
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A8 ⫺ 3034, purity -0.41588830833596707
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+8=12 samples) on frame 1 with decision: {1} A15 ⫺ 3925, purity -0.23104906018664842
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+11=34 samples) on frame 1 with decision: {1} A53 ⫺ 10821, purity -0.3330509560412591
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (36+6=42 samples) on frame 1 with decision: {1} A219 ⫺ 20962, purity -0.09093059547068753
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+23=57 samples) on frame 1 with decision: {1} A1744 ⫺ 1525, purity -0.6388871289159813
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+57=69 samples) on frame 1 with decision: {1} A1370 ⫺ 313, purity -0.4951025634286446
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+69=80 samples) on frame 1 with decision: {1} A197 ⫺ 14589, purity -0.541721959989028
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+58=86 samples) on frame 1 with decision: {1} A45 ⫺ 10141, purity -0.6418952516894642
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+4=11 samples) on frame 1 with decision: {1} A11 ⫺ 3862, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A358 ⫺ 23143, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+5=12 samples) on frame 1 with decision: {1} A44 ⫺ 11079, purity -0.398363061075275
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+20=28 samples) on frame 1 with decision: {1} A345 ⫺ 18772, purity -0.3019350627185648
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (29+5=34 samples) on frame 1 with decision: {1} A194 ⫺ 23119, purity -0.4910634092392007
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+4=23 samples) on frame 1 with decision: {1} A758 ⫺ 13933, purity -0.18082100362433354
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+24=58 samples) on frame 1 with decision: {1} A939 ⫺ 6130, purity -0.4165261528759827
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (42+15=57 samples) on frame 1 with decision: {1} A263 ⫺ 6435, purity -0.26001481119585423
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+51=69 samples) on frame 1 with decision: {1} A92 ⫺ 12385, purity -0.3314040131690455
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+8=15 samples) on frame 1 with decision: {1} A61 ⫺ 11016, purity -0.1913876152012575
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+6=18 samples) on frame 1 with decision: {1} A356 ⫺ 20281, purity 7.401486830834377e-17
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+16=20 samples) on frame 1 with decision: {1} A146 ⫺ 18139, purity -0.11246702892376166
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+12=24 samples) on frame 1 with decision: {1} A1698 ⫺ 2189, purity -0.14341799152808044
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+23=29 samples) on frame 1 with decision: {1} A1448 ⫺ 2862, purity -0.20925605476703868
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
 38.580837 seconds (441.25 M allocations: 8.938 GiB, 23.13% gc time)
Train tree:
Decision Tree
Leaves: 35
Tot nodes: 69
Height: 7
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A128 ⫺ 11353
✔ {1} A932 ⫺ 6966
│✔ {1} A1127 ⫺ 7693
││✔ {1} A766 ⫺ 14824
│││✔ {1} A45 ⫺ 10141
││││✔ {1} A939 ⫺ 6130
│││││✔ {1} A1698 ⫺ 2189
││││││✔ Lettuce_romaine_6wk : 12/12 (conf: 1.0)
││││││✘ Lettuce_romaine_7wk : 11/12 (conf: 0.9166666666666666)
│││││✘ Lettuce_romaine_6wk : 32/34 (conf: 0.9411764705882353)
││││✘ {1} A345 ⫺ 18772
││││ ✔ {1} A146 ⫺ 18139
││││ │✔ Lettuce_romaine_5wk : 16/16 (conf: 1.0)
││││ │✘ Lettuce_romaine_6wk : 3/4 (conf: 0.75)
││││ ✘ Lettuce_romaine_6wk : 8/8 (conf: 1.0)
│││✘ {1} A53 ⫺ 10821
│││ ✔ {1} A358 ⫺ 23143
│││ │✔ Lettuce_romaine_6wk : 7/7 (conf: 1.0)
│││ │✘ Lettuce_romaine_7wk : 4/4 (conf: 1.0)
│││ ✘ Lettuce_romaine_7wk : 22/23 (conf: 0.9565217391304348)
││✘ {1} A212 ⫺ 18561
││ ✔ {1} A15 ⫺ 3925
││ │✔ Lettuce_romaine_6wk : 8/8 (conf: 1.0)
││ │✘ Lettuce_romaine_7wk : 2/4 (conf: 0.5)
││ ✘ {1} A197 ⫺ 14589
││  ✔ {1} A92 ⫺ 12385
││  │✔ Lettuce_romaine_5wk : 48/51 (conf: 0.9411764705882353)
││  │✘ {1} A356 ⫺ 20281
││  │ ✔ Lettuce_romaine_5wk : 6/6 (conf: 1.0)
││  │ ✘ Lettuce_romaine_7wk : 12/12 (conf: 1.0)
││  ✘ {1} A11 ⫺ 3862
││   ✔ Lettuce_romaine_5wk : 4/4 (conf: 1.0)
││   ✘ Lettuce_romaine_6wk : 7/7 (conf: 1.0)
│✘ Lettuce_romaine_7wk : 26/28 (conf: 0.9285714285714286)
✘ {1} A123 ⫺ 15551
 ✔ {1} A867 ⫺ 12471
 │✔ {1} A129 ⫺ 12275
 ││✔ {1} A1370 ⫺ 313
 │││✔ {1} A263 ⫺ 6435
 ││││✔ {1} A61 ⫺ 11016
 │││││✔ Lettuce_romaine_4wk : 8/8 (conf: 1.0)
 │││││✘ Brocoli_green_weeds_1 : 6/7 (conf: 0.8571428571428571)
 ││││✘ Lettuce_romaine_4wk : 41/42 (conf: 0.9761904761904762)
 │││✘ {1} A44 ⫺ 11079
 │││ ✔ Brocoli_green_weeds_1 : 5/5 (conf: 1.0)
 │││ ✘ Corn_senesced_green_weeds : 4/7 (conf: 0.5714285714285714)
 ││✘ Corn_senesced_green_weeds : 6/6 (conf: 1.0)
 │✘ {1} A1296 ⫺ 2682
 │ ✔ {1} A8 ⫺ 3034
 │ │✔ Lettuce_romaine_4wk : 2/4 (conf: 0.5)
 │ │✘ Lettuce_romaine_4wk : 6/6 (conf: 1.0)
 │ ✘ {1} A219 ⫺ 20962
 │  ✔ Lettuce_romaine_4wk : 4/6 (conf: 0.6666666666666666)
 │  ✘ Brocoli_green_weeds_1 : 36/36 (conf: 1.0)
 ✘ {1} A1439 ⫺ 2541
  ✔ {1} A1459 ⫺ 649
  │✔ {1} A1744 ⫺ 1525
  ││✔ {1} A758 ⫺ 13933
  │││✔ Lettuce_romaine_4wk : 2/4 (conf: 0.5)
  │││✘ Brocoli_green_weeds_1 : 19/19 (conf: 1.0)
  ││✘ {1} A194 ⫺ 23119
  ││ ✔ Brocoli_green_weeds_1 : 5/5 (conf: 1.0)
  ││ ✘ {1} A1448 ⫺ 2862
  ││  ✔ Corn_senesced_green_weeds : 23/23 (conf: 1.0)
  ││  ✘ Brocoli_green_weeds_1 : 3/6 (conf: 0.5)
  │✘ Corn_senesced_green_weeds : 39/41 (conf: 0.9512195121951219)
  ✘ {1} A451 ⫺ 55285
   ✔ Corn_senesced_green_weeds : 5/5 (conf: 1.0)
   ✘ Lettuce_romaine_4wk : 10/10 (conf: 1.0)
● [ 01/07/2021 15:49:39 ] Saving tree to file ./gandalf/trees/tree_6e233ae0305a6c91ee7bdeefead536986ae8b3687cf8145677e0e35e4754fabf.jld...
Test tree:
Decision Tree
Leaves: 35
Tot nodes: 69
Height: 7
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A128 ⫺ 11353
✔ {1} A932 ⫺ 6966
│✔ {1} A1127 ⫺ 7693
││✔ {1} A766 ⫺ 14824
│││✔ {1} A45 ⫺ 10141
││││✔ {1} A939 ⫺ 6130
│││││✔ {1} A1698 ⫺ 2189
││││││✔ Lettuce_romaine_6wk : 4/5 (conf: 0.8)
││││││✘ Lettuce_romaine_7wk : 2/4 (conf: 0.5)
│││││✘ Lettuce_romaine_6wk : 7/9 (conf: 0.7777777777777778)
││││✘ {1} A345 ⫺ 18772
││││ ✔ {1} A146 ⫺ 18139
││││ │✔ Lettuce_romaine_5wk : 3/4 (conf: 0.75)
││││ │✘ Lettuce_romaine_6wk : 0/0 (conf: NaN)
││││ ✘ Lettuce_romaine_6wk : 2/2 (conf: 1.0)
│││✘ {1} A53 ⫺ 10821
│││ ✔ {1} A358 ⫺ 23143
│││ │✔ Lettuce_romaine_6wk : 1/2 (conf: 0.5)
│││ │✘ Lettuce_romaine_7wk : 1/3 (conf: 0.3333333333333333)
│││ ✘ Lettuce_romaine_7wk : 7/7 (conf: 1.0)
││✘ {1} A212 ⫺ 18561
││ ✔ {1} A15 ⫺ 3925
││ │✔ Lettuce_romaine_6wk : 0/0 (conf: NaN)
││ │✘ Lettuce_romaine_7wk : 0/1 (conf: 0.0)
││ ✘ {1} A197 ⫺ 14589
││  ✔ {1} A92 ⫺ 12385
││  │✔ Lettuce_romaine_5wk : 6/6 (conf: 1.0)
││  │✘ {1} A356 ⫺ 20281
││  │ ✔ Lettuce_romaine_5wk : 4/4 (conf: 1.0)
││  │ ✘ Lettuce_romaine_7wk : 3/5 (conf: 0.6)
││  ✘ {1} A11 ⫺ 3862
││   ✔ Lettuce_romaine_5wk : 1/1 (conf: 1.0)
││   ✘ Lettuce_romaine_6wk : 0/0 (conf: NaN)
│✘ Lettuce_romaine_7wk : 4/7 (conf: 0.5714285714285714)
✘ {1} A123 ⫺ 15551
 ✔ {1} A867 ⫺ 12471
 │✔ {1} A129 ⫺ 12275
 ││✔ {1} A1370 ⫺ 313
 │││✔ {1} A263 ⫺ 6435
 ││││✔ {1} A61 ⫺ 11016
 │││││✔ Lettuce_romaine_4wk : 1/2 (conf: 0.5)
 │││││✘ Brocoli_green_weeds_1 : 3/3 (conf: 1.0)
 ││││✘ Lettuce_romaine_4wk : 10/10 (conf: 1.0)
 │││✘ {1} A44 ⫺ 11079
 │││ ✔ Brocoli_green_weeds_1 : 0/1 (conf: 0.0)
 │││ ✘ Corn_senesced_green_weeds : 0/1 (conf: 0.0)
 ││✘ Corn_senesced_green_weeds : 3/3 (conf: 1.0)
 │✘ {1} A1296 ⫺ 2682
 │ ✔ {1} A8 ⫺ 3034
 │ │✔ Lettuce_romaine_4wk : 0/0 (conf: NaN)
 │ │✘ Lettuce_romaine_4wk : 2/2 (conf: 1.0)
 │ ✘ {1} A219 ⫺ 20962
 │  ✔ Lettuce_romaine_4wk : 1/2 (conf: 0.5)
 │  ✘ Brocoli_green_weeds_1 : 3/4 (conf: 0.75)
 ✘ {1} A1439 ⫺ 2541
  ✔ {1} A1459 ⫺ 649
  │✔ {1} A1744 ⫺ 1525
  ││✔ {1} A758 ⫺ 13933
  │││✔ Lettuce_romaine_4wk : 0/1 (conf: 0.0)
  │││✘ Brocoli_green_weeds_1 : 3/3 (conf: 1.0)
  ││✘ {1} A194 ⫺ 23119
  ││ ✔ Brocoli_green_weeds_1 : 5/5 (conf: 1.0)
  ││ ✘ {1} A1448 ⫺ 2862
  ││  ✔ Corn_senesced_green_weeds : 3/6 (conf: 0.5)
  ││  ✘ Brocoli_green_weeds_1 : 0/2 (conf: 0.0)
  │✘ Corn_senesced_green_weeds : 11/13 (conf: 0.8461538461538461)
  ✘ {1} A451 ⫺ 55285
   ✔ Corn_senesced_green_weeds : 1/2 (conf: 0.5)
   ✘ Lettuce_romaine_4wk : 0/0 (conf: NaN)
 test size = [(1836, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:flattened,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	75.83%	70.0%	90.0%	70.0%	70.0%	70.0%	85.0%	77.78%	72.0%	82.35%	93.33%	77.78%	62.96%	||	71.0%	[73.68, 80.0, 75.68, 80.0, 73.68, 72.34]%	
  accuracy: 75.83% kappa: 71.0% 
 14  3  3  0  0  0	70.0%		Brocoli_green_weeds_1
  2 18  0  0  0  0	90.0%		Corn_senesced_green_weeds
  2  4 14  0  0  0	70.0%		Lettuce_romaine_4wk
  0  0  0 14  1  5	70.0%		Lettuce_romaine_5wk
  0  0  0  1 14  5	70.0%		Lettuce_romaine_6wk
  0  0  0  0  3 17	85.0%		Lettuce_romaine_7wk

overall_acc:	0.7583333333333333
κ =		0.71
sensitivities:	[0.7, 0.9, 0.7, 0.7, 0.7, 0.85]
specificities:	[0.96, 0.93, 0.97, 0.99, 0.96, 0.9]
PPVs:		[0.7777777777777778, 0.72, 0.8235294117647058, 0.9333333333333333, 0.7777777777777778, 0.6296296296296297]
NPVs:		[0.9411764705882353, 0.9789473684210527, 0.941747572815534, 0.9428571428571428, 0.9411764705882353, 0.967741935483871]
F1s:		[0.7368421052631579, 0.8, 0.7567567567567568, 0.8, 0.7368421052631579, 0.723404255319149]
accuracies:	[0.9166666666666666, 0.925, 0.925, 0.9416666666666667, 0.9166666666666666, 0.8916666666666667]
mean_accuracy:	0.9194444444444444
Dataset_slice = (600) -> [19, 131, 215, 348, 496, 545, 50, 123, 292, 322, 459, 579, 6, 121, 285, 331, 464, 513, 53, 110, 205, 315, 435, 505, 51, 109, 209, 311, 473, 521, 80, 124, 226, 364, 462, 528, 76, 158, 287, 370, 471, 541, 54, 114, 245, 399, 458, 519, 24, 151, 225, 332, 409, 527, 38, 128, 231, 316, 429, 518, 86, 191, 265, 391, 487, 566, 56, 141, 221, 356, 402, 555, 28, 200, 232, 346, 467, 520, 100, 140, 259, 325, 420, 595, 21, 171, 206, 379, 454, 589, 46, 184, 222, 395, 468, 560, 74, 146, 214, 343, 418, 540, 79, 143, 237, 320, 448, 558, 98, 188, 201, 390, 442, 600, 83, 186, 235, 338, 484, 503, 10, 119, 286, 398, 422, 547, 52, 167, 293, 396, 449, 544, 42, 176, 202, 326, 476, 509, 62, 154, 269, 304, 461, 561, 45, 144, 278, 334, 417, 597, 33, 163, 250, 333, 474, 534, 90, 134, 256, 388, 431, 549, 77, 172, 271, 367, 450, 584, 75, 189, 233, 387, 405, 573, 47, 182, 247, 312, 432, 501, 37, 137, 299, 340, 440, 568, 59, 125, 273, 345, 411, 506, 78, 149, 229, 305, 480, 529, 82, 102, 243, 374, 407, 533, 34, 104, 253, 329, 427, 585, 67, 108, 224, 335, 408, 526, 44, 198, 261, 357, 452, 569, 89, 180, 279, 363, 414, 580, 68, 105, 267, 306, 413, 557, 85, 166, 274, 365, 447, 542, 26, 145, 220, 369, 404, 578, 39, 142, 227, 376, 428, 590, 99, 193, 264, 321, 483, 512, 20, 147, 272, 381, 481, 572, 9, 130, 204, 301, 424, 565, 7, 156, 257, 344, 438, 570, 12, 199, 230, 336, 466, 571, 41, 132, 289, 337, 415, 593, 16, 170, 262, 373, 444, 543, 58, 196, 210, 347, 433, 551, 31, 107, 260, 383, 477, 535, 92, 164, 254, 355, 463, 502, 97, 174, 298, 397, 478, 508, 88, 106, 219, 317, 446, 531, 27, 115, 248, 360, 470, 515, 32, 153, 291, 330, 489, 582, 63, 185, 251, 362, 500, 524, 22, 160, 207, 352, 401, 577, 55, 152, 283, 353, 485, 525, 96, 169, 280, 389, 403, 586, 70, 173, 255, 366, 493, 550, 43, 127, 300, 339, 451, 507, 72, 155, 236, 400, 492, 539, 84, 168, 203, 324, 455, 564, 69, 187, 239, 378, 419, 546, 4, 139, 268, 368, 498, 598, 15, 111, 241, 319, 479, 536, 93, 175, 294, 302, 439, 548, 17, 122, 297, 307, 421, 538, 48, 190, 295, 318, 456, 594, 57, 138, 208, 354, 488, 563, 49, 183, 281, 385, 469, 517, 66, 195, 258, 372, 472, 583, 61, 118, 266, 351, 425, 599, 94, 116, 277, 349, 475, 537, 8, 135, 213, 375, 457, 504, 29, 197, 263, 394, 441, 588, 91, 117, 290, 342, 494, 567, 64, 113, 284, 380, 445, 514, 30, 181, 282, 303, 486, 581, 40, 179, 296, 350, 430, 552, 5, 157, 223, 384, 453, 522, 18, 161, 270, 314, 499, 576, 87, 177, 275, 308, 443, 554, 73, 129, 242, 382, 490, 574, 60, 136, 212, 358, 416, 523, 71, 148, 238, 393, 434, 511, 81, 150, 228, 371, 437, 510, 23, 178, 276, 328, 497, 556, 95, 101, 252, 392, 410, 591, 3, 165, 246, 323, 460, 530, 36, 133, 217, 361, 423, 559, 35, 126, 218, 386, 491, 562, 2, 103, 216, 359, 436, 532, 13, 162, 240, 309, 412, 553, 14, 192, 288, 341, 406, 587, 25, 159, 249, 310, 465, 592, 11, 112, 211, 377, 495, 575, 65, 120, 234, 313, 482, 596, 1, 194, 244, 327, 426, 516]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	2.65 MBs
     ├ fmd	2.65 MBs	(shape (480, 1836))
     ├ fmd_m	0.0 MBs	(shape (480, 1836, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.42 MBs
     ├ domain shape	(1836, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:49:39 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (240+240=480 samples) on frame 1 with decision: {1} A128 ⫺ 11353, purity -1.09861228866811
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (117+123=240 samples) on frame 1 with decision: {1} A123 ⫺ 15551, purity -0.9376634902948708
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (47+193=240 samples) on frame 1 with decision: {1} A950 ⫺ 2916, purity -0.989237041634107
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+36=47 samples) on frame 1 with decision: {1} A1018 ⫺ 446, purity -0.26719054149679045
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+106=117 samples) on frame 1 with decision: {1} A1439 ⫺ 2518, purity -0.7790686541000721
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (32+91=123 samples) on frame 1 with decision: {1} A777 ⫺ 11720, purity -0.7492932907396677
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (69+124=193 samples) on frame 1 with decision: {1} A1127 ⫺ 7693, purity -0.9530345329201583
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A3 ⫺ 2948, purity -0.2520535202036165
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+28=32 samples) on frame 1 with decision: {1} A155 ⫺ 12072, purity -0.22145998828214353
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+32=36 samples) on frame 1 with decision: {1} A27 ⫺ 4730, purity -0.18609128136185973
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (25+44=69 samples) on frame 1 with decision: {1} A965 ⫺ 313, purity -0.6480384684401619
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+84=91 samples) on frame 1 with decision: {1} A201 ⫺ 13894, purity -0.6314430664476538
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+68=106 samples) on frame 1 with decision: {1} A1495 ⫺ 813, purity -0.6463601657635962
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (40+84=124 samples) on frame 1 with decision: {1} A757 ⫺ 13690, purity -0.7703074398041175
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+18=25 samples) on frame 1 with decision: {1} A341 ⫺ 20664, purity -0.6151787867521322
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+32=40 samples) on frame 1 with decision: {1} A1774 ⫺ 141, purity -0.4831978759849053
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+6=44 samples) on frame 1 with decision: {1} A167 ⫺ 18100, purity -0.16653814897645905
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (48+20=68 samples) on frame 1 with decision: {1} A1744 ⫺ 1540, purity -0.6634824663488887
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+8=84 samples) on frame 1 with decision: {1} A720 ⫺ 8600, purity -0.5189508596059811
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (42+42=84 samples) on frame 1 with decision: {1} A78 ⫺ 15090, purity -0.6190372842704697
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A13 ⫺ 3862, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A10 ⫺ 3862, purity -0.34657359027997264
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+11=18 samples) on frame 1 with decision: {1} A1020 ⫺ 1876, purity -0.3456561832700266
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+4=20 samples) on frame 1 with decision: {1} A10 ⫺ 4457, purity -0.13862943611198905
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+5=32 samples) on frame 1 with decision: {1} A349 ⫺ 20086, purity -0.2984901947965334
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (30+12=42 samples) on frame 1 with decision: {1} A63 ⫺ 10367, purity -0.6753778404512457
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+29=48 samples) on frame 1 with decision: {1} A425 ⫺ 58279, purity -0.5429477461933929
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+70=76 samples) on frame 1 with decision: {1} A726 ⫺ 3198, purity -0.33719239954500335
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A4 ⫺ 3002, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+15=19 samples) on frame 1 with decision: {1} A34 ⫺ 8522, purity -0.14592572222314637
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+16=29 samples) on frame 1 with decision: {1} A131 ⫺ 19218, purity -0.3214436491172882
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+19=30 samples) on frame 1 with decision: {1} A351 ⫺ 23119, purity -0.27623613941071784
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+4=12 samples) on frame 1 with decision: {1} A80 ⫺ 13151, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+63=70 samples) on frame 1 with decision: {1} A925 ⫺ 8671, purity -0.2678696628731989
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+9=13 samples) on frame 1 with decision: {1} A5 ⫺ 3010, purity -0.21327605555690624
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+15=19 samples) on frame 1 with decision: {1} A39 ⫺ 9945, purity -0.11838634623553859
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
 39.702300 seconds (445.58 M allocations: 9.064 GiB, 21.15% gc time)
Train tree:
Decision Tree
Leaves: 37
Tot nodes: 73
Height: 8
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A128 ⫺ 11353
✔ {1} A950 ⫺ 2916
│✔ {1} A1127 ⫺ 7693
││✔ {1} A757 ⫺ 13690
│││✔ {1} A78 ⫺ 15090
││││✔ Lettuce_romaine_6wk : 40/42 (conf: 0.9523809523809523)
││││✘ {1} A63 ⫺ 10367
││││ ✔ {1} A80 ⫺ 13151
││││ │✔ Lettuce_romaine_6wk : 4/4 (conf: 1.0)
││││ │✘ Lettuce_romaine_7wk : 8/8 (conf: 1.0)
││││ ✘ {1} A351 ⫺ 23119
││││  ✔ {1} A39 ⫺ 9945
││││  │✔ Lettuce_romaine_5wk : 15/15 (conf: 1.0)
││││  │✘ Lettuce_romaine_6wk : 3/4 (conf: 0.75)
││││  ✘ Lettuce_romaine_6wk : 11/11 (conf: 1.0)
│││✘ {1} A1774 ⫺ 141
│││ ✔ {1} A349 ⫺ 20086
│││ │✔ Lettuce_romaine_5wk : 2/5 (conf: 0.4)
│││ │✘ Lettuce_romaine_7wk : 26/27 (conf: 0.9629629629629629)
│││ ✘ {1} A10 ⫺ 3862
│││  ✔ Lettuce_romaine_6wk : 4/4 (conf: 1.0)
│││  ✘ Lettuce_romaine_7wk : 2/4 (conf: 0.5)
││✘ {1} A965 ⫺ 313
││ ✔ {1} A167 ⫺ 18100
││ │✔ Lettuce_romaine_6wk : 5/6 (conf: 0.8333333333333334)
││ │✘ Lettuce_romaine_5wk : 37/38 (conf: 0.9736842105263158)
││ ✘ {1} A341 ⫺ 20664
││  ✔ {1} A1020 ⫺ 1876
││  │✔ {1} A4 ⫺ 3002
││  ││✔ Lettuce_romaine_7wk : 7/7 (conf: 1.0)
││  ││✘ Lettuce_romaine_7wk : 3/4 (conf: 0.75)
││  │✘ Lettuce_romaine_5wk : 6/7 (conf: 0.8571428571428571)
││  ✘ Lettuce_romaine_6wk : 7/7 (conf: 1.0)
│✘ {1} A1018 ⫺ 446
│ ✔ {1} A27 ⫺ 4730
│ │✔ Lettuce_romaine_7wk : 31/32 (conf: 0.96875)
│ │✘ Lettuce_romaine_5wk : 3/4 (conf: 0.75)
│ ✘ Lettuce_romaine_5wk : 11/11 (conf: 1.0)
✘ {1} A123 ⫺ 15551
 ✔ {1} A777 ⫺ 11720
 │✔ {1} A201 ⫺ 13894
 ││✔ {1} A720 ⫺ 8600
 │││✔ {1} A13 ⫺ 3862
 ││││✔ Brocoli_green_weeds_1 : 4/4 (conf: 1.0)
 ││││✘ Corn_senesced_green_weeds : 3/4 (conf: 0.75)
 │││✘ {1} A726 ⫺ 3198
 │││ ✔ {1} A925 ⫺ 8671
 │││ │✔ Lettuce_romaine_4wk : 60/63 (conf: 0.9523809523809523)
 │││ │✘ Brocoli_green_weeds_1 : 4/7 (conf: 0.5714285714285714)
 │││ ✘ Brocoli_green_weeds_1 : 6/6 (conf: 1.0)
 ││✘ Corn_senesced_green_weeds : 7/7 (conf: 1.0)
 │✘ {1} A155 ⫺ 12072
 │ ✔ Brocoli_green_weeds_1 : 27/28 (conf: 0.9642857142857143)
 │ ✘ Corn_senesced_green_weeds : 2/4 (conf: 0.5)
 ✘ {1} A1439 ⫺ 2518
  ✔ {1} A1495 ⫺ 813
  │✔ {1} A1744 ⫺ 1540
  ││✔ {1} A10 ⫺ 4457
  │││✔ Lettuce_romaine_4wk : 2/4 (conf: 0.5)
  │││✘ Brocoli_green_weeds_1 : 16/16 (conf: 1.0)
  ││✘ {1} A425 ⫺ 58279
  ││ ✔ {1} A131 ⫺ 19218
  ││ │✔ Brocoli_green_weeds_1 : 15/16 (conf: 0.9375)
  ││ │✘ {1} A5 ⫺ 3010
  ││ │ ✔ Corn_senesced_green_weeds : 9/9 (conf: 1.0)
  ││ │ ✘ Corn_senesced_green_weeds : 2/4 (conf: 0.5)
  ││ ✘ {1} A34 ⫺ 8522
  ││  ✔ Corn_senesced_green_weeds : 15/15 (conf: 1.0)
  ││  ✘ Corn_senesced_green_weeds : 2/4 (conf: 0.5)
  │✘ Corn_senesced_green_weeds : 36/38 (conf: 0.9473684210526315)
  ✘ {1} A3 ⫺ 2948
   ✔ Lettuce_romaine_4wk : 7/7 (conf: 1.0)
   ✘ Corn_senesced_green_weeds : 2/4 (conf: 0.5)
● [ 01/07/2021 15:50:19 ] Saving tree to file ./gandalf/trees/tree_13173600b2653ec48f9f1a887971a5e4a38306026d77dd38c0c428dd8f65e19c.jld...
Test tree:
Decision Tree
Leaves: 37
Tot nodes: 73
Height: 8
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A128 ⫺ 11353
✔ {1} A950 ⫺ 2916
│✔ {1} A1127 ⫺ 7693
││✔ {1} A757 ⫺ 13690
│││✔ {1} A78 ⫺ 15090
││││✔ Lettuce_romaine_6wk : 8/11 (conf: 0.7272727272727273)
││││✘ {1} A63 ⫺ 10367
││││ ✔ {1} A80 ⫺ 13151
││││ │✔ Lettuce_romaine_6wk : 0/0 (conf: NaN)
││││ │✘ Lettuce_romaine_7wk : 0/0 (conf: NaN)
││││ ✘ {1} A351 ⫺ 23119
││││  ✔ {1} A39 ⫺ 9945
││││  │✔ Lettuce_romaine_5wk : 2/2 (conf: 1.0)
││││  │✘ Lettuce_romaine_6wk : 1/1 (conf: 1.0)
││││  ✘ Lettuce_romaine_6wk : 2/3 (conf: 0.6666666666666666)
│││✘ {1} A1774 ⫺ 141
│││ ✔ {1} A349 ⫺ 20086
│││ │✔ Lettuce_romaine_5wk : 0/2 (conf: 0.0)
│││ │✘ Lettuce_romaine_7wk : 1/3 (conf: 0.3333333333333333)
│││ ✘ {1} A10 ⫺ 3862
│││  ✔ Lettuce_romaine_6wk : 2/4 (conf: 0.5)
│││  ✘ Lettuce_romaine_7wk : 2/2 (conf: 1.0)
││✘ {1} A965 ⫺ 313
││ ✔ {1} A167 ⫺ 18100
││ │✔ Lettuce_romaine_6wk : 1/3 (conf: 0.3333333333333333)
││ │✘ Lettuce_romaine_5wk : 9/10 (conf: 0.9)
││ ✘ {1} A341 ⫺ 20664
││  ✔ {1} A1020 ⫺ 1876
││  │✔ {1} A4 ⫺ 3002
││  ││✔ Lettuce_romaine_7wk : 5/8 (conf: 0.625)
││  ││✘ Lettuce_romaine_7wk : 0/0 (conf: NaN)
││  │✘ Lettuce_romaine_5wk : 3/3 (conf: 1.0)
││  ✘ Lettuce_romaine_6wk : 0/1 (conf: 0.0)
│✘ {1} A1018 ⫺ 446
│ ✔ {1} A27 ⫺ 4730
│ │✔ Lettuce_romaine_7wk : 4/4 (conf: 1.0)
│ │✘ Lettuce_romaine_5wk : 0/1 (conf: 0.0)
│ ✘ Lettuce_romaine_5wk : 1/2 (conf: 0.5)
✘ {1} A123 ⫺ 15551
 ✔ {1} A777 ⫺ 11720
 │✔ {1} A201 ⫺ 13894
 ││✔ {1} A720 ⫺ 8600
 │││✔ {1} A13 ⫺ 3862
 ││││✔ Brocoli_green_weeds_1 : 1/1 (conf: 1.0)
 ││││✘ Corn_senesced_green_weeds : 0/2 (conf: 0.0)
 │││✘ {1} A726 ⫺ 3198
 │││ ✔ {1} A925 ⫺ 8671
 │││ │✔ Lettuce_romaine_4wk : 13/17 (conf: 0.7647058823529411)
 │││ │✘ Brocoli_green_weeds_1 : 0/0 (conf: NaN)
 │││ ✘ Brocoli_green_weeds_1 : 1/1 (conf: 1.0)
 ││✘ Corn_senesced_green_weeds : 2/2 (conf: 1.0)
 │✘ {1} A155 ⫺ 12072
 │ ✔ Brocoli_green_weeds_1 : 8/9 (conf: 0.8888888888888888)
 │ ✘ Corn_senesced_green_weeds : 0/0 (conf: NaN)
 ✘ {1} A1439 ⫺ 2518
  ✔ {1} A1495 ⫺ 813
  │✔ {1} A1744 ⫺ 1540
  ││✔ {1} A10 ⫺ 4457
  │││✔ Lettuce_romaine_4wk : 0/1 (conf: 0.0)
  │││✘ Brocoli_green_weeds_1 : 3/5 (conf: 0.6)
  ││✘ {1} A425 ⫺ 58279
  ││ ✔ {1} A131 ⫺ 19218
  ││ │✔ Brocoli_green_weeds_1 : 1/3 (conf: 0.3333333333333333)
  ││ │✘ {1} A5 ⫺ 3010
  ││ │ ✔ Corn_senesced_green_weeds : 1/1 (conf: 1.0)
  ││ │ ✘ Corn_senesced_green_weeds : 0/0 (conf: NaN)
  ││ ✘ {1} A34 ⫺ 8522
  ││  ✔ Corn_senesced_green_weeds : 4/4 (conf: 1.0)
  ││  ✘ Corn_senesced_green_weeds : 1/3 (conf: 0.3333333333333333)
  │✘ Corn_senesced_green_weeds : 9/11 (conf: 0.8181818181818182)
  ✘ {1} A3 ⫺ 2948
   ✔ Lettuce_romaine_4wk : 0/0 (conf: NaN)
   ✘ Corn_senesced_green_weeds : 0/0 (conf: NaN)
 test size = [(1836, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:flattened,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	70.83%	70.0%	85.0%	65.0%	75.0%	70.0%	60.0%	73.68%	73.91%	72.22%	75.0%	60.87%	70.59%	||	65.0%	[71.79, 79.07, 68.42, 75.0, 65.12, 64.86]%	
  accuracy: 70.83% kappa: 65.0% 
 14  1  5  0  0  0	70.0%		Brocoli_green_weeds_1
  3 17  0  0  0  0	85.0%		Corn_senesced_green_weeds
  2  5 13  0  0  0	65.0%		Lettuce_romaine_4wk
  0  0  0 15  4  1	75.0%		Lettuce_romaine_5wk
  0  0  0  2 14  4	70.0%		Lettuce_romaine_6wk
  0  0  0  3  5 12	60.0%		Lettuce_romaine_7wk

overall_acc:	0.7083333333333334
κ =		0.65
sensitivities:	[0.7, 0.85, 0.65, 0.75, 0.7, 0.6]
specificities:	[0.95, 0.94, 0.95, 0.95, 0.91, 0.95]
PPVs:		[0.7368421052631579, 0.7391304347826086, 0.7222222222222222, 0.75, 0.6086956521739131, 0.7058823529411765]
NPVs:		[0.9405940594059405, 0.9690721649484536, 0.9313725490196079, 0.95, 0.9381443298969072, 0.9223300970873787]
F1s:		[0.717948717948718, 0.7906976744186046, 0.6842105263157895, 0.75, 0.6511627906976745, 0.6486486486486487]
accuracies:	[0.9083333333333333, 0.925, 0.9, 0.9166666666666666, 0.875, 0.8916666666666667]
mean_accuracy:	0.9027777777777778
Dataset_slice = (600) -> [69, 125, 224, 361, 493, 514, 56, 174, 287, 365, 435, 502, 62, 169, 286, 356, 466, 569, 91, 135, 227, 360, 414, 522, 63, 180, 272, 321, 443, 562, 66, 141, 201, 312, 426, 509, 98, 175, 260, 368, 409, 518, 32, 187, 210, 383, 490, 549, 41, 185, 278, 364, 500, 551, 100, 165, 256, 334, 417, 567, 48, 101, 289, 351, 477, 597, 95, 137, 246, 338, 464, 563, 38, 149, 277, 328, 480, 578, 57, 146, 293, 341, 412, 552, 14, 176, 298, 390, 442, 594, 22, 126, 218, 309, 441, 582, 1, 120, 266, 344, 405, 592, 93, 168, 254, 381, 419, 556, 37, 123, 225, 313, 453, 533, 54, 138, 204, 315, 437, 568, 49, 156, 203, 335, 402, 507, 58, 164, 257, 343, 440, 577, 15, 155, 234, 394, 489, 542, 60, 186, 285, 306, 423, 583, 71, 107, 291, 348, 459, 513, 85, 160, 283, 353, 496, 547, 77, 178, 247, 316, 469, 544, 25, 189, 237, 387, 495, 599, 45, 182, 292, 373, 482, 584, 39, 117, 250, 392, 456, 520, 83, 162, 274, 346, 421, 576, 44, 194, 231, 366, 448, 527, 35, 112, 219, 333, 497, 560, 28, 106, 236, 311, 468, 600, 51, 119, 261, 310, 431, 516, 96, 114, 273, 347, 465, 536, 78, 163, 251, 352, 404, 538, 2, 129, 213, 359, 403, 591, 26, 183, 288, 308, 454, 598, 19, 113, 282, 400, 401, 540, 5, 111, 252, 302, 473, 566, 10, 108, 211, 393, 427, 581, 55, 152, 235, 342, 470, 541, 65, 148, 276, 327, 428, 511, 99, 136, 233, 304, 472, 546, 6, 184, 230, 332, 413, 517, 23, 131, 244, 330, 452, 515, 7, 199, 240, 322, 422, 529, 74, 142, 214, 319, 467, 505, 86, 128, 264, 399, 494, 559, 75, 200, 212, 389, 449, 573, 42, 122, 300, 388, 418, 561, 9, 150, 259, 339, 491, 510, 11, 170, 296, 382, 484, 554, 80, 140, 208, 374, 457, 596, 73, 130, 239, 354, 458, 595, 16, 134, 294, 370, 475, 519, 31, 177, 202, 336, 432, 580, 89, 151, 275, 317, 438, 572, 13, 104, 243, 391, 479, 504, 72, 144, 262, 375, 436, 548, 84, 173, 258, 320, 451, 575, 64, 109, 221, 350, 474, 555, 97, 102, 228, 325, 408, 508, 61, 118, 248, 378, 487, 553, 59, 172, 279, 395, 434, 545, 40, 132, 241, 358, 406, 574, 43, 171, 217, 380, 425, 526, 20, 124, 215, 385, 486, 501, 30, 105, 269, 355, 445, 558, 53, 195, 280, 369, 463, 550, 12, 157, 297, 377, 439, 565, 50, 159, 238, 345, 499, 589, 34, 193, 284, 398, 424, 579, 81, 115, 253, 397, 416, 570, 67, 166, 222, 372, 450, 585, 24, 127, 281, 371, 481, 524, 4, 145, 263, 384, 492, 539, 68, 154, 265, 324, 410, 503, 90, 139, 255, 349, 462, 534, 3, 143, 249, 357, 455, 506, 52, 181, 220, 305, 420, 523, 94, 188, 229, 329, 483, 543, 29, 153, 270, 303, 446, 535, 36, 179, 226, 307, 433, 564, 82, 158, 209, 314, 478, 530, 27, 190, 245, 318, 485, 521, 70, 197, 206, 376, 476, 537, 92, 196, 271, 363, 415, 532, 76, 191, 295, 331, 447, 571, 21, 110, 268, 337, 498, 557, 17, 167, 242, 396, 407, 588, 46, 192, 290, 301, 429, 531, 18, 161, 216, 362, 430, 525, 87, 103, 267, 379, 471, 590, 8, 147, 232, 323, 411, 593, 47, 198, 223, 326, 444, 586, 33, 133, 207, 386, 488, 512, 88, 121, 299, 340, 460, 528, 79, 116, 205, 367, 461, 587]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	2.65 MBs
     ├ fmd	2.65 MBs	(shape (480, 1836))
     ├ fmd_m	0.0 MBs	(shape (480, 1836, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.42 MBs
     ├ domain shape	(1836, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:50:19 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (240+240=480 samples) on frame 1 with decision: {1} A128 ⫺ 11353, purity -1.09861228866811
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (116+124=240 samples) on frame 1 with decision: {1} A123 ⫺ 15551, purity -0.9147027927655303
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (44+196=240 samples) on frame 1 with decision: {1} A950 ⫺ 2916, purity -0.9815866779204779
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+25=44 samples) on frame 1 with decision: {1} A1414 ⫺ 485, purity -0.2939081879532182
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (94+22=116 samples) on frame 1 with decision: {1} A653 ⫺ 18381, purity -0.767694850621478
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (31+93=124 samples) on frame 1 with decision: {1} A777 ⫺ 11720, purity -0.7303485087503978
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+120=196 samples) on frame 1 with decision: {1} A1127 ⫺ 7693, purity -0.9470949164688978
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+10=19 samples) on frame 1 with decision: {1} A280 ⫺ 6200, purity -0.26336969659904647
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+18=22 samples) on frame 1 with decision: {1} A1394 ⫺ 844, purity -0.10224275356705605
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+25=31 samples) on frame 1 with decision: {1} A101 ⫺ 11743, purity -0.1957556641369068
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (65+11=76 samples) on frame 1 with decision: {1} A212 ⫺ 18561, purity -0.6643085939144259
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+60=94 samples) on frame 1 with decision: {1} A1046 ⫺ 1376, purity -0.6529021817819979
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+86=93 samples) on frame 1 with decision: {1} A201 ⫺ 13894, purity -0.620055620135656
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (44+76=120 samples) on frame 1 with decision: {1} A757 ⫺ 13792, purity -0.7523404589612973
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A4 ⫺ 3487, purity -0.277258872223978
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A13 ⫺ 3815, purity -0.2520535202036165
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+19=34 samples) on frame 1 with decision: {1} A154 ⫺ 12142, purity -0.3220690713934778
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+10=44 samples) on frame 1 with decision: {1} A430 ⫺ 26098, purity -0.4363980327398439
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (31+29=60 samples) on frame 1 with decision: {1} A728 ⫺ 3894, purity -0.4304275315749781
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+42=65 samples) on frame 1 with decision: {1} A965 ⫺ 305, purity -0.44814325572233277
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+10=86 samples) on frame 1 with decision: {1} A720 ⫺ 8600, purity -0.5087600197751443
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+38=76 samples) on frame 1 with decision: {1} A336 ⫺ 21306, purity -0.5345249256353113
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A5 ⫺ 2987, purity -0.277258872223978
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+6=19 samples) on frame 1 with decision: {1} A206 ⫺ 16169, purity -0.14228248701041202
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+9=23 samples) on frame 1 with decision: {1} A356 ⫺ 20281, purity -0.24963601982772687
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+12=29 samples) on frame 1 with decision: {1} A873 ⫺ 13839, purity -0.47115916635777433
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+6=34 samples) on frame 1 with decision: {1} A714 ⫺ 6786, purity -0.079510801564642
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+22=38 samples) on frame 1 with decision: {1} A45 ⫺ 10141, purity -0.49728532729227376
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+37=42 samples) on frame 1 with decision: {1} A344 ⫺ 17013, purity -0.059571717087879505
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+38=76 samples) on frame 1 with decision: {1} A1631 ⫺ 610, purity -0.3212110105381272
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A58 ⫺ 13221, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+4=14 samples) on frame 1 with decision: {1} A2 ⫺ 2955, purity -0.19804205158855578
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+5=17 samples) on frame 1 with decision: {1} A978 ⫺ 774, purity -0.19794460794389893
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+6=22 samples) on frame 1 with decision: {1} A941 ⫺ 5504, purity -0.27583752673836864
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+17=38 samples) on frame 1 with decision: {1} A279 ⫺ 12525, purity -0.3672394003092951
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+15=21 samples) on frame 1 with decision: {1} A784 ⫺ 14660, purity -0.28048176230539434
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+4=15 samples) on frame 1 with decision: {1} A6 ⫺ 3096, purity -0.18483924814931874
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
 39.412750 seconds (442.04 M allocations: 9.011 GiB, 20.84% gc time)
Train tree:
Decision Tree
Leaves: 38
Tot nodes: 75
Height: 9
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A128 ⫺ 11353
✔ {1} A950 ⫺ 2916
│✔ {1} A1127 ⫺ 7693
││✔ {1} A757 ⫺ 13792
│││✔ {1} A336 ⫺ 21306
││││✔ {1} A45 ⫺ 10141
│││││✔ {1} A941 ⫺ 5504
││││││✔ Lettuce_romaine_5wk : 3/6 (conf: 0.5)
││││││✘ Lettuce_romaine_6wk : 16/16 (conf: 1.0)
│││││✘ Lettuce_romaine_5wk : 15/16 (conf: 0.9375)
││││✘ Lettuce_romaine_6wk : 36/38 (conf: 0.9473684210526315)
│││✘ {1} A430 ⫺ 26098
│││ ✔ {1} A5 ⫺ 2987
│││ │✔ Lettuce_romaine_6wk : 6/6 (conf: 1.0)
│││ │✘ Lettuce_romaine_5wk : 2/4 (conf: 0.5)
│││ ✘ {1} A714 ⫺ 6786
│││  ✔ Lettuce_romaine_6wk : 5/6 (conf: 0.8333333333333334)
│││  ✘ Lettuce_romaine_7wk : 28/28 (conf: 1.0)
││✘ {1} A212 ⫺ 18561
││ ✔ {1} A13 ⫺ 3815
││ │✔ Lettuce_romaine_6wk : 7/7 (conf: 1.0)
││ │✘ Lettuce_romaine_7wk : 2/4 (conf: 0.5)
││ ✘ {1} A965 ⫺ 305
││  ✔ {1} A344 ⫺ 17013
││  │✔ Lettuce_romaine_5wk : 37/37 (conf: 1.0)
││  │✘ Lettuce_romaine_6wk : 4/5 (conf: 0.8)
││  ✘ {1} A356 ⫺ 20281
││   ✔ Lettuce_romaine_5wk : 9/9 (conf: 1.0)
││   ✘ {1} A2 ⫺ 2955
││    ✔ Lettuce_romaine_5wk : 2/4 (conf: 0.5)
││    ✘ Lettuce_romaine_7wk : 10/10 (conf: 1.0)
│✘ {1} A1414 ⫺ 485
│ ✔ Lettuce_romaine_7wk : 25/25 (conf: 1.0)
│ ✘ {1} A280 ⫺ 6200
│  ✔ {1} A4 ⫺ 3487
│  │✔ Lettuce_romaine_7wk : 6/6 (conf: 1.0)
│  │✘ Lettuce_romaine_5wk : 2/4 (conf: 0.5)
│  ✘ Lettuce_romaine_5wk : 9/9 (conf: 1.0)
✘ {1} A123 ⫺ 15551
 ✔ {1} A777 ⫺ 11720
 │✔ {1} A201 ⫺ 13894
 ││✔ {1} A720 ⫺ 8600
 │││✔ {1} A58 ⫺ 13221
 ││││✔ Brocoli_green_weeds_1 : 6/6 (conf: 1.0)
 ││││✘ Corn_senesced_green_weeds : 3/4 (conf: 0.75)
 │││✘ {1} A1631 ⫺ 610
 │││ ✔ Lettuce_romaine_4wk : 38/38 (conf: 1.0)
 │││ ✘ {1} A279 ⫺ 12525
 │││  ✔ Lettuce_romaine_4wk : 17/17 (conf: 1.0)
 │││  ✘ {1} A784 ⫺ 14660
 │││   ✔ {1} A6 ⫺ 3096
 │││   │✔ Lettuce_romaine_4wk : 2/4 (conf: 0.5)
 │││   │✘ Brocoli_green_weeds_1 : 11/11 (conf: 1.0)
 │││   ✘ Lettuce_romaine_4wk : 6/6 (conf: 1.0)
 ││✘ Corn_senesced_green_weeds : 7/7 (conf: 1.0)
 │✘ {1} A101 ⫺ 11743
 │ ✔ Brocoli_green_weeds_1 : 25/25 (conf: 1.0)
 │ ✘ Lettuce_romaine_4wk : 3/6 (conf: 0.5)
 ✘ {1} A653 ⫺ 18381
  ✔ {1} A1394 ⫺ 844
  │✔ Brocoli_green_weeds_1 : 18/18 (conf: 1.0)
  │✘ Corn_senesced_green_weeds : 3/4 (conf: 0.75)
  ✘ {1} A1046 ⫺ 1376
   ✔ {1} A728 ⫺ 3894
   │✔ {1} A873 ⫺ 13839
   ││✔ Corn_senesced_green_weeds : 12/12 (conf: 1.0)
   ││✘ {1} A978 ⫺ 774
   ││ ✔ Corn_senesced_green_weeds : 3/5 (conf: 0.6)
   ││ ✘ Lettuce_romaine_4wk : 12/12 (conf: 1.0)
   │✘ Corn_senesced_green_weeds : 31/31 (conf: 1.0)
   ✘ {1} A154 ⫺ 12142
    ✔ {1} A206 ⫺ 16169
    │✔ Corn_senesced_green_weeds : 5/6 (conf: 0.8333333333333334)
    │✘ Brocoli_green_weeds_1 : 13/13 (conf: 1.0)
    ✘ Corn_senesced_green_weeds : 15/15 (conf: 1.0)
● [ 01/07/2021 15:50:58 ] Saving tree to file ./gandalf/trees/tree_a631b33e81d609d0434d1cf73941b9d6f537fd024e064f9377f137ce858a92c5.jld...
Test tree:
Decision Tree
Leaves: 38
Tot nodes: 75
Height: 9
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A128 ⫺ 11353
✔ {1} A950 ⫺ 2916
│✔ {1} A1127 ⫺ 7693
││✔ {1} A757 ⫺ 13792
│││✔ {1} A336 ⫺ 21306
││││✔ {1} A45 ⫺ 10141
│││││✔ {1} A941 ⫺ 5504
││││││✔ Lettuce_romaine_5wk : 0/1 (conf: 0.0)
││││││✘ Lettuce_romaine_6wk : 7/8 (conf: 0.875)
│││││✘ Lettuce_romaine_5wk : 2/2 (conf: 1.0)
││││✘ Lettuce_romaine_6wk : 5/8 (conf: 0.625)
│││✘ {1} A430 ⫺ 26098
│││ ✔ {1} A5 ⫺ 2987
│││ │✔ Lettuce_romaine_6wk : 0/4 (conf: 0.0)
│││ │✘ Lettuce_romaine_5wk : 0/1 (conf: 0.0)
│││ ✘ {1} A714 ⫺ 6786
│││  ✔ Lettuce_romaine_6wk : 2/2 (conf: 1.0)
│││  ✘ Lettuce_romaine_7wk : 5/6 (conf: 0.8333333333333334)
││✘ {1} A212 ⫺ 18561
││ ✔ {1} A13 ⫺ 3815
││ │✔ Lettuce_romaine_6wk : 1/1 (conf: 1.0)
││ │✘ Lettuce_romaine_7wk : 0/1 (conf: 0.0)
││ ✘ {1} A965 ⫺ 305
││  ✔ {1} A344 ⫺ 17013
││  │✔ Lettuce_romaine_5wk : 7/8 (conf: 0.875)
││  │✘ Lettuce_romaine_6wk : 2/5 (conf: 0.4)
││  ✘ {1} A356 ⫺ 20281
││   ✔ Lettuce_romaine_5wk : 1/1 (conf: 1.0)
││   ✘ {1} A2 ⫺ 2955
││    ✔ Lettuce_romaine_5wk : 0/1 (conf: 0.0)
││    ✘ Lettuce_romaine_7wk : 1/1 (conf: 1.0)
│✘ {1} A1414 ⫺ 485
│ ✔ Lettuce_romaine_7wk : 3/3 (conf: 1.0)
│ ✘ {1} A280 ⫺ 6200
│  ✔ {1} A4 ⫺ 3487
│  │✔ Lettuce_romaine_7wk : 1/1 (conf: 1.0)
│  │✘ Lettuce_romaine_5wk : 1/2 (conf: 0.5)
│  ✘ Lettuce_romaine_5wk : 4/4 (conf: 1.0)
✘ {1} A123 ⫺ 15551
 ✔ {1} A777 ⫺ 11720
 │✔ {1} A201 ⫺ 13894
 ││✔ {1} A720 ⫺ 8600
 │││✔ {1} A58 ⫺ 13221
 ││││✔ Brocoli_green_weeds_1 : 1/1 (conf: 1.0)
 ││││✘ Corn_senesced_green_weeds : 0/0 (conf: NaN)
 │││✘ {1} A1631 ⫺ 610
 │││ ✔ Lettuce_romaine_4wk : 5/7 (conf: 0.7142857142857143)
 │││ ✘ {1} A279 ⫺ 12525
 │││  ✔ Lettuce_romaine_4wk : 3/4 (conf: 0.75)
 │││  ✘ {1} A784 ⫺ 14660
 │││   ✔ {1} A6 ⫺ 3096
 │││   │✔ Lettuce_romaine_4wk : 2/2 (conf: 1.0)
 │││   │✘ Brocoli_green_weeds_1 : 2/4 (conf: 0.5)
 │││   ✘ Lettuce_romaine_4wk : 1/1 (conf: 1.0)
 ││✘ Corn_senesced_green_weeds : 2/2 (conf: 1.0)
 │✘ {1} A101 ⫺ 11743
 │ ✔ Brocoli_green_weeds_1 : 7/7 (conf: 1.0)
 │ ✘ Lettuce_romaine_4wk : 1/3 (conf: 0.3333333333333333)
 ✘ {1} A653 ⫺ 18381
  ✔ {1} A1394 ⫺ 844
  │✔ Brocoli_green_weeds_1 : 3/4 (conf: 0.75)
  │✘ Corn_senesced_green_weeds : 0/0 (conf: NaN)
  ✘ {1} A1046 ⫺ 1376
   ✔ {1} A728 ⫺ 3894
   │✔ {1} A873 ⫺ 13839
   ││✔ Corn_senesced_green_weeds : 2/2 (conf: 1.0)
   ││✘ {1} A978 ⫺ 774
   ││ ✔ Corn_senesced_green_weeds : 1/3 (conf: 0.3333333333333333)
   ││ ✘ Lettuce_romaine_4wk : 5/6 (conf: 0.8333333333333334)
   │✘ Corn_senesced_green_weeds : 6/6 (conf: 1.0)
   ✘ {1} A154 ⫺ 12142
    ✔ {1} A206 ⫺ 16169
    │✔ Corn_senesced_green_weeds : 4/4 (conf: 1.0)
    │✘ Brocoli_green_weeds_1 : 2/2 (conf: 1.0)
    ✘ Corn_senesced_green_weeds : 1/2 (conf: 0.5)
 test size = [(1836, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:flattened,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	75.0%	75.0%	80.0%	85.0%	75.0%	85.0%	50.0%	83.33%	84.21%	73.91%	75.0%	60.71%	83.33%	||	70.0%	[78.95, 82.05, 79.07, 75.0, 70.83, 62.5]%	
  accuracy: 75.0% kappa: 70.0% 
 15  2  3  0  0  0	75.0%		Brocoli_green_weeds_1
  1 16  3  0  0  0	80.0%		Corn_senesced_green_weeds
  2  1 17  0  0  0	85.0%		Lettuce_romaine_4wk
  0  0  0 15  5  0	75.0%		Lettuce_romaine_5wk
  0  0  0  1 17  2	85.0%		Lettuce_romaine_6wk
  0  0  0  4  6 10	50.0%		Lettuce_romaine_7wk

overall_acc:	0.75
κ =		0.7000000000000001
sensitivities:	[0.75, 0.8, 0.85, 0.75, 0.85, 0.5]
specificities:	[0.97, 0.97, 0.94, 0.95, 0.89, 0.98]
PPVs:		[0.8333333333333334, 0.8421052631578947, 0.7391304347826086, 0.75, 0.6071428571428571, 0.8333333333333334]
NPVs:		[0.9509803921568627, 0.9603960396039604, 0.9690721649484536, 0.95, 0.967391304347826, 0.9074074074074074]
F1s:		[0.7894736842105263, 0.8205128205128205, 0.7906976744186046, 0.75, 0.7083333333333334, 0.625]
accuracies:	[0.9333333333333333, 0.9416666666666667, 0.925, 0.9166666666666666, 0.8833333333333333, 0.9]
mean_accuracy:	0.9166666666666666
Dataset_slice = (600) -> [60, 161, 270, 359, 480, 580, 46, 140, 238, 345, 460, 561, 23, 131, 243, 309, 470, 560, 40, 121, 266, 306, 436, 558, 68, 185, 240, 312, 488, 534, 29, 183, 233, 332, 495, 531, 53, 164, 208, 386, 441, 511, 24, 154, 269, 393, 440, 551, 83, 153, 226, 339, 425, 590, 1, 112, 263, 302, 429, 515, 47, 146, 273, 387, 432, 545, 65, 110, 300, 341, 426, 529, 98, 115, 209, 348, 419, 530, 51, 176, 286, 395, 442, 516, 6, 148, 212, 336, 452, 556, 12, 103, 204, 303, 453, 600, 45, 122, 237, 366, 420, 541, 93, 167, 293, 368, 415, 521, 80, 106, 241, 323, 496, 563, 97, 193, 276, 365, 414, 592, 5, 132, 232, 390, 444, 528, 73, 124, 231, 358, 433, 504, 85, 174, 265, 329, 462, 524, 44, 134, 255, 322, 489, 578, 18, 160, 258, 372, 493, 501, 32, 188, 290, 394, 409, 554, 62, 200, 206, 320, 473, 587, 74, 111, 234, 360, 463, 514, 49, 128, 289, 355, 406, 533, 76, 191, 257, 381, 478, 566, 88, 125, 274, 349, 424, 546, 34, 101, 262, 318, 408, 573, 2, 162, 246, 324, 486, 570, 95, 105, 292, 337, 421, 595, 36, 197, 207, 343, 492, 520, 27, 147, 203, 362, 437, 577, 35, 149, 202, 375, 411, 539, 31, 170, 242, 374, 430, 571, 7, 126, 247, 344, 500, 552, 11, 184, 298, 338, 428, 532, 52, 109, 282, 370, 456, 562, 75, 142, 213, 328, 446, 576, 69, 152, 287, 330, 455, 564, 41, 172, 248, 354, 407, 582, 22, 194, 249, 397, 466, 572, 10, 136, 253, 399, 435, 542, 16, 157, 228, 357, 448, 585, 72, 178, 291, 313, 494, 526, 61, 173, 210, 319, 404, 586, 96, 143, 220, 351, 464, 598, 56, 158, 299, 378, 401, 557, 48, 175, 211, 367, 431, 509, 89, 104, 236, 389, 417, 527, 71, 139, 260, 376, 491, 536, 15, 168, 280, 327, 443, 599, 30, 119, 288, 310, 449, 594, 90, 138, 294, 305, 459, 549, 50, 118, 205, 400, 477, 518, 66, 130, 252, 380, 483, 589, 14, 144, 261, 369, 454, 503, 100, 145, 215, 371, 447, 579, 17, 156, 296, 356, 457, 508, 84, 186, 227, 315, 475, 565, 86, 179, 283, 304, 439, 548, 92, 113, 281, 335, 461, 537, 78, 163, 279, 342, 418, 596, 43, 133, 217, 311, 469, 519, 59, 169, 251, 316, 498, 547, 54, 177, 245, 361, 403, 591, 25, 117, 254, 384, 422, 543, 64, 108, 264, 346, 434, 505, 55, 165, 297, 352, 484, 593, 99, 159, 278, 307, 416, 538, 58, 150, 256, 388, 467, 502, 42, 196, 250, 326, 427, 569, 67, 141, 216, 331, 487, 525, 3, 137, 219, 373, 445, 544, 13, 195, 222, 377, 402, 583, 8, 102, 259, 340, 476, 535, 79, 151, 272, 398, 405, 512, 91, 180, 224, 325, 471, 522, 33, 189, 284, 333, 468, 510, 38, 182, 268, 379, 472, 517, 77, 166, 275, 391, 479, 523, 9, 181, 271, 353, 499, 588, 39, 155, 221, 317, 412, 553, 4, 198, 277, 392, 458, 513, 87, 199, 295, 383, 481, 550, 21, 114, 201, 334, 465, 507, 19, 120, 230, 363, 497, 567, 94, 190, 229, 314, 485, 575, 57, 116, 214, 308, 423, 597, 82, 192, 223, 350, 450, 581, 28, 171, 285, 347, 451, 559, 26, 127, 225, 385, 474, 574, 20, 107, 244, 301, 438, 506, 81, 135, 239, 396, 482, 540, 70, 123, 235, 321, 410, 568, 63, 129, 267, 382, 413, 555, 37, 187, 218, 364, 490, 584]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	2.65 MBs
     ├ fmd	2.65 MBs	(shape (480, 1836))
     ├ fmd_m	0.0 MBs	(shape (480, 1836, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.42 MBs
     ├ domain shape	(1836, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:50:58 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (240+240=480 samples) on frame 1 with decision: {1} A119 ⫺ 11274, purity -1.09861228866811
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (117+123=240 samples) on frame 1 with decision: {1} A123 ⫺ 15551, purity -0.9156128663590134
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (49+191=240 samples) on frame 1 with decision: {1} A950 ⫺ 2916, purity -0.9755011617094371
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+38=49 samples) on frame 1 with decision: {1} A1018 ⫺ 446, purity -0.32934358895949417
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (50+67=117 samples) on frame 1 with decision: {1} A1459 ⫺ 649, purity -0.7442534249989623
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (30+93=123 samples) on frame 1 with decision: {1} A777 ⫺ 11720, purity -0.7057404020698607
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (69+122=191 samples) on frame 1 with decision: {1} A1127 ⫺ 7693, purity -0.9533093422637928
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A2 ⫺ 2995, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (26+4=30 samples) on frame 1 with decision: {1} A79 ⫺ 13980, purity -0.13862943611198866
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+34=38 samples) on frame 1 with decision: {1} A27 ⫺ 4300, purity -0.17791707597449663
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (37+13=50 samples) on frame 1 with decision: {1} A349 ⫺ 20250, purity -0.27139389543321596
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (56+11=67 samples) on frame 1 with decision: {1} A1640 ⫺ 594, purity -0.7338442876906011
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+42=69 samples) on frame 1 with decision: {1} A965 ⫺ 313, purity -0.6779141491423907
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+86=93 samples) on frame 1 with decision: {1} A201 ⫺ 13894, purity -0.6066254454456984
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (47+75=122 samples) on frame 1 with decision: {1} A874 ⫺ 12721, purity -0.7625217546389081
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+5=11 samples) on frame 1 with decision: {1} A26 ⫺ 5309, purity 1.2111523905001707e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+7=13 samples) on frame 1 with decision: {1} A70 ⫺ 12166, purity 1.0248212535001446e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+17=27 samples) on frame 1 with decision: {1} A959 ⫺ 313, purity -0.6720145154071403
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (20+27=47 samples) on frame 1 with decision: {1} A408 ⫺ 22635, purity -0.5361300125177078
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+45=56 samples) on frame 1 with decision: {1} A168 ⫺ 17740, purity -0.5067447012995434
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (36+6=42 samples) on frame 1 with decision: {1} A176 ⫺ 18288, purity -0.17316349727353136
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (35+51=86 samples) on frame 1 with decision: {1} A1464 ⫺ 5059, purity -0.5099406255284723
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (25+50=75 samples) on frame 1 with decision: {1} A45 ⫺ 10156, purity -0.5044942801695336
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A1 ⫺ 3518, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+4=11 samples) on frame 1 with decision: {1} A1 ⫺ 3487, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+8=17 samples) on frame 1 with decision: {1} A70 ⫺ 12158, purity -0.36197942074345785
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+16=20 samples) on frame 1 with decision: {1} A36 ⫺ 8194, purity -0.13862943611198905
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+19=25 samples) on frame 1 with decision: {1} A171 ⫺ 15942, purity -0.25573677576347187
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+20=27 samples) on frame 1 with decision: {1} A49 ⫺ 13675, purity -0.4524920755962177
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+20=35 samples) on frame 1 with decision: {1} A1566 ⫺ 2486, purity -0.29073171056424285
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+41=50 samples) on frame 1 with decision: {1} A1545 ⫺ 4324, purity -0.2677188575477206
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+22=45 samples) on frame 1 with decision: {1} A60 ⫺ 11595, purity -0.338871954940418
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+13=51 samples) on frame 1 with decision: {1} A87 ⫺ 16075, purity -0.23581721738111905
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A30 ⫺ 8288, purity -0.2780013464101044
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A1 ⫺ 2955, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+8=13 samples) on frame 1 with decision: {1} A402 ⫺ 21751, purity -0.2588506411574063
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A2 ⫺ 2908, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+4=19 samples) on frame 1 with decision: {1} A6 ⫺ 3581, purity -0.14592572222314637
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+11=20 samples) on frame 1 with decision: {1} A91 ⫺ 12033, purity -0.28643137573266586
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+16=20 samples) on frame 1 with decision: {1} A47 ⫺ 11173, purity -0.13862943611198905
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+13=22 samples) on frame 1 with decision: {1} A18 ⫺ 3307, purity -0.25369087659536405
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A4 ⫺ 3518, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+4=13 samples) on frame 1 with decision: {1} A1 ⫺ 2955, purity -0.21327605555690624
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
 38.773866 seconds (439.72 M allocations: 9.041 GiB, 21.80% gc time)
Train tree:
Decision Tree
Leaves: 44
Tot nodes: 87
Height: 8
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A119 ⫺ 11274
✔ {1} A950 ⫺ 2916
│✔ {1} A1127 ⫺ 7693
││✔ {1} A874 ⫺ 12721
│││✔ {1} A45 ⫺ 10156
││││✔ {1} A1545 ⫺ 4324
│││││✔ Lettuce_romaine_6wk : 40/41 (conf: 0.975609756097561)
│││││✘ {1} A30 ⫺ 8288
│││││ ✔ Lettuce_romaine_7wk : 4/5 (conf: 0.8)
│││││ ✘ Lettuce_romaine_6wk : 4/4 (conf: 1.0)
││││✘ {1} A171 ⫺ 15942
││││ ✔ {1} A6 ⫺ 3581
││││ │✔ Lettuce_romaine_5wk : 2/4 (conf: 0.5)
││││ │✘ Lettuce_romaine_5wk : 15/15 (conf: 1.0)
││││ ✘ Lettuce_romaine_6wk : 6/6 (conf: 1.0)
│││✘ {1} A408 ⫺ 22635
│││ ✔ {1} A49 ⫺ 13675
│││ │✔ {1} A91 ⫺ 12033
│││ ││✔ Lettuce_romaine_6wk : 11/11 (conf: 1.0)
│││ ││✘ {1} A4 ⫺ 3518
│││ ││ ✔ Lettuce_romaine_7wk : 5/5 (conf: 1.0)
│││ ││ ✘ Lettuce_romaine_6wk : 3/4 (conf: 0.75)
│││ │✘ Lettuce_romaine_7wk : 7/7 (conf: 1.0)
│││ ✘ {1} A36 ⫺ 8194
│││  ✔ Lettuce_romaine_7wk : 16/16 (conf: 1.0)
│││  ✘ Lettuce_romaine_5wk : 2/4 (conf: 0.5)
││✘ {1} A965 ⫺ 313
││ ✔ {1} A176 ⫺ 18288
││ │✔ Lettuce_romaine_6wk : 5/6 (conf: 0.8333333333333334)
││ │✘ Lettuce_romaine_5wk : 35/36 (conf: 0.9722222222222222)
││ ✘ {1} A959 ⫺ 313
││  ✔ {1} A70 ⫺ 12158
││  │✔ {1} A2 ⫺ 2908
││  ││✔ Lettuce_romaine_6wk : 4/4 (conf: 1.0)
││  ││✘ Lettuce_romaine_6wk : 3/4 (conf: 0.75)
││  │✘ {1} A1 ⫺ 2955
││  │ ✔ Lettuce_romaine_5wk : 3/4 (conf: 0.75)
││  │ ✘ Lettuce_romaine_5wk : 5/5 (conf: 1.0)
││  ✘ {1} A1 ⫺ 3518
││   ✔ Lettuce_romaine_7wk : 3/4 (conf: 0.75)
││   ✘ Lettuce_romaine_7wk : 6/6 (conf: 1.0)
│✘ {1} A1018 ⫺ 446
│ ✔ {1} A27 ⫺ 4300
│ │✔ Lettuce_romaine_7wk : 33/34 (conf: 0.9705882352941176)
│ │✘ Lettuce_romaine_5wk : 3/4 (conf: 0.75)
│ ✘ {1} A2 ⫺ 2995
│  ✔ Lettuce_romaine_5wk : 7/7 (conf: 1.0)
│  ✘ Lettuce_romaine_5wk : 3/4 (conf: 0.75)
✘ {1} A123 ⫺ 15551
 ✔ {1} A777 ⫺ 11720
 │✔ {1} A201 ⫺ 13894
 ││✔ {1} A1464 ⫺ 5059
 │││✔ {1} A87 ⫺ 16075
 ││││✔ {1} A402 ⫺ 21751
 │││││✔ Lettuce_romaine_4wk : 8/8 (conf: 1.0)
 │││││✘ Corn_senesced_green_weeds : 3/5 (conf: 0.6)
 ││││✘ Lettuce_romaine_4wk : 38/38 (conf: 1.0)
 │││✘ {1} A1566 ⫺ 2486
 │││ ✔ {1} A47 ⫺ 11173
 │││ │✔ Lettuce_romaine_4wk : 16/16 (conf: 1.0)
 │││ │✘ Lettuce_romaine_4wk : 2/4 (conf: 0.5)
 │││ ✘ Brocoli_green_weeds_1 : 14/15 (conf: 0.9333333333333333)
 ││✘ Corn_senesced_green_weeds : 7/7 (conf: 1.0)
 │✘ {1} A79 ⫺ 13980
 │ ✔ Lettuce_romaine_4wk : 2/4 (conf: 0.5)
 │ ✘ Brocoli_green_weeds_1 : 26/26 (conf: 1.0)
 ✘ {1} A1459 ⫺ 649
  ✔ {1} A1640 ⫺ 594
  │✔ {1} A26 ⫺ 5309
  ││✔ Lettuce_romaine_4wk : 5/5 (conf: 1.0)
  ││✘ Corn_senesced_green_weeds : 6/6 (conf: 1.0)
  │✘ {1} A168 ⫺ 17740
  │ ✔ {1} A60 ⫺ 11595
  │ │✔ {1} A18 ⫺ 3307
  │ ││✔ {1} A1 ⫺ 2955
  │ │││✔ Corn_senesced_green_weeds : 2/4 (conf: 0.5)
  │ │││✘ Corn_senesced_green_weeds : 9/9 (conf: 1.0)
  │ ││✘ Brocoli_green_weeds_1 : 9/9 (conf: 1.0)
  │ │✘ Brocoli_green_weeds_1 : 23/23 (conf: 1.0)
  │ ✘ {1} A1 ⫺ 3487
  │  ✔ Corn_senesced_green_weeds : 3/4 (conf: 0.75)
  │  ✘ Corn_senesced_green_weeds : 7/7 (conf: 1.0)
  ✘ {1} A349 ⫺ 20250
   ✔ {1} A70 ⫺ 12166
   │✔ Lettuce_romaine_4wk : 7/7 (conf: 1.0)
   │✘ Corn_senesced_green_weeds : 6/6 (conf: 1.0)
   ✘ Corn_senesced_green_weeds : 36/37 (conf: 0.972972972972973)
● [ 01/07/2021 15:51:37 ] Saving tree to file ./gandalf/trees/tree_0d8b26d9dc40659766c3b699390c31d84e768c0594c10fd6f502e9b89d372767.jld...
Test tree:
Decision Tree
Leaves: 44
Tot nodes: 87
Height: 8
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A119 ⫺ 11274
✔ {1} A950 ⫺ 2916
│✔ {1} A1127 ⫺ 7693
││✔ {1} A874 ⫺ 12721
│││✔ {1} A45 ⫺ 10156
││││✔ {1} A1545 ⫺ 4324
│││││✔ Lettuce_romaine_6wk : 6/9 (conf: 0.6666666666666666)
│││││✘ {1} A30 ⫺ 8288
│││││ ✔ Lettuce_romaine_7wk : 1/3 (conf: 0.3333333333333333)
│││││ ✘ Lettuce_romaine_6wk : 2/2 (conf: 1.0)
││││✘ {1} A171 ⫺ 15942
││││ ✔ {1} A6 ⫺ 3581
││││ │✔ Lettuce_romaine_5wk : 0/0 (conf: NaN)
││││ │✘ Lettuce_romaine_5wk : 1/3 (conf: 0.3333333333333333)
││││ ✘ Lettuce_romaine_6wk : 2/2 (conf: 1.0)
│││✘ {1} A408 ⫺ 22635
│││ ✔ {1} A49 ⫺ 13675
│││ │✔ {1} A91 ⫺ 12033
│││ ││✔ Lettuce_romaine_6wk : 1/3 (conf: 0.3333333333333333)
│││ ││✘ {1} A4 ⫺ 3518
│││ ││ ✔ Lettuce_romaine_7wk : 0/1 (conf: 0.0)
│││ ││ ✘ Lettuce_romaine_6wk : 1/2 (conf: 0.5)
│││ │✘ Lettuce_romaine_7wk : 2/3 (conf: 0.6666666666666666)
│││ ✘ {1} A36 ⫺ 8194
│││  ✔ Lettuce_romaine_7wk : 2/2 (conf: 1.0)
│││  ✘ Lettuce_romaine_5wk : 0/0 (conf: NaN)
││✘ {1} A965 ⫺ 313
││ ✔ {1} A176 ⫺ 18288
││ │✔ Lettuce_romaine_6wk : 2/6 (conf: 0.3333333333333333)
││ │✘ Lettuce_romaine_5wk : 9/9 (conf: 1.0)
││ ✘ {1} A959 ⫺ 313
││  ✔ {1} A70 ⫺ 12158
││  │✔ {1} A2 ⫺ 2908
││  ││✔ Lettuce_romaine_6wk : 0/0 (conf: NaN)
││  ││✘ Lettuce_romaine_6wk : 1/2 (conf: 0.5)
││  │✘ {1} A1 ⫺ 2955
││  │ ✔ Lettuce_romaine_5wk : 1/2 (conf: 0.5)
││  │ ✘ Lettuce_romaine_5wk : 0/0 (conf: NaN)
││  ✘ {1} A1 ⫺ 3518
││   ✔ Lettuce_romaine_7wk : 0/0 (conf: NaN)
││   ✘ Lettuce_romaine_7wk : 2/5 (conf: 0.4)
│✘ {1} A1018 ⫺ 446
│ ✔ {1} A27 ⫺ 4300
│ │✔ Lettuce_romaine_7wk : 3/3 (conf: 1.0)
│ │✘ Lettuce_romaine_5wk : 0/0 (conf: NaN)
│ ✘ {1} A2 ⫺ 2995
│  ✔ Lettuce_romaine_5wk : 2/2 (conf: 1.0)
│  ✘ Lettuce_romaine_5wk : 0/0 (conf: NaN)
✘ {1} A123 ⫺ 15551
 ✔ {1} A777 ⫺ 11720
 │✔ {1} A201 ⫺ 13894
 ││✔ {1} A1464 ⫺ 5059
 │││✔ {1} A87 ⫺ 16075
 ││││✔ {1} A402 ⫺ 21751
 │││││✔ Lettuce_romaine_4wk : 0/0 (conf: NaN)
 │││││✘ Corn_senesced_green_weeds : 0/2 (conf: 0.0)
 ││││✘ Lettuce_romaine_4wk : 7/11 (conf: 0.6363636363636364)
 │││✘ {1} A1566 ⫺ 2486
 │││ ✔ {1} A47 ⫺ 11173
 │││ │✔ Lettuce_romaine_4wk : 2/2 (conf: 1.0)
 │││ │✘ Lettuce_romaine_4wk : 1/1 (conf: 1.0)
 │││ ✘ Brocoli_green_weeds_1 : 2/3 (conf: 0.6666666666666666)
 ││✘ Corn_senesced_green_weeds : 2/2 (conf: 1.0)
 │✘ {1} A79 ⫺ 13980
 │ ✔ Lettuce_romaine_4wk : 0/1 (conf: 0.0)
 │ ✘ Brocoli_green_weeds_1 : 7/10 (conf: 0.7)
 ✘ {1} A1459 ⫺ 649
  ✔ {1} A1640 ⫺ 594
  │✔ {1} A26 ⫺ 5309
  ││✔ Lettuce_romaine_4wk : 0/1 (conf: 0.0)
  ││✘ Corn_senesced_green_weeds : 1/3 (conf: 0.3333333333333333)
  │✘ {1} A168 ⫺ 17740
  │ ✔ {1} A60 ⫺ 11595
  │ │✔ {1} A18 ⫺ 3307
  │ ││✔ {1} A1 ⫺ 2955
  │ │││✔ Corn_senesced_green_weeds : 1/3 (conf: 0.3333333333333333)
  │ │││✘ Corn_senesced_green_weeds : 1/1 (conf: 1.0)
  │ ││✘ Brocoli_green_weeds_1 : 0/1 (conf: 0.0)
  │ │✘ Brocoli_green_weeds_1 : 1/1 (conf: 1.0)
  │ ✘ {1} A1 ⫺ 3487
  │  ✔ Corn_senesced_green_weeds : 1/4 (conf: 0.25)
  │  ✘ Corn_senesced_green_weeds : 2/4 (conf: 0.5)
  ✘ {1} A349 ⫺ 20250
   ✔ {1} A70 ⫺ 12166
   │✔ Lettuce_romaine_4wk : 1/4 (conf: 0.25)
   │✘ Corn_senesced_green_weeds : 0/0 (conf: NaN)
   ✘ Corn_senesced_green_weeds : 6/7 (conf: 0.8571428571428571)
 test size = [(1836, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:flattened,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	60.83%	50.0%	70.0%	55.0%	65.0%	75.0%	50.0%	66.67%	53.85%	55.0%	81.25%	57.69%	58.82%	||	53.0%	[57.14, 60.87, 55.0, 72.22, 65.22, 54.05]%	
  accuracy: 60.83% kappa: 53.0% 
 10  6  4  0  0  0	50.0%		Brocoli_green_weeds_1
  2 14  4  0  0  0	70.0%		Corn_senesced_green_weeds
  3  6 11  0  0  0	55.0%		Lettuce_romaine_4wk
  0  0  0 13  4  3	65.0%		Lettuce_romaine_5wk
  0  0  0  1 15  4	75.0%		Lettuce_romaine_6wk
  0  0  1  2  7 10	50.0%		Lettuce_romaine_7wk

overall_acc:	0.6083333333333333
κ =		0.5299999999999999
sensitivities:	[0.5, 0.7, 0.55, 0.65, 0.75, 0.5]
specificities:	[0.95, 0.88, 0.91, 0.97, 0.89, 0.93]
PPVs:		[0.6666666666666666, 0.5384615384615384, 0.55, 0.8125, 0.5769230769230769, 0.5882352941176471]
NPVs:		[0.9047619047619048, 0.9361702127659575, 0.91, 0.9326923076923077, 0.9468085106382979, 0.9029126213592233]
F1s:		[0.5714285714285714, 0.6086956521739131, 0.55, 0.7222222222222222, 0.6521739130434783, 0.5405405405405406]
accuracies:	[0.875, 0.85, 0.85, 0.9166666666666666, 0.8666666666666667, 0.8583333333333333]
mean_accuracy:	0.8694444444444445
Dataset_slice = (600) -> [10, 116, 221, 307, 469, 514, 12, 188, 231, 354, 401, 560, 84, 193, 239, 362, 483, 542, 52, 131, 230, 337, 491, 527, 45, 175, 218, 385, 492, 523, 87, 192, 265, 383, 486, 503, 14, 190, 264, 381, 480, 580, 20, 142, 242, 352, 422, 531, 39, 159, 210, 355, 453, 561, 9, 138, 279, 380, 488, 544, 38, 119, 250, 391, 454, 541, 43, 155, 289, 365, 495, 512, 23, 187, 292, 316, 457, 600, 92, 132, 205, 389, 403, 504, 93, 113, 286, 356, 440, 519, 51, 145, 296, 366, 418, 557, 89, 158, 240, 368, 433, 584, 67, 146, 259, 336, 449, 515, 100, 176, 244, 372, 464, 534, 71, 164, 283, 390, 460, 546, 36, 128, 243, 325, 404, 567, 19, 153, 236, 306, 412, 596, 94, 126, 237, 400, 496, 537, 68, 137, 260, 308, 466, 533, 22, 120, 222, 360, 493, 517, 21, 169, 214, 332, 445, 506, 1, 136, 290, 397, 413, 554, 5, 189, 238, 315, 414, 592, 53, 148, 235, 318, 456, 505, 46, 104, 300, 311, 497, 569, 91, 179, 297, 303, 416, 572, 3, 194, 248, 304, 408, 599, 34, 108, 285, 335, 407, 502, 41, 197, 247, 320, 437, 529, 62, 167, 281, 384, 431, 579, 75, 199, 272, 331, 411, 552, 73, 129, 257, 317, 439, 564, 97, 105, 209, 377, 420, 516, 55, 161, 217, 324, 475, 508, 80, 180, 298, 305, 430, 538, 59, 173, 212, 328, 424, 536, 63, 124, 206, 338, 438, 556, 4, 112, 204, 394, 417, 553, 54, 191, 220, 369, 435, 524, 74, 182, 274, 359, 443, 543, 95, 195, 234, 375, 470, 551, 78, 117, 277, 312, 487, 521, 96, 107, 226, 321, 451, 522, 99, 184, 255, 392, 410, 597, 16, 178, 232, 347, 423, 571, 72, 106, 249, 346, 479, 568, 90, 162, 295, 326, 406, 588, 60, 121, 288, 313, 471, 558, 44, 122, 219, 393, 434, 555, 18, 115, 275, 327, 402, 562, 25, 109, 299, 358, 473, 587, 32, 125, 252, 334, 429, 548, 77, 147, 211, 343, 459, 595, 28, 200, 251, 363, 444, 539, 24, 133, 284, 322, 481, 525, 76, 130, 213, 357, 432, 578, 17, 101, 293, 344, 499, 582, 65, 114, 227, 314, 442, 511, 31, 183, 203, 349, 482, 513, 30, 149, 291, 373, 450, 535, 50, 141, 225, 310, 500, 590, 85, 139, 233, 341, 468, 507, 26, 165, 258, 333, 447, 509, 33, 144, 270, 378, 462, 598, 37, 123, 269, 398, 441, 545, 64, 110, 215, 345, 474, 570, 56, 177, 266, 329, 425, 589, 27, 170, 246, 350, 472, 520, 49, 118, 268, 376, 465, 576, 57, 196, 262, 351, 476, 577, 69, 174, 245, 388, 428, 518, 70, 154, 224, 399, 455, 540, 8, 198, 253, 370, 494, 573, 83, 181, 208, 340, 478, 594, 15, 186, 254, 309, 458, 547, 98, 102, 267, 323, 490, 565, 11, 171, 223, 386, 498, 575, 7, 150, 261, 339, 477, 549, 29, 151, 278, 364, 463, 510, 2, 156, 273, 342, 426, 559, 48, 143, 263, 301, 467, 563, 61, 185, 256, 367, 461, 574, 82, 152, 202, 330, 436, 530, 6, 160, 280, 348, 485, 585, 81, 168, 207, 396, 421, 526, 79, 166, 276, 353, 419, 591, 88, 140, 294, 361, 415, 583, 35, 111, 229, 382, 489, 581, 13, 103, 201, 302, 427, 532, 66, 127, 287, 395, 452, 501, 47, 135, 271, 387, 446, 566, 42, 157, 241, 374, 448, 528, 40, 163, 282, 319, 484, 593, 86, 172, 228, 371, 405, 586, 58, 134, 216, 379, 409, 550]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	2.65 MBs
     ├ fmd	2.65 MBs	(shape (480, 1836))
     ├ fmd_m	0.0 MBs	(shape (480, 1836, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.42 MBs
     ├ domain shape	(1836, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:51:37 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (240+240=480 samples) on frame 1 with decision: {1} A128 ⫺ 11353, purity -1.09861228866811
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (114+126=240 samples) on frame 1 with decision: {1} A123 ⫺ 15551, purity -0.9124500083979207
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (42+198=240 samples) on frame 1 with decision: {1} A950 ⫺ 2916, purity -0.9848131249372643
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+33=42 samples) on frame 1 with decision: {1} A1018 ⫺ 446, purity -0.2543890640671836
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (98+16=114 samples) on frame 1 with decision: {1} A653 ⫺ 18381, purity -0.7423858508867414
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (37+89=126 samples) on frame 1 with decision: {1} A777 ⫺ 11720, purity -0.6920790592888871
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+119=198 samples) on frame 1 with decision: {1} A1127 ⫺ 7693, purity -0.9479655494605289
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A2 ⫺ 3049, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+29=37 samples) on frame 1 with decision: {1} A101 ⫺ 11743, purity -0.23398822271108477
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (33+46=79 samples) on frame 1 with decision: {1} A965 ⫺ 313, purity -0.6797507334577014
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+81=89 samples) on frame 1 with decision: {1} A201 ⫺ 13894, purity -0.510342074579911
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (39+59=98 samples) on frame 1 with decision: {1} A413 ⫺ 27255, purity -0.6266751186211642
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (45+74=119 samples) on frame 1 with decision: {1} A874 ⫺ 12721, purity -0.7930895962871187
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A19 ⫺ 5770, purity -0.5623351446188083
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+11=33 samples) on frame 1 with decision: {1} A356 ⫺ 20281, purity -0.6476986989177548
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (32+13=45 samples) on frame 1 with decision: {1} A511 ⫺ 20445, purity -0.5481221260897351
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (41+5=46 samples) on frame 1 with decision: {1} A158 ⫺ 17631, purity -0.1022016645721561
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (25+34=59 samples) on frame 1 with decision: {1} A1487 ⫺ 782, purity -0.7804503881338757
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (20+54=74 samples) on frame 1 with decision: {1} A1696 ⫺ 2377, purity -0.5627507834389313
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (39+42=81 samples) on frame 1 with decision: {1} A8 ⫺ 2955, purity -0.3968988739550613
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+4=11 samples) on frame 1 with decision: {1} A1 ⫺ 3096, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+9=13 samples) on frame 1 with decision: {1} A408 ⫺ 22635, purity -0.21327605555690624
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+16=20 samples) on frame 1 with decision: {1} A345 ⫺ 18788, purity -0.3014161290051497
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+14=22 samples) on frame 1 with decision: {1} A341 ⫺ 20711, purity -0.300755557166597
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+18=25 samples) on frame 1 with decision: {1} A1702 ⫺ 313, purity -0.32440407038373936
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+24=34 samples) on frame 1 with decision: {1} A722 ⫺ 6482, purity -0.460200591090121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+5=32 samples) on frame 1 with decision: {1} A714 ⫺ 6786, purity 3.7470027081099033e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (26+16=42 samples) on frame 1 with decision: {1} A279 ⫺ 12525, purity -0.5015215724305935
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (45+9=54 samples) on frame 1 with decision: {1} A1309 ⫺ 2260, purity -0.27190701380136817
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A1 ⫺ 2955, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A3 ⫺ 2908, purity -0.6238221015023906
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+12=16 samples) on frame 1 with decision: {1} A14 ⫺ 3815, purity -0.17328679513998632
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+14=18 samples) on frame 1 with decision: {1} A12 ⫺ 3206, purity -0.12496336547084629
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+20=24 samples) on frame 1 with decision: {1} A1643 ⫺ 3385, purity -0.2809538995482182
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+12=26 samples) on frame 1 with decision: {1} A224 ⫺ 16028, purity -0.32214516308436897
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+10=14 samples) on frame 1 with decision: {1} A442 ⫺ 51180, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
 37.556400 seconds (427.45 M allocations: 8.692 GiB, 22.38% gc time)
Train tree:
Decision Tree
Leaves: 37
Tot nodes: 73
Height: 8
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A128 ⫺ 11353
✔ {1} A950 ⫺ 2916
│✔ {1} A1127 ⫺ 7693
││✔ {1} A874 ⫺ 12721
│││✔ {1} A1696 ⫺ 2377
││││✔ {1} A1309 ⫺ 2260
│││││✔ {1} A3 ⫺ 2908
││││││✔ Lettuce_romaine_7wk : 3/5 (conf: 0.6)
││││││✘ Lettuce_romaine_5wk : 3/4 (conf: 0.75)
│││││✘ Lettuce_romaine_6wk : 44/45 (conf: 0.9777777777777777)
││││✘ {1} A345 ⫺ 18788
││││ ✔ {1} A14 ⫺ 3815
││││ │✔ Lettuce_romaine_5wk : 12/12 (conf: 1.0)
││││ │✘ Lettuce_romaine_5wk : 2/4 (conf: 0.5)
││││ ✘ Lettuce_romaine_6wk : 4/4 (conf: 1.0)
│││✘ {1} A511 ⫺ 20445
│││ ✔ {1} A408 ⫺ 22635
│││ │✔ Lettuce_romaine_6wk : 9/9 (conf: 1.0)
│││ │✘ Lettuce_romaine_5wk : 2/4 (conf: 0.5)
│││ ✘ {1} A714 ⫺ 6786
│││  ✔ Lettuce_romaine_6wk : 5/5 (conf: 1.0)
│││  ✘ Lettuce_romaine_7wk : 27/27 (conf: 1.0)
││✘ {1} A965 ⫺ 313
││ ✔ {1} A158 ⫺ 17631
││ │✔ Lettuce_romaine_6wk : 5/5 (conf: 1.0)
││ │✘ Lettuce_romaine_5wk : 40/41 (conf: 0.975609756097561)
││ ✘ {1} A356 ⫺ 20281
││  ✔ {1} A1 ⫺ 3096
││  │✔ Lettuce_romaine_5wk : 3/4 (conf: 0.75)
││  │✘ Lettuce_romaine_5wk : 7/7 (conf: 1.0)
││  ✘ {1} A341 ⫺ 20711
││   ✔ Lettuce_romaine_7wk : 13/14 (conf: 0.9285714285714286)
││   ✘ {1} A1 ⫺ 2955
││    ✔ Lettuce_romaine_6wk : 4/4 (conf: 1.0)
││    ✘ Lettuce_romaine_6wk : 3/4 (conf: 0.75)
│✘ {1} A1018 ⫺ 446
│ ✔ Lettuce_romaine_7wk : 31/33 (conf: 0.9393939393939394)
│ ✘ {1} A2 ⫺ 3049
│  ✔ Lettuce_romaine_5wk : 5/5 (conf: 1.0)
│  ✘ Lettuce_romaine_5wk : 3/4 (conf: 0.75)
✘ {1} A123 ⫺ 15551
 ✔ {1} A777 ⫺ 11720
 │✔ {1} A201 ⫺ 13894
 ││✔ {1} A8 ⫺ 2955
 │││✔ {1} A279 ⫺ 12525
 ││││✔ Lettuce_romaine_4wk : 15/16 (conf: 0.9375)
 ││││✘ {1} A224 ⫺ 16028
 ││││ ✔ Brocoli_green_weeds_1 : 12/12 (conf: 1.0)
 ││││ ✘ {1} A442 ⫺ 51180
 ││││  ✔ Lettuce_romaine_4wk : 10/10 (conf: 1.0)
 ││││  ✘ Brocoli_green_weeds_1 : 4/4 (conf: 1.0)
 │││✘ Lettuce_romaine_4wk : 39/39 (conf: 1.0)
 ││✘ Corn_senesced_green_weeds : 8/8 (conf: 1.0)
 │✘ {1} A101 ⫺ 11743
 │ ✔ Brocoli_green_weeds_1 : 29/29 (conf: 1.0)
 │ ✘ {1} A19 ⫺ 5770
 │  ✔ Lettuce_romaine_4wk : 3/4 (conf: 0.75)
 │  ✘ Brocoli_green_weeds_1 : 3/4 (conf: 0.75)
 ✘ {1} A653 ⫺ 18381
  ✔ Brocoli_green_weeds_1 : 15/16 (conf: 0.9375)
  ✘ {1} A413 ⫺ 27255
   ✔ {1} A1487 ⫺ 782
   │✔ {1} A722 ⫺ 6482
   ││✔ {1} A1643 ⫺ 3385
   │││✔ Corn_senesced_green_weeds : 19/20 (conf: 0.95)
   │││✘ Lettuce_romaine_4wk : 2/4 (conf: 0.5)
   ││✘ Lettuce_romaine_4wk : 10/10 (conf: 1.0)
   │✘ {1} A1702 ⫺ 313
   │ ✔ {1} A12 ⫺ 3206
   │ │✔ Brocoli_green_weeds_1 : 14/14 (conf: 1.0)
   │ │✘ Corn_senesced_green_weeds : 3/4 (conf: 0.75)
   │ ✘ Corn_senesced_green_weeds : 7/7 (conf: 1.0)
   ✘ Corn_senesced_green_weeds : 39/39 (conf: 1.0)
● [ 01/07/2021 15:52:15 ] Saving tree to file ./gandalf/trees/tree_20c2f6f999dee4d400f100346d035b06ee4066f11a1ca1844b0662cd45051da8.jld...
Test tree:
Decision Tree
Leaves: 37
Tot nodes: 73
Height: 8
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A128 ⫺ 11353
✔ {1} A950 ⫺ 2916
│✔ {1} A1127 ⫺ 7693
││✔ {1} A874 ⫺ 12721
│││✔ {1} A1696 ⫺ 2377
││││✔ {1} A1309 ⫺ 2260
│││││✔ {1} A3 ⫺ 2908
││││││✔ Lettuce_romaine_7wk : 0/3 (conf: 0.0)
││││││✘ Lettuce_romaine_5wk : 1/1 (conf: 1.0)
│││││✘ Lettuce_romaine_6wk : 11/15 (conf: 0.7333333333333333)
││││✘ {1} A345 ⫺ 18788
││││ ✔ {1} A14 ⫺ 3815
││││ │✔ Lettuce_romaine_5wk : 1/1 (conf: 1.0)
││││ │✘ Lettuce_romaine_5wk : 0/0 (conf: NaN)
││││ ✘ Lettuce_romaine_6wk : 0/0 (conf: NaN)
│││✘ {1} A511 ⫺ 20445
│││ ✔ {1} A408 ⫺ 22635
│││ │✔ Lettuce_romaine_6wk : 1/3 (conf: 0.3333333333333333)
│││ │✘ Lettuce_romaine_5wk : 0/1 (conf: 0.0)
│││ ✘ {1} A714 ⫺ 6786
│││  ✔ Lettuce_romaine_6wk : 2/3 (conf: 0.6666666666666666)
│││  ✘ Lettuce_romaine_7wk : 6/6 (conf: 1.0)
││✘ {1} A965 ⫺ 313
││ ✔ {1} A158 ⫺ 17631
││ │✔ Lettuce_romaine_6wk : 0/1 (conf: 0.0)
││ │✘ Lettuce_romaine_5wk : 8/10 (conf: 0.8)
││ ✘ {1} A356 ⫺ 20281
││  ✔ {1} A1 ⫺ 3096
││  │✔ Lettuce_romaine_5wk : 0/0 (conf: NaN)
││  │✘ Lettuce_romaine_5wk : 0/0 (conf: NaN)
││  ✘ {1} A341 ⫺ 20711
││   ✔ Lettuce_romaine_7wk : 2/4 (conf: 0.5)
││   ✘ {1} A1 ⫺ 2955
││    ✔ Lettuce_romaine_6wk : 0/0 (conf: NaN)
││    ✘ Lettuce_romaine_6wk : 0/0 (conf: NaN)
│✘ {1} A1018 ⫺ 446
│ ✔ Lettuce_romaine_7wk : 6/8 (conf: 0.75)
│ ✘ {1} A2 ⫺ 3049
│  ✔ Lettuce_romaine_5wk : 3/3 (conf: 1.0)
│  ✘ Lettuce_romaine_5wk : 1/1 (conf: 1.0)
✘ {1} A123 ⫺ 15551
 ✔ {1} A777 ⫺ 11720
 │✔ {1} A201 ⫺ 13894
 ││✔ {1} A8 ⫺ 2955
 │││✔ {1} A279 ⫺ 12525
 ││││✔ Lettuce_romaine_4wk : 3/3 (conf: 1.0)
 ││││✘ {1} A224 ⫺ 16028
 ││││ ✔ Brocoli_green_weeds_1 : 3/7 (conf: 0.42857142857142855)
 ││││ ✘ {1} A442 ⫺ 51180
 ││││  ✔ Lettuce_romaine_4wk : 2/4 (conf: 0.5)
 ││││  ✘ Brocoli_green_weeds_1 : 1/1 (conf: 1.0)
 │││✘ Lettuce_romaine_4wk : 6/9 (conf: 0.6666666666666666)
 ││✘ Corn_senesced_green_weeds : 1/1 (conf: 1.0)
 │✘ {1} A101 ⫺ 11743
 │ ✔ Brocoli_green_weeds_1 : 3/3 (conf: 1.0)
 │ ✘ {1} A19 ⫺ 5770
 │  ✔ Lettuce_romaine_4wk : 0/0 (conf: NaN)
 │  ✘ Brocoli_green_weeds_1 : 0/1 (conf: 0.0)
 ✘ {1} A653 ⫺ 18381
  ✔ Brocoli_green_weeds_1 : 6/10 (conf: 0.6)
  ✘ {1} A413 ⫺ 27255
   ✔ {1} A1487 ⫺ 782
   │✔ {1} A722 ⫺ 6482
   ││✔ {1} A1643 ⫺ 3385
   │││✔ Corn_senesced_green_weeds : 3/6 (conf: 0.5)
   │││✘ Lettuce_romaine_4wk : 0/0 (conf: NaN)
   ││✘ Lettuce_romaine_4wk : 1/2 (conf: 0.5)
   │✘ {1} A1702 ⫺ 313
   │ ✔ {1} A12 ⫺ 3206
   │ │✔ Brocoli_green_weeds_1 : 1/1 (conf: 1.0)
   │ │✘ Corn_senesced_green_weeds : 1/2 (conf: 0.5)
   │ ✘ Corn_senesced_green_weeds : 1/1 (conf: 1.0)
   ✘ Corn_senesced_green_weeds : 7/9 (conf: 0.7777777777777778)
 test size = [(1836, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:flattened,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	67.5%	70.0%	65.0%	60.0%	70.0%	70.0%	70.0%	60.87%	68.42%	66.67%	82.35%	63.64%	66.67%	||	61.0%	[65.12, 66.67, 63.16, 75.68, 66.67, 68.29]%	
  accuracy: 67.5% kappa: 61.0% 
 14  2  4  0  0  0	70.0%		Brocoli_green_weeds_1
  5 13  2  0  0  0	65.0%		Corn_senesced_green_weeds
  4  4 12  0  0  0	60.0%		Lettuce_romaine_4wk
  0  0  0 14  3  3	70.0%		Lettuce_romaine_5wk
  0  0  0  2 14  4	70.0%		Lettuce_romaine_6wk
  0  0  0  1  5 14	70.0%		Lettuce_romaine_7wk

overall_acc:	0.675
κ =		0.6100000000000001
sensitivities:	[0.7, 0.65, 0.6, 0.7, 0.7, 0.7]
specificities:	[0.91, 0.94, 0.94, 0.97, 0.92, 0.93]
PPVs:		[0.6086956521739131, 0.6842105263157895, 0.6666666666666666, 0.8235294117647058, 0.6363636363636364, 0.6666666666666666]
NPVs:		[0.9381443298969072, 0.9306930693069307, 0.9215686274509803, 0.941747572815534, 0.9387755102040817, 0.9393939393939394]
F1s:		[0.6511627906976745, 0.6666666666666666, 0.631578947368421, 0.7567567567567568, 0.6666666666666666, 0.6829268292682927]
accuracies:	[0.875, 0.8916666666666667, 0.8833333333333333, 0.925, 0.8833333333333333, 0.8916666666666667]
mean_accuracy:	0.8916666666666667
Dataset_slice = (600) -> [68, 113, 288, 329, 406, 554, 53, 120, 291, 341, 461, 505, 72, 123, 234, 372, 472, 560, 28, 128, 298, 379, 479, 553, 84, 172, 287, 311, 466, 538, 96, 182, 229, 309, 491, 516, 91, 200, 222, 382, 418, 508, 42, 156, 226, 342, 429, 562, 33, 167, 204, 385, 498, 502, 4, 158, 259, 316, 486, 511, 63, 102, 220, 354, 496, 551, 21, 101, 266, 327, 485, 570, 79, 179, 270, 393, 404, 537, 15, 151, 214, 332, 454, 532, 22, 115, 217, 375, 468, 578, 51, 118, 235, 378, 469, 525, 32, 153, 232, 352, 470, 506, 70, 160, 244, 373, 464, 595, 66, 138, 250, 380, 437, 514, 99, 176, 277, 338, 417, 547, 40, 168, 258, 305, 482, 577, 64, 196, 240, 363, 477, 521, 19, 150, 282, 347, 401, 529, 73, 140, 201, 337, 489, 550, 18, 186, 215, 304, 492, 581, 80, 106, 289, 353, 425, 585, 60, 170, 223, 330, 416, 515, 3, 144, 290, 392, 435, 530, 87, 124, 286, 384, 483, 534, 43, 131, 284, 346, 420, 552, 9, 143, 253, 361, 421, 531, 20, 162, 261, 308, 438, 513, 1, 110, 254, 343, 484, 543, 62, 174, 252, 349, 443, 567, 45, 135, 205, 339, 436, 510, 30, 134, 238, 367, 473, 539, 76, 148, 275, 325, 474, 544, 37, 173, 280, 359, 407, 557, 38, 137, 297, 377, 427, 535, 23, 166, 233, 399, 453, 523, 57, 132, 260, 365, 442, 526, 75, 108, 264, 333, 451, 563, 35, 145, 202, 312, 411, 573, 55, 159, 269, 340, 460, 566, 50, 164, 225, 344, 500, 579, 95, 103, 300, 395, 452, 527, 61, 155, 212, 386, 471, 600, 82, 105, 228, 387, 446, 518, 12, 161, 216, 383, 493, 575, 74, 112, 206, 381, 444, 509, 94, 180, 230, 390, 423, 504, 49, 109, 293, 336, 409, 555, 6, 184, 221, 324, 456, 549, 24, 187, 241, 345, 495, 546, 90, 114, 265, 364, 449, 558, 93, 121, 251, 351, 412, 556, 14, 177, 272, 358, 467, 587, 47, 169, 239, 400, 431, 533, 89, 194, 263, 391, 445, 528, 81, 147, 211, 369, 403, 522, 39, 127, 242, 397, 405, 571, 11, 195, 208, 334, 459, 569, 58, 192, 207, 319, 490, 599, 92, 199, 209, 388, 487, 572, 52, 104, 203, 396, 439, 576, 59, 188, 227, 348, 441, 540, 48, 193, 237, 315, 402, 542, 7, 122, 283, 317, 457, 598, 54, 141, 246, 303, 488, 561, 17, 126, 285, 389, 478, 512, 56, 171, 248, 398, 434, 517, 97, 133, 271, 318, 481, 541, 29, 189, 245, 322, 440, 589, 34, 163, 296, 356, 450, 596, 77, 185, 292, 328, 414, 584, 46, 107, 236, 326, 419, 565, 71, 116, 257, 394, 465, 507, 31, 183, 247, 366, 494, 594, 26, 198, 279, 357, 410, 564, 25, 190, 224, 355, 455, 524, 65, 178, 231, 313, 499, 536, 83, 146, 219, 350, 480, 591, 2, 152, 267, 320, 415, 574, 8, 154, 295, 376, 408, 586, 27, 157, 276, 321, 463, 592, 85, 181, 268, 362, 458, 588, 86, 125, 278, 331, 424, 580, 36, 111, 243, 307, 432, 582, 78, 117, 299, 306, 413, 548, 44, 197, 210, 335, 497, 519, 10, 175, 273, 314, 476, 501, 98, 191, 256, 302, 428, 597, 69, 139, 274, 374, 422, 520, 67, 165, 281, 360, 426, 559, 16, 149, 249, 310, 462, 590, 13, 129, 255, 368, 447, 583, 5, 136, 213, 370, 448, 593, 41, 142, 218, 301, 433, 545, 88, 130, 262, 323, 475, 568, 100, 119, 294, 371, 430, 503]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	2.65 MBs
     ├ fmd	2.65 MBs	(shape (480, 1836))
     ├ fmd_m	0.0 MBs	(shape (480, 1836, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.42 MBs
     ├ domain shape	(1836, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:52:15 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (240+240=480 samples) on frame 1 with decision: {1} A119 ⫺ 11274, purity -1.09861228866811
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (112+128=240 samples) on frame 1 with decision: {1} A123 ⫺ 15551, purity -0.9278877319216756
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (100+140=240 samples) on frame 1 with decision: {1} A1127 ⫺ 7693, purity -0.9858663080793283
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+77=100 samples) on frame 1 with decision: {1} A545 ⫺ 6693, purity -0.761173782819861
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (43+69=112 samples) on frame 1 with decision: {1} A1495 ⫺ 813, purity -0.740799935946307
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (36+92=128 samples) on frame 1 with decision: {1} A777 ⫺ 11720, purity -0.7548657047803743
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+102=140 samples) on frame 1 with decision: {1} A766 ⫺ 14824, purity -0.8700399583916723
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+17=23 samples) on frame 1 with decision: {1} A935 ⫺ 7795, purity -0.11753770666077513
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+27=36 samples) on frame 1 with decision: {1} A101 ⫺ 11743, purity -0.26521423678950495
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+10=38 samples) on frame 1 with decision: {1} A62 ⫺ 10391, purity -0.27428352429836184
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (33+10=43 samples) on frame 1 with decision: {1} A349 ⫺ 20250, purity -0.15651434116494337
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (36+33=69 samples) on frame 1 with decision: {1} A1591 ⫺ 3440, purity -0.7171824338052912
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (68+9=77 samples) on frame 1 with decision: {1} A1355 ⫺ 2447, purity -0.5899741823584652
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+85=92 samples) on frame 1 with decision: {1} A201 ⫺ 13894, purity -0.6416956516565194
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (60+42=102 samples) on frame 1 with decision: {1} A1074 ⫺ 8436, purity -0.7818104158229844
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A37 ⫺ 10899, purity -0.373895370560698
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A40 ⫺ 13213, purity 1.3322676295501878e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A26 ⫺ 5238, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+25=33 samples) on frame 1 with decision: {1} A204 ⫺ 17678, purity -0.44600915837264526
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (24+12=36 samples) on frame 1 with decision: {1} A41 ⫺ 13182, purity -0.3029151860390545
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+26=60 samples) on frame 1 with decision: {1} A12 ⫺ 3792, purity -0.4154942348169989
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (59+9=68 samples) on frame 1 with decision: {1} A142 ⫺ 14402, purity -0.4760487132304983
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (29+56=85 samples) on frame 1 with decision: {1} A306 ⫺ 11517, purity -0.5178508898260945
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+14=42 samples) on frame 1 with decision: {1} A105 ⫺ 15934, purity -0.6198659329284563
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A5 ⫺ 3010, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A33 ⫺ 9242, purity -0.3080654135821979
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+4=12 samples) on frame 1 with decision: {1} A54 ⫺ 10829, purity -0.18744504820626942
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+4=14 samples) on frame 1 with decision: {1} A3 ⫺ 3018, purity -0.16066718417680237
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+10=26 samples) on frame 1 with decision: {1} A740 ⫺ 5387, purity -0.26890370281607046
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+16=28 samples) on frame 1 with decision: {1} A36 ⫺ 7991, purity -0.12292970702406894
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+14=29 samples) on frame 1 with decision: {1} A348 ⫺ 17154, purity -0.5507877696240939
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+21=25 samples) on frame 1 with decision: {1} A40 ⫺ 12940, purity -0.08997362313900932
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (39+20=59 samples) on frame 1 with decision: {1} A1002 ⫺ 2760, purity -0.22813954813873116
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A1 ⫺ 3049, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+4=15 samples) on frame 1 with decision: {1} A5 ⫺ 3604, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+10=14 samples) on frame 1 with decision: {1} A31 ⫺ 10266, purity -0.16066718417680237
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+10=20 samples) on frame 1 with decision: {1} A8 ⫺ 2948, purity -0.25020121176909416
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A3 ⫺ 2971, purity -0.277258872223978
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
 35.433934 seconds (419.62 M allocations: 8.578 GiB, 22.44% gc time)
Train tree:
Decision Tree
Leaves: 39
Tot nodes: 77
Height: 8
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A119 ⫺ 11274
✔ {1} A1127 ⫺ 7693
│✔ {1} A766 ⫺ 14824
││✔ {1} A1074 ⫺ 8436
│││✔ {1} A105 ⫺ 15934
││││✔ {1} A3 ⫺ 3018
│││││✔ Lettuce_romaine_7wk : 3/4 (conf: 0.75)
│││││✘ Lettuce_romaine_6wk : 10/10 (conf: 1.0)
││││✘ {1} A36 ⫺ 7991
││││ ✔ Lettuce_romaine_7wk : 16/16 (conf: 1.0)
││││ ✘ Lettuce_romaine_5wk : 11/12 (conf: 0.9166666666666666)
│││✘ {1} A12 ⫺ 3792
│││ ✔ {1} A740 ⫺ 5387
│││ │✔ {1} A1 ⫺ 3049
│││ ││✔ Lettuce_romaine_5wk : 3/4 (conf: 0.75)
│││ ││✘ Lettuce_romaine_5wk : 6/6 (conf: 1.0)
│││ │✘ Lettuce_romaine_6wk : 15/16 (conf: 0.9375)
│││ ✘ Lettuce_romaine_6wk : 32/34 (conf: 0.9411764705882353)
││✘ {1} A62 ⫺ 10391
││ ✔ {1} A26 ⫺ 5238
││ │✔ Lettuce_romaine_6wk : 6/6 (conf: 1.0)
││ │✘ Lettuce_romaine_7wk : 3/4 (conf: 0.75)
││ ✘ Lettuce_romaine_7wk : 27/28 (conf: 0.9642857142857143)
│✘ {1} A545 ⫺ 6693
│ ✔ {1} A1355 ⫺ 2447
│ │✔ Lettuce_romaine_6wk : 9/9 (conf: 1.0)
│ │✘ {1} A142 ⫺ 14402
│ │ ✔ {1} A33 ⫺ 9242
│ │ │✔ Lettuce_romaine_6wk : 5/5 (conf: 1.0)
│ │ │✘ Lettuce_romaine_5wk : 2/4 (conf: 0.5)
│ │ ✘ {1} A1002 ⫺ 2760
│ │  ✔ {1} A8 ⫺ 2948
│ │  │✔ Lettuce_romaine_5wk : 10/10 (conf: 1.0)
│ │  │✘ {1} A3 ⫺ 2971
│ │  │ ✔ Lettuce_romaine_7wk : 6/6 (conf: 1.0)
│ │  │ ✘ Lettuce_romaine_5wk : 2/4 (conf: 0.5)
│ │  ✘ Lettuce_romaine_5wk : 39/39 (conf: 1.0)
│ ✘ {1} A935 ⫺ 7795
│  ✔ Lettuce_romaine_7wk : 17/17 (conf: 1.0)
│  ✘ Lettuce_romaine_5wk : 5/6 (conf: 0.8333333333333334)
✘ {1} A123 ⫺ 15551
 ✔ {1} A777 ⫺ 11720
 │✔ {1} A201 ⫺ 13894
 ││✔ {1} A306 ⫺ 11517
 │││✔ Lettuce_romaine_4wk : 52/56 (conf: 0.9285714285714286)
 │││✘ {1} A348 ⫺ 17154
 │││ ✔ {1} A31 ⫺ 10266
 │││ │✔ Brocoli_green_weeds_1 : 10/10 (conf: 1.0)
 │││ │✘ Corn_senesced_green_weeds : 3/4 (conf: 0.75)
 │││ ✘ {1} A5 ⫺ 3604
 │││  ✔ Brocoli_green_weeds_1 : 4/4 (conf: 1.0)
 │││  ✘ Lettuce_romaine_4wk : 11/11 (conf: 1.0)
 ││✘ Corn_senesced_green_weeds : 7/7 (conf: 1.0)
 │✘ {1} A101 ⫺ 11743
 │ ✔ Brocoli_green_weeds_1 : 27/27 (conf: 1.0)
 │ ✘ {1} A37 ⫺ 10899
 │  ✔ Lettuce_romaine_4wk : 4/4 (conf: 1.0)
 │  ✘ Brocoli_green_weeds_1 : 3/5 (conf: 0.6)
 ✘ {1} A1495 ⫺ 813
  ✔ {1} A1591 ⫺ 3440
  │✔ {1} A204 ⫺ 17678
  ││✔ {1} A40 ⫺ 12940
  │││✔ Brocoli_green_weeds_1 : 21/21 (conf: 1.0)
  │││✘ Lettuce_romaine_4wk : 3/4 (conf: 0.75)
  ││✘ {1} A5 ⫺ 3010
  ││ ✔ Corn_senesced_green_weeds : 4/4 (conf: 1.0)
  ││ ✘ Lettuce_romaine_4wk : 4/4 (conf: 1.0)
  │✘ {1} A41 ⫺ 13182
  │ ✔ {1} A54 ⫺ 10829
  │ │✔ Corn_senesced_green_weeds : 3/4 (conf: 0.75)
  │ │✘ Brocoli_green_weeds_1 : 8/8 (conf: 1.0)
  │ ✘ Corn_senesced_green_weeds : 23/24 (conf: 0.9583333333333334)
  ✘ {1} A349 ⫺ 20250
   ✔ {1} A40 ⫺ 13213
   │✔ Corn_senesced_green_weeds : 4/4 (conf: 1.0)
   │✘ Lettuce_romaine_4wk : 6/6 (conf: 1.0)
   ✘ Corn_senesced_green_weeds : 33/33 (conf: 1.0)
● [ 01/07/2021 15:52:50 ] Saving tree to file ./gandalf/trees/tree_58e6c6a7a52df8ed1c1b5ac4f26c311d0338b3c401980e6d7734dc6bc0fbdd44.jld...
Test tree:
Decision Tree
Leaves: 39
Tot nodes: 77
Height: 8
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A119 ⫺ 11274
✔ {1} A1127 ⫺ 7693
│✔ {1} A766 ⫺ 14824
││✔ {1} A1074 ⫺ 8436
│││✔ {1} A105 ⫺ 15934
││││✔ {1} A3 ⫺ 3018
│││││✔ Lettuce_romaine_7wk : 1/1 (conf: 1.0)
│││││✘ Lettuce_romaine_6wk : 1/1 (conf: 1.0)
││││✘ {1} A36 ⫺ 7991
││││ ✔ Lettuce_romaine_7wk : 1/4 (conf: 0.25)
││││ ✘ Lettuce_romaine_5wk : 0/1 (conf: 0.0)
│││✘ {1} A12 ⫺ 3792
│││ ✔ {1} A740 ⫺ 5387
│││ │✔ {1} A1 ⫺ 3049
│││ ││✔ Lettuce_romaine_5wk : 2/5 (conf: 0.4)
│││ ││✘ Lettuce_romaine_5wk : 0/0 (conf: NaN)
│││ │✘ Lettuce_romaine_6wk : 4/6 (conf: 0.6666666666666666)
│││ ✘ Lettuce_romaine_6wk : 3/5 (conf: 0.6)
││✘ {1} A62 ⫺ 10391
││ ✔ {1} A26 ⫺ 5238
││ │✔ Lettuce_romaine_6wk : 1/2 (conf: 0.5)
││ │✘ Lettuce_romaine_7wk : 1/2 (conf: 0.5)
││ ✘ Lettuce_romaine_7wk : 8/9 (conf: 0.8888888888888888)
│✘ {1} A545 ⫺ 6693
│ ✔ {1} A1355 ⫺ 2447
│ │✔ Lettuce_romaine_6wk : 2/4 (conf: 0.5)
│ │✘ {1} A142 ⫺ 14402
│ │ ✔ {1} A33 ⫺ 9242
│ │ │✔ Lettuce_romaine_6wk : 1/1 (conf: 1.0)
│ │ │✘ Lettuce_romaine_5wk : 2/2 (conf: 1.0)
│ │ ✘ {1} A1002 ⫺ 2760
│ │  ✔ {1} A8 ⫺ 2948
│ │  │✔ Lettuce_romaine_5wk : 1/1 (conf: 1.0)
│ │  │✘ {1} A3 ⫺ 2971
│ │  │ ✔ Lettuce_romaine_7wk : 0/0 (conf: NaN)
│ │  │ ✘ Lettuce_romaine_5wk : 0/0 (conf: NaN)
│ │  ✘ Lettuce_romaine_5wk : 8/10 (conf: 0.8)
│ ✘ {1} A935 ⫺ 7795
│  ✔ Lettuce_romaine_7wk : 3/3 (conf: 1.0)
│  ✘ Lettuce_romaine_5wk : 0/2 (conf: 0.0)
✘ {1} A123 ⫺ 15551
 ✔ {1} A777 ⫺ 11720
 │✔ {1} A201 ⫺ 13894
 ││✔ {1} A306 ⫺ 11517
 │││✔ Lettuce_romaine_4wk : 9/13 (conf: 0.6923076923076923)
 │││✘ {1} A348 ⫺ 17154
 │││ ✔ {1} A31 ⫺ 10266
 │││ │✔ Brocoli_green_weeds_1 : 1/1 (conf: 1.0)
 │││ │✘ Corn_senesced_green_weeds : 0/3 (conf: 0.0)
 │││ ✘ {1} A5 ⫺ 3604
 │││  ✔ Brocoli_green_weeds_1 : 1/2 (conf: 0.5)
 │││  ✘ Lettuce_romaine_4wk : 1/1 (conf: 1.0)
 ││✘ Corn_senesced_green_weeds : 2/2 (conf: 1.0)
 │✘ {1} A101 ⫺ 11743
 │ ✔ Brocoli_green_weeds_1 : 5/5 (conf: 1.0)
 │ ✘ {1} A37 ⫺ 10899
 │  ✔ Lettuce_romaine_4wk : 0/0 (conf: NaN)
 │  ✘ Brocoli_green_weeds_1 : 0/0 (conf: NaN)
 ✘ {1} A1495 ⫺ 813
  ✔ {1} A1591 ⫺ 3440
  │✔ {1} A204 ⫺ 17678
  ││✔ {1} A40 ⫺ 12940
  │││✔ Brocoli_green_weeds_1 : 6/7 (conf: 0.8571428571428571)
  │││✘ Lettuce_romaine_4wk : 1/2 (conf: 0.5)
  ││✘ {1} A5 ⫺ 3010
  ││ ✔ Corn_senesced_green_weeds : 1/2 (conf: 0.5)
  ││ ✘ Lettuce_romaine_4wk : 0/0 (conf: NaN)
  │✘ {1} A41 ⫺ 13182
  │ ✔ {1} A54 ⫺ 10829
  │ │✔ Corn_senesced_green_weeds : 1/2 (conf: 0.5)
  │ │✘ Brocoli_green_weeds_1 : 0/0 (conf: NaN)
  │ ✘ Corn_senesced_green_weeds : 6/9 (conf: 0.6666666666666666)
  ✘ {1} A349 ⫺ 20250
   ✔ {1} A40 ⫺ 13213
   │✔ Corn_senesced_green_weeds : 2/2 (conf: 1.0)
   │✘ Lettuce_romaine_4wk : 2/2 (conf: 1.0)
   ✘ Corn_senesced_green_weeds : 7/8 (conf: 0.875)
 test size = [(1836, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:flattened,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	70.0%	65.0%	95.0%	65.0%	65.0%	60.0%	70.0%	86.67%	67.86%	72.22%	61.9%	63.16%	73.68%	||	64.0%	[74.29, 79.17, 68.42, 63.41, 61.54, 71.79]%	
  accuracy: 70.0% kappa: 64.0% 
 13  2  5  0  0  0	65.0%		Brocoli_green_weeds_1
  1 19  0  0  0  0	95.0%		Corn_senesced_green_weeds
  1  6 13  0  0  0	65.0%		Lettuce_romaine_4wk
  0  0  0 13  5  2	65.0%		Lettuce_romaine_5wk
  0  0  0  5 12  3	60.0%		Lettuce_romaine_6wk
  0  1  0  3  2 14	70.0%		Lettuce_romaine_7wk

overall_acc:	0.7
κ =		0.64
sensitivities:	[0.65, 0.95, 0.65, 0.65, 0.6, 0.7]
specificities:	[0.98, 0.91, 0.95, 0.92, 0.93, 0.95]
PPVs:		[0.8666666666666667, 0.6785714285714286, 0.7222222222222222, 0.6190476190476191, 0.631578947368421, 0.7368421052631579]
NPVs:		[0.9333333333333333, 0.9891304347826086, 0.9313725490196079, 0.9292929292929293, 0.9207920792079208, 0.9405940594059405]
F1s:		[0.7428571428571429, 0.7916666666666666, 0.6842105263157895, 0.6341463414634146, 0.6153846153846154, 0.717948717948718]
accuracies:	[0.925, 0.9166666666666666, 0.9, 0.875, 0.875, 0.9083333333333333]
mean_accuracy:	0.9
Dataset_slice = (600) -> [20, 148, 247, 348, 409, 562, 36, 113, 203, 353, 426, 567, 75, 145, 228, 390, 401, 547, 9, 112, 249, 319, 421, 510, 92, 159, 288, 325, 482, 513, 88, 121, 212, 365, 407, 588, 28, 186, 224, 360, 406, 551, 79, 198, 274, 367, 408, 523, 8, 118, 297, 387, 439, 502, 73, 122, 204, 330, 479, 565, 83, 194, 243, 374, 472, 552, 40, 185, 275, 366, 446, 594, 61, 195, 273, 356, 473, 528, 70, 136, 202, 343, 455, 558, 51, 155, 282, 397, 450, 533, 48, 161, 245, 331, 499, 518, 50, 130, 281, 361, 425, 537, 13, 103, 293, 378, 444, 583, 27, 187, 240, 372, 415, 579, 35, 125, 217, 391, 440, 535, 69, 120, 236, 354, 466, 524, 45, 157, 253, 309, 458, 517, 97, 200, 277, 334, 485, 573, 68, 197, 294, 394, 476, 543, 3, 156, 264, 335, 423, 548, 85, 102, 260, 381, 437, 597, 94, 191, 234, 313, 416, 509, 7, 140, 238, 399, 434, 566, 19, 119, 226, 369, 462, 598, 87, 167, 287, 318, 478, 563, 1, 184, 262, 326, 483, 544, 16, 163, 235, 306, 412, 532, 25, 123, 284, 373, 414, 526, 31, 196, 270, 398, 449, 557, 64, 129, 211, 338, 500, 534, 81, 146, 206, 388, 447, 515, 57, 138, 246, 358, 420, 555, 23, 115, 209, 322, 452, 504, 90, 199, 232, 344, 492, 572, 42, 164, 244, 310, 465, 568, 26, 181, 248, 347, 428, 527, 30, 128, 261, 345, 431, 595, 91, 153, 227, 332, 471, 520, 17, 134, 207, 385, 494, 577, 59, 141, 229, 376, 457, 511, 96, 150, 252, 302, 441, 507, 2, 126, 300, 350, 445, 584, 52, 131, 299, 357, 448, 550, 24, 189, 223, 396, 489, 560, 15, 193, 237, 351, 470, 576, 86, 142, 205, 375, 477, 549, 46, 106, 266, 327, 461, 581, 67, 124, 286, 362, 495, 553, 71, 174, 233, 389, 433, 592, 66, 110, 213, 307, 419, 600, 18, 114, 201, 364, 480, 546, 58, 151, 290, 363, 411, 508, 39, 108, 276, 340, 463, 599, 34, 116, 256, 324, 464, 587, 80, 162, 258, 314, 459, 593, 82, 158, 231, 305, 493, 596, 6, 171, 285, 352, 498, 539, 53, 182, 272, 336, 403, 569, 60, 105, 268, 386, 438, 582, 93, 179, 271, 301, 443, 556, 44, 170, 251, 329, 413, 540, 32, 180, 289, 380, 424, 554, 49, 111, 225, 337, 456, 503, 43, 192, 219, 393, 475, 505, 100, 152, 220, 346, 496, 516, 41, 190, 230, 321, 469, 578, 5, 178, 255, 368, 427, 525, 54, 132, 280, 349, 410, 531, 65, 154, 210, 384, 429, 521, 72, 144, 296, 392, 490, 506, 76, 147, 241, 341, 432, 536, 98, 101, 216, 342, 484, 585, 11, 149, 257, 333, 497, 541, 78, 177, 218, 303, 481, 501, 21, 117, 215, 315, 436, 571, 62, 173, 214, 355, 488, 529, 14, 139, 222, 339, 435, 586, 22, 143, 208, 317, 442, 522, 12, 176, 298, 328, 418, 512, 37, 168, 269, 370, 453, 589, 95, 135, 259, 323, 417, 574, 74, 107, 254, 311, 404, 514, 33, 183, 278, 304, 491, 591, 99, 172, 239, 395, 402, 545, 63, 127, 250, 316, 451, 519, 29, 160, 292, 371, 474, 530, 56, 109, 242, 312, 460, 542, 10, 169, 279, 359, 405, 570, 47, 137, 267, 377, 467, 559, 4, 104, 291, 400, 422, 580, 38, 188, 283, 320, 430, 538, 84, 165, 221, 308, 454, 590, 89, 175, 263, 382, 486, 564, 55, 133, 265, 383, 487, 575, 77, 166, 295, 379, 468, 561]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	2.65 MBs
     ├ fmd	2.65 MBs	(shape (480, 1836))
     ├ fmd_m	0.0 MBs	(shape (480, 1836, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.42 MBs
     ├ domain shape	(1836, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:52:50 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (240+240=480 samples) on frame 1 with decision: {1} A128 ⫺ 11353, purity -1.09861228866811
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (116+124=240 samples) on frame 1 with decision: {1} A123 ⫺ 15551, purity -0.9507054880515663
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (72+168=240 samples) on frame 1 with decision: {1} A1552 ⫺ 4746, purity -0.9782870758983695
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+34=72 samples) on frame 1 with decision: {1} A325 ⫺ 10547, purity -0.5408815123522805
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+101=116 samples) on frame 1 with decision: {1} A1439 ⫺ 2541, purity -0.7944336750397637
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+115=124 samples) on frame 1 with decision: {1} A201 ⫺ 13894, purity -0.7523135567020068
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+140=168 samples) on frame 1 with decision: {1} A950 ⫺ 2916, purity -0.9128387027221043
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+11=15 samples) on frame 1 with decision: {1} A88 ⫺ 13940, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+5=28 samples) on frame 1 with decision: {1} A880 ⫺ 10657, purity -0.14690832116026734
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+26=34 samples) on frame 1 with decision: {1} A1212 ⫺ 6192, purity 3.3959763106181257e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (31+7=38 samples) on frame 1 with decision: {1} A966 ⫺ 446, purity -0.3209496484530315
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (41+60=101 samples) on frame 1 with decision: {1} A1459 ⫺ 649, purity -0.6362786083127298
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+31=115 samples) on frame 1 with decision: {1} A1548 ⫺ 2815, purity -0.6304707851261049
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (41+99=140 samples) on frame 1 with decision: {1} A1730 ⫺ 1157, purity -0.852825923015389
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+13=41 samples) on frame 1 with decision: {1} A311 ⫺ 17764, purity -0.47579024191633845
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+32=60 samples) on frame 1 with decision: {1} A1591 ⫺ 3440, purity -0.670113953912464
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (31+53=84 samples) on frame 1 with decision: {1} A903 ⫺ 11915, purity -0.6115816636976825
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (55+44=99 samples) on frame 1 with decision: {1} A294 ⫺ 18420, purity -0.6587736154543704
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+9=13 samples) on frame 1 with decision: {1} A71 ⫺ 11274, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+7=28 samples) on frame 1 with decision: {1} A931 ⫺ 8194, purity -0.24611214104039045
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+22=28 samples) on frame 1 with decision: {1} A69 ⫺ 12916, purity -0.13639589320603096
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+4=31 samples) on frame 1 with decision: {1} A52 ⫺ 11704, purity -0.13415751881805354
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (25+7=32 samples) on frame 1 with decision: {1} A1424 ⫺ 422, purity -0.4268479228750759
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+35=53 samples) on frame 1 with decision: {1} A1464 ⫺ 5059, purity -0.5065757599989569
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+33=55 samples) on frame 1 with decision: {1} A176 ⫺ 18030, purity -0.7481152336387399
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+14=18 samples) on frame 1 with decision: {1} A42 ⫺ 11790, purity -0.12496336547084629
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+11=22 samples) on frame 1 with decision: {1} A71 ⫺ 11384, purity -0.3000830365798228
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+21=33 samples) on frame 1 with decision: {1} A942 ⫺ 5379, purity -0.4141575362251688
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (31+4=35 samples) on frame 1 with decision: {1} A964 ⫺ 180, purity -0.27614487105106084
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A1 ⫺ 3096, purity -0.3780802803054247
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+15=21 samples) on frame 1 with decision: {1} A1507 ⫺ 5794, purity -0.18186119094137507
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
 37.269255 seconds (428.28 M allocations: 8.654 GiB, 20.61% gc time)
Train tree:
Decision Tree
Leaves: 32
Tot nodes: 63
Height: 8
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A128 ⫺ 11353
✔ {1} A1552 ⫺ 4746
│✔ {1} A950 ⫺ 2916
││✔ {1} A1730 ⫺ 1157
│││✔ {1} A294 ⫺ 18420
││││✔ Lettuce_romaine_6wk : 42/44 (conf: 0.9545454545454546)
││││✘ {1} A176 ⫺ 18030
││││ ✔ {1} A942 ⫺ 5379
││││ │✔ {1} A1507 ⫺ 5794
││││ ││✔ Lettuce_romaine_7wk : 15/15 (conf: 1.0)
││││ ││✘ Lettuce_romaine_6wk : 4/6 (conf: 0.6666666666666666)
││││ │✘ Lettuce_romaine_6wk : 11/12 (conf: 0.9166666666666666)
││││ ✘ {1} A71 ⫺ 11384
││││  ✔ Lettuce_romaine_6wk : 11/11 (conf: 1.0)
││││  ✘ {1} A1 ⫺ 3096
││││   ✔ Lettuce_romaine_5wk : 7/7 (conf: 1.0)
││││   ✘ Lettuce_romaine_5wk : 2/4 (conf: 0.5)
│││✘ {1} A311 ⫺ 17764
│││ ✔ {1} A71 ⫺ 11274
│││ │✔ Lettuce_romaine_6wk : 9/9 (conf: 1.0)
│││ │✘ Lettuce_romaine_7wk : 4/4 (conf: 1.0)
│││ ✘ {1} A69 ⫺ 12916
│││  ✔ Lettuce_romaine_5wk : 22/22 (conf: 1.0)
│││  ✘ Lettuce_romaine_7wk : 4/6 (conf: 0.6666666666666666)
││✘ {1} A880 ⫺ 10657
││ ✔ Lettuce_romaine_5wk : 5/5 (conf: 1.0)
││ ✘ Lettuce_romaine_7wk : 22/23 (conf: 0.9565217391304348)
│✘ {1} A325 ⫺ 10547
│ ✔ {1} A1212 ⫺ 6192
│ │✔ Lettuce_romaine_7wk : 26/26 (conf: 1.0)
│ │✘ Lettuce_romaine_5wk : 8/8 (conf: 1.0)
│ ✘ {1} A966 ⫺ 446
│  ✔ Lettuce_romaine_7wk : 4/7 (conf: 0.5714285714285714)
│  ✘ Lettuce_romaine_5wk : 29/31 (conf: 0.9354838709677419)
✘ {1} A123 ⫺ 15551
 ✔ {1} A201 ⫺ 13894
 │✔ {1} A1548 ⫺ 2815
 ││✔ Lettuce_romaine_4wk : 29/31 (conf: 0.9354838709677419)
 ││✘ {1} A903 ⫺ 11915
 ││ ✔ {1} A1464 ⫺ 5059
 ││ │✔ {1} A964 ⫺ 180
 ││ ││✔ Brocoli_green_weeds_1 : 3/4 (conf: 0.75)
 ││ ││✘ Lettuce_romaine_4wk : 29/31 (conf: 0.9354838709677419)
 ││ │✘ {1} A42 ⫺ 11790
 ││ │ ✔ Brocoli_green_weeds_1 : 14/14 (conf: 1.0)
 ││ │ ✘ Lettuce_romaine_4wk : 3/4 (conf: 0.75)
 ││ ✘ {1} A52 ⫺ 11704
 ││  ✔ Lettuce_romaine_4wk : 2/4 (conf: 0.5)
 ││  ✘ Brocoli_green_weeds_1 : 27/27 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 9/9 (conf: 1.0)
 ✘ {1} A1439 ⫺ 2541
  ✔ {1} A1459 ⫺ 649
  │✔ {1} A1591 ⫺ 3440
  ││✔ {1} A1424 ⫺ 422
  │││✔ Lettuce_romaine_4wk : 4/7 (conf: 0.5714285714285714)
  │││✘ Brocoli_green_weeds_1 : 23/25 (conf: 0.92)
  ││✘ {1} A931 ⫺ 8194
  ││ ✔ Brocoli_green_weeds_1 : 6/7 (conf: 0.8571428571428571)
  ││ ✘ Corn_senesced_green_weeds : 20/21 (conf: 0.9523809523809523)
  │✘ Corn_senesced_green_weeds : 39/41 (conf: 0.9512195121951219)
  ✘ {1} A88 ⫺ 13940
   ✔ Lettuce_romaine_4wk : 11/11 (conf: 1.0)
   ✘ Corn_senesced_green_weeds : 4/4 (conf: 1.0)
● [ 01/07/2021 15:53:27 ] Saving tree to file ./gandalf/trees/tree_d6f029ba7c5046ab3f706402a2bf6b3887a39a838b61f0b19974019c8464b4ec.jld...
Test tree:
Decision Tree
Leaves: 32
Tot nodes: 63
Height: 8
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A128 ⫺ 11353
✔ {1} A1552 ⫺ 4746
│✔ {1} A950 ⫺ 2916
││✔ {1} A1730 ⫺ 1157
│││✔ {1} A294 ⫺ 18420
││││✔ Lettuce_romaine_6wk : 10/11 (conf: 0.9090909090909091)
││││✘ {1} A176 ⫺ 18030
││││ ✔ {1} A942 ⫺ 5379
││││ │✔ {1} A1507 ⫺ 5794
││││ ││✔ Lettuce_romaine_7wk : 2/2 (conf: 1.0)
││││ ││✘ Lettuce_romaine_6wk : 1/1 (conf: 1.0)
││││ │✘ Lettuce_romaine_6wk : 0/1 (conf: 0.0)
││││ ✘ {1} A71 ⫺ 11384
││││  ✔ Lettuce_romaine_6wk : 1/1 (conf: 1.0)
││││  ✘ {1} A1 ⫺ 3096
││││   ✔ Lettuce_romaine_5wk : 2/2 (conf: 1.0)
││││   ✘ Lettuce_romaine_5wk : 2/2 (conf: 1.0)
│││✘ {1} A311 ⫺ 17764
│││ ✔ {1} A71 ⫺ 11274
│││ │✔ Lettuce_romaine_6wk : 1/1 (conf: 1.0)
│││ │✘ Lettuce_romaine_7wk : 1/3 (conf: 0.3333333333333333)
│││ ✘ {1} A69 ⫺ 12916
│││  ✔ Lettuce_romaine_5wk : 8/11 (conf: 0.7272727272727273)
│││  ✘ Lettuce_romaine_7wk : 0/1 (conf: 0.0)
││✘ {1} A880 ⫺ 10657
││ ✔ Lettuce_romaine_5wk : 1/1 (conf: 1.0)
││ ✘ Lettuce_romaine_7wk : 2/2 (conf: 1.0)
│✘ {1} A325 ⫺ 10547
│ ✔ {1} A1212 ⫺ 6192
│ │✔ Lettuce_romaine_7wk : 7/11 (conf: 0.6363636363636364)
│ │✘ Lettuce_romaine_5wk : 0/0 (conf: NaN)
│ ✘ {1} A966 ⫺ 446
│  ✔ Lettuce_romaine_7wk : 0/1 (conf: 0.0)
│  ✘ Lettuce_romaine_5wk : 3/9 (conf: 0.3333333333333333)
✘ {1} A123 ⫺ 15551
 ✔ {1} A201 ⫺ 13894
 │✔ {1} A1548 ⫺ 2815
 ││✔ Lettuce_romaine_4wk : 4/4 (conf: 1.0)
 ││✘ {1} A903 ⫺ 11915
 ││ ✔ {1} A1464 ⫺ 5059
 ││ │✔ {1} A964 ⫺ 180
 ││ ││✔ Brocoli_green_weeds_1 : 0/2 (conf: 0.0)
 ││ ││✘ Lettuce_romaine_4wk : 8/9 (conf: 0.8888888888888888)
 ││ │✘ {1} A42 ⫺ 11790
 ││ │ ✔ Brocoli_green_weeds_1 : 0/1 (conf: 0.0)
 ││ │ ✘ Lettuce_romaine_4wk : 3/5 (conf: 0.6)
 ││ ✘ {1} A52 ⫺ 11704
 ││  ✔ Lettuce_romaine_4wk : 0/0 (conf: NaN)
 ││  ✘ Brocoli_green_weeds_1 : 9/10 (conf: 0.9)
 │✘ Corn_senesced_green_weeds : 0/0 (conf: NaN)
 ✘ {1} A1439 ⫺ 2541
  ✔ {1} A1459 ⫺ 649
  │✔ {1} A1591 ⫺ 3440
  ││✔ {1} A1424 ⫺ 422
  │││✔ Lettuce_romaine_4wk : 0/2 (conf: 0.0)
  │││✘ Brocoli_green_weeds_1 : 3/3 (conf: 1.0)
  ││✘ {1} A931 ⫺ 8194
  ││ ✔ Brocoli_green_weeds_1 : 1/3 (conf: 0.3333333333333333)
  ││ ✘ Corn_senesced_green_weeds : 3/6 (conf: 0.5)
  │✘ Corn_senesced_green_weeds : 11/13 (conf: 0.8461538461538461)
  ✘ {1} A88 ⫺ 13940
   ✔ Lettuce_romaine_4wk : 0/2 (conf: 0.0)
   ✘ Corn_senesced_green_weeds : 0/0 (conf: NaN)
 test size = [(1836, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:flattened,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	69.17%	65.0%	70.0%	75.0%	80.0%	65.0%	60.0%	68.42%	73.68%	68.18%	64.0%	86.67%	60.0%	||	63.0%	[66.67, 71.79, 71.43, 71.11, 74.29, 60.0]%	
  accuracy: 69.17% kappa: 63.0% 
 13  4  3  0  0  0	65.0%		Brocoli_green_weeds_1
  2 14  4  0  0  0	70.0%		Corn_senesced_green_weeds
  4  1 15  0  0  0	75.0%		Lettuce_romaine_4wk
  0  0  0 16  0  4	80.0%		Lettuce_romaine_5wk
  0  0  0  3 13  4	65.0%		Lettuce_romaine_6wk
  0  0  0  6  2 12	60.0%		Lettuce_romaine_7wk

overall_acc:	0.6916666666666667
κ =		0.63
sensitivities:	[0.65, 0.7, 0.75, 0.8, 0.65, 0.6]
specificities:	[0.94, 0.95, 0.93, 0.91, 0.98, 0.92]
PPVs:		[0.6842105263157895, 0.7368421052631579, 0.6818181818181818, 0.64, 0.8666666666666667, 0.6]
NPVs:		[0.9306930693069307, 0.9405940594059405, 0.9489795918367347, 0.9578947368421052, 0.9333333333333333, 0.92]
F1s:		[0.6666666666666666, 0.717948717948718, 0.7142857142857143, 0.7111111111111111, 0.7428571428571429, 0.6]
accuracies:	[0.8916666666666667, 0.9083333333333333, 0.9, 0.8916666666666667, 0.925, 0.8666666666666667]
mean_accuracy:	0.8972222222222221
Dataset_slice = (600) -> [14, 145, 209, 319, 413, 525, 59, 126, 201, 393, 450, 561, 55, 102, 207, 312, 445, 527, 87, 121, 255, 362, 475, 501, 44, 116, 271, 308, 421, 555, 11, 131, 219, 380, 474, 532, 60, 110, 268, 310, 440, 528, 6, 101, 211, 304, 437, 518, 83, 167, 283, 357, 414, 597, 46, 162, 229, 318, 456, 585, 20, 123, 288, 395, 424, 584, 74, 140, 291, 373, 481, 551, 32, 165, 281, 315, 434, 589, 22, 135, 220, 398, 486, 544, 40, 152, 286, 316, 451, 593, 24, 103, 221, 350, 429, 515, 18, 137, 230, 355, 438, 543, 89, 125, 262, 390, 443, 595, 62, 124, 264, 383, 406, 529, 12, 172, 276, 377, 411, 517, 31, 163, 204, 369, 471, 503, 58, 168, 208, 302, 407, 547, 30, 129, 224, 325, 415, 505, 79, 104, 235, 326, 495, 519, 99, 197, 213, 343, 464, 581, 48, 173, 284, 388, 410, 568, 67, 149, 275, 391, 455, 548, 10, 198, 289, 360, 485, 554, 5, 182, 244, 397, 487, 599, 93, 164, 257, 384, 457, 530, 64, 187, 246, 354, 458, 583, 70, 134, 242, 371, 422, 577, 41, 133, 256, 351, 473, 512, 82, 158, 299, 322, 404, 507, 84, 120, 290, 314, 423, 522, 51, 199, 261, 359, 412, 523, 81, 175, 206, 340, 472, 539, 94, 181, 300, 303, 426, 514, 23, 179, 266, 321, 459, 572, 100, 176, 270, 376, 432, 560, 90, 109, 278, 346, 418, 510, 68, 186, 274, 379, 467, 556, 43, 117, 265, 382, 480, 570, 1, 178, 280, 344, 425, 504, 95, 132, 277, 332, 491, 524, 19, 113, 282, 378, 476, 579, 98, 112, 292, 348, 462, 563, 50, 106, 285, 352, 444, 550, 33, 170, 295, 386, 493, 537, 27, 136, 241, 337, 408, 564, 63, 148, 279, 324, 427, 511, 54, 119, 216, 372, 401, 575, 86, 193, 254, 306, 428, 567, 17, 188, 293, 399, 496, 508, 91, 142, 273, 328, 494, 574, 97, 189, 297, 320, 430, 531, 57, 155, 263, 301, 492, 557, 61, 196, 294, 347, 405, 594, 75, 141, 205, 349, 436, 590, 71, 183, 203, 341, 409, 562, 92, 180, 258, 394, 441, 520, 65, 177, 249, 309, 449, 598, 37, 166, 272, 356, 498, 582, 29, 195, 234, 331, 469, 513, 21, 127, 218, 313, 435, 541, 69, 184, 267, 368, 500, 534, 3, 185, 298, 334, 488, 588, 77, 139, 225, 327, 403, 516, 56, 107, 260, 396, 490, 558, 72, 200, 217, 342, 416, 580, 8, 111, 227, 366, 465, 571, 2, 190, 237, 374, 419, 596, 73, 130, 233, 363, 482, 538, 36, 159, 238, 307, 448, 578, 45, 146, 250, 375, 463, 587, 52, 153, 212, 335, 460, 566, 53, 156, 287, 311, 478, 552, 34, 143, 222, 389, 453, 526, 28, 169, 259, 323, 452, 569, 39, 128, 243, 365, 454, 533, 76, 115, 231, 364, 461, 546, 85, 105, 228, 400, 499, 559, 66, 171, 240, 305, 402, 573, 88, 108, 248, 387, 497, 521, 15, 174, 247, 370, 417, 549, 38, 154, 253, 339, 446, 586, 9, 114, 202, 367, 489, 535, 80, 192, 251, 353, 442, 540, 25, 160, 223, 392, 447, 565, 26, 191, 215, 329, 483, 591, 7, 151, 252, 381, 484, 576, 96, 194, 210, 338, 477, 536, 16, 144, 296, 317, 466, 545, 13, 147, 269, 333, 431, 553, 47, 150, 236, 336, 470, 600, 49, 157, 214, 385, 468, 509, 35, 118, 239, 358, 479, 542, 78, 122, 232, 345, 420, 502, 42, 161, 245, 361, 433, 506, 4, 138, 226, 330, 439, 592]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	2.65 MBs
     ├ fmd	2.65 MBs	(shape (480, 1836))
     ├ fmd_m	0.0 MBs	(shape (480, 1836, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.42 MBs
     ├ domain shape	(1836, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:53:27 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (240+240=480 samples) on frame 1 with decision: {1} A128 ⫺ 11353, purity -1.09861228866811
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (113+127=240 samples) on frame 1 with decision: {1} A123 ⫺ 15551, purity -0.9422369396218905
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (106+134=240 samples) on frame 1 with decision: {1} A1127 ⫺ 7693, purity -0.9800950317548458
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (25+81=106 samples) on frame 1 with decision: {1} A545 ⫺ 6693, purity -0.7443802517348245
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (86+27=113 samples) on frame 1 with decision: {1} A59 ⫺ 13698, purity -0.7757486096761103
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (32+95=127 samples) on frame 1 with decision: {1} A777 ⫺ 11720, purity -0.7520929200618879
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (101+33=134 samples) on frame 1 with decision: {1} A952 ⫺ 2987, purity -0.800951930333761
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+4=25 samples) on frame 1 with decision: {1} A359 ⫺ 31853, purity -0.16081302884448284
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+20=27 samples) on frame 1 with decision: {1} A1828 ⫺ 70, purity -0.2533747812939377
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+28=32 samples) on frame 1 with decision: {1} A155 ⫺ 12072, purity -0.08664339756999316
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+11=33 samples) on frame 1 with decision: {1} A87 ⫺ 15668, purity -0.5153530304967573
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (71+10=81 samples) on frame 1 with decision: {1} A995 ⫺ 1400, purity -0.5766049207082804
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (73+13=86 samples) on frame 1 with decision: {1} A108 ⫺ 13135, purity -0.6143111890894543
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+86=95 samples) on frame 1 with decision: {1} A201 ⫺ 13894, purity -0.6070018176064842
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (74+27=101 samples) on frame 1 with decision: {1} A723 ⫺ 3995, purity -0.6012571535865014
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+4=13 samples) on frame 1 with decision: {1} A4 ⫺ 3487, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+4=22 samples) on frame 1 with decision: {1} A62 ⫺ 10555, purity -0.17554839968978556
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+4=11 samples) on frame 1 with decision: {1} A6 ⫺ 3518, purity -0.2520535202036165
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+60=71 samples) on frame 1 with decision: {1} A197 ⫺ 14589, purity -0.47382509541672274
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+67=73 samples) on frame 1 with decision: {1} A1059 ⫺ 6693, purity -0.39913776636540016
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (36+38=74 samples) on frame 1 with decision: {1} A757 ⫺ 13690, purity -0.5396038171514638
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (33+53=86 samples) on frame 1 with decision: {1} A504 ⫺ 32509, purity -0.542703351188274
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+4=27 samples) on frame 1 with decision: {1} A39 ⫺ 10883, purity -0.15403270679109932
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+5=11 samples) on frame 1 with decision: {1} A29 ⫺ 7920, purity -0.22745564706281254
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+29=38 samples) on frame 1 with decision: {1} A1139 ⫺ 6661, purity -0.4973181126409595
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+35=53 samples) on frame 1 with decision: {1} A757 ⫺ 13542, purity -0.5737811267416073
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+49=60 samples) on frame 1 with decision: {1} A32 ⫺ 8616, purity -0.2015307599459538
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+29=67 samples) on frame 1 with decision: {1} A559 ⫺ 17686, purity -0.268088244813462
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+4=11 samples) on frame 1 with decision: {1} A4 ⫺ 3557, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+14=18 samples) on frame 1 with decision: {1} A10 ⫺ 3847, purity -0.15403270679109896
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+8=29 samples) on frame 1 with decision: {1} A1528 ⫺ 3800, purity -0.13863192141765762
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+18=29 samples) on frame 1 with decision: {1} A1630 ⫺ 625, purity -0.3945229798765009
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+8=35 samples) on frame 1 with decision: {1} A1703 ⫺ 344, purity -0.4687920698433095
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+5=11 samples) on frame 1 with decision: {1} A466 ⫺ 25090, purity 1.2111523905001707e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+15=27 samples) on frame 1 with decision: {1} A1499 ⫺ 5715, purity -0.2828951859088058
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+5=12 samples) on frame 1 with decision: {1} A119 ⫺ 10868, purity -0.20850100980757827
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
 37.078182 seconds (439.43 M allocations: 8.981 GiB, 23.43% gc time)
Train tree:
Decision Tree
Leaves: 37
Tot nodes: 73
Height: 9
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A128 ⫺ 11353
✔ {1} A1127 ⫺ 7693
│✔ {1} A952 ⫺ 2987
││✔ {1} A87 ⫺ 15668
│││✔ {1} A6 ⫺ 3518
││││✔ Lettuce_romaine_7wk : 2/4 (conf: 0.5)
││││✘ Lettuce_romaine_6wk : 7/7 (conf: 1.0)
│││✘ {1} A62 ⫺ 10555
│││ ✔ Lettuce_romaine_6wk : 4/4 (conf: 1.0)
│││ ✘ Lettuce_romaine_5wk : 17/18 (conf: 0.9444444444444444)
││✘ {1} A723 ⫺ 3995
││ ✔ {1} A39 ⫺ 10883
││ │✔ Lettuce_romaine_6wk : 2/4 (conf: 0.5)
││ │✘ Lettuce_romaine_6wk : 23/23 (conf: 1.0)
││ ✘ {1} A757 ⫺ 13690
││  ✔ {1} A1139 ⫺ 6661
││  │✔ {1} A1630 ⫺ 625
││  ││✔ Lettuce_romaine_6wk : 17/18 (conf: 0.9444444444444444)
││  ││✘ {1} A466 ⫺ 25090
││  ││ ✔ Lettuce_romaine_6wk : 5/5 (conf: 1.0)
││  ││ ✘ Lettuce_romaine_7wk : 6/6 (conf: 1.0)
││  │✘ Lettuce_romaine_7wk : 9/9 (conf: 1.0)
││  ✘ Lettuce_romaine_7wk : 33/36 (conf: 0.9166666666666666)
│✘ {1} A545 ⫺ 6693
│ ✔ {1} A995 ⫺ 1400
│ │✔ Lettuce_romaine_6wk : 10/10 (conf: 1.0)
│ │✘ {1} A197 ⫺ 14589
│ │ ✔ {1} A32 ⫺ 8616
│ │ │✔ Lettuce_romaine_5wk : 48/49 (conf: 0.9795918367346939)
│ │ │✘ {1} A4 ⫺ 3557
│ │ │ ✔ Lettuce_romaine_5wk : 4/4 (conf: 1.0)
│ │ │ ✘ Lettuce_romaine_7wk : 7/7 (conf: 1.0)
│ │ ✘ {1} A29 ⫺ 7920
│ │  ✔ Lettuce_romaine_5wk : 4/5 (conf: 0.8)
│ │  ✘ Lettuce_romaine_6wk : 6/6 (conf: 1.0)
│ ✘ {1} A359 ⫺ 31853
│  ✔ Lettuce_romaine_5wk : 4/4 (conf: 1.0)
│  ✘ Lettuce_romaine_7wk : 20/21 (conf: 0.9523809523809523)
✘ {1} A123 ⫺ 15551
 ✔ {1} A777 ⫺ 11720
 │✔ {1} A201 ⫺ 13894
 ││✔ {1} A504 ⫺ 32509
 │││✔ {1} A757 ⫺ 13542
 ││││✔ {1} A1703 ⫺ 344
 │││││✔ Lettuce_romaine_4wk : 8/8 (conf: 1.0)
 │││││✘ {1} A1499 ⫺ 5715
 │││││ ✔ Brocoli_green_weeds_1 : 15/15 (conf: 1.0)
 │││││ ✘ {1} A119 ⫺ 10868
 │││││  ✔ Brocoli_green_weeds_1 : 4/5 (conf: 0.8)
 │││││  ✘ Lettuce_romaine_4wk : 7/7 (conf: 1.0)
 ││││✘ {1} A10 ⫺ 3847
 ││││ ✔ Lettuce_romaine_4wk : 14/14 (conf: 1.0)
 ││││ ✘ Corn_senesced_green_weeds : 2/4 (conf: 0.5)
 │││✘ Lettuce_romaine_4wk : 32/33 (conf: 0.9696969696969697)
 ││✘ Corn_senesced_green_weeds : 9/9 (conf: 1.0)
 │✘ {1} A155 ⫺ 12072
 │ ✔ Brocoli_green_weeds_1 : 28/28 (conf: 1.0)
 │ ✘ Corn_senesced_green_weeds : 2/4 (conf: 0.5)
 ✘ {1} A59 ⫺ 13698
  ✔ {1} A1828 ⫺ 70
  │✔ Brocoli_green_weeds_1 : 19/20 (conf: 0.95)
  │✘ Corn_senesced_green_weeds : 6/7 (conf: 0.8571428571428571)
  ✘ {1} A108 ⫺ 13135
   ✔ {1} A4 ⫺ 3487
   │✔ Brocoli_green_weeds_1 : 4/4 (conf: 1.0)
   │✘ Lettuce_romaine_4wk : 9/9 (conf: 1.0)
   ✘ {1} A1059 ⫺ 6693
    ✔ {1} A559 ⫺ 17686
    │✔ {1} A1528 ⫺ 3800
    ││✔ Brocoli_green_weeds_1 : 8/8 (conf: 1.0)
    ││✘ Corn_senesced_green_weeds : 20/21 (conf: 0.9523809523809523)
    │✘ Corn_senesced_green_weeds : 38/38 (conf: 1.0)
    ✘ Lettuce_romaine_4wk : 5/6 (conf: 0.8333333333333334)
● [ 01/07/2021 15:54:04 ] Saving tree to file ./gandalf/trees/tree_88fe72907f498143bc5f62f1bebd01a4b3ee69a27867d2194112686963a2580d.jld...
Test tree:
Decision Tree
Leaves: 37
Tot nodes: 73
Height: 9
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A128 ⫺ 11353
✔ {1} A1127 ⫺ 7693
│✔ {1} A952 ⫺ 2987
││✔ {1} A87 ⫺ 15668
│││✔ {1} A6 ⫺ 3518
││││✔ Lettuce_romaine_7wk : 0/0 (conf: NaN)
││││✘ Lettuce_romaine_6wk : 1/2 (conf: 0.5)
│││✘ {1} A62 ⫺ 10555
│││ ✔ Lettuce_romaine_6wk : 1/1 (conf: 1.0)
│││ ✘ Lettuce_romaine_5wk : 5/9 (conf: 0.5555555555555556)
││✘ {1} A723 ⫺ 3995
││ ✔ {1} A39 ⫺ 10883
││ │✔ Lettuce_romaine_6wk : 1/1 (conf: 1.0)
││ │✘ Lettuce_romaine_6wk : 3/4 (conf: 0.75)
││ ✘ {1} A757 ⫺ 13690
││  ✔ {1} A1139 ⫺ 6661
││  │✔ {1} A1630 ⫺ 625
││  ││✔ Lettuce_romaine_6wk : 7/12 (conf: 0.5833333333333334)
││  ││✘ {1} A466 ⫺ 25090
││  ││ ✔ Lettuce_romaine_6wk : 2/2 (conf: 1.0)
││  ││ ✘ Lettuce_romaine_7wk : 0/2 (conf: 0.0)
││  │✘ Lettuce_romaine_7wk : 1/1 (conf: 1.0)
││  ✘ Lettuce_romaine_7wk : 7/8 (conf: 0.875)
│✘ {1} A545 ⫺ 6693
│ ✔ {1} A995 ⫺ 1400
│ │✔ Lettuce_romaine_6wk : 0/0 (conf: NaN)
│ │✘ {1} A197 ⫺ 14589
│ │ ✔ {1} A32 ⫺ 8616
│ │ │✔ Lettuce_romaine_5wk : 8/11 (conf: 0.7272727272727273)
│ │ │✘ {1} A4 ⫺ 3557
│ │ │ ✔ Lettuce_romaine_5wk : 1/1 (conf: 1.0)
│ │ │ ✘ Lettuce_romaine_7wk : 0/0 (conf: NaN)
│ │ ✘ {1} A29 ⫺ 7920
│ │  ✔ Lettuce_romaine_5wk : 1/1 (conf: 1.0)
│ │  ✘ Lettuce_romaine_6wk : 1/1 (conf: 1.0)
│ ✘ {1} A359 ⫺ 31853
│  ✔ Lettuce_romaine_5wk : 0/0 (conf: NaN)
│  ✘ Lettuce_romaine_7wk : 4/4 (conf: 1.0)
✘ {1} A123 ⫺ 15551
 ✔ {1} A777 ⫺ 11720
 │✔ {1} A201 ⫺ 13894
 ││✔ {1} A504 ⫺ 32509
 │││✔ {1} A757 ⫺ 13542
 ││││✔ {1} A1703 ⫺ 344
 │││││✔ Lettuce_romaine_4wk : 0/2 (conf: 0.0)
 │││││✘ {1} A1499 ⫺ 5715
 │││││ ✔ Brocoli_green_weeds_1 : 0/1 (conf: 0.0)
 │││││ ✘ {1} A119 ⫺ 10868
 │││││  ✔ Brocoli_green_weeds_1 : 0/0 (conf: NaN)
 │││││  ✘ Lettuce_romaine_4wk : 0/2 (conf: 0.0)
 ││││✘ {1} A10 ⫺ 3847
 ││││ ✔ Lettuce_romaine_4wk : 1/2 (conf: 0.5)
 ││││ ✘ Corn_senesced_green_weeds : 0/3 (conf: 0.0)
 │││✘ Lettuce_romaine_4wk : 8/9 (conf: 0.8888888888888888)
 ││✘ Corn_senesced_green_weeds : 0/0 (conf: NaN)
 │✘ {1} A155 ⫺ 12072
 │ ✔ Brocoli_green_weeds_1 : 7/9 (conf: 0.7777777777777778)
 │ ✘ Corn_senesced_green_weeds : 0/0 (conf: NaN)
 ✘ {1} A59 ⫺ 13698
  ✔ {1} A1828 ⫺ 70
  │✔ Brocoli_green_weeds_1 : 4/4 (conf: 1.0)
  │✘ Corn_senesced_green_weeds : 4/4 (conf: 1.0)
  ✘ {1} A108 ⫺ 13135
   ✔ {1} A4 ⫺ 3487
   │✔ Brocoli_green_weeds_1 : 0/1 (conf: 0.0)
   │✘ Lettuce_romaine_4wk : 2/4 (conf: 0.5)
   ✘ {1} A1059 ⫺ 6693
    ✔ {1} A559 ⫺ 17686
    │✔ {1} A1528 ⫺ 3800
    ││✔ Brocoli_green_weeds_1 : 0/0 (conf: NaN)
    ││✘ Corn_senesced_green_weeds : 3/5 (conf: 0.6)
    │✘ Corn_senesced_green_weeds : 8/11 (conf: 0.7272727272727273)
    ✘ Lettuce_romaine_4wk : 1/3 (conf: 0.3333333333333333)
 test size = [(1836, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:flattened,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	67.5%	55.0%	75.0%	60.0%	75.0%	80.0%	60.0%	73.33%	65.22%	54.55%	68.18%	69.57%	80.0%	||	61.0%	[62.86, 69.77, 57.14, 71.43, 74.42, 68.57]%	
  accuracy: 67.5% kappa: 61.0% 
 11  3  6  0  0  0	55.0%		Brocoli_green_weeds_1
  1 15  4  0  0  0	75.0%		Corn_senesced_green_weeds
  3  5 12  0  0  0	60.0%		Lettuce_romaine_4wk
  0  0  0 15  5  0	75.0%		Lettuce_romaine_5wk
  0  0  0  1 16  3	80.0%		Lettuce_romaine_6wk
  0  0  0  6  2 12	60.0%		Lettuce_romaine_7wk

overall_acc:	0.675
κ =		0.6100000000000001
sensitivities:	[0.55, 0.75, 0.6, 0.75, 0.8, 0.6]
specificities:	[0.96, 0.92, 0.9, 0.93, 0.93, 0.97]
PPVs:		[0.7333333333333333, 0.6521739130434783, 0.5454545454545454, 0.6818181818181818, 0.6956521739130435, 0.8]
NPVs:		[0.9142857142857143, 0.9484536082474226, 0.9183673469387755, 0.9489795918367347, 0.9587628865979382, 0.9238095238095239]
F1s:		[0.6285714285714286, 0.6976744186046512, 0.5714285714285714, 0.7142857142857143, 0.7441860465116279, 0.6857142857142857]
accuracies:	[0.8916666666666667, 0.8916666666666667, 0.85, 0.9, 0.9083333333333333, 0.9083333333333333]
mean_accuracy:	0.8916666666666666
Dataset_slice = (600) -> [70, 177, 261, 314, 419, 581, 28, 119, 212, 327, 454, 562, 31, 139, 280, 374, 459, 507, 19, 178, 249, 324, 453, 509, 5, 145, 248, 337, 422, 598, 75, 174, 287, 378, 420, 519, 12, 144, 202, 385, 465, 588, 26, 108, 298, 344, 403, 544, 67, 162, 228, 360, 498, 513, 14, 125, 236, 322, 482, 571, 50, 105, 214, 320, 440, 559, 25, 148, 229, 376, 423, 535, 11, 196, 219, 397, 434, 552, 51, 170, 257, 399, 417, 534, 6, 199, 207, 301, 427, 583, 4, 127, 273, 338, 450, 590, 63, 141, 270, 302, 486, 586, 62, 118, 276, 392, 435, 511, 54, 194, 216, 336, 437, 569, 73, 190, 251, 349, 411, 582, 16, 168, 238, 312, 449, 597, 76, 133, 292, 308, 436, 560, 94, 191, 234, 307, 469, 566, 21, 172, 253, 370, 461, 556, 96, 176, 295, 388, 401, 578, 97, 132, 275, 382, 475, 555, 60, 173, 217, 325, 470, 514, 9, 109, 272, 398, 402, 510, 40, 154, 250, 303, 443, 524, 72, 113, 240, 368, 431, 501, 99, 156, 279, 381, 497, 540, 44, 167, 220, 335, 489, 523, 91, 104, 245, 357, 416, 533, 92, 116, 297, 355, 412, 553, 71, 166, 246, 351, 426, 536, 13, 192, 203, 394, 410, 529, 98, 129, 206, 331, 414, 537, 79, 122, 281, 346, 448, 504, 18, 137, 224, 371, 442, 549, 48, 101, 289, 362, 487, 589, 56, 175, 285, 350, 456, 516, 22, 103, 242, 356, 408, 502, 35, 124, 293, 361, 428, 577, 81, 189, 262, 364, 460, 547, 84, 187, 230, 342, 478, 557, 37, 181, 208, 310, 418, 521, 87, 120, 299, 359, 458, 530, 77, 117, 237, 354, 462, 538, 34, 115, 231, 379, 429, 525, 65, 155, 205, 316, 495, 550, 7, 121, 252, 319, 488, 508, 41, 123, 264, 358, 499, 503, 3, 182, 201, 353, 452, 531, 59, 193, 290, 345, 439, 558, 55, 186, 296, 372, 457, 546, 43, 126, 241, 377, 463, 554, 29, 161, 263, 395, 405, 551, 8, 159, 221, 333, 471, 543, 86, 158, 227, 347, 413, 592, 46, 157, 274, 304, 424, 561, 64, 112, 204, 332, 445, 585, 78, 195, 211, 391, 430, 545, 85, 198, 209, 340, 493, 575, 15, 152, 282, 317, 433, 600, 1, 149, 258, 400, 477, 595, 42, 128, 254, 309, 464, 584, 100, 130, 271, 326, 500, 573, 30, 197, 267, 323, 425, 594, 10, 140, 283, 393, 468, 542, 89, 134, 218, 389, 441, 596, 88, 114, 278, 318, 446, 532, 49, 179, 277, 365, 467, 528, 17, 160, 247, 383, 481, 568, 23, 183, 223, 339, 479, 587, 27, 142, 286, 311, 415, 570, 20, 150, 259, 305, 421, 522, 68, 171, 288, 329, 407, 526, 69, 169, 243, 352, 494, 567, 24, 106, 284, 384, 491, 520, 74, 110, 235, 390, 473, 579, 36, 163, 256, 373, 406, 515, 57, 185, 266, 343, 480, 548, 53, 180, 239, 306, 476, 527, 95, 200, 255, 369, 404, 541, 61, 107, 226, 348, 409, 518, 66, 135, 265, 380, 484, 512, 52, 111, 233, 328, 472, 565, 58, 147, 210, 315, 447, 506, 47, 153, 232, 367, 474, 517, 83, 143, 268, 341, 432, 574, 39, 146, 215, 313, 490, 572, 93, 165, 244, 330, 466, 591, 90, 138, 225, 363, 451, 539, 33, 184, 291, 396, 455, 593, 2, 151, 300, 334, 496, 505, 38, 102, 260, 366, 492, 576, 80, 131, 269, 375, 483, 580, 82, 136, 222, 386, 485, 563, 45, 188, 213, 321, 444, 599, 32, 164, 294, 387, 438, 564]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	2.65 MBs
     ├ fmd	2.65 MBs	(shape (480, 1836))
     ├ fmd_m	0.0 MBs	(shape (480, 1836, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.42 MBs
     ├ domain shape	(1836, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:54:05 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (240+240=480 samples) on frame 1 with decision: {1} A128 ⫺ 11353, purity -1.09861228866811
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (115+125=240 samples) on frame 1 with decision: {1} A123 ⫺ 15551, purity -0.913303736542268
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (105+135=240 samples) on frame 1 with decision: {1} A1127 ⫺ 7693, purity -0.985824955924659
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+84=105 samples) on frame 1 with decision: {1} A545 ⫺ 6693, purity -0.7581796567972091
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (47+68=115 samples) on frame 1 with decision: {1} A1505 ⫺ 852, purity -0.7750797742539839
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+87=125 samples) on frame 1 with decision: {1} A777 ⫺ 11720, purity -0.6881032686547465
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (57+78=135 samples) on frame 1 with decision: {1} A901 ⫺ 13534, purity -0.8133685549595123
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+4=21 samples) on frame 1 with decision: {1} A341 ⫺ 21016, purity -0.10711145611786825
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+4=38 samples) on frame 1 with decision: {1} A42 ⫺ 12025, purity -0.17791707597449663
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+32=47 samples) on frame 1 with decision: {1} A1427 ⫺ 3878, purity -0.4045140580254221
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (52+5=57 samples) on frame 1 with decision: {1} A952 ⫺ 3018, purity -0.5367127635423106
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (59+9=68 samples) on frame 1 with decision: {1} A72 ⫺ 11517, purity -0.5894893690174053
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+68=78 samples) on frame 1 with decision: {1} A1148 ⫺ 6826, purity -0.5652811192707998
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (73+11=84 samples) on frame 1 with decision: {1} A284 ⫺ 19234, purity -0.6229072174142379
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+82=87 samples) on frame 1 with decision: {1} A201 ⫺ 13894, purity -0.6207837090564723
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A2 ⫺ 3034, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+19=32 samples) on frame 1 with decision: {1} A1342 ⫺ 125, purity -0.2507544689529513
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+24=52 samples) on frame 1 with decision: {1} A517 ⫺ 16724, purity -0.3199140833353594
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+47=59 samples) on frame 1 with decision: {1} A722 ⫺ 6482, purity -0.4762399023584312
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (63+10=73 samples) on frame 1 with decision: {1} A863 ⫺ 11798, purity -0.4698120833500845
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A2 ⫺ 2478, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+45=68 samples) on frame 1 with decision: {1} A45 ⫺ 10156, purity -0.34308088478792687
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+48=82 samples) on frame 1 with decision: {1} A8 ⫺ 2955, purity -0.5006763234599154
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A38 ⫺ 9672, purity 1.3322676295501878e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+6=12 samples) on frame 1 with decision: {1} A137 ⫺ 10563, purity 2.220446049250313e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+8=13 samples) on frame 1 with decision: {1} A340 ⫺ 19640, purity -0.19246247059161073
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+16=23 samples) on frame 1 with decision: {1} A1778 ⫺ 1345, purity -0.386918991657472
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+11=24 samples) on frame 1 with decision: {1} A303 ⫺ 18295, purity -0.3721748481641511
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+35=48 samples) on frame 1 with decision: {1} A1320 ⫺ 805, purity -0.6308381091612972
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+19=47 samples) on frame 1 with decision: {1} A1713 ⫺ 2041, purity -0.266044463049344
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+53=63 samples) on frame 1 with decision: {1} A1610 ⫺ 2189, purity -0.2799544016095202
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A3 ⫺ 2979, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+9=13 samples) on frame 1 with decision: {1} A4 ⫺ 3464, purity -0.31991408333535937
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+4=13 samples) on frame 1 with decision: {1} A24 ⫺ 5817, purity -0.21327605555690624
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+12=16 samples) on frame 1 with decision: {1} A2 ⫺ 2908, purity -0.17328679513998632
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+7=19 samples) on frame 1 with decision: {1} A32 ⫺ 10281, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A7 ⫺ 2940, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (25+10=35 samples) on frame 1 with decision: {1} A378 ⫺ 40961, purity -0.27150586835235274
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+5=10 samples) on frame 1 with decision: {1} A13 ⫺ 4410, purity -0.5274600839930721
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
 36.708768 seconds (434.75 M allocations: 8.918 GiB, 26.24% gc time)
Train tree:
Decision Tree
Leaves: 40
Tot nodes: 79
Height: 8
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A128 ⫺ 11353
✔ {1} A1127 ⫺ 7693
│✔ {1} A901 ⫺ 13534
││✔ {1} A1148 ⫺ 6826
│││✔ {1} A45 ⫺ 10156
││││✔ Lettuce_romaine_6wk : 44/45 (conf: 0.9777777777777777)
││││✘ {1} A1778 ⫺ 1345
││││ ✔ {1} A2 ⫺ 2908
││││ │✔ Lettuce_romaine_5wk : 12/12 (conf: 1.0)
││││ │✘ Lettuce_romaine_5wk : 2/4 (conf: 0.5)
││││ ✘ Lettuce_romaine_6wk : 6/7 (conf: 0.8571428571428571)
│││✘ {1} A2 ⫺ 3034
│││ ✔ Lettuce_romaine_7wk : 6/6 (conf: 1.0)
│││ ✘ Lettuce_romaine_7wk : 3/4 (conf: 0.75)
││✘ {1} A952 ⫺ 3018
││ ✔ Lettuce_romaine_5wk : 4/5 (conf: 0.8)
││ ✘ {1} A517 ⫺ 16724
││  ✔ {1} A303 ⫺ 18295
││  │✔ {1} A7 ⫺ 2940
││  ││✔ Lettuce_romaine_6wk : 7/7 (conf: 1.0)
││  ││✘ Lettuce_romaine_6wk : 3/4 (conf: 0.75)
││  │✘ {1} A24 ⫺ 5817
││  │ ✔ Lettuce_romaine_7wk : 2/4 (conf: 0.5)
││  │ ✘ Lettuce_romaine_7wk : 9/9 (conf: 1.0)
││  ✘ Lettuce_romaine_7wk : 28/28 (conf: 1.0)
│✘ {1} A545 ⫺ 6693
│ ✔ {1} A284 ⫺ 19234
│ │✔ {1} A2 ⫺ 2478
│ ││✔ Lettuce_romaine_6wk : 7/7 (conf: 1.0)
│ ││✘ Lettuce_romaine_6wk : 3/4 (conf: 0.75)
│ │✘ {1} A863 ⫺ 11798
│ │ ✔ {1} A38 ⫺ 9672
│ │ │✔ Lettuce_romaine_5wk : 4/4 (conf: 1.0)
│ │ │✘ Lettuce_romaine_6wk : 6/6 (conf: 1.0)
│ │ ✘ {1} A1610 ⫺ 2189
│ │  ✔ Lettuce_romaine_5wk : 50/53 (conf: 0.9433962264150944)
│ │  ✘ {1} A3 ⫺ 2979
│ │   ✔ Lettuce_romaine_7wk : 6/6 (conf: 1.0)
│ │   ✘ Lettuce_romaine_5wk : 3/4 (conf: 0.75)
│ ✘ {1} A341 ⫺ 21016
│  ✔ Lettuce_romaine_5wk : 3/4 (conf: 0.75)
│  ✘ Lettuce_romaine_7wk : 17/17 (conf: 1.0)
✘ {1} A123 ⫺ 15551
 ✔ {1} A777 ⫺ 11720
 │✔ {1} A201 ⫺ 13894
 ││✔ {1} A8 ⫺ 2955
 │││✔ {1} A1320 ⫺ 805
 ││││✔ {1} A378 ⫺ 40961
 │││││✔ {1} A13 ⫺ 4410
 ││││││✔ Brocoli_green_weeds_1 : 5/5 (conf: 1.0)
 ││││││✘ Corn_senesced_green_weeds : 2/5 (conf: 0.4)
 │││││✘ Lettuce_romaine_4wk : 25/25 (conf: 1.0)
 ││││✘ {1} A4 ⫺ 3464
 ││││ ✔ Brocoli_green_weeds_1 : 9/9 (conf: 1.0)
 ││││ ✘ Brocoli_green_weeds_1 : 2/4 (conf: 0.5)
 │││✘ Lettuce_romaine_4wk : 34/34 (conf: 1.0)
 ││✘ Corn_senesced_green_weeds : 5/5 (conf: 1.0)
 │✘ {1} A42 ⫺ 12025
 │ ✔ Lettuce_romaine_4wk : 3/4 (conf: 0.75)
 │ ✘ Brocoli_green_weeds_1 : 33/34 (conf: 0.9705882352941176)
 ✘ {1} A1505 ⫺ 852
  ✔ {1} A72 ⫺ 11517
  │✔ Lettuce_romaine_4wk : 9/9 (conf: 1.0)
  │✘ {1} A722 ⫺ 6482
  │ ✔ {1} A1713 ⫺ 2041
  │ │✔ {1} A32 ⫺ 10281
  │ ││✔ Brocoli_green_weeds_1 : 7/7 (conf: 1.0)
  │ ││✘ Corn_senesced_green_weeds : 12/12 (conf: 1.0)
  │ │✘ Corn_senesced_green_weeds : 28/28 (conf: 1.0)
  │ ✘ {1} A137 ⫺ 10563
  │  ✔ Corn_senesced_green_weeds : 6/6 (conf: 1.0)
  │  ✘ Lettuce_romaine_4wk : 6/6 (conf: 1.0)
  ✘ {1} A1427 ⫺ 3878
   ✔ {1} A1342 ⫺ 125
   │✔ Brocoli_green_weeds_1 : 19/19 (conf: 1.0)
   │✘ {1} A340 ⫺ 19640
   │ ✔ Corn_senesced_green_weeds : 8/8 (conf: 1.0)
   │ ✘ Brocoli_green_weeds_1 : 4/5 (conf: 0.8)
   ✘ Corn_senesced_green_weeds : 15/15 (conf: 1.0)
● [ 01/07/2021 15:54:41 ] Saving tree to file ./gandalf/trees/tree_6d220caa9ea4a3c993e4cd058a5cad00cec87cffa6a175d0f3575997982315ea.jld...
Test tree:
Decision Tree
Leaves: 40
Tot nodes: 79
Height: 8
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A128 ⫺ 11353
✔ {1} A1127 ⫺ 7693
│✔ {1} A901 ⫺ 13534
││✔ {1} A1148 ⫺ 6826
│││✔ {1} A45 ⫺ 10156
││││✔ Lettuce_romaine_6wk : 8/14 (conf: 0.5714285714285714)
││││✘ {1} A1778 ⫺ 1345
││││ ✔ {1} A2 ⫺ 2908
││││ │✔ Lettuce_romaine_5wk : 2/3 (conf: 0.6666666666666666)
││││ │✘ Lettuce_romaine_5wk : 1/1 (conf: 1.0)
││││ ✘ Lettuce_romaine_6wk : 2/3 (conf: 0.6666666666666666)
│││✘ {1} A2 ⫺ 3034
│││ ✔ Lettuce_romaine_7wk : 0/1 (conf: 0.0)
│││ ✘ Lettuce_romaine_7wk : 1/3 (conf: 0.3333333333333333)
││✘ {1} A952 ⫺ 3018
││ ✔ Lettuce_romaine_5wk : 1/1 (conf: 1.0)
││ ✘ {1} A517 ⫺ 16724
││  ✔ {1} A303 ⫺ 18295
││  │✔ {1} A7 ⫺ 2940
││  ││✔ Lettuce_romaine_6wk : 1/3 (conf: 0.3333333333333333)
││  ││✘ Lettuce_romaine_6wk : 2/3 (conf: 0.6666666666666666)
││  │✘ {1} A24 ⫺ 5817
││  │ ✔ Lettuce_romaine_7wk : 1/1 (conf: 1.0)
││  │ ✘ Lettuce_romaine_7wk : 0/0 (conf: NaN)
││  ✘ Lettuce_romaine_7wk : 5/8 (conf: 0.625)
│✘ {1} A545 ⫺ 6693
│ ✔ {1} A284 ⫺ 19234
│ │✔ {1} A2 ⫺ 2478
│ ││✔ Lettuce_romaine_6wk : 0/0 (conf: NaN)
│ ││✘ Lettuce_romaine_6wk : 1/1 (conf: 1.0)
│ │✘ {1} A863 ⫺ 11798
│ │ ✔ {1} A38 ⫺ 9672
│ │ │✔ Lettuce_romaine_5wk : 0/0 (conf: NaN)
│ │ │✘ Lettuce_romaine_6wk : 0/1 (conf: 0.0)
│ │ ✘ {1} A1610 ⫺ 2189
│ │  ✔ Lettuce_romaine_5wk : 8/9 (conf: 0.8888888888888888)
│ │  ✘ {1} A3 ⫺ 2979
│ │   ✔ Lettuce_romaine_7wk : 0/0 (conf: NaN)
│ │   ✘ Lettuce_romaine_5wk : 0/0 (conf: NaN)
│ ✘ {1} A341 ⫺ 21016
│  ✔ Lettuce_romaine_5wk : 1/2 (conf: 0.5)
│  ✘ Lettuce_romaine_7wk : 5/6 (conf: 0.8333333333333334)
✘ {1} A123 ⫺ 15551
 ✔ {1} A777 ⫺ 11720
 │✔ {1} A201 ⫺ 13894
 ││✔ {1} A8 ⫺ 2955
 │││✔ {1} A1320 ⫺ 805
 ││││✔ {1} A378 ⫺ 40961
 │││││✔ {1} A13 ⫺ 4410
 ││││││✔ Brocoli_green_weeds_1 : 0/0 (conf: NaN)
 ││││││✘ Corn_senesced_green_weeds : 0/3 (conf: 0.0)
 │││││✘ Lettuce_romaine_4wk : 2/3 (conf: 0.6666666666666666)
 ││││✘ {1} A4 ⫺ 3464
 ││││ ✔ Brocoli_green_weeds_1 : 0/1 (conf: 0.0)
 ││││ ✘ Brocoli_green_weeds_1 : 1/2 (conf: 0.5)
 │││✘ Lettuce_romaine_4wk : 11/14 (conf: 0.7857142857142857)
 ││✘ Corn_senesced_green_weeds : 4/4 (conf: 1.0)
 │✘ {1} A42 ⫺ 12025
 │ ✔ Lettuce_romaine_4wk : 0/0 (conf: NaN)
 │ ✘ Brocoli_green_weeds_1 : 2/3 (conf: 0.6666666666666666)
 ✘ {1} A1505 ⫺ 852
  ✔ {1} A72 ⫺ 11517
  │✔ Lettuce_romaine_4wk : 1/2 (conf: 0.5)
  │✘ {1} A722 ⫺ 6482
  │ ✔ {1} A1713 ⫺ 2041
  │ │✔ {1} A32 ⫺ 10281
  │ ││✔ Brocoli_green_weeds_1 : 1/3 (conf: 0.3333333333333333)
  │ ││✘ Corn_senesced_green_weeds : 2/3 (conf: 0.6666666666666666)
  │ │✘ Corn_senesced_green_weeds : 3/8 (conf: 0.375)
  │ ✘ {1} A137 ⫺ 10563
  │  ✔ Corn_senesced_green_weeds : 1/1 (conf: 1.0)
  │  ✘ Lettuce_romaine_4wk : 2/2 (conf: 1.0)
  ✘ {1} A1427 ⫺ 3878
   ✔ {1} A1342 ⫺ 125
   │✔ Brocoli_green_weeds_1 : 2/4 (conf: 0.5)
   │✘ {1} A340 ⫺ 19640
   │ ✔ Corn_senesced_green_weeds : 0/1 (conf: 0.0)
   │ ✘ Brocoli_green_weeds_1 : 2/2 (conf: 1.0)
   ✘ Corn_senesced_green_weeds : 4/4 (conf: 1.0)
 test size = [(1836, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:flattened,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	64.17%	40.0%	70.0%	80.0%	65.0%	70.0%	60.0%	53.33%	58.33%	76.19%	81.25%	56.0%	63.16%	||	57.0%	[45.71, 63.64, 78.05, 72.22, 62.22, 61.54]%	
  accuracy: 64.17% kappa: 57.0% 
  8  9  3  0  0  0	40.0%		Brocoli_green_weeds_1
  4 14  2  0  0  0	70.0%		Corn_senesced_green_weeds
  3  1 16  0  0  0	80.0%		Lettuce_romaine_4wk
  0  0  0 13  4  3	65.0%		Lettuce_romaine_5wk
  0  0  0  2 14  4	70.0%		Lettuce_romaine_6wk
  0  0  0  1  7 12	60.0%		Lettuce_romaine_7wk

overall_acc:	0.6416666666666667
κ =		0.5700000000000001
sensitivities:	[0.4, 0.7, 0.8, 0.65, 0.7, 0.6]
specificities:	[0.93, 0.9, 0.95, 0.97, 0.89, 0.93]
PPVs:		[0.5333333333333333, 0.5833333333333334, 0.7619047619047619, 0.8125, 0.56, 0.631578947368421]
NPVs:		[0.8857142857142857, 0.9375, 0.9595959595959596, 0.9326923076923077, 0.9368421052631579, 0.9207920792079208]
F1s:		[0.45714285714285713, 0.6363636363636364, 0.7804878048780488, 0.7222222222222222, 0.6222222222222222, 0.6153846153846154]
accuracies:	[0.8416666666666667, 0.8666666666666667, 0.925, 0.9166666666666666, 0.8583333333333333, 0.875]
mean_accuracy:	0.8805555555555555
Dataset_slice = (600) -> [21, 173, 279, 381, 499, 569, 64, 138, 231, 310, 469, 582, 10, 149, 269, 301, 481, 525, 84, 168, 271, 334, 458, 600, 13, 194, 289, 400, 497, 548, 73, 107, 225, 375, 444, 512, 20, 174, 213, 347, 441, 545, 60, 159, 210, 398, 448, 505, 22, 196, 237, 354, 492, 558, 27, 187, 300, 345, 461, 572, 3, 110, 264, 394, 498, 583, 48, 125, 238, 341, 464, 565, 24, 171, 293, 356, 470, 502, 1, 123, 260, 339, 417, 519, 95, 165, 224, 315, 422, 550, 30, 190, 294, 327, 484, 589, 29, 188, 211, 359, 429, 586, 65, 176, 232, 305, 500, 559, 85, 157, 282, 357, 472, 516, 4, 179, 202, 362, 436, 585, 50, 169, 261, 371, 460, 594, 8, 131, 256, 343, 439, 590, 89, 192, 240, 382, 447, 557, 68, 144, 221, 342, 438, 560, 23, 134, 277, 335, 419, 587, 56, 116, 278, 364, 459, 581, 70, 121, 292, 307, 440, 520, 71, 155, 247, 324, 425, 508, 62, 133, 204, 374, 405, 551, 31, 129, 299, 368, 479, 501, 49, 162, 227, 308, 401, 579, 15, 119, 249, 361, 467, 546, 77, 115, 265, 388, 426, 598, 61, 126, 242, 396, 463, 517, 52, 189, 275, 372, 491, 521, 11, 195, 234, 365, 468, 544, 75, 154, 222, 316, 480, 555, 67, 105, 226, 393, 466, 593, 81, 178, 267, 379, 477, 596, 44, 153, 266, 366, 476, 542, 38, 127, 245, 352, 452, 518, 17, 147, 219, 340, 427, 515, 96, 193, 229, 344, 457, 578, 35, 128, 262, 325, 431, 543, 36, 113, 230, 392, 414, 554, 40, 139, 281, 314, 435, 561, 93, 135, 268, 380, 430, 562, 55, 132, 285, 312, 421, 528, 90, 199, 212, 326, 486, 511, 72, 151, 208, 331, 434, 536, 19, 166, 283, 322, 403, 599, 87, 180, 244, 351, 462, 513, 74, 140, 254, 333, 490, 524, 39, 141, 241, 391, 412, 580, 18, 142, 207, 350, 485, 591, 25, 148, 246, 383, 410, 573, 2, 175, 239, 337, 495, 523, 91, 197, 209, 378, 478, 529, 83, 114, 274, 373, 474, 553, 99, 182, 255, 360, 489, 533, 43, 106, 258, 304, 454, 509, 53, 170, 218, 353, 404, 503, 6, 101, 235, 399, 445, 597, 28, 145, 263, 309, 442, 510, 79, 146, 257, 328, 456, 556, 42, 200, 273, 319, 496, 574, 66, 158, 206, 389, 493, 541, 92, 143, 201, 397, 443, 568, 76, 161, 290, 318, 424, 527, 7, 102, 297, 311, 413, 547, 14, 150, 216, 336, 415, 507, 5, 137, 284, 348, 406, 564, 57, 130, 296, 346, 402, 532, 88, 177, 295, 384, 450, 506, 86, 104, 203, 367, 423, 595, 63, 191, 217, 349, 451, 514, 16, 183, 250, 302, 420, 538, 32, 185, 236, 355, 446, 537, 100, 118, 287, 306, 473, 534, 80, 136, 252, 330, 418, 530, 33, 112, 286, 376, 407, 504, 69, 117, 233, 370, 471, 571, 37, 111, 223, 303, 433, 577, 26, 164, 276, 317, 449, 588, 59, 167, 251, 323, 408, 575, 41, 160, 280, 358, 483, 567, 12, 172, 228, 321, 455, 566, 9, 108, 272, 386, 437, 584, 47, 156, 253, 369, 482, 531, 46, 103, 259, 313, 428, 576, 51, 198, 220, 332, 487, 563, 45, 181, 215, 329, 409, 526, 98, 152, 291, 320, 453, 592, 94, 184, 288, 363, 488, 535, 34, 122, 205, 338, 411, 522, 54, 163, 214, 385, 416, 570, 78, 109, 298, 377, 494, 539, 58, 124, 270, 387, 432, 549, 97, 186, 248, 390, 475, 552, 82, 120, 243, 395, 465, 540]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	2.65 MBs
     ├ fmd	2.65 MBs	(shape (480, 1836))
     ├ fmd_m	0.0 MBs	(shape (480, 1836, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.42 MBs
     ├ domain shape	(1836, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:54:41 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (240+240=480 samples) on frame 1 with decision: {1} A128 ⫺ 11353, purity -1.09861228866811
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (115+125=240 samples) on frame 1 with decision: {1} A123 ⫺ 15551, purity -0.9090378354847831
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (102+138=240 samples) on frame 1 with decision: {1} A1127 ⫺ 7693, purity -0.9879104983811875
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+87=102 samples) on frame 1 with decision: {1} A806 ⫺ 10868, purity -0.7398113341187224
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+105=115 samples) on frame 1 with decision: {1} A1439 ⫺ 2518, purity -0.7414132589742038
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+91=125 samples) on frame 1 with decision: {1} A777 ⫺ 11720, purity -0.7329257430079523
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (42+96=138 samples) on frame 1 with decision: {1} A847 ⫺ 13737, purity -0.8389915234210121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A3 ⫺ 2979, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+26=34 samples) on frame 1 with decision: {1} A101 ⫺ 11743, purity -0.22925053008690535
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (35+7=42 samples) on frame 1 with decision: {1} A143 ⫺ 13667, purity -0.24375705706033055
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+84=91 samples) on frame 1 with decision: {1} A129 ⫺ 12275, purity -0.6044542790971752
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+11=87 samples) on frame 1 with decision: {1} A212 ⫺ 18561, purity -0.6839779475699259
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (62+34=96 samples) on frame 1 with decision: {1} A1119 ⫺ 7819, purity -0.7164355784509912
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (43+62=105 samples) on frame 1 with decision: {1} A1459 ⫺ 649, purity -0.586296252243479
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A19 ⫺ 5379, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (46+16=62 samples) on frame 1 with decision: {1} A455 ⫺ 22901, purity -0.6796115593483442
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (37+25=62 samples) on frame 1 with decision: {1} A336 ⫺ 21306, purity -0.35073429015686564
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+66=76 samples) on frame 1 with decision: {1} A152 ⫺ 14519, purity -0.5003067280514445
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+4=11 samples) on frame 1 with decision: {1} A29 ⫺ 7631, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+46=84 samples) on frame 1 with decision: {1} A8 ⫺ 2955, purity -0.5111819637294936
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+12=34 samples) on frame 1 with decision: {1} A105 ⫺ 15840, purity -0.603200930864362
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A11 ⫺ 3862, purity 1.3322676295501878e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+4=12 samples) on frame 1 with decision: {1} A1 ⫺ 3518, purity -0.18744504820626942
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+6=22 samples) on frame 1 with decision: {1} A358 ⫺ 24847, purity -0.1700302972410612
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+9=25 samples) on frame 1 with decision: {1} A111 ⫺ 16583, purity -0.24113290320411976
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+12=46 samples) on frame 1 with decision: {1} A1654 ⫺ 2486, purity -0.6135478318906066
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (33+13=46 samples) on frame 1 with decision: {1} A720 ⫺ 8483, purity -0.5394987981053391
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+50=66 samples) on frame 1 with decision: {1} A1154 ⫺ 5848, purity -0.28760938177630796
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+8=12 samples) on frame 1 with decision: {1} A9 ⫺ 2471, purity -0.18744504820626942
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+10=16 samples) on frame 1 with decision: {1} A474 ⫺ 19898, purity 8.326672684688674e-17
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+4=16 samples) on frame 1 with decision: {1} A37 ⫺ 11110, purity -0.17328679513998632
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+22=34 samples) on frame 1 with decision: {1} A934 ⫺ 7326, purity -0.3628884209410323
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+28=33 samples) on frame 1 with decision: {1} A564 ⫺ 7701, purity -0.3647274519662821
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+5=12 samples) on frame 1 with decision: {1} A35 ⫺ 8288, purity -0.3489905933414
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+6=28 samples) on frame 1 with decision: {1} A2 ⫺ 3518, purity -0.14853153869141647
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
 35.821389 seconds (430.51 M allocations: 8.770 GiB, 22.75% gc time)
Train tree:
Decision Tree
Leaves: 36
Tot nodes: 71
Height: 8
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A128 ⫺ 11353
✔ {1} A1127 ⫺ 7693
│✔ {1} A847 ⫺ 13737
││✔ {1} A1119 ⫺ 7819
│││✔ {1} A105 ⫺ 15840
││││✔ {1} A1 ⫺ 3518
│││││✔ Lettuce_romaine_7wk : 3/4 (conf: 0.75)
│││││✘ Lettuce_romaine_6wk : 8/8 (conf: 1.0)
││││✘ {1} A358 ⫺ 24847
││││ ✔ Lettuce_romaine_5wk : 6/6 (conf: 1.0)
││││ ✘ Lettuce_romaine_7wk : 15/16 (conf: 0.9375)
│││✘ {1} A336 ⫺ 21306
│││ ✔ {1} A111 ⫺ 16583
│││ │✔ Lettuce_romaine_6wk : 9/9 (conf: 1.0)
│││ │✘ {1} A37 ⫺ 11110
│││ │ ✔ Lettuce_romaine_5wk : 2/4 (conf: 0.5)
│││ │ ✘ Lettuce_romaine_5wk : 12/12 (conf: 1.0)
│││ ✘ Lettuce_romaine_6wk : 36/37 (conf: 0.972972972972973)
││✘ {1} A143 ⫺ 13667
││ ✔ Lettuce_romaine_6wk : 7/7 (conf: 1.0)
││ ✘ Lettuce_romaine_7wk : 32/35 (conf: 0.9142857142857143)
│✘ {1} A806 ⫺ 10868
│ ✔ {1} A212 ⫺ 18561
│ │✔ {1} A29 ⫺ 7631
│ ││✔ Lettuce_romaine_7wk : 3/4 (conf: 0.75)
│ ││✘ Lettuce_romaine_6wk : 7/7 (conf: 1.0)
│ │✘ {1} A152 ⫺ 14519
│ │ ✔ {1} A1154 ⫺ 5848
│ │ │✔ Lettuce_romaine_5wk : 48/50 (conf: 0.96)
│ │ │✘ {1} A474 ⫺ 19898
│ │ │ ✔ Lettuce_romaine_7wk : 10/10 (conf: 1.0)
│ │ │ ✘ Lettuce_romaine_5wk : 6/6 (conf: 1.0)
│ │ ✘ {1} A11 ⫺ 3862
│ │  ✔ Lettuce_romaine_5wk : 4/4 (conf: 1.0)
│ │  ✘ Lettuce_romaine_6wk : 6/6 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 15/15 (conf: 1.0)
✘ {1} A123 ⫺ 15551
 ✔ {1} A777 ⫺ 11720
 │✔ {1} A129 ⫺ 12275
 ││✔ {1} A8 ⫺ 2955
 │││✔ {1} A720 ⫺ 8483
 ││││✔ Brocoli_green_weeds_1 : 12/13 (conf: 0.9230769230769231)
 ││││✘ {1} A564 ⫺ 7701
 ││││ ✔ {1} A2 ⫺ 3518
 ││││ │✔ Lettuce_romaine_4wk : 3/6 (conf: 0.5)
 ││││ │✘ Lettuce_romaine_4wk : 22/22 (conf: 1.0)
 ││││ ✘ Brocoli_green_weeds_1 : 4/5 (conf: 0.8)
 │││✘ Lettuce_romaine_4wk : 37/38 (conf: 0.9736842105263158)
 ││✘ Corn_senesced_green_weeds : 7/7 (conf: 1.0)
 │✘ {1} A101 ⫺ 11743
 │ ✔ Brocoli_green_weeds_1 : 26/26 (conf: 1.0)
 │ ✘ {1} A19 ⫺ 5379
 │  ✔ Lettuce_romaine_4wk : 4/4 (conf: 1.0)
 │  ✘ Brocoli_green_weeds_1 : 3/4 (conf: 0.75)
 ✘ {1} A1439 ⫺ 2518
  ✔ {1} A1459 ⫺ 649
  │✔ {1} A455 ⫺ 22901
  ││✔ Brocoli_green_weeds_1 : 16/16 (conf: 1.0)
  ││✘ {1} A1654 ⫺ 2486
  ││ ✔ {1} A9 ⫺ 2471
  ││ │✔ Brocoli_green_weeds_1 : 8/8 (conf: 1.0)
  ││ │✘ Lettuce_romaine_4wk : 3/4 (conf: 0.75)
  ││ ✘ {1} A934 ⫺ 7326
  ││  ✔ Corn_senesced_green_weeds : 22/22 (conf: 1.0)
  ││  ✘ {1} A35 ⫺ 8288
  ││   ✔ Brocoli_green_weeds_1 : 5/5 (conf: 1.0)
  ││   ✘ Corn_senesced_green_weeds : 5/7 (conf: 0.7142857142857143)
  │✘ Corn_senesced_green_weeds : 42/43 (conf: 0.9767441860465116)
  ✘ {1} A3 ⫺ 2979
   ✔ Lettuce_romaine_4wk : 6/6 (conf: 1.0)
   ✘ Lettuce_romaine_4wk : 3/4 (conf: 0.75)
● [ 01/07/2021 15:55:17 ] Saving tree to file ./gandalf/trees/tree_b200c13f5f1d32632a32842ac23506b605789a8ecbae31b12cf1657abebc5d55.jld...
Test tree:
Decision Tree
Leaves: 36
Tot nodes: 71
Height: 8
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A128 ⫺ 11353
✔ {1} A1127 ⫺ 7693
│✔ {1} A847 ⫺ 13737
││✔ {1} A1119 ⫺ 7819
│││✔ {1} A105 ⫺ 15840
││││✔ {1} A1 ⫺ 3518
│││││✔ Lettuce_romaine_7wk : 0/1 (conf: 0.0)
│││││✘ Lettuce_romaine_6wk : 3/4 (conf: 0.75)
││││✘ {1} A358 ⫺ 24847
││││ ✔ Lettuce_romaine_5wk : 0/1 (conf: 0.0)
││││ ✘ Lettuce_romaine_7wk : 2/4 (conf: 0.5)
│││✘ {1} A336 ⫺ 21306
│││ ✔ {1} A111 ⫺ 16583
│││ │✔ Lettuce_romaine_6wk : 2/3 (conf: 0.6666666666666666)
│││ │✘ {1} A37 ⫺ 11110
│││ │ ✔ Lettuce_romaine_5wk : 1/1 (conf: 1.0)
│││ │ ✘ Lettuce_romaine_5wk : 2/3 (conf: 0.6666666666666666)
│││ ✘ Lettuce_romaine_6wk : 6/8 (conf: 0.75)
││✘ {1} A143 ⫺ 13667
││ ✔ Lettuce_romaine_6wk : 1/1 (conf: 1.0)
││ ✘ Lettuce_romaine_7wk : 9/12 (conf: 0.75)
│✘ {1} A806 ⫺ 10868
│ ✔ {1} A212 ⫺ 18561
│ │✔ {1} A29 ⫺ 7631
│ ││✔ Lettuce_romaine_7wk : 0/3 (conf: 0.0)
│ ││✘ Lettuce_romaine_6wk : 0/0 (conf: NaN)
│ │✘ {1} A152 ⫺ 14519
│ │ ✔ {1} A1154 ⫺ 5848
│ │ │✔ Lettuce_romaine_5wk : 11/13 (conf: 0.8461538461538461)
│ │ │✘ {1} A474 ⫺ 19898
│ │ │ ✔ Lettuce_romaine_7wk : 3/3 (conf: 1.0)
│ │ │ ✘ Lettuce_romaine_5wk : 1/1 (conf: 1.0)
│ │ ✘ {1} A11 ⫺ 3862
│ │  ✔ Lettuce_romaine_5wk : 1/1 (conf: 1.0)
│ │  ✘ Lettuce_romaine_6wk : 0/0 (conf: NaN)
│ ✘ Lettuce_romaine_7wk : 1/1 (conf: 1.0)
✘ {1} A123 ⫺ 15551
 ✔ {1} A777 ⫺ 11720
 │✔ {1} A129 ⫺ 12275
 ││✔ {1} A8 ⫺ 2955
 │││✔ {1} A720 ⫺ 8483
 ││││✔ Brocoli_green_weeds_1 : 2/5 (conf: 0.4)
 ││││✘ {1} A564 ⫺ 7701
 ││││ ✔ {1} A2 ⫺ 3518
 ││││ │✔ Lettuce_romaine_4wk : 0/0 (conf: NaN)
 ││││ │✘ Lettuce_romaine_4wk : 5/5 (conf: 1.0)
 ││││ ✘ Brocoli_green_weeds_1 : 0/0 (conf: NaN)
 │││✘ Lettuce_romaine_4wk : 8/10 (conf: 0.8)
 ││✘ Corn_senesced_green_weeds : 2/3 (conf: 0.6666666666666666)
 │✘ {1} A101 ⫺ 11743
 │ ✔ Brocoli_green_weeds_1 : 6/6 (conf: 1.0)
 │ ✘ {1} A19 ⫺ 5379
 │  ✔ Lettuce_romaine_4wk : 0/1 (conf: 0.0)
 │  ✘ Brocoli_green_weeds_1 : 0/0 (conf: NaN)
 ✘ {1} A1439 ⫺ 2518
  ✔ {1} A1459 ⫺ 649
  │✔ {1} A455 ⫺ 22901
  ││✔ Brocoli_green_weeds_1 : 4/4 (conf: 1.0)
  ││✘ {1} A1654 ⫺ 2486
  ││ ✔ {1} A9 ⫺ 2471
  ││ │✔ Brocoli_green_weeds_1 : 4/5 (conf: 0.8)
  ││ │✘ Lettuce_romaine_4wk : 0/0 (conf: NaN)
  ││ ✘ {1} A934 ⫺ 7326
  ││  ✔ Corn_senesced_green_weeds : 5/6 (conf: 0.8333333333333334)
  ││  ✘ {1} A35 ⫺ 8288
  ││   ✔ Brocoli_green_weeds_1 : 1/2 (conf: 0.5)
  ││   ✘ Corn_senesced_green_weeds : 0/0 (conf: NaN)
  │✘ Corn_senesced_green_weeds : 8/12 (conf: 0.6666666666666666)
  ✘ {1} A3 ⫺ 2979
   ✔ Lettuce_romaine_4wk : 0/0 (conf: NaN)
   ✘ Lettuce_romaine_4wk : 0/1 (conf: 0.0)
 test size = [(1836, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:flattened,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	73.33%	85.0%	75.0%	65.0%	80.0%	60.0%	75.0%	77.27%	71.43%	76.47%	80.0%	75.0%	62.5%	||	68.0%	[80.95, 73.17, 70.27, 80.0, 66.67, 68.18]%	
  accuracy: 73.33% kappa: 68.0% 
 17  2  1  0  0  0	85.0%		Brocoli_green_weeds_1
  2 15  3  0  0  0	75.0%		Corn_senesced_green_weeds
  3  4 13  0  0  0	65.0%		Lettuce_romaine_4wk
  0  0  0 16  2  2	80.0%		Lettuce_romaine_5wk
  0  0  0  1 12  7	60.0%		Lettuce_romaine_6wk
  0  0  0  3  2 15	75.0%		Lettuce_romaine_7wk

overall_acc:	0.7333333333333333
κ =		0.6799999999999999
sensitivities:	[0.85, 0.75, 0.65, 0.8, 0.6, 0.75]
specificities:	[0.95, 0.94, 0.96, 0.96, 0.96, 0.91]
PPVs:		[0.7727272727272727, 0.7142857142857143, 0.7647058823529411, 0.8, 0.75, 0.625]
NPVs:		[0.9693877551020408, 0.9494949494949495, 0.9320388349514563, 0.96, 0.9230769230769231, 0.9479166666666666]
F1s:		[0.8095238095238095, 0.7317073170731707, 0.7027027027027027, 0.8, 0.6666666666666666, 0.6818181818181818]
accuracies:	[0.9333333333333333, 0.9083333333333333, 0.9083333333333333, 0.9333333333333333, 0.9, 0.8833333333333333]
mean_accuracy:	0.9111111111111111
Iteration "Salinas-A,(3,:averaged,"o_None","TestOpGeq")"...
● [ 01/07/2021 15:55:17 ] Computing dataset...
● [ 01/07/2021 15:55:17 ] Computed dataset in 00:00:00
● [ 01/07/2021 15:55:18 ] Saving dataset to file ./gandalf/cache/dataset_6e8af3c94364519895735f720481d0f2efa7b646feae8296ea040306b0b94436.jld...
Dataseeds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

executing run 'Salinas-A,(3,:averaged,"o_None","TestOpGeq")'...
dataset type = Tuple{Matrix{Float64}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (test_operators = [⫺], ontology = OneWorldOntology)
dataset_slices    = (10 dataset_slices)

Frame 1/1
┌ LogLevel(-500): OntologicalDataset -> FeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:12
┌ LogLevel(-500): Instance 1/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 362/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 120/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 241/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 483/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): FeatModalDataset -> StumpFeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:358
┌ LogLevel(-500): Instance 1/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 362/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 120/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 483/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 241/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
  0.021473 seconds (749.02 k allocations: 17.680 MiB)
Dataset_slice = (600) -> [10, 122, 267, 386, 478, 583, 3, 166, 252, 331, 497, 503, 27, 190, 228, 353, 403, 521, 63, 130, 246, 366, 462, 566, 50, 195, 235, 350, 474, 501, 57, 186, 201, 397, 447, 511, 36, 116, 254, 326, 457, 542, 21, 123, 248, 340, 469, 593, 75, 157, 258, 336, 417, 509, 78, 183, 238, 394, 408, 596, 35, 154, 264, 376, 477, 599, 66, 191, 274, 307, 448, 548, 20, 167, 215, 392, 467, 549, 67, 188, 239, 310, 434, 568, 25, 141, 231, 330, 490, 594, 24, 117, 270, 400, 492, 592, 82, 194, 226, 387, 455, 560, 74, 197, 289, 378, 441, 565, 69, 105, 227, 341, 461, 539, 81, 187, 300, 388, 427, 585, 28, 159, 210, 342, 405, 531, 15, 179, 244, 323, 420, 554, 59, 163, 223, 332, 416, 558, 29, 124, 268, 351, 459, 564, 18, 153, 232, 329, 500, 582, 31, 162, 220, 319, 418, 535, 43, 177, 288, 346, 465, 576, 40, 155, 249, 325, 470, 575, 12, 149, 205, 327, 496, 578, 83, 192, 275, 305, 464, 597, 100, 145, 247, 398, 415, 508, 94, 178, 261, 322, 488, 519, 16, 110, 291, 347, 485, 551, 51, 119, 204, 337, 466, 590, 73, 148, 297, 362, 449, 522, 19, 103, 292, 358, 425, 533, 8, 142, 213, 382, 499, 530, 11, 134, 207, 345, 472, 598, 95, 136, 296, 357, 407, 515, 58, 169, 284, 339, 458, 595, 72, 101, 241, 321, 491, 581, 13, 127, 230, 349, 432, 550, 53, 172, 240, 301, 435, 555, 22, 200, 285, 335, 483, 532, 71, 176, 260, 379, 437, 517, 87, 139, 202, 399, 439, 514, 33, 160, 299, 389, 451, 544, 61, 168, 208, 343, 480, 540, 90, 180, 233, 309, 428, 586, 55, 175, 216, 348, 476, 518, 60, 137, 290, 383, 443, 573, 96, 198, 211, 308, 456, 552, 68, 144, 214, 317, 431, 563, 77, 189, 203, 315, 471, 507, 9, 135, 279, 361, 473, 536, 42, 147, 221, 352, 481, 553, 64, 115, 287, 391, 423, 528, 85, 196, 256, 390, 453, 516, 54, 182, 280, 359, 442, 588, 2, 140, 245, 320, 429, 541, 23, 170, 272, 313, 402, 559, 91, 104, 269, 324, 413, 538, 65, 181, 257, 344, 414, 505, 48, 132, 224, 367, 487, 523, 70, 173, 271, 303, 444, 589, 80, 118, 276, 338, 460, 570, 49, 171, 265, 333, 454, 577, 7, 120, 281, 360, 438, 572, 88, 193, 218, 372, 482, 584, 45, 121, 229, 381, 475, 510, 14, 174, 236, 364, 450, 534, 97, 128, 283, 304, 436, 562, 26, 111, 243, 311, 463, 561, 52, 112, 294, 302, 412, 506, 4, 158, 234, 384, 410, 569, 32, 150, 253, 371, 409, 512, 34, 146, 277, 374, 493, 579, 99, 125, 266, 380, 430, 504, 93, 102, 206, 363, 422, 587, 56, 152, 286, 375, 445, 513, 46, 113, 250, 306, 498, 524, 47, 185, 263, 373, 404, 525, 84, 108, 242, 385, 419, 600, 79, 129, 217, 318, 486, 546, 39, 156, 282, 365, 494, 591, 17, 114, 251, 312, 468, 574, 38, 143, 225, 369, 452, 556, 5, 151, 212, 368, 426, 502, 44, 138, 278, 355, 433, 526, 98, 126, 237, 395, 489, 529, 86, 109, 273, 334, 421, 537, 92, 199, 262, 354, 479, 527, 41, 184, 209, 328, 446, 547, 89, 107, 259, 370, 411, 567, 6, 131, 222, 377, 495, 545, 1, 106, 295, 314, 401, 557, 76, 161, 255, 396, 406, 520, 37, 164, 298, 393, 484, 543, 30, 133, 219, 356, 440, 580, 62, 165, 293, 316, 424, 571]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:55:18 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (237+243=480 samples) on frame 1 with decision: {1} A42 ⫺ 26830, purity -1.125343074921852
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+157=237 samples) on frame 1 with decision: {1} A85 ⫺ 10147, purity -0.4590525028820263
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+160=243 samples) on frame 1 with decision: {1} A16 ⫺ 12250, purity -0.5095035049250785
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A42 ⫺ 31622, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (75+82=157 samples) on frame 1 with decision: {1} A5 ⫺ 12386, purity -0.1157933291903461
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  8.121605 seconds (77.83 M allocations: 1.359 GiB, 12.03% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 26830
✔ {1} A16 ⫺ 12250
│✔ {1} A42 ⫺ 31622
││✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/83 (conf: 0.963855421686747)
✘ {1} A85 ⫺ 10147
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 79/82 (conf: 0.9634146341463414)
 │✘ Corn_senesced_green_weeds : 74/75 (conf: 0.9866666666666667)
 ✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
● [ 01/07/2021 15:55:27 ] Saving tree to file ./gandalf/trees/tree_5d98e7305067bbc83a8f4327c1274ddfbad15cee0cbe729815ae917f3a2751bb.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 26830
✔ {1} A16 ⫺ 12250
│✔ {1} A42 ⫺ 31622
││✔ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
││✘ Lettuce_romaine_6wk : 19/20 (conf: 0.95)
│✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
✘ {1} A85 ⫺ 10147
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 17/17 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 19/21 (conf: 0.9047619047619048)
 ✘ Lettuce_romaine_5wk : 20/22 (conf: 0.9090909090909091)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:averaged,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	95.83%	100.0%	95.0%	85.0%	100.0%	95.0%	100.0%	100.0%	90.48%	100.0%	90.91%	95.0%	100.0%	||	95.0%	[100.0, 92.68, 91.89, 95.24, 95.0, 100.0]%	
  accuracy: 95.83% kappa: 95.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 19  0  0  1  0	95.0%		Corn_senesced_green_weeds
  0  1 17  2  0  0	85.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  1  0  0 19  0	95.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9583333333333334
κ =		0.9500000000000001
sensitivities:	[1.0, 0.95, 0.85, 1.0, 0.95, 1.0]
specificities:	[1.0, 0.98, 1.0, 0.98, 0.99, 1.0]
PPVs:		[1.0, 0.9047619047619048, 1.0, 0.9090909090909091, 0.95, 1.0]
NPVs:		[1.0, 0.98989898989899, 0.970873786407767, 1.0, 0.99, 1.0]
F1s:		[1.0, 0.926829268292683, 0.918918918918919, 0.9523809523809523, 0.95, 1.0]
accuracies:	[1.0, 0.975, 0.975, 0.9833333333333333, 0.9833333333333333, 1.0]
mean_accuracy:	0.9861111111111112
Dataset_slice = (600) -> [19, 131, 215, 348, 496, 545, 50, 123, 292, 322, 459, 579, 6, 121, 285, 331, 464, 513, 53, 110, 205, 315, 435, 505, 51, 109, 209, 311, 473, 521, 80, 124, 226, 364, 462, 528, 76, 158, 287, 370, 471, 541, 54, 114, 245, 399, 458, 519, 24, 151, 225, 332, 409, 527, 38, 128, 231, 316, 429, 518, 86, 191, 265, 391, 487, 566, 56, 141, 221, 356, 402, 555, 28, 200, 232, 346, 467, 520, 100, 140, 259, 325, 420, 595, 21, 171, 206, 379, 454, 589, 46, 184, 222, 395, 468, 560, 74, 146, 214, 343, 418, 540, 79, 143, 237, 320, 448, 558, 98, 188, 201, 390, 442, 600, 83, 186, 235, 338, 484, 503, 10, 119, 286, 398, 422, 547, 52, 167, 293, 396, 449, 544, 42, 176, 202, 326, 476, 509, 62, 154, 269, 304, 461, 561, 45, 144, 278, 334, 417, 597, 33, 163, 250, 333, 474, 534, 90, 134, 256, 388, 431, 549, 77, 172, 271, 367, 450, 584, 75, 189, 233, 387, 405, 573, 47, 182, 247, 312, 432, 501, 37, 137, 299, 340, 440, 568, 59, 125, 273, 345, 411, 506, 78, 149, 229, 305, 480, 529, 82, 102, 243, 374, 407, 533, 34, 104, 253, 329, 427, 585, 67, 108, 224, 335, 408, 526, 44, 198, 261, 357, 452, 569, 89, 180, 279, 363, 414, 580, 68, 105, 267, 306, 413, 557, 85, 166, 274, 365, 447, 542, 26, 145, 220, 369, 404, 578, 39, 142, 227, 376, 428, 590, 99, 193, 264, 321, 483, 512, 20, 147, 272, 381, 481, 572, 9, 130, 204, 301, 424, 565, 7, 156, 257, 344, 438, 570, 12, 199, 230, 336, 466, 571, 41, 132, 289, 337, 415, 593, 16, 170, 262, 373, 444, 543, 58, 196, 210, 347, 433, 551, 31, 107, 260, 383, 477, 535, 92, 164, 254, 355, 463, 502, 97, 174, 298, 397, 478, 508, 88, 106, 219, 317, 446, 531, 27, 115, 248, 360, 470, 515, 32, 153, 291, 330, 489, 582, 63, 185, 251, 362, 500, 524, 22, 160, 207, 352, 401, 577, 55, 152, 283, 353, 485, 525, 96, 169, 280, 389, 403, 586, 70, 173, 255, 366, 493, 550, 43, 127, 300, 339, 451, 507, 72, 155, 236, 400, 492, 539, 84, 168, 203, 324, 455, 564, 69, 187, 239, 378, 419, 546, 4, 139, 268, 368, 498, 598, 15, 111, 241, 319, 479, 536, 93, 175, 294, 302, 439, 548, 17, 122, 297, 307, 421, 538, 48, 190, 295, 318, 456, 594, 57, 138, 208, 354, 488, 563, 49, 183, 281, 385, 469, 517, 66, 195, 258, 372, 472, 583, 61, 118, 266, 351, 425, 599, 94, 116, 277, 349, 475, 537, 8, 135, 213, 375, 457, 504, 29, 197, 263, 394, 441, 588, 91, 117, 290, 342, 494, 567, 64, 113, 284, 380, 445, 514, 30, 181, 282, 303, 486, 581, 40, 179, 296, 350, 430, 552, 5, 157, 223, 384, 453, 522, 18, 161, 270, 314, 499, 576, 87, 177, 275, 308, 443, 554, 73, 129, 242, 382, 490, 574, 60, 136, 212, 358, 416, 523, 71, 148, 238, 393, 434, 511, 81, 150, 228, 371, 437, 510, 23, 178, 276, 328, 497, 556, 95, 101, 252, 392, 410, 591, 3, 165, 246, 323, 460, 530, 36, 133, 217, 361, 423, 559, 35, 126, 218, 386, 491, 562, 2, 103, 216, 359, 436, 532, 13, 162, 240, 309, 412, 553, 14, 192, 288, 341, 406, 587, 25, 159, 249, 310, 465, 592, 11, 112, 211, 377, 495, 575, 65, 120, 234, 313, 482, 596, 1, 194, 244, 327, 426, 516]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:55:27 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (236+244=480 samples) on frame 1 with decision: {1} A42 ⫺ 26712, purity -1.1318370578787336
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+154=236 samples) on frame 1 with decision: {1} A85 ⫺ 10147, purity -0.49209420156266076
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+160=244 samples) on frame 1 with decision: {1} A42 ⫺ 31622, purity -0.520429720385408
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A13 ⫺ 11511, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+78=154 samples) on frame 1 with decision: {1} A5 ⫺ 12386, purity -0.12045378482103755
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  8.202876 seconds (76.98 M allocations: 1.345 GiB, 13.15% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 26712
✔ {1} A42 ⫺ 31622
│✔ {1} A13 ⫺ 11511
││✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
││✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_6wk : 80/84 (conf: 0.9523809523809523)
✘ {1} A85 ⫺ 10147
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 76/78 (conf: 0.9743589743589743)
 │✘ Corn_senesced_green_weeds : 74/76 (conf: 0.9736842105263158)
 ✘ Lettuce_romaine_5wk : 80/82 (conf: 0.975609756097561)
● [ 01/07/2021 15:55:35 ] Saving tree to file ./gandalf/trees/tree_525ff5ee3960602ad9eb6b16a601765827db83bb045ce94bd2adcd5f68d6eb6a.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 26712
✔ {1} A42 ⫺ 31622
│✔ {1} A13 ⫺ 11511
││✔ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
││✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_6wk : 20/21 (conf: 0.9523809523809523)
✘ {1} A85 ⫺ 10147
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 19/19 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:averaged,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	99.17%	100.0%	95.0%	100.0%	100.0%	100.0%	100.0%	100.0%	100.0%	100.0%	100.0%	95.24%	100.0%	||	99.0%	[100.0, 97.44, 100.0, 100.0, 97.56, 100.0]%	
  accuracy: 99.17% kappa: 99.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 19  0  0  1  0	95.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9916666666666667
κ =		0.99
sensitivities:	[1.0, 0.95, 1.0, 1.0, 1.0, 1.0]
specificities:	[1.0, 1.0, 1.0, 1.0, 0.99, 1.0]
PPVs:		[1.0, 1.0, 1.0, 1.0, 0.9523809523809523, 1.0]
NPVs:		[1.0, 0.9900990099009901, 1.0, 1.0, 1.0, 1.0]
F1s:		[1.0, 0.9743589743589743, 1.0, 1.0, 0.975609756097561, 1.0]
accuracies:	[1.0, 0.9916666666666667, 1.0, 1.0, 0.9916666666666667, 1.0]
mean_accuracy:	0.9972222222222222
Dataset_slice = (600) -> [69, 125, 224, 361, 493, 514, 56, 174, 287, 365, 435, 502, 62, 169, 286, 356, 466, 569, 91, 135, 227, 360, 414, 522, 63, 180, 272, 321, 443, 562, 66, 141, 201, 312, 426, 509, 98, 175, 260, 368, 409, 518, 32, 187, 210, 383, 490, 549, 41, 185, 278, 364, 500, 551, 100, 165, 256, 334, 417, 567, 48, 101, 289, 351, 477, 597, 95, 137, 246, 338, 464, 563, 38, 149, 277, 328, 480, 578, 57, 146, 293, 341, 412, 552, 14, 176, 298, 390, 442, 594, 22, 126, 218, 309, 441, 582, 1, 120, 266, 344, 405, 592, 93, 168, 254, 381, 419, 556, 37, 123, 225, 313, 453, 533, 54, 138, 204, 315, 437, 568, 49, 156, 203, 335, 402, 507, 58, 164, 257, 343, 440, 577, 15, 155, 234, 394, 489, 542, 60, 186, 285, 306, 423, 583, 71, 107, 291, 348, 459, 513, 85, 160, 283, 353, 496, 547, 77, 178, 247, 316, 469, 544, 25, 189, 237, 387, 495, 599, 45, 182, 292, 373, 482, 584, 39, 117, 250, 392, 456, 520, 83, 162, 274, 346, 421, 576, 44, 194, 231, 366, 448, 527, 35, 112, 219, 333, 497, 560, 28, 106, 236, 311, 468, 600, 51, 119, 261, 310, 431, 516, 96, 114, 273, 347, 465, 536, 78, 163, 251, 352, 404, 538, 2, 129, 213, 359, 403, 591, 26, 183, 288, 308, 454, 598, 19, 113, 282, 400, 401, 540, 5, 111, 252, 302, 473, 566, 10, 108, 211, 393, 427, 581, 55, 152, 235, 342, 470, 541, 65, 148, 276, 327, 428, 511, 99, 136, 233, 304, 472, 546, 6, 184, 230, 332, 413, 517, 23, 131, 244, 330, 452, 515, 7, 199, 240, 322, 422, 529, 74, 142, 214, 319, 467, 505, 86, 128, 264, 399, 494, 559, 75, 200, 212, 389, 449, 573, 42, 122, 300, 388, 418, 561, 9, 150, 259, 339, 491, 510, 11, 170, 296, 382, 484, 554, 80, 140, 208, 374, 457, 596, 73, 130, 239, 354, 458, 595, 16, 134, 294, 370, 475, 519, 31, 177, 202, 336, 432, 580, 89, 151, 275, 317, 438, 572, 13, 104, 243, 391, 479, 504, 72, 144, 262, 375, 436, 548, 84, 173, 258, 320, 451, 575, 64, 109, 221, 350, 474, 555, 97, 102, 228, 325, 408, 508, 61, 118, 248, 378, 487, 553, 59, 172, 279, 395, 434, 545, 40, 132, 241, 358, 406, 574, 43, 171, 217, 380, 425, 526, 20, 124, 215, 385, 486, 501, 30, 105, 269, 355, 445, 558, 53, 195, 280, 369, 463, 550, 12, 157, 297, 377, 439, 565, 50, 159, 238, 345, 499, 589, 34, 193, 284, 398, 424, 579, 81, 115, 253, 397, 416, 570, 67, 166, 222, 372, 450, 585, 24, 127, 281, 371, 481, 524, 4, 145, 263, 384, 492, 539, 68, 154, 265, 324, 410, 503, 90, 139, 255, 349, 462, 534, 3, 143, 249, 357, 455, 506, 52, 181, 220, 305, 420, 523, 94, 188, 229, 329, 483, 543, 29, 153, 270, 303, 446, 535, 36, 179, 226, 307, 433, 564, 82, 158, 209, 314, 478, 530, 27, 190, 245, 318, 485, 521, 70, 197, 206, 376, 476, 537, 92, 196, 271, 363, 415, 532, 76, 191, 295, 331, 447, 571, 21, 110, 268, 337, 498, 557, 17, 167, 242, 396, 407, 588, 46, 192, 290, 301, 429, 531, 18, 161, 216, 362, 430, 525, 87, 103, 267, 379, 471, 590, 8, 147, 232, 323, 411, 593, 47, 198, 223, 326, 444, 586, 33, 133, 207, 386, 488, 512, 88, 121, 299, 340, 460, 528, 79, 116, 205, 367, 461, 587]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:55:35 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (237+243=480 samples) on frame 1 with decision: {1} A42 ⫺ 26830, purity -1.125343074921852
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+155=237 samples) on frame 1 with decision: {1} A85 ⫺ 10147, purity -0.4929837143400836
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+160=243 samples) on frame 1 with decision: {1} A17 ⫺ 13798, purity -0.5095035049250785
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (75+80=155 samples) on frame 1 with decision: {1} A5 ⫺ 12386, purity -0.11680043898894922
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A42 ⫺ 31622, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  8.196915 seconds (77.68 M allocations: 1.356 GiB, 12.99% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 26830
✔ {1} A17 ⫺ 13798
│✔ {1} A42 ⫺ 31622
││✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/83 (conf: 0.963855421686747)
✘ {1} A85 ⫺ 10147
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 77/80 (conf: 0.9625)
 │✘ Corn_senesced_green_weeds : 74/75 (conf: 0.9866666666666667)
 ✘ Lettuce_romaine_5wk : 80/82 (conf: 0.975609756097561)
● [ 01/07/2021 15:55:43 ] Saving tree to file ./gandalf/trees/tree_bc3bad07092d4c06d14e46c34321327720685e299852e07d55de119171a078d3.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 26830
✔ {1} A17 ⫺ 13798
│✔ {1} A42 ⫺ 31622
││✔ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
││✘ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 20/21 (conf: 0.9523809523809523)
✘ {1} A85 ⫺ 10147
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 19/19 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 19/21 (conf: 0.9047619047619048)
 ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:averaged,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	97.5%	100.0%	95.0%	95.0%	100.0%	95.0%	100.0%	95.24%	90.48%	100.0%	100.0%	100.0%	100.0%	||	97.0%	[97.56, 92.68, 97.44, 100.0, 97.44, 100.0]%	
  accuracy: 97.5% kappa: 97.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  1 19  0  0  0  0	95.0%		Corn_senesced_green_weeds
  0  1 19  0  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  1  0  0 19  0	95.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.975
κ =		0.97
sensitivities:	[1.0, 0.95, 0.95, 1.0, 0.95, 1.0]
specificities:	[0.99, 0.98, 1.0, 1.0, 1.0, 1.0]
PPVs:		[0.9523809523809523, 0.9047619047619048, 1.0, 1.0, 1.0, 1.0]
NPVs:		[1.0, 0.98989898989899, 0.9900990099009901, 1.0, 0.9900990099009901, 1.0]
F1s:		[0.975609756097561, 0.926829268292683, 0.9743589743589743, 1.0, 0.9743589743589743, 1.0]
accuracies:	[0.9916666666666667, 0.975, 0.9916666666666667, 1.0, 0.9916666666666667, 1.0]
mean_accuracy:	0.9916666666666667
Dataset_slice = (600) -> [60, 161, 270, 359, 480, 580, 46, 140, 238, 345, 460, 561, 23, 131, 243, 309, 470, 560, 40, 121, 266, 306, 436, 558, 68, 185, 240, 312, 488, 534, 29, 183, 233, 332, 495, 531, 53, 164, 208, 386, 441, 511, 24, 154, 269, 393, 440, 551, 83, 153, 226, 339, 425, 590, 1, 112, 263, 302, 429, 515, 47, 146, 273, 387, 432, 545, 65, 110, 300, 341, 426, 529, 98, 115, 209, 348, 419, 530, 51, 176, 286, 395, 442, 516, 6, 148, 212, 336, 452, 556, 12, 103, 204, 303, 453, 600, 45, 122, 237, 366, 420, 541, 93, 167, 293, 368, 415, 521, 80, 106, 241, 323, 496, 563, 97, 193, 276, 365, 414, 592, 5, 132, 232, 390, 444, 528, 73, 124, 231, 358, 433, 504, 85, 174, 265, 329, 462, 524, 44, 134, 255, 322, 489, 578, 18, 160, 258, 372, 493, 501, 32, 188, 290, 394, 409, 554, 62, 200, 206, 320, 473, 587, 74, 111, 234, 360, 463, 514, 49, 128, 289, 355, 406, 533, 76, 191, 257, 381, 478, 566, 88, 125, 274, 349, 424, 546, 34, 101, 262, 318, 408, 573, 2, 162, 246, 324, 486, 570, 95, 105, 292, 337, 421, 595, 36, 197, 207, 343, 492, 520, 27, 147, 203, 362, 437, 577, 35, 149, 202, 375, 411, 539, 31, 170, 242, 374, 430, 571, 7, 126, 247, 344, 500, 552, 11, 184, 298, 338, 428, 532, 52, 109, 282, 370, 456, 562, 75, 142, 213, 328, 446, 576, 69, 152, 287, 330, 455, 564, 41, 172, 248, 354, 407, 582, 22, 194, 249, 397, 466, 572, 10, 136, 253, 399, 435, 542, 16, 157, 228, 357, 448, 585, 72, 178, 291, 313, 494, 526, 61, 173, 210, 319, 404, 586, 96, 143, 220, 351, 464, 598, 56, 158, 299, 378, 401, 557, 48, 175, 211, 367, 431, 509, 89, 104, 236, 389, 417, 527, 71, 139, 260, 376, 491, 536, 15, 168, 280, 327, 443, 599, 30, 119, 288, 310, 449, 594, 90, 138, 294, 305, 459, 549, 50, 118, 205, 400, 477, 518, 66, 130, 252, 380, 483, 589, 14, 144, 261, 369, 454, 503, 100, 145, 215, 371, 447, 579, 17, 156, 296, 356, 457, 508, 84, 186, 227, 315, 475, 565, 86, 179, 283, 304, 439, 548, 92, 113, 281, 335, 461, 537, 78, 163, 279, 342, 418, 596, 43, 133, 217, 311, 469, 519, 59, 169, 251, 316, 498, 547, 54, 177, 245, 361, 403, 591, 25, 117, 254, 384, 422, 543, 64, 108, 264, 346, 434, 505, 55, 165, 297, 352, 484, 593, 99, 159, 278, 307, 416, 538, 58, 150, 256, 388, 467, 502, 42, 196, 250, 326, 427, 569, 67, 141, 216, 331, 487, 525, 3, 137, 219, 373, 445, 544, 13, 195, 222, 377, 402, 583, 8, 102, 259, 340, 476, 535, 79, 151, 272, 398, 405, 512, 91, 180, 224, 325, 471, 522, 33, 189, 284, 333, 468, 510, 38, 182, 268, 379, 472, 517, 77, 166, 275, 391, 479, 523, 9, 181, 271, 353, 499, 588, 39, 155, 221, 317, 412, 553, 4, 198, 277, 392, 458, 513, 87, 199, 295, 383, 481, 550, 21, 114, 201, 334, 465, 507, 19, 120, 230, 363, 497, 567, 94, 190, 229, 314, 485, 575, 57, 116, 214, 308, 423, 597, 82, 192, 223, 350, 450, 581, 28, 171, 285, 347, 451, 559, 26, 127, 225, 385, 474, 574, 20, 107, 244, 301, 438, 506, 81, 135, 239, 396, 482, 540, 70, 123, 235, 321, 410, 568, 63, 129, 267, 382, 413, 555, 37, 187, 218, 364, 490, 584]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:55:43 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (237+243=480 samples) on frame 1 with decision: {1} A42 ⫺ 26712, purity -1.125343074921852
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+155=237 samples) on frame 1 with decision: {1} A85 ⫺ 10147, purity -0.4929837143400836
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+160=243 samples) on frame 1 with decision: {1} A17 ⫺ 13798, purity -0.5095035049250785
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A42 ⫺ 31622, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (77+78=155 samples) on frame 1 with decision: {1} A5 ⫺ 12386, purity -0.11984757977611386
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  8.182088 seconds (77.96 M allocations: 1.361 GiB, 12.92% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 26712
✔ {1} A17 ⫺ 13798
│✔ {1} A42 ⫺ 31622
││✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/83 (conf: 0.963855421686747)
✘ {1} A85 ⫺ 10147
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 76/78 (conf: 0.9743589743589743)
 │✘ Corn_senesced_green_weeds : 75/77 (conf: 0.974025974025974)
 ✘ Lettuce_romaine_5wk : 80/82 (conf: 0.975609756097561)
● [ 01/07/2021 15:55:51 ] Saving tree to file ./gandalf/trees/tree_c6462e1d970717ae23ffe8fd990f4a04a6b0ed20befd2affb94607c107c22328.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 26712
✔ {1} A17 ⫺ 13798
│✔ {1} A42 ⫺ 31622
││✔ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
││✘ Lettuce_romaine_6wk : 20/21 (conf: 0.9523809523809523)
│✘ Brocoli_green_weeds_1 : 20/21 (conf: 0.9523809523809523)
✘ {1} A85 ⫺ 10147
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 18/18 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:averaged,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	98.33%	100.0%	90.0%	100.0%	100.0%	100.0%	100.0%	95.24%	100.0%	100.0%	100.0%	95.24%	100.0%	||	98.0%	[97.56, 94.74, 100.0, 100.0, 97.56, 100.0]%	
  accuracy: 98.33% kappa: 98.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  1 18  0  0  1  0	90.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9833333333333333
κ =		0.98
sensitivities:	[1.0, 0.9, 1.0, 1.0, 1.0, 1.0]
specificities:	[0.99, 1.0, 1.0, 1.0, 0.99, 1.0]
PPVs:		[0.9523809523809523, 1.0, 1.0, 1.0, 0.9523809523809523, 1.0]
NPVs:		[1.0, 0.9803921568627451, 1.0, 1.0, 1.0, 1.0]
F1s:		[0.975609756097561, 0.9473684210526315, 1.0, 1.0, 0.975609756097561, 1.0]
accuracies:	[0.9916666666666667, 0.9833333333333333, 1.0, 1.0, 0.9916666666666667, 1.0]
mean_accuracy:	0.9944444444444445
Dataset_slice = (600) -> [10, 116, 221, 307, 469, 514, 12, 188, 231, 354, 401, 560, 84, 193, 239, 362, 483, 542, 52, 131, 230, 337, 491, 527, 45, 175, 218, 385, 492, 523, 87, 192, 265, 383, 486, 503, 14, 190, 264, 381, 480, 580, 20, 142, 242, 352, 422, 531, 39, 159, 210, 355, 453, 561, 9, 138, 279, 380, 488, 544, 38, 119, 250, 391, 454, 541, 43, 155, 289, 365, 495, 512, 23, 187, 292, 316, 457, 600, 92, 132, 205, 389, 403, 504, 93, 113, 286, 356, 440, 519, 51, 145, 296, 366, 418, 557, 89, 158, 240, 368, 433, 584, 67, 146, 259, 336, 449, 515, 100, 176, 244, 372, 464, 534, 71, 164, 283, 390, 460, 546, 36, 128, 243, 325, 404, 567, 19, 153, 236, 306, 412, 596, 94, 126, 237, 400, 496, 537, 68, 137, 260, 308, 466, 533, 22, 120, 222, 360, 493, 517, 21, 169, 214, 332, 445, 506, 1, 136, 290, 397, 413, 554, 5, 189, 238, 315, 414, 592, 53, 148, 235, 318, 456, 505, 46, 104, 300, 311, 497, 569, 91, 179, 297, 303, 416, 572, 3, 194, 248, 304, 408, 599, 34, 108, 285, 335, 407, 502, 41, 197, 247, 320, 437, 529, 62, 167, 281, 384, 431, 579, 75, 199, 272, 331, 411, 552, 73, 129, 257, 317, 439, 564, 97, 105, 209, 377, 420, 516, 55, 161, 217, 324, 475, 508, 80, 180, 298, 305, 430, 538, 59, 173, 212, 328, 424, 536, 63, 124, 206, 338, 438, 556, 4, 112, 204, 394, 417, 553, 54, 191, 220, 369, 435, 524, 74, 182, 274, 359, 443, 543, 95, 195, 234, 375, 470, 551, 78, 117, 277, 312, 487, 521, 96, 107, 226, 321, 451, 522, 99, 184, 255, 392, 410, 597, 16, 178, 232, 347, 423, 571, 72, 106, 249, 346, 479, 568, 90, 162, 295, 326, 406, 588, 60, 121, 288, 313, 471, 558, 44, 122, 219, 393, 434, 555, 18, 115, 275, 327, 402, 562, 25, 109, 299, 358, 473, 587, 32, 125, 252, 334, 429, 548, 77, 147, 211, 343, 459, 595, 28, 200, 251, 363, 444, 539, 24, 133, 284, 322, 481, 525, 76, 130, 213, 357, 432, 578, 17, 101, 293, 344, 499, 582, 65, 114, 227, 314, 442, 511, 31, 183, 203, 349, 482, 513, 30, 149, 291, 373, 450, 535, 50, 141, 225, 310, 500, 590, 85, 139, 233, 341, 468, 507, 26, 165, 258, 333, 447, 509, 33, 144, 270, 378, 462, 598, 37, 123, 269, 398, 441, 545, 64, 110, 215, 345, 474, 570, 56, 177, 266, 329, 425, 589, 27, 170, 246, 350, 472, 520, 49, 118, 268, 376, 465, 576, 57, 196, 262, 351, 476, 577, 69, 174, 245, 388, 428, 518, 70, 154, 224, 399, 455, 540, 8, 198, 253, 370, 494, 573, 83, 181, 208, 340, 478, 594, 15, 186, 254, 309, 458, 547, 98, 102, 267, 323, 490, 565, 11, 171, 223, 386, 498, 575, 7, 150, 261, 339, 477, 549, 29, 151, 278, 364, 463, 510, 2, 156, 273, 342, 426, 559, 48, 143, 263, 301, 467, 563, 61, 185, 256, 367, 461, 574, 82, 152, 202, 330, 436, 530, 6, 160, 280, 348, 485, 585, 81, 168, 207, 396, 421, 526, 79, 166, 276, 353, 419, 591, 88, 140, 294, 361, 415, 583, 35, 111, 229, 382, 489, 581, 13, 103, 201, 302, 427, 532, 66, 127, 287, 395, 452, 501, 47, 135, 271, 387, 446, 566, 42, 157, 241, 374, 448, 528, 40, 163, 282, 319, 484, 593, 86, 172, 228, 371, 405, 586, 58, 134, 216, 379, 409, 550]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:55:51 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (236+244=480 samples) on frame 1 with decision: {1} A42 ⫺ 26830, purity -1.1318370578787336
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+154=236 samples) on frame 1 with decision: {1} A85 ⫺ 10147, purity -0.49209420156266076
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+160=244 samples) on frame 1 with decision: {1} A17 ⫺ 13811, purity -0.520429720385408
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (75+79=154 samples) on frame 1 with decision: {1} A5 ⫺ 12386, purity -0.09505103973477748
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A42 ⫺ 31622, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  8.333826 seconds (77.66 M allocations: 1.356 GiB, 14.27% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 26830
✔ {1} A17 ⫺ 13811
│✔ {1} A42 ⫺ 31622
││✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/84 (conf: 0.9523809523809523)
✘ {1} A85 ⫺ 10147
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 77/79 (conf: 0.9746835443037974)
 │✘ Corn_senesced_green_weeds : 74/75 (conf: 0.9866666666666667)
 ✘ Lettuce_romaine_5wk : 80/82 (conf: 0.975609756097561)
● [ 01/07/2021 15:56:00 ] Saving tree to file ./gandalf/trees/tree_0347fe83d345ff7bbdb5577e543aa72638a5199edfe1b75b4dbc3b47297f5972.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 26830
✔ {1} A17 ⫺ 13811
│✔ {1} A42 ⫺ 31622
││✔ Lettuce_romaine_7wk : 19/19 (conf: 1.0)
││✘ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 20/21 (conf: 0.9523809523809523)
✘ {1} A85 ⫺ 10147
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 19/20 (conf: 0.95)
 │✘ Corn_senesced_green_weeds : 19/21 (conf: 0.9047619047619048)
 ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:averaged,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	96.67%	100.0%	95.0%	95.0%	100.0%	95.0%	95.0%	95.24%	90.48%	95.0%	100.0%	100.0%	100.0%	||	96.0%	[97.56, 92.68, 95.0, 100.0, 97.44, 97.44]%	
  accuracy: 96.67% kappa: 96.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 19  1  0  0  0	95.0%		Corn_senesced_green_weeds
  0  1 19  0  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  1  0  0 19  0	95.0%		Lettuce_romaine_6wk
  1  0  0  0  0 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.9666666666666667
κ =		0.96
sensitivities:	[1.0, 0.95, 0.95, 1.0, 0.95, 0.95]
specificities:	[0.99, 0.98, 0.99, 1.0, 1.0, 1.0]
PPVs:		[0.9523809523809523, 0.9047619047619048, 0.95, 1.0, 1.0, 1.0]
NPVs:		[1.0, 0.98989898989899, 0.99, 1.0, 0.9900990099009901, 0.9900990099009901]
F1s:		[0.975609756097561, 0.926829268292683, 0.95, 1.0, 0.9743589743589743, 0.9743589743589743]
accuracies:	[0.9916666666666667, 0.975, 0.9833333333333333, 1.0, 0.9916666666666667, 0.9916666666666667]
mean_accuracy:	0.9888888888888889
Dataset_slice = (600) -> [68, 113, 288, 329, 406, 554, 53, 120, 291, 341, 461, 505, 72, 123, 234, 372, 472, 560, 28, 128, 298, 379, 479, 553, 84, 172, 287, 311, 466, 538, 96, 182, 229, 309, 491, 516, 91, 200, 222, 382, 418, 508, 42, 156, 226, 342, 429, 562, 33, 167, 204, 385, 498, 502, 4, 158, 259, 316, 486, 511, 63, 102, 220, 354, 496, 551, 21, 101, 266, 327, 485, 570, 79, 179, 270, 393, 404, 537, 15, 151, 214, 332, 454, 532, 22, 115, 217, 375, 468, 578, 51, 118, 235, 378, 469, 525, 32, 153, 232, 352, 470, 506, 70, 160, 244, 373, 464, 595, 66, 138, 250, 380, 437, 514, 99, 176, 277, 338, 417, 547, 40, 168, 258, 305, 482, 577, 64, 196, 240, 363, 477, 521, 19, 150, 282, 347, 401, 529, 73, 140, 201, 337, 489, 550, 18, 186, 215, 304, 492, 581, 80, 106, 289, 353, 425, 585, 60, 170, 223, 330, 416, 515, 3, 144, 290, 392, 435, 530, 87, 124, 286, 384, 483, 534, 43, 131, 284, 346, 420, 552, 9, 143, 253, 361, 421, 531, 20, 162, 261, 308, 438, 513, 1, 110, 254, 343, 484, 543, 62, 174, 252, 349, 443, 567, 45, 135, 205, 339, 436, 510, 30, 134, 238, 367, 473, 539, 76, 148, 275, 325, 474, 544, 37, 173, 280, 359, 407, 557, 38, 137, 297, 377, 427, 535, 23, 166, 233, 399, 453, 523, 57, 132, 260, 365, 442, 526, 75, 108, 264, 333, 451, 563, 35, 145, 202, 312, 411, 573, 55, 159, 269, 340, 460, 566, 50, 164, 225, 344, 500, 579, 95, 103, 300, 395, 452, 527, 61, 155, 212, 386, 471, 600, 82, 105, 228, 387, 446, 518, 12, 161, 216, 383, 493, 575, 74, 112, 206, 381, 444, 509, 94, 180, 230, 390, 423, 504, 49, 109, 293, 336, 409, 555, 6, 184, 221, 324, 456, 549, 24, 187, 241, 345, 495, 546, 90, 114, 265, 364, 449, 558, 93, 121, 251, 351, 412, 556, 14, 177, 272, 358, 467, 587, 47, 169, 239, 400, 431, 533, 89, 194, 263, 391, 445, 528, 81, 147, 211, 369, 403, 522, 39, 127, 242, 397, 405, 571, 11, 195, 208, 334, 459, 569, 58, 192, 207, 319, 490, 599, 92, 199, 209, 388, 487, 572, 52, 104, 203, 396, 439, 576, 59, 188, 227, 348, 441, 540, 48, 193, 237, 315, 402, 542, 7, 122, 283, 317, 457, 598, 54, 141, 246, 303, 488, 561, 17, 126, 285, 389, 478, 512, 56, 171, 248, 398, 434, 517, 97, 133, 271, 318, 481, 541, 29, 189, 245, 322, 440, 589, 34, 163, 296, 356, 450, 596, 77, 185, 292, 328, 414, 584, 46, 107, 236, 326, 419, 565, 71, 116, 257, 394, 465, 507, 31, 183, 247, 366, 494, 594, 26, 198, 279, 357, 410, 564, 25, 190, 224, 355, 455, 524, 65, 178, 231, 313, 499, 536, 83, 146, 219, 350, 480, 591, 2, 152, 267, 320, 415, 574, 8, 154, 295, 376, 408, 586, 27, 157, 276, 321, 463, 592, 85, 181, 268, 362, 458, 588, 86, 125, 278, 331, 424, 580, 36, 111, 243, 307, 432, 582, 78, 117, 299, 306, 413, 548, 44, 197, 210, 335, 497, 519, 10, 175, 273, 314, 476, 501, 98, 191, 256, 302, 428, 597, 69, 139, 274, 374, 422, 520, 67, 165, 281, 360, 426, 559, 16, 149, 249, 310, 462, 590, 13, 129, 255, 368, 447, 583, 5, 136, 213, 370, 448, 593, 41, 142, 218, 301, 433, 545, 88, 130, 262, 323, 475, 568, 100, 119, 294, 371, 430, 503]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:56:00 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (239+241=480 samples) on frame 1 with decision: {1} A42 ⫺ 26712, purity -1.1098204493092325
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+157=239 samples) on frame 1 with decision: {1} A85 ⫺ 10147, purity -0.49465889436669397
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+160=241 samples) on frame 1 with decision: {1} A42 ⫺ 31622, purity -0.48253858773505526
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A13 ⫺ 11511, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+79=157 samples) on frame 1 with decision: {1} A5 ⫺ 12386, purity -0.09348623885411209
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  8.253979 seconds (77.14 M allocations: 1.348 GiB, 13.41% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 26712
✔ {1} A42 ⫺ 31622
│✔ {1} A13 ⫺ 11511
││✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
││✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_6wk : 80/81 (conf: 0.9876543209876543)
✘ {1} A85 ⫺ 10147
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 77/79 (conf: 0.9746835443037974)
 │✘ Corn_senesced_green_weeds : 77/78 (conf: 0.9871794871794872)
 ✘ Lettuce_romaine_5wk : 80/82 (conf: 0.975609756097561)
● [ 01/07/2021 15:56:08 ] Saving tree to file ./gandalf/trees/tree_28d88c3af40fa8b6f8f4eaed70655d163616f519895d8cbb5dc20d66c36311bc.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 26712
✔ {1} A42 ⫺ 31622
│✔ {1} A13 ⫺ 11511
││✔ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
││✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_6wk : 20/24 (conf: 0.8333333333333334)
✘ {1} A85 ⫺ 10147
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 19/19 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 16/17 (conf: 0.9411764705882353)
 ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:averaged,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	95.83%	100.0%	80.0%	95.0%	100.0%	100.0%	100.0%	100.0%	94.12%	100.0%	100.0%	83.33%	100.0%	||	95.0%	[100.0, 86.49, 97.44, 100.0, 90.91, 100.0]%	
  accuracy: 95.83% kappa: 95.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 16  0  0  4  0	80.0%		Corn_senesced_green_weeds
  0  1 19  0  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9583333333333334
κ =		0.9500000000000001
sensitivities:	[1.0, 0.8, 0.95, 1.0, 1.0, 1.0]
specificities:	[1.0, 0.99, 1.0, 1.0, 0.96, 1.0]
PPVs:		[1.0, 0.9411764705882353, 1.0, 1.0, 0.8333333333333334, 1.0]
NPVs:		[1.0, 0.9611650485436893, 0.9900990099009901, 1.0, 1.0, 1.0]
F1s:		[1.0, 0.8648648648648649, 0.9743589743589743, 1.0, 0.9090909090909091, 1.0]
accuracies:	[1.0, 0.9583333333333334, 0.9916666666666667, 1.0, 0.9666666666666667, 1.0]
mean_accuracy:	0.9861111111111112
Dataset_slice = (600) -> [20, 148, 247, 348, 409, 562, 36, 113, 203, 353, 426, 567, 75, 145, 228, 390, 401, 547, 9, 112, 249, 319, 421, 510, 92, 159, 288, 325, 482, 513, 88, 121, 212, 365, 407, 588, 28, 186, 224, 360, 406, 551, 79, 198, 274, 367, 408, 523, 8, 118, 297, 387, 439, 502, 73, 122, 204, 330, 479, 565, 83, 194, 243, 374, 472, 552, 40, 185, 275, 366, 446, 594, 61, 195, 273, 356, 473, 528, 70, 136, 202, 343, 455, 558, 51, 155, 282, 397, 450, 533, 48, 161, 245, 331, 499, 518, 50, 130, 281, 361, 425, 537, 13, 103, 293, 378, 444, 583, 27, 187, 240, 372, 415, 579, 35, 125, 217, 391, 440, 535, 69, 120, 236, 354, 466, 524, 45, 157, 253, 309, 458, 517, 97, 200, 277, 334, 485, 573, 68, 197, 294, 394, 476, 543, 3, 156, 264, 335, 423, 548, 85, 102, 260, 381, 437, 597, 94, 191, 234, 313, 416, 509, 7, 140, 238, 399, 434, 566, 19, 119, 226, 369, 462, 598, 87, 167, 287, 318, 478, 563, 1, 184, 262, 326, 483, 544, 16, 163, 235, 306, 412, 532, 25, 123, 284, 373, 414, 526, 31, 196, 270, 398, 449, 557, 64, 129, 211, 338, 500, 534, 81, 146, 206, 388, 447, 515, 57, 138, 246, 358, 420, 555, 23, 115, 209, 322, 452, 504, 90, 199, 232, 344, 492, 572, 42, 164, 244, 310, 465, 568, 26, 181, 248, 347, 428, 527, 30, 128, 261, 345, 431, 595, 91, 153, 227, 332, 471, 520, 17, 134, 207, 385, 494, 577, 59, 141, 229, 376, 457, 511, 96, 150, 252, 302, 441, 507, 2, 126, 300, 350, 445, 584, 52, 131, 299, 357, 448, 550, 24, 189, 223, 396, 489, 560, 15, 193, 237, 351, 470, 576, 86, 142, 205, 375, 477, 549, 46, 106, 266, 327, 461, 581, 67, 124, 286, 362, 495, 553, 71, 174, 233, 389, 433, 592, 66, 110, 213, 307, 419, 600, 18, 114, 201, 364, 480, 546, 58, 151, 290, 363, 411, 508, 39, 108, 276, 340, 463, 599, 34, 116, 256, 324, 464, 587, 80, 162, 258, 314, 459, 593, 82, 158, 231, 305, 493, 596, 6, 171, 285, 352, 498, 539, 53, 182, 272, 336, 403, 569, 60, 105, 268, 386, 438, 582, 93, 179, 271, 301, 443, 556, 44, 170, 251, 329, 413, 540, 32, 180, 289, 380, 424, 554, 49, 111, 225, 337, 456, 503, 43, 192, 219, 393, 475, 505, 100, 152, 220, 346, 496, 516, 41, 190, 230, 321, 469, 578, 5, 178, 255, 368, 427, 525, 54, 132, 280, 349, 410, 531, 65, 154, 210, 384, 429, 521, 72, 144, 296, 392, 490, 506, 76, 147, 241, 341, 432, 536, 98, 101, 216, 342, 484, 585, 11, 149, 257, 333, 497, 541, 78, 177, 218, 303, 481, 501, 21, 117, 215, 315, 436, 571, 62, 173, 214, 355, 488, 529, 14, 139, 222, 339, 435, 586, 22, 143, 208, 317, 442, 522, 12, 176, 298, 328, 418, 512, 37, 168, 269, 370, 453, 589, 95, 135, 259, 323, 417, 574, 74, 107, 254, 311, 404, 514, 33, 183, 278, 304, 491, 591, 99, 172, 239, 395, 402, 545, 63, 127, 250, 316, 451, 519, 29, 160, 292, 371, 474, 530, 56, 109, 242, 312, 460, 542, 10, 169, 279, 359, 405, 570, 47, 137, 267, 377, 467, 559, 4, 104, 291, 400, 422, 580, 38, 188, 283, 320, 430, 538, 84, 165, 221, 308, 454, 590, 89, 175, 263, 382, 486, 564, 55, 133, 265, 383, 487, 575, 77, 166, 295, 379, 468, 561]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:56:08 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (236+244=480 samples) on frame 1 with decision: {1} A41 ⫺ 25669, purity -1.1318370578787336
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+155=236 samples) on frame 1 with decision: {1} A85 ⫺ 10147, purity -0.4779535155524764
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+160=244 samples) on frame 1 with decision: {1} A42 ⫺ 31622, purity -0.520429720385408
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A13 ⫺ 11511, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+77=155 samples) on frame 1 with decision: {1} A5 ⫺ 12386, purity -0.06000813070262675
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  8.268690 seconds (77.08 M allocations: 1.347 GiB, 14.04% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A41 ⫺ 25669
✔ {1} A42 ⫺ 31622
│✔ {1} A13 ⫺ 11511
││✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
││✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_6wk : 80/84 (conf: 0.9523809523809523)
✘ {1} A85 ⫺ 10147
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 77/77 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 76/78 (conf: 0.9743589743589743)
 ✘ Lettuce_romaine_5wk : 80/81 (conf: 0.9876543209876543)
● [ 01/07/2021 15:56:16 ] Saving tree to file ./gandalf/trees/tree_77fe4a1290a2938bfcf00de5305ded33ae9d90a18ee37af651e706703843cfbf.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A41 ⫺ 25669
✔ {1} A42 ⫺ 31622
│✔ {1} A13 ⫺ 11511
││✔ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
││✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_6wk : 20/22 (conf: 0.9090909090909091)
✘ {1} A85 ⫺ 10147
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 19/20 (conf: 0.95)
 │✘ Corn_senesced_green_weeds : 17/17 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 20/21 (conf: 0.9523809523809523)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:averaged,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	96.67%	100.0%	85.0%	95.0%	100.0%	100.0%	100.0%	100.0%	100.0%	95.0%	95.24%	90.91%	100.0%	||	96.0%	[100.0, 91.89, 95.0, 97.56, 95.24, 100.0]%	
  accuracy: 96.67% kappa: 96.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 17  1  0  2  0	85.0%		Corn_senesced_green_weeds
  0  0 19  1  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9666666666666667
κ =		0.96
sensitivities:	[1.0, 0.85, 0.95, 1.0, 1.0, 1.0]
specificities:	[1.0, 1.0, 0.99, 0.99, 0.98, 1.0]
PPVs:		[1.0, 1.0, 0.95, 0.9523809523809523, 0.9090909090909091, 1.0]
NPVs:		[1.0, 0.970873786407767, 0.99, 1.0, 1.0, 1.0]
F1s:		[1.0, 0.918918918918919, 0.95, 0.975609756097561, 0.9523809523809523, 1.0]
accuracies:	[1.0, 0.975, 0.9833333333333333, 0.9916666666666667, 0.9833333333333333, 1.0]
mean_accuracy:	0.9888888888888889
Dataset_slice = (600) -> [14, 145, 209, 319, 413, 525, 59, 126, 201, 393, 450, 561, 55, 102, 207, 312, 445, 527, 87, 121, 255, 362, 475, 501, 44, 116, 271, 308, 421, 555, 11, 131, 219, 380, 474, 532, 60, 110, 268, 310, 440, 528, 6, 101, 211, 304, 437, 518, 83, 167, 283, 357, 414, 597, 46, 162, 229, 318, 456, 585, 20, 123, 288, 395, 424, 584, 74, 140, 291, 373, 481, 551, 32, 165, 281, 315, 434, 589, 22, 135, 220, 398, 486, 544, 40, 152, 286, 316, 451, 593, 24, 103, 221, 350, 429, 515, 18, 137, 230, 355, 438, 543, 89, 125, 262, 390, 443, 595, 62, 124, 264, 383, 406, 529, 12, 172, 276, 377, 411, 517, 31, 163, 204, 369, 471, 503, 58, 168, 208, 302, 407, 547, 30, 129, 224, 325, 415, 505, 79, 104, 235, 326, 495, 519, 99, 197, 213, 343, 464, 581, 48, 173, 284, 388, 410, 568, 67, 149, 275, 391, 455, 548, 10, 198, 289, 360, 485, 554, 5, 182, 244, 397, 487, 599, 93, 164, 257, 384, 457, 530, 64, 187, 246, 354, 458, 583, 70, 134, 242, 371, 422, 577, 41, 133, 256, 351, 473, 512, 82, 158, 299, 322, 404, 507, 84, 120, 290, 314, 423, 522, 51, 199, 261, 359, 412, 523, 81, 175, 206, 340, 472, 539, 94, 181, 300, 303, 426, 514, 23, 179, 266, 321, 459, 572, 100, 176, 270, 376, 432, 560, 90, 109, 278, 346, 418, 510, 68, 186, 274, 379, 467, 556, 43, 117, 265, 382, 480, 570, 1, 178, 280, 344, 425, 504, 95, 132, 277, 332, 491, 524, 19, 113, 282, 378, 476, 579, 98, 112, 292, 348, 462, 563, 50, 106, 285, 352, 444, 550, 33, 170, 295, 386, 493, 537, 27, 136, 241, 337, 408, 564, 63, 148, 279, 324, 427, 511, 54, 119, 216, 372, 401, 575, 86, 193, 254, 306, 428, 567, 17, 188, 293, 399, 496, 508, 91, 142, 273, 328, 494, 574, 97, 189, 297, 320, 430, 531, 57, 155, 263, 301, 492, 557, 61, 196, 294, 347, 405, 594, 75, 141, 205, 349, 436, 590, 71, 183, 203, 341, 409, 562, 92, 180, 258, 394, 441, 520, 65, 177, 249, 309, 449, 598, 37, 166, 272, 356, 498, 582, 29, 195, 234, 331, 469, 513, 21, 127, 218, 313, 435, 541, 69, 184, 267, 368, 500, 534, 3, 185, 298, 334, 488, 588, 77, 139, 225, 327, 403, 516, 56, 107, 260, 396, 490, 558, 72, 200, 217, 342, 416, 580, 8, 111, 227, 366, 465, 571, 2, 190, 237, 374, 419, 596, 73, 130, 233, 363, 482, 538, 36, 159, 238, 307, 448, 578, 45, 146, 250, 375, 463, 587, 52, 153, 212, 335, 460, 566, 53, 156, 287, 311, 478, 552, 34, 143, 222, 389, 453, 526, 28, 169, 259, 323, 452, 569, 39, 128, 243, 365, 454, 533, 76, 115, 231, 364, 461, 546, 85, 105, 228, 400, 499, 559, 66, 171, 240, 305, 402, 573, 88, 108, 248, 387, 497, 521, 15, 174, 247, 370, 417, 549, 38, 154, 253, 339, 446, 586, 9, 114, 202, 367, 489, 535, 80, 192, 251, 353, 442, 540, 25, 160, 223, 392, 447, 565, 26, 191, 215, 329, 483, 591, 7, 151, 252, 381, 484, 576, 96, 194, 210, 338, 477, 536, 16, 144, 296, 317, 466, 545, 13, 147, 269, 333, 431, 553, 47, 150, 236, 336, 470, 600, 49, 157, 214, 385, 468, 509, 35, 118, 239, 358, 479, 542, 78, 122, 232, 345, 420, 502, 42, 161, 245, 361, 433, 506, 4, 138, 226, 330, 439, 592]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:56:16 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (237+243=480 samples) on frame 1 with decision: {1} A42 ⫺ 26830, purity -1.125343074921852
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+155=237 samples) on frame 1 with decision: {1} A85 ⫺ 10147, purity -0.4929837143400836
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+160=243 samples) on frame 1 with decision: {1} A17 ⫺ 13811, purity -0.5095035049250785
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (77+78=155 samples) on frame 1 with decision: {1} A5 ⫺ 12386, purity -0.11984757977611386
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A42 ⫺ 31622, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  8.194211 seconds (77.80 M allocations: 1.358 GiB, 13.17% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 26830
✔ {1} A17 ⫺ 13811
│✔ {1} A42 ⫺ 31622
││✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/83 (conf: 0.963855421686747)
✘ {1} A85 ⫺ 10147
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 76/78 (conf: 0.9743589743589743)
 │✘ Corn_senesced_green_weeds : 75/77 (conf: 0.974025974025974)
 ✘ Lettuce_romaine_5wk : 80/82 (conf: 0.975609756097561)
● [ 01/07/2021 15:56:24 ] Saving tree to file ./gandalf/trees/tree_be2a56baf25852f665f4b8aa8c5ba3dc3c3033383748c17ab4e10b6eeeb0797b.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 26830
✔ {1} A17 ⫺ 13811
│✔ {1} A42 ⫺ 31622
││✔ Lettuce_romaine_7wk : 19/19 (conf: 1.0)
││✘ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 20/22 (conf: 0.9090909090909091)
✘ {1} A85 ⫺ 10147
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 20/21 (conf: 0.9523809523809523)
 │✘ Corn_senesced_green_weeds : 18/19 (conf: 0.9473684210526315)
 ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:averaged,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	96.67%	100.0%	90.0%	100.0%	100.0%	95.0%	95.0%	90.91%	94.74%	95.24%	100.0%	100.0%	100.0%	||	96.0%	[95.24, 92.31, 97.56, 100.0, 97.44, 97.44]%	
  accuracy: 96.67% kappa: 96.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  1 18  1  0  0  0	90.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  1  0  0 19  0	95.0%		Lettuce_romaine_6wk
  1  0  0  0  0 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.9666666666666667
κ =		0.96
sensitivities:	[1.0, 0.9, 1.0, 1.0, 0.95, 0.95]
specificities:	[0.98, 0.99, 0.99, 1.0, 1.0, 1.0]
PPVs:		[0.9090909090909091, 0.9473684210526315, 0.9523809523809523, 1.0, 1.0, 1.0]
NPVs:		[1.0, 0.9801980198019802, 1.0, 1.0, 0.9900990099009901, 0.9900990099009901]
F1s:		[0.9523809523809523, 0.9230769230769231, 0.975609756097561, 1.0, 0.9743589743589743, 0.9743589743589743]
accuracies:	[0.9833333333333333, 0.975, 0.9916666666666667, 1.0, 0.9916666666666667, 0.9916666666666667]
mean_accuracy:	0.9888888888888889
Dataset_slice = (600) -> [70, 177, 261, 314, 419, 581, 28, 119, 212, 327, 454, 562, 31, 139, 280, 374, 459, 507, 19, 178, 249, 324, 453, 509, 5, 145, 248, 337, 422, 598, 75, 174, 287, 378, 420, 519, 12, 144, 202, 385, 465, 588, 26, 108, 298, 344, 403, 544, 67, 162, 228, 360, 498, 513, 14, 125, 236, 322, 482, 571, 50, 105, 214, 320, 440, 559, 25, 148, 229, 376, 423, 535, 11, 196, 219, 397, 434, 552, 51, 170, 257, 399, 417, 534, 6, 199, 207, 301, 427, 583, 4, 127, 273, 338, 450, 590, 63, 141, 270, 302, 486, 586, 62, 118, 276, 392, 435, 511, 54, 194, 216, 336, 437, 569, 73, 190, 251, 349, 411, 582, 16, 168, 238, 312, 449, 597, 76, 133, 292, 308, 436, 560, 94, 191, 234, 307, 469, 566, 21, 172, 253, 370, 461, 556, 96, 176, 295, 388, 401, 578, 97, 132, 275, 382, 475, 555, 60, 173, 217, 325, 470, 514, 9, 109, 272, 398, 402, 510, 40, 154, 250, 303, 443, 524, 72, 113, 240, 368, 431, 501, 99, 156, 279, 381, 497, 540, 44, 167, 220, 335, 489, 523, 91, 104, 245, 357, 416, 533, 92, 116, 297, 355, 412, 553, 71, 166, 246, 351, 426, 536, 13, 192, 203, 394, 410, 529, 98, 129, 206, 331, 414, 537, 79, 122, 281, 346, 448, 504, 18, 137, 224, 371, 442, 549, 48, 101, 289, 362, 487, 589, 56, 175, 285, 350, 456, 516, 22, 103, 242, 356, 408, 502, 35, 124, 293, 361, 428, 577, 81, 189, 262, 364, 460, 547, 84, 187, 230, 342, 478, 557, 37, 181, 208, 310, 418, 521, 87, 120, 299, 359, 458, 530, 77, 117, 237, 354, 462, 538, 34, 115, 231, 379, 429, 525, 65, 155, 205, 316, 495, 550, 7, 121, 252, 319, 488, 508, 41, 123, 264, 358, 499, 503, 3, 182, 201, 353, 452, 531, 59, 193, 290, 345, 439, 558, 55, 186, 296, 372, 457, 546, 43, 126, 241, 377, 463, 554, 29, 161, 263, 395, 405, 551, 8, 159, 221, 333, 471, 543, 86, 158, 227, 347, 413, 592, 46, 157, 274, 304, 424, 561, 64, 112, 204, 332, 445, 585, 78, 195, 211, 391, 430, 545, 85, 198, 209, 340, 493, 575, 15, 152, 282, 317, 433, 600, 1, 149, 258, 400, 477, 595, 42, 128, 254, 309, 464, 584, 100, 130, 271, 326, 500, 573, 30, 197, 267, 323, 425, 594, 10, 140, 283, 393, 468, 542, 89, 134, 218, 389, 441, 596, 88, 114, 278, 318, 446, 532, 49, 179, 277, 365, 467, 528, 17, 160, 247, 383, 481, 568, 23, 183, 223, 339, 479, 587, 27, 142, 286, 311, 415, 570, 20, 150, 259, 305, 421, 522, 68, 171, 288, 329, 407, 526, 69, 169, 243, 352, 494, 567, 24, 106, 284, 384, 491, 520, 74, 110, 235, 390, 473, 579, 36, 163, 256, 373, 406, 515, 57, 185, 266, 343, 480, 548, 53, 180, 239, 306, 476, 527, 95, 200, 255, 369, 404, 541, 61, 107, 226, 348, 409, 518, 66, 135, 265, 380, 484, 512, 52, 111, 233, 328, 472, 565, 58, 147, 210, 315, 447, 506, 47, 153, 232, 367, 474, 517, 83, 143, 268, 341, 432, 574, 39, 146, 215, 313, 490, 572, 93, 165, 244, 330, 466, 591, 90, 138, 225, 363, 451, 539, 33, 184, 291, 396, 455, 593, 2, 151, 300, 334, 496, 505, 38, 102, 260, 366, 492, 576, 80, 131, 269, 375, 483, 580, 82, 136, 222, 386, 485, 563, 45, 188, 213, 321, 444, 599, 32, 164, 294, 387, 438, 564]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:56:24 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (236+244=480 samples) on frame 1 with decision: {1} A42 ⫺ 26712, purity -1.1318370578787336
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+154=236 samples) on frame 1 with decision: {1} A85 ⫺ 10153, purity -0.49209420156266076
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+160=244 samples) on frame 1 with decision: {1} A40 ⫺ 26462, purity -0.520429720385408
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A13 ⫺ 11511, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (75+79=154 samples) on frame 1 with decision: {1} A8 ⫺ 14195, purity -0.09505103973477748
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  8.255421 seconds (77.02 M allocations: 1.346 GiB, 12.83% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 26712
✔ {1} A40 ⫺ 26462
│✔ {1} A13 ⫺ 11511
││✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
││✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_6wk : 80/84 (conf: 0.9523809523809523)
✘ {1} A85 ⫺ 10153
 ✔ {1} A8 ⫺ 14195
 │✔ Lettuce_romaine_4wk : 77/79 (conf: 0.9746835443037974)
 │✘ Corn_senesced_green_weeds : 74/75 (conf: 0.9866666666666667)
 ✘ Lettuce_romaine_5wk : 80/82 (conf: 0.975609756097561)
● [ 01/07/2021 15:56:33 ] Saving tree to file ./gandalf/trees/tree_f39c935d73668d32f4a275edb17683fa645a0e8ac9e7700c3b4ba98cf56c1989.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 26712
✔ {1} A40 ⫺ 26462
│✔ {1} A13 ⫺ 11511
││✔ Lettuce_romaine_7wk : 19/19 (conf: 1.0)
││✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_6wk : 20/22 (conf: 0.9090909090909091)
✘ {1} A85 ⫺ 10153
 ✔ {1} A8 ⫺ 14195
 │✔ Lettuce_romaine_4wk : 19/19 (conf: 1.0)
 │✘ Corn_senesced_green_weeds : 19/19 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 20/21 (conf: 0.9523809523809523)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:averaged,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	97.5%	100.0%	95.0%	95.0%	100.0%	100.0%	95.0%	100.0%	100.0%	100.0%	95.24%	90.91%	100.0%	||	97.0%	[100.0, 97.44, 97.44, 97.56, 95.24, 97.44]%	
  accuracy: 97.5% kappa: 97.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 19  0  0  1  0	95.0%		Corn_senesced_green_weeds
  0  0 19  1  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  1 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.975
κ =		0.97
sensitivities:	[1.0, 0.95, 0.95, 1.0, 1.0, 0.95]
specificities:	[1.0, 1.0, 1.0, 0.99, 0.98, 1.0]
PPVs:		[1.0, 1.0, 1.0, 0.9523809523809523, 0.9090909090909091, 1.0]
NPVs:		[1.0, 0.9900990099009901, 0.9900990099009901, 1.0, 1.0, 0.9900990099009901]
F1s:		[1.0, 0.9743589743589743, 0.9743589743589743, 0.975609756097561, 0.9523809523809523, 0.9743589743589743]
accuracies:	[1.0, 0.9916666666666667, 0.9916666666666667, 0.9916666666666667, 0.9833333333333333, 0.9916666666666667]
mean_accuracy:	0.9916666666666666
Dataset_slice = (600) -> [21, 173, 279, 381, 499, 569, 64, 138, 231, 310, 469, 582, 10, 149, 269, 301, 481, 525, 84, 168, 271, 334, 458, 600, 13, 194, 289, 400, 497, 548, 73, 107, 225, 375, 444, 512, 20, 174, 213, 347, 441, 545, 60, 159, 210, 398, 448, 505, 22, 196, 237, 354, 492, 558, 27, 187, 300, 345, 461, 572, 3, 110, 264, 394, 498, 583, 48, 125, 238, 341, 464, 565, 24, 171, 293, 356, 470, 502, 1, 123, 260, 339, 417, 519, 95, 165, 224, 315, 422, 550, 30, 190, 294, 327, 484, 589, 29, 188, 211, 359, 429, 586, 65, 176, 232, 305, 500, 559, 85, 157, 282, 357, 472, 516, 4, 179, 202, 362, 436, 585, 50, 169, 261, 371, 460, 594, 8, 131, 256, 343, 439, 590, 89, 192, 240, 382, 447, 557, 68, 144, 221, 342, 438, 560, 23, 134, 277, 335, 419, 587, 56, 116, 278, 364, 459, 581, 70, 121, 292, 307, 440, 520, 71, 155, 247, 324, 425, 508, 62, 133, 204, 374, 405, 551, 31, 129, 299, 368, 479, 501, 49, 162, 227, 308, 401, 579, 15, 119, 249, 361, 467, 546, 77, 115, 265, 388, 426, 598, 61, 126, 242, 396, 463, 517, 52, 189, 275, 372, 491, 521, 11, 195, 234, 365, 468, 544, 75, 154, 222, 316, 480, 555, 67, 105, 226, 393, 466, 593, 81, 178, 267, 379, 477, 596, 44, 153, 266, 366, 476, 542, 38, 127, 245, 352, 452, 518, 17, 147, 219, 340, 427, 515, 96, 193, 229, 344, 457, 578, 35, 128, 262, 325, 431, 543, 36, 113, 230, 392, 414, 554, 40, 139, 281, 314, 435, 561, 93, 135, 268, 380, 430, 562, 55, 132, 285, 312, 421, 528, 90, 199, 212, 326, 486, 511, 72, 151, 208, 331, 434, 536, 19, 166, 283, 322, 403, 599, 87, 180, 244, 351, 462, 513, 74, 140, 254, 333, 490, 524, 39, 141, 241, 391, 412, 580, 18, 142, 207, 350, 485, 591, 25, 148, 246, 383, 410, 573, 2, 175, 239, 337, 495, 523, 91, 197, 209, 378, 478, 529, 83, 114, 274, 373, 474, 553, 99, 182, 255, 360, 489, 533, 43, 106, 258, 304, 454, 509, 53, 170, 218, 353, 404, 503, 6, 101, 235, 399, 445, 597, 28, 145, 263, 309, 442, 510, 79, 146, 257, 328, 456, 556, 42, 200, 273, 319, 496, 574, 66, 158, 206, 389, 493, 541, 92, 143, 201, 397, 443, 568, 76, 161, 290, 318, 424, 527, 7, 102, 297, 311, 413, 547, 14, 150, 216, 336, 415, 507, 5, 137, 284, 348, 406, 564, 57, 130, 296, 346, 402, 532, 88, 177, 295, 384, 450, 506, 86, 104, 203, 367, 423, 595, 63, 191, 217, 349, 451, 514, 16, 183, 250, 302, 420, 538, 32, 185, 236, 355, 446, 537, 100, 118, 287, 306, 473, 534, 80, 136, 252, 330, 418, 530, 33, 112, 286, 376, 407, 504, 69, 117, 233, 370, 471, 571, 37, 111, 223, 303, 433, 577, 26, 164, 276, 317, 449, 588, 59, 167, 251, 323, 408, 575, 41, 160, 280, 358, 483, 567, 12, 172, 228, 321, 455, 566, 9, 108, 272, 386, 437, 584, 47, 156, 253, 369, 482, 531, 46, 103, 259, 313, 428, 576, 51, 198, 220, 332, 487, 563, 45, 181, 215, 329, 409, 526, 98, 152, 291, 320, 453, 592, 94, 184, 288, 363, 488, 535, 34, 122, 205, 338, 411, 522, 54, 163, 214, 385, 416, 570, 78, 109, 298, 377, 494, 539, 58, 124, 270, 387, 432, 549, 97, 186, 248, 390, 475, 552, 82, 120, 243, 395, 465, 540]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, OneWorld}	0.32 MBs
     ├ fmd	0.32 MBs	(shape (480, 204))
     ├ fmd_m	0.0 MBs	(shape (480, 204, 0))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 0, OneWorld, 2}	0.05 MBs
     ├ domain shape	(204, 120)
     ├ 0 relations	AbstractRelation[]
     └ max_channel_size	()

● [ 01/07/2021 15:56:33 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (239+241=480 samples) on frame 1 with decision: {1} A42 ⫺ 27260, purity -1.1293049241654884
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+157=239 samples) on frame 1 with decision: {1} A102 ⫺ 10115, purity -0.5004592891830953
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+159=241 samples) on frame 1 with decision: {1} A12 ⫺ 12160, purity -0.4963062662856841
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A42 ⫺ 31622, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (77+80=157 samples) on frame 1 with decision: {1} A5 ⫺ 12386, purity -0.09356580606353497
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
  8.140791 seconds (77.59 M allocations: 1.355 GiB, 12.87% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 27260
✔ {1} A12 ⫺ 12160
│✔ {1} A42 ⫺ 31622
││✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_6wk : 79/79 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/82 (conf: 0.975609756097561)
✘ {1} A102 ⫺ 10115
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 78/80 (conf: 0.975)
 │✘ Corn_senesced_green_weeds : 76/77 (conf: 0.987012987012987)
 ✘ Lettuce_romaine_5wk : 80/82 (conf: 0.975609756097561)
● [ 01/07/2021 15:56:41 ] Saving tree to file ./gandalf/trees/tree_5470f49eda2bba2c7309c2ce9d04b75e198a5ff4a5dd4145dc993a53a42b8c53.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  0
worldTypes: DataType[OneWorld]
initConditions: [DecisionTree._startAtCenter()]
{1} A42 ⫺ 27260
✔ {1} A12 ⫺ 12160
│✔ {1} A42 ⫺ 31622
││✔ Lettuce_romaine_7wk : 20/21 (conf: 0.9523809523809523)
││✘ Lettuce_romaine_6wk : 17/18 (conf: 0.9444444444444444)
│✘ Brocoli_green_weeds_1 : 19/19 (conf: 1.0)
✘ {1} A102 ⫺ 10115
 ✔ {1} A5 ⫺ 12386
 │✔ Lettuce_romaine_4wk : 18/19 (conf: 0.9473684210526315)
 │✘ Corn_senesced_green_weeds : 18/21 (conf: 0.8571428571428571)
 ✘ Lettuce_romaine_5wk : 20/22 (conf: 0.9090909090909091)
 test size = [(204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,:averaged,"o_None","TestOpGeq")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	93.33%	95.0%	90.0%	90.0%	100.0%	85.0%	100.0%	100.0%	85.71%	94.74%	90.91%	94.44%	95.24%	||	92.0%	[97.44, 87.8, 92.31, 95.24, 89.47, 97.56]%	
  accuracy: 93.33% kappa: 92.0% 
 19  0  0  0  0  1	95.0%		Brocoli_green_weeds_1
  0 18  1  0  1  0	90.0%		Corn_senesced_green_weeds
  0  1 18  1  0  0	90.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  2  0  1 17  0	85.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9333333333333333
κ =		0.92
sensitivities:	[0.95, 0.9, 0.9, 1.0, 0.85, 1.0]
specificities:	[1.0, 0.97, 0.99, 0.98, 0.99, 0.99]
PPVs:		[1.0, 0.8571428571428571, 0.9473684210526315, 0.9090909090909091, 0.9444444444444444, 0.9523809523809523]
NPVs:		[0.9900990099009901, 0.9797979797979798, 0.9801980198019802, 1.0, 0.9705882352941176, 1.0]
F1s:		[0.9743589743589743, 0.8780487804878049, 0.9230769230769231, 0.9523809523809523, 0.8947368421052632, 0.975609756097561]
accuracies:	[0.9916666666666667, 0.9583333333333334, 0.975, 0.9833333333333333, 0.9666666666666667, 0.9916666666666667]
mean_accuracy:	0.9777777777777779
Iteration "Salinas-A,(3,false,"o_RCC8","TestOpAll")"...
● [ 01/07/2021 15:56:41 ] Computing dataset...
● [ 01/07/2021 15:56:41 ] Computed dataset in 00:00:00
● [ 01/07/2021 15:56:41 ] Saving dataset to file ./gandalf/cache/dataset_817547e6c33aa40f8b05461cfc23a3ddf8dcb0de9d2931bed9cf91e26455c270.jld...
Dataseeds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

executing run 'Salinas-A,(3,false,"o_RCC8","TestOpAll")'...
dataset type = Tuple{Array{Int64, 4}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (test_operators = TestOperator[⫺, ⫹, ⫺₉₀, ⫹₉₀, ⫺₈₀, ⫹₈₀, ⫺₇₀, ⫹₇₀, ⫺₆₀, ⫹₆₀], ontology = Ontology{DecisionTree.ModalLogic.Interval2D}(RCC8))
dataset_slices    = (10 dataset_slices)

Frame 1/1
┌ LogLevel(-500): OntologicalDataset -> FeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:12
┌ LogLevel(-500): Instance 1/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 362/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 120/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 483/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 241/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): FeatModalDataset -> StumpFeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:358
┌ LogLevel(-500): Instance 1/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 362/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 120/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 483/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 241/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
38141.788349 seconds (148.64 G allocations: 13.054 TiB, 90.84% gc time)
Dataset_slice = (600) -> [10, 122, 267, 386, 478, 583, 3, 166, 252, 331, 497, 503, 27, 190, 228, 353, 403, 521, 63, 130, 246, 366, 462, 566, 50, 195, 235, 350, 474, 501, 57, 186, 201, 397, 447, 511, 36, 116, 254, 326, 457, 542, 21, 123, 248, 340, 469, 593, 75, 157, 258, 336, 417, 509, 78, 183, 238, 394, 408, 596, 35, 154, 264, 376, 477, 599, 66, 191, 274, 307, 448, 548, 20, 167, 215, 392, 467, 549, 67, 188, 239, 310, 434, 568, 25, 141, 231, 330, 490, 594, 24, 117, 270, 400, 492, 592, 82, 194, 226, 387, 455, 560, 74, 197, 289, 378, 441, 565, 69, 105, 227, 341, 461, 539, 81, 187, 300, 388, 427, 585, 28, 159, 210, 342, 405, 531, 15, 179, 244, 323, 420, 554, 59, 163, 223, 332, 416, 558, 29, 124, 268, 351, 459, 564, 18, 153, 232, 329, 500, 582, 31, 162, 220, 319, 418, 535, 43, 177, 288, 346, 465, 576, 40, 155, 249, 325, 470, 575, 12, 149, 205, 327, 496, 578, 83, 192, 275, 305, 464, 597, 100, 145, 247, 398, 415, 508, 94, 178, 261, 322, 488, 519, 16, 110, 291, 347, 485, 551, 51, 119, 204, 337, 466, 590, 73, 148, 297, 362, 449, 522, 19, 103, 292, 358, 425, 533, 8, 142, 213, 382, 499, 530, 11, 134, 207, 345, 472, 598, 95, 136, 296, 357, 407, 515, 58, 169, 284, 339, 458, 595, 72, 101, 241, 321, 491, 581, 13, 127, 230, 349, 432, 550, 53, 172, 240, 301, 435, 555, 22, 200, 285, 335, 483, 532, 71, 176, 260, 379, 437, 517, 87, 139, 202, 399, 439, 514, 33, 160, 299, 389, 451, 544, 61, 168, 208, 343, 480, 540, 90, 180, 233, 309, 428, 586, 55, 175, 216, 348, 476, 518, 60, 137, 290, 383, 443, 573, 96, 198, 211, 308, 456, 552, 68, 144, 214, 317, 431, 563, 77, 189, 203, 315, 471, 507, 9, 135, 279, 361, 473, 536, 42, 147, 221, 352, 481, 553, 64, 115, 287, 391, 423, 528, 85, 196, 256, 390, 453, 516, 54, 182, 280, 359, 442, 588, 2, 140, 245, 320, 429, 541, 23, 170, 272, 313, 402, 559, 91, 104, 269, 324, 413, 538, 65, 181, 257, 344, 414, 505, 48, 132, 224, 367, 487, 523, 70, 173, 271, 303, 444, 589, 80, 118, 276, 338, 460, 570, 49, 171, 265, 333, 454, 577, 7, 120, 281, 360, 438, 572, 88, 193, 218, 372, 482, 584, 45, 121, 229, 381, 475, 510, 14, 174, 236, 364, 450, 534, 97, 128, 283, 304, 436, 562, 26, 111, 243, 311, 463, 561, 52, 112, 294, 302, 412, 506, 4, 158, 234, 384, 410, 569, 32, 150, 253, 371, 409, 512, 34, 146, 277, 374, 493, 579, 99, 125, 266, 380, 430, 504, 93, 102, 206, 363, 422, 587, 56, 152, 286, 375, 445, 513, 46, 113, 250, 306, 498, 524, 47, 185, 263, 373, 404, 525, 84, 108, 242, 385, 419, 600, 79, 129, 217, 318, 486, 546, 39, 156, 282, 365, 494, 591, 17, 114, 251, 312, 468, 574, 38, 143, 225, 369, 452, 556, 5, 151, 212, 368, 426, 502, 44, 138, 278, 355, 433, 526, 98, 126, 237, 395, 489, 529, 86, 109, 273, 334, 421, 537, 92, 199, 262, 354, 479, 527, 41, 184, 209, 328, 446, 547, 89, 107, 259, 370, 411, 567, 6, 131, 222, 377, 495, 545, 1, 106, 295, 314, 401, 557, 76, 161, 255, 396, 406, 520, 37, 164, 298, 393, 484, 543, 30, 133, 219, 356, 440, 580, 62, 165, 293, 316, 424, 571]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	2152.64 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1882.62 MBs	(shape (3, 4, 3, 4, 480, 2040, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 02/07/2021 02:32:36 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (239+241=480 samples) on frame 1 with decision: {1} ⟨EC⟩ (A42 ⫹ 25543), purity -1.1098204493092325
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+159=239 samples) on frame 1 with decision: {1} A13 ⫺ 11493, purity -0.4611182302686674
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+160=241 samples) on frame 1 with decision: {1} A85 ⫺ 10625, purity -0.48253858773505526
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+79=159 samples) on frame 1 with decision: {1} A85 ⫺ 11118, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A5 ⫹ 12056, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
481.658527 seconds (3.84 G allocations: 99.937 GiB, 17.49% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  1
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨EC⟩ (A42 ⫹ 25543)
✔ {1} A85 ⫺ 10625
│✔ {1} A5 ⫹ 12056
││✔ Corn_senesced_green_weeds : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/81 (conf: 0.9876543209876543)
✘ {1} A13 ⫺ 11493
 ✔ {1} A85 ⫺ 11118
 │✔ Lettuce_romaine_7wk : 79/79 (conf: 1.0)
 │✘ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
● [ 02/07/2021 02:40:38 ] Saving tree to file ./gandalf/trees/tree_cbb4dba47b756d2ec9486388d8903ae5a9a8051e9fe36dd799278163379868d6.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  1
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨EC⟩ (A42 ⫹ 25543)
✔ {1} A85 ⫺ 10625
│✔ {1} A5 ⫹ 12056
││✔ Corn_senesced_green_weeds : 19/19 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 19/19 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/23 (conf: 0.8695652173913043)
✘ {1} A13 ⫺ 11493
 ✔ {1} A85 ⫺ 11118
 │✔ Lettuce_romaine_7wk : 19/20 (conf: 0.95)
 │✘ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 19/19 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	96.67%	95.0%	95.0%	95.0%	100.0%	100.0%	95.0%	100.0%	100.0%	100.0%	86.96%	100.0%	95.0%	||	96.0%	[97.44, 97.44, 97.44, 93.02, 100.0, 95.0]%	
  accuracy: 96.67% kappa: 96.0% 
 19  0  0  1  0  0	95.0%		Brocoli_green_weeds_1
  0 19  0  0  0  1	95.0%		Corn_senesced_green_weeds
  0  0 19  1  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  1  0 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.9666666666666667
κ =		0.96
sensitivities:	[0.95, 0.95, 0.95, 1.0, 1.0, 0.95]
specificities:	[1.0, 1.0, 1.0, 0.97, 1.0, 0.99]
PPVs:		[1.0, 1.0, 1.0, 0.8695652173913043, 1.0, 0.95]
NPVs:		[0.9900990099009901, 0.9900990099009901, 0.9900990099009901, 1.0, 1.0, 0.99]
F1s:		[0.9743589743589743, 0.9743589743589743, 0.9743589743589743, 0.9302325581395349, 1.0, 0.95]
accuracies:	[0.9916666666666667, 0.9916666666666667, 0.9916666666666667, 0.975, 1.0, 0.9833333333333333]
mean_accuracy:	0.9888888888888889
Dataset_slice = (600) -> [19, 131, 215, 348, 496, 545, 50, 123, 292, 322, 459, 579, 6, 121, 285, 331, 464, 513, 53, 110, 205, 315, 435, 505, 51, 109, 209, 311, 473, 521, 80, 124, 226, 364, 462, 528, 76, 158, 287, 370, 471, 541, 54, 114, 245, 399, 458, 519, 24, 151, 225, 332, 409, 527, 38, 128, 231, 316, 429, 518, 86, 191, 265, 391, 487, 566, 56, 141, 221, 356, 402, 555, 28, 200, 232, 346, 467, 520, 100, 140, 259, 325, 420, 595, 21, 171, 206, 379, 454, 589, 46, 184, 222, 395, 468, 560, 74, 146, 214, 343, 418, 540, 79, 143, 237, 320, 448, 558, 98, 188, 201, 390, 442, 600, 83, 186, 235, 338, 484, 503, 10, 119, 286, 398, 422, 547, 52, 167, 293, 396, 449, 544, 42, 176, 202, 326, 476, 509, 62, 154, 269, 304, 461, 561, 45, 144, 278, 334, 417, 597, 33, 163, 250, 333, 474, 534, 90, 134, 256, 388, 431, 549, 77, 172, 271, 367, 450, 584, 75, 189, 233, 387, 405, 573, 47, 182, 247, 312, 432, 501, 37, 137, 299, 340, 440, 568, 59, 125, 273, 345, 411, 506, 78, 149, 229, 305, 480, 529, 82, 102, 243, 374, 407, 533, 34, 104, 253, 329, 427, 585, 67, 108, 224, 335, 408, 526, 44, 198, 261, 357, 452, 569, 89, 180, 279, 363, 414, 580, 68, 105, 267, 306, 413, 557, 85, 166, 274, 365, 447, 542, 26, 145, 220, 369, 404, 578, 39, 142, 227, 376, 428, 590, 99, 193, 264, 321, 483, 512, 20, 147, 272, 381, 481, 572, 9, 130, 204, 301, 424, 565, 7, 156, 257, 344, 438, 570, 12, 199, 230, 336, 466, 571, 41, 132, 289, 337, 415, 593, 16, 170, 262, 373, 444, 543, 58, 196, 210, 347, 433, 551, 31, 107, 260, 383, 477, 535, 92, 164, 254, 355, 463, 502, 97, 174, 298, 397, 478, 508, 88, 106, 219, 317, 446, 531, 27, 115, 248, 360, 470, 515, 32, 153, 291, 330, 489, 582, 63, 185, 251, 362, 500, 524, 22, 160, 207, 352, 401, 577, 55, 152, 283, 353, 485, 525, 96, 169, 280, 389, 403, 586, 70, 173, 255, 366, 493, 550, 43, 127, 300, 339, 451, 507, 72, 155, 236, 400, 492, 539, 84, 168, 203, 324, 455, 564, 69, 187, 239, 378, 419, 546, 4, 139, 268, 368, 498, 598, 15, 111, 241, 319, 479, 536, 93, 175, 294, 302, 439, 548, 17, 122, 297, 307, 421, 538, 48, 190, 295, 318, 456, 594, 57, 138, 208, 354, 488, 563, 49, 183, 281, 385, 469, 517, 66, 195, 258, 372, 472, 583, 61, 118, 266, 351, 425, 599, 94, 116, 277, 349, 475, 537, 8, 135, 213, 375, 457, 504, 29, 197, 263, 394, 441, 588, 91, 117, 290, 342, 494, 567, 64, 113, 284, 380, 445, 514, 30, 181, 282, 303, 486, 581, 40, 179, 296, 350, 430, 552, 5, 157, 223, 384, 453, 522, 18, 161, 270, 314, 499, 576, 87, 177, 275, 308, 443, 554, 73, 129, 242, 382, 490, 574, 60, 136, 212, 358, 416, 523, 71, 148, 238, 393, 434, 511, 81, 150, 228, 371, 437, 510, 23, 178, 276, 328, 497, 556, 95, 101, 252, 392, 410, 591, 3, 165, 246, 323, 460, 530, 36, 133, 217, 361, 423, 559, 35, 126, 218, 386, 491, 562, 2, 103, 216, 359, 436, 532, 13, 162, 240, 309, 412, 553, 14, 192, 288, 341, 406, 587, 25, 159, 249, 310, 465, 592, 11, 112, 211, 377, 495, 575, 65, 120, 234, 313, 482, 596, 1, 194, 244, 327, 426, 516]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	2152.64 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1882.62 MBs	(shape (3, 4, 3, 4, 480, 2040, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 02/07/2021 02:40:50 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (241+239=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₈₀ 25645), purity -1.1098204493092325
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+159=239 samples) on frame 1 with decision: {1} A13 ⫺ 11173, purity -0.4611182302686674
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (161+80=241 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6872), purity -0.48540183076629684
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A39 ⫹₇₀ 21517, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+77=161 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206), purity -0.13303469879143387
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
193.607001 seconds (2.00 G allocations: 42.487 GiB, 9.69% gc time, 0.01% compilation time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₈₀ 25645)
✔ {1} A13 ⫺ 11173
│✔ {1} A39 ⫹₇₀ 21517
││✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_7wk : 79/79 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6872)
 ✔ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206)
  ✔ Corn_senesced_green_weeds : 76/77 (conf: 0.987012987012987)
  ✘ Lettuce_romaine_4wk : 80/84 (conf: 0.9523809523809523)
● [ 02/07/2021 02:44:03 ] Saving tree to file ./gandalf/trees/tree_3431595ab16b5c9d571ba414138f9abe46544bba63a98f6e9b21a2f8396d7c90.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₈₀ 25645)
✔ {1} A13 ⫺ 11173
│✔ {1} A39 ⫹₇₀ 21517
││✔ Lettuce_romaine_6wk : 20/21 (conf: 0.9523809523809523)
││✘ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6872)
 ✔ Lettuce_romaine_5wk : 19/19 (conf: 1.0)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206)
  ✔ Corn_senesced_green_weeds : 19/20 (conf: 0.95)
  ✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	98.33%	100.0%	95.0%	100.0%	95.0%	100.0%	100.0%	100.0%	95.0%	100.0%	100.0%	95.24%	100.0%	||	98.0%	[100.0, 95.0, 100.0, 97.44, 97.56, 100.0]%	
  accuracy: 98.33% kappa: 98.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 19  0  0  1  0	95.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  1  0 19  0  0	95.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9833333333333333
κ =		0.98
sensitivities:	[1.0, 0.95, 1.0, 0.95, 1.0, 1.0]
specificities:	[1.0, 0.99, 1.0, 1.0, 0.99, 1.0]
PPVs:		[1.0, 0.95, 1.0, 1.0, 0.9523809523809523, 1.0]
NPVs:		[1.0, 0.99, 1.0, 0.9900990099009901, 1.0, 1.0]
F1s:		[1.0, 0.95, 1.0, 0.9743589743589743, 0.975609756097561, 1.0]
accuracies:	[1.0, 0.9833333333333333, 1.0, 0.9916666666666667, 0.9916666666666667, 1.0]
mean_accuracy:	0.9944444444444445
Dataset_slice = (600) -> [69, 125, 224, 361, 493, 514, 56, 174, 287, 365, 435, 502, 62, 169, 286, 356, 466, 569, 91, 135, 227, 360, 414, 522, 63, 180, 272, 321, 443, 562, 66, 141, 201, 312, 426, 509, 98, 175, 260, 368, 409, 518, 32, 187, 210, 383, 490, 549, 41, 185, 278, 364, 500, 551, 100, 165, 256, 334, 417, 567, 48, 101, 289, 351, 477, 597, 95, 137, 246, 338, 464, 563, 38, 149, 277, 328, 480, 578, 57, 146, 293, 341, 412, 552, 14, 176, 298, 390, 442, 594, 22, 126, 218, 309, 441, 582, 1, 120, 266, 344, 405, 592, 93, 168, 254, 381, 419, 556, 37, 123, 225, 313, 453, 533, 54, 138, 204, 315, 437, 568, 49, 156, 203, 335, 402, 507, 58, 164, 257, 343, 440, 577, 15, 155, 234, 394, 489, 542, 60, 186, 285, 306, 423, 583, 71, 107, 291, 348, 459, 513, 85, 160, 283, 353, 496, 547, 77, 178, 247, 316, 469, 544, 25, 189, 237, 387, 495, 599, 45, 182, 292, 373, 482, 584, 39, 117, 250, 392, 456, 520, 83, 162, 274, 346, 421, 576, 44, 194, 231, 366, 448, 527, 35, 112, 219, 333, 497, 560, 28, 106, 236, 311, 468, 600, 51, 119, 261, 310, 431, 516, 96, 114, 273, 347, 465, 536, 78, 163, 251, 352, 404, 538, 2, 129, 213, 359, 403, 591, 26, 183, 288, 308, 454, 598, 19, 113, 282, 400, 401, 540, 5, 111, 252, 302, 473, 566, 10, 108, 211, 393, 427, 581, 55, 152, 235, 342, 470, 541, 65, 148, 276, 327, 428, 511, 99, 136, 233, 304, 472, 546, 6, 184, 230, 332, 413, 517, 23, 131, 244, 330, 452, 515, 7, 199, 240, 322, 422, 529, 74, 142, 214, 319, 467, 505, 86, 128, 264, 399, 494, 559, 75, 200, 212, 389, 449, 573, 42, 122, 300, 388, 418, 561, 9, 150, 259, 339, 491, 510, 11, 170, 296, 382, 484, 554, 80, 140, 208, 374, 457, 596, 73, 130, 239, 354, 458, 595, 16, 134, 294, 370, 475, 519, 31, 177, 202, 336, 432, 580, 89, 151, 275, 317, 438, 572, 13, 104, 243, 391, 479, 504, 72, 144, 262, 375, 436, 548, 84, 173, 258, 320, 451, 575, 64, 109, 221, 350, 474, 555, 97, 102, 228, 325, 408, 508, 61, 118, 248, 378, 487, 553, 59, 172, 279, 395, 434, 545, 40, 132, 241, 358, 406, 574, 43, 171, 217, 380, 425, 526, 20, 124, 215, 385, 486, 501, 30, 105, 269, 355, 445, 558, 53, 195, 280, 369, 463, 550, 12, 157, 297, 377, 439, 565, 50, 159, 238, 345, 499, 589, 34, 193, 284, 398, 424, 579, 81, 115, 253, 397, 416, 570, 67, 166, 222, 372, 450, 585, 24, 127, 281, 371, 481, 524, 4, 145, 263, 384, 492, 539, 68, 154, 265, 324, 410, 503, 90, 139, 255, 349, 462, 534, 3, 143, 249, 357, 455, 506, 52, 181, 220, 305, 420, 523, 94, 188, 229, 329, 483, 543, 29, 153, 270, 303, 446, 535, 36, 179, 226, 307, 433, 564, 82, 158, 209, 314, 478, 530, 27, 190, 245, 318, 485, 521, 70, 197, 206, 376, 476, 537, 92, 196, 271, 363, 415, 532, 76, 191, 295, 331, 447, 571, 21, 110, 268, 337, 498, 557, 17, 167, 242, 396, 407, 588, 46, 192, 290, 301, 429, 531, 18, 161, 216, 362, 430, 525, 87, 103, 267, 379, 471, 590, 8, 147, 232, 323, 411, 593, 47, 198, 223, 326, 444, 586, 33, 133, 207, 386, 488, 512, 88, 121, 299, 340, 460, 528, 79, 116, 205, 367, 461, 587]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	2152.64 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1882.62 MBs	(shape (3, 4, 3, 4, 480, 2040, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 02/07/2021 02:44:15 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (240+240=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A41 ⫺₇₀ 25535), purity -1.1210112487890092
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+159=240 samples) on frame 1 with decision: {1} A13 ⫺ 11173, purity -0.48164794911986897
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+81=240 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A102 ⫹₈₀ 10164), purity -0.48164794911986897
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+79=159 samples) on frame 1 with decision: {1} A40 ⫹₇₀ 26575, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+75=159 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206), purity -0.10114026971351123
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
192.873934 seconds (2.00 G allocations: 42.405 GiB, 9.23% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A41 ⫺₇₀ 25535)
✔ {1} A13 ⫺ 11173
│✔ {1} A40 ⫹₇₀ 26575
││✔ Lettuce_romaine_6wk : 79/79 (conf: 1.0)
││✘ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/81 (conf: 0.9876543209876543)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A102 ⫹₈₀ 10164)
 ✔ Lettuce_romaine_5wk : 80/81 (conf: 0.9876543209876543)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206)
  ✔ Corn_senesced_green_weeds : 75/75 (conf: 1.0)
  ✘ Lettuce_romaine_4wk : 80/84 (conf: 0.9523809523809523)
● [ 02/07/2021 02:47:28 ] Saving tree to file ./gandalf/trees/tree_8502913849e0c6880165a4ef7bc317f6d601c6be75f8a86a2fcb04d6e0349a14.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A41 ⫺₇₀ 25535)
✔ {1} A13 ⫺ 11173
│✔ {1} A40 ⫹₇₀ 26575
││✔ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
││✘ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A102 ⫹₈₀ 10164)
 ✔ Lettuce_romaine_5wk : 19/20 (conf: 0.95)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206)
  ✔ Corn_senesced_green_weeds : 20/21 (conf: 0.9523809523809523)
  ✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	98.33%	100.0%	100.0%	100.0%	95.0%	95.0%	100.0%	100.0%	95.24%	100.0%	95.0%	100.0%	100.0%	||	98.0%	[100.0, 97.56, 100.0, 95.0, 97.44, 100.0]%	
  accuracy: 98.33% kappa: 98.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0	100.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  1  0 19  0  0	95.0%		Lettuce_romaine_5wk
  0  0  0  1 19  0	95.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9833333333333333
κ =		0.98
sensitivities:	[1.0, 1.0, 1.0, 0.95, 0.95, 1.0]
specificities:	[1.0, 0.99, 1.0, 0.99, 1.0, 1.0]
PPVs:		[1.0, 0.9523809523809523, 1.0, 0.95, 1.0, 1.0]
NPVs:		[1.0, 1.0, 1.0, 0.99, 0.9900990099009901, 1.0]
F1s:		[1.0, 0.975609756097561, 1.0, 0.95, 0.9743589743589743, 1.0]
accuracies:	[1.0, 0.9916666666666667, 1.0, 0.9833333333333333, 0.9916666666666667, 1.0]
mean_accuracy:	0.9944444444444445
Dataset_slice = (600) -> [60, 161, 270, 359, 480, 580, 46, 140, 238, 345, 460, 561, 23, 131, 243, 309, 470, 560, 40, 121, 266, 306, 436, 558, 68, 185, 240, 312, 488, 534, 29, 183, 233, 332, 495, 531, 53, 164, 208, 386, 441, 511, 24, 154, 269, 393, 440, 551, 83, 153, 226, 339, 425, 590, 1, 112, 263, 302, 429, 515, 47, 146, 273, 387, 432, 545, 65, 110, 300, 341, 426, 529, 98, 115, 209, 348, 419, 530, 51, 176, 286, 395, 442, 516, 6, 148, 212, 336, 452, 556, 12, 103, 204, 303, 453, 600, 45, 122, 237, 366, 420, 541, 93, 167, 293, 368, 415, 521, 80, 106, 241, 323, 496, 563, 97, 193, 276, 365, 414, 592, 5, 132, 232, 390, 444, 528, 73, 124, 231, 358, 433, 504, 85, 174, 265, 329, 462, 524, 44, 134, 255, 322, 489, 578, 18, 160, 258, 372, 493, 501, 32, 188, 290, 394, 409, 554, 62, 200, 206, 320, 473, 587, 74, 111, 234, 360, 463, 514, 49, 128, 289, 355, 406, 533, 76, 191, 257, 381, 478, 566, 88, 125, 274, 349, 424, 546, 34, 101, 262, 318, 408, 573, 2, 162, 246, 324, 486, 570, 95, 105, 292, 337, 421, 595, 36, 197, 207, 343, 492, 520, 27, 147, 203, 362, 437, 577, 35, 149, 202, 375, 411, 539, 31, 170, 242, 374, 430, 571, 7, 126, 247, 344, 500, 552, 11, 184, 298, 338, 428, 532, 52, 109, 282, 370, 456, 562, 75, 142, 213, 328, 446, 576, 69, 152, 287, 330, 455, 564, 41, 172, 248, 354, 407, 582, 22, 194, 249, 397, 466, 572, 10, 136, 253, 399, 435, 542, 16, 157, 228, 357, 448, 585, 72, 178, 291, 313, 494, 526, 61, 173, 210, 319, 404, 586, 96, 143, 220, 351, 464, 598, 56, 158, 299, 378, 401, 557, 48, 175, 211, 367, 431, 509, 89, 104, 236, 389, 417, 527, 71, 139, 260, 376, 491, 536, 15, 168, 280, 327, 443, 599, 30, 119, 288, 310, 449, 594, 90, 138, 294, 305, 459, 549, 50, 118, 205, 400, 477, 518, 66, 130, 252, 380, 483, 589, 14, 144, 261, 369, 454, 503, 100, 145, 215, 371, 447, 579, 17, 156, 296, 356, 457, 508, 84, 186, 227, 315, 475, 565, 86, 179, 283, 304, 439, 548, 92, 113, 281, 335, 461, 537, 78, 163, 279, 342, 418, 596, 43, 133, 217, 311, 469, 519, 59, 169, 251, 316, 498, 547, 54, 177, 245, 361, 403, 591, 25, 117, 254, 384, 422, 543, 64, 108, 264, 346, 434, 505, 55, 165, 297, 352, 484, 593, 99, 159, 278, 307, 416, 538, 58, 150, 256, 388, 467, 502, 42, 196, 250, 326, 427, 569, 67, 141, 216, 331, 487, 525, 3, 137, 219, 373, 445, 544, 13, 195, 222, 377, 402, 583, 8, 102, 259, 340, 476, 535, 79, 151, 272, 398, 405, 512, 91, 180, 224, 325, 471, 522, 33, 189, 284, 333, 468, 510, 38, 182, 268, 379, 472, 517, 77, 166, 275, 391, 479, 523, 9, 181, 271, 353, 499, 588, 39, 155, 221, 317, 412, 553, 4, 198, 277, 392, 458, 513, 87, 199, 295, 383, 481, 550, 21, 114, 201, 334, 465, 507, 19, 120, 230, 363, 497, 567, 94, 190, 229, 314, 485, 575, 57, 116, 214, 308, 423, 597, 82, 192, 223, 350, 450, 581, 28, 171, 285, 347, 451, 559, 26, 127, 225, 385, 474, 574, 20, 107, 244, 301, 438, 506, 81, 135, 239, 396, 482, 540, 70, 123, 235, 321, 410, 568, 63, 129, 267, 382, 413, 555, 37, 187, 218, 364, 490, 584]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	2152.64 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1882.62 MBs	(shape (3, 4, 3, 4, 480, 2040, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 02/07/2021 02:47:40 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (240+240=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A41 ⫺₇₀ 25535), purity -1.1210112487890092
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+81=240 samples) on frame 1 with decision: {1} A12 ⫹₆₀ 12087, purity -0.48164794911986897
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+81=240 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6935), purity -0.48164794911986897
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+79=159 samples) on frame 1 with decision: {1} A40 ⫹₇₀ 26575, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+76=159 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206), purity -0.08116857111448304
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
190.455951 seconds (2.00 G allocations: 42.475 GiB, 8.43% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A41 ⫺₇₀ 25535)
✔ {1} A12 ⫹₆₀ 12087
│✔ Brocoli_green_weeds_1 : 80/81 (conf: 0.9876543209876543)
│✘ {1} A40 ⫹₇₀ 26575
│ ✔ Lettuce_romaine_6wk : 79/79 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6935)
 ✔ Lettuce_romaine_5wk : 80/81 (conf: 0.9876543209876543)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206)
  ✔ Corn_senesced_green_weeds : 76/76 (conf: 1.0)
  ✘ Lettuce_romaine_4wk : 80/83 (conf: 0.963855421686747)
● [ 02/07/2021 02:50:50 ] Saving tree to file ./gandalf/trees/tree_ef664644781195c89a57978ccbe7338be10920e1bec69b1ff26b93ee3a4466d8.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A41 ⫺₇₀ 25535)
✔ {1} A12 ⫹₆₀ 12087
│✔ Brocoli_green_weeds_1 : 18/18 (conf: 1.0)
│✘ {1} A40 ⫹₇₀ 26575
│ ✔ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 20/22 (conf: 0.9090909090909091)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6935)
 ✔ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206)
  ✔ Corn_senesced_green_weeds : 19/20 (conf: 0.95)
  ✘ Lettuce_romaine_4wk : 20/21 (conf: 0.9523809523809523)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	96.67%	90.0%	95.0%	100.0%	100.0%	95.0%	100.0%	100.0%	95.0%	95.24%	100.0%	100.0%	90.91%	||	96.0%	[94.74, 95.0, 97.56, 100.0, 97.44, 95.24]%	
  accuracy: 96.67% kappa: 96.0% 
 18  0  0  0  0  2	90.0%		Brocoli_green_weeds_1
  0 19  1  0  0  0	95.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  1  0  0 19  0	95.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9666666666666667
κ =		0.96
sensitivities:	[0.9, 0.95, 1.0, 1.0, 0.95, 1.0]
specificities:	[1.0, 0.99, 0.99, 1.0, 1.0, 0.98]
PPVs:		[1.0, 0.95, 0.9523809523809523, 1.0, 1.0, 0.9090909090909091]
NPVs:		[0.9803921568627451, 0.99, 1.0, 1.0, 0.9900990099009901, 1.0]
F1s:		[0.9473684210526315, 0.95, 0.975609756097561, 1.0, 0.9743589743589743, 0.9523809523809523]
accuracies:	[0.9833333333333333, 0.9833333333333333, 0.9916666666666667, 1.0, 0.9916666666666667, 0.9833333333333333]
mean_accuracy:	0.9888888888888888
Dataset_slice = (600) -> [10, 116, 221, 307, 469, 514, 12, 188, 231, 354, 401, 560, 84, 193, 239, 362, 483, 542, 52, 131, 230, 337, 491, 527, 45, 175, 218, 385, 492, 523, 87, 192, 265, 383, 486, 503, 14, 190, 264, 381, 480, 580, 20, 142, 242, 352, 422, 531, 39, 159, 210, 355, 453, 561, 9, 138, 279, 380, 488, 544, 38, 119, 250, 391, 454, 541, 43, 155, 289, 365, 495, 512, 23, 187, 292, 316, 457, 600, 92, 132, 205, 389, 403, 504, 93, 113, 286, 356, 440, 519, 51, 145, 296, 366, 418, 557, 89, 158, 240, 368, 433, 584, 67, 146, 259, 336, 449, 515, 100, 176, 244, 372, 464, 534, 71, 164, 283, 390, 460, 546, 36, 128, 243, 325, 404, 567, 19, 153, 236, 306, 412, 596, 94, 126, 237, 400, 496, 537, 68, 137, 260, 308, 466, 533, 22, 120, 222, 360, 493, 517, 21, 169, 214, 332, 445, 506, 1, 136, 290, 397, 413, 554, 5, 189, 238, 315, 414, 592, 53, 148, 235, 318, 456, 505, 46, 104, 300, 311, 497, 569, 91, 179, 297, 303, 416, 572, 3, 194, 248, 304, 408, 599, 34, 108, 285, 335, 407, 502, 41, 197, 247, 320, 437, 529, 62, 167, 281, 384, 431, 579, 75, 199, 272, 331, 411, 552, 73, 129, 257, 317, 439, 564, 97, 105, 209, 377, 420, 516, 55, 161, 217, 324, 475, 508, 80, 180, 298, 305, 430, 538, 59, 173, 212, 328, 424, 536, 63, 124, 206, 338, 438, 556, 4, 112, 204, 394, 417, 553, 54, 191, 220, 369, 435, 524, 74, 182, 274, 359, 443, 543, 95, 195, 234, 375, 470, 551, 78, 117, 277, 312, 487, 521, 96, 107, 226, 321, 451, 522, 99, 184, 255, 392, 410, 597, 16, 178, 232, 347, 423, 571, 72, 106, 249, 346, 479, 568, 90, 162, 295, 326, 406, 588, 60, 121, 288, 313, 471, 558, 44, 122, 219, 393, 434, 555, 18, 115, 275, 327, 402, 562, 25, 109, 299, 358, 473, 587, 32, 125, 252, 334, 429, 548, 77, 147, 211, 343, 459, 595, 28, 200, 251, 363, 444, 539, 24, 133, 284, 322, 481, 525, 76, 130, 213, 357, 432, 578, 17, 101, 293, 344, 499, 582, 65, 114, 227, 314, 442, 511, 31, 183, 203, 349, 482, 513, 30, 149, 291, 373, 450, 535, 50, 141, 225, 310, 500, 590, 85, 139, 233, 341, 468, 507, 26, 165, 258, 333, 447, 509, 33, 144, 270, 378, 462, 598, 37, 123, 269, 398, 441, 545, 64, 110, 215, 345, 474, 570, 56, 177, 266, 329, 425, 589, 27, 170, 246, 350, 472, 520, 49, 118, 268, 376, 465, 576, 57, 196, 262, 351, 476, 577, 69, 174, 245, 388, 428, 518, 70, 154, 224, 399, 455, 540, 8, 198, 253, 370, 494, 573, 83, 181, 208, 340, 478, 594, 15, 186, 254, 309, 458, 547, 98, 102, 267, 323, 490, 565, 11, 171, 223, 386, 498, 575, 7, 150, 261, 339, 477, 549, 29, 151, 278, 364, 463, 510, 2, 156, 273, 342, 426, 559, 48, 143, 263, 301, 467, 563, 61, 185, 256, 367, 461, 574, 82, 152, 202, 330, 436, 530, 6, 160, 280, 348, 485, 585, 81, 168, 207, 396, 421, 526, 79, 166, 276, 353, 419, 591, 88, 140, 294, 361, 415, 583, 35, 111, 229, 382, 489, 581, 13, 103, 201, 302, 427, 532, 66, 127, 287, 395, 452, 501, 47, 135, 271, 387, 446, 566, 42, 157, 241, 374, 448, 528, 40, 163, 282, 319, 484, 593, 86, 172, 228, 371, 405, 586, 58, 134, 216, 379, 409, 550]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	2152.64 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1882.62 MBs	(shape (3, 4, 3, 4, 480, 2040, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 02/07/2021 02:51:02 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (240+240=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A41 ⫺₇₀ 25535), purity -1.1210112487890092
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+159=240 samples) on frame 1 with decision: {1} A13 ⫺ 11173, purity -0.48164794911986897
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+81=240 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A102 ⫹₈₀ 10227), purity -0.48164794911986897
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A26 ⫹₇₀ 15207, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+76=159 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206), purity -0.08116857111448304
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
191.003772 seconds (1.99 G allocations: 42.274 GiB, 9.21% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A41 ⫺₇₀ 25535)
✔ {1} A13 ⫺ 11173
│✔ {1} A26 ⫹₇₀ 15207
││✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_6wk : 79/79 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/81 (conf: 0.9876543209876543)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A102 ⫹₈₀ 10227)
 ✔ Lettuce_romaine_5wk : 80/81 (conf: 0.9876543209876543)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206)
  ✔ Corn_senesced_green_weeds : 76/76 (conf: 1.0)
  ✘ Lettuce_romaine_4wk : 80/83 (conf: 0.963855421686747)
● [ 02/07/2021 02:54:13 ] Saving tree to file ./gandalf/trees/tree_fd63938b528cf0f8ed5d904cb40b1600b983e0a8c59e1b812d41d50df5b8067f.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A41 ⫺₇₀ 25535)
✔ {1} A13 ⫺ 11173
│✔ {1} A26 ⫹₇₀ 15207
││✔ Lettuce_romaine_7wk : 19/19 (conf: 1.0)
││✘ Lettuce_romaine_6wk : 19/20 (conf: 0.95)
│✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A102 ⫹₈₀ 10227)
 ✔ Lettuce_romaine_5wk : 20/21 (conf: 0.9523809523809523)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206)
  ✔ Corn_senesced_green_weeds : 19/19 (conf: 1.0)
  ✘ Lettuce_romaine_4wk : 20/21 (conf: 0.9523809523809523)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	97.5%	100.0%	95.0%	100.0%	100.0%	95.0%	95.0%	100.0%	100.0%	95.24%	95.24%	95.0%	100.0%	||	97.0%	[100.0, 97.44, 97.56, 97.56, 95.0, 97.44]%	
  accuracy: 97.5% kappa: 97.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 19  1  0  0  0	95.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  1 19  0	95.0%		Lettuce_romaine_6wk
  0  0  0  0  1 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.975
κ =		0.97
sensitivities:	[1.0, 0.95, 1.0, 1.0, 0.95, 0.95]
specificities:	[1.0, 1.0, 0.99, 0.99, 0.99, 1.0]
PPVs:		[1.0, 1.0, 0.9523809523809523, 0.9523809523809523, 0.95, 1.0]
NPVs:		[1.0, 0.9900990099009901, 1.0, 1.0, 0.99, 0.9900990099009901]
F1s:		[1.0, 0.9743589743589743, 0.975609756097561, 0.975609756097561, 0.95, 0.9743589743589743]
accuracies:	[1.0, 0.9916666666666667, 0.9916666666666667, 0.9916666666666667, 0.9833333333333333, 0.9916666666666667]
mean_accuracy:	0.9916666666666666
Dataset_slice = (600) -> [68, 113, 288, 329, 406, 554, 53, 120, 291, 341, 461, 505, 72, 123, 234, 372, 472, 560, 28, 128, 298, 379, 479, 553, 84, 172, 287, 311, 466, 538, 96, 182, 229, 309, 491, 516, 91, 200, 222, 382, 418, 508, 42, 156, 226, 342, 429, 562, 33, 167, 204, 385, 498, 502, 4, 158, 259, 316, 486, 511, 63, 102, 220, 354, 496, 551, 21, 101, 266, 327, 485, 570, 79, 179, 270, 393, 404, 537, 15, 151, 214, 332, 454, 532, 22, 115, 217, 375, 468, 578, 51, 118, 235, 378, 469, 525, 32, 153, 232, 352, 470, 506, 70, 160, 244, 373, 464, 595, 66, 138, 250, 380, 437, 514, 99, 176, 277, 338, 417, 547, 40, 168, 258, 305, 482, 577, 64, 196, 240, 363, 477, 521, 19, 150, 282, 347, 401, 529, 73, 140, 201, 337, 489, 550, 18, 186, 215, 304, 492, 581, 80, 106, 289, 353, 425, 585, 60, 170, 223, 330, 416, 515, 3, 144, 290, 392, 435, 530, 87, 124, 286, 384, 483, 534, 43, 131, 284, 346, 420, 552, 9, 143, 253, 361, 421, 531, 20, 162, 261, 308, 438, 513, 1, 110, 254, 343, 484, 543, 62, 174, 252, 349, 443, 567, 45, 135, 205, 339, 436, 510, 30, 134, 238, 367, 473, 539, 76, 148, 275, 325, 474, 544, 37, 173, 280, 359, 407, 557, 38, 137, 297, 377, 427, 535, 23, 166, 233, 399, 453, 523, 57, 132, 260, 365, 442, 526, 75, 108, 264, 333, 451, 563, 35, 145, 202, 312, 411, 573, 55, 159, 269, 340, 460, 566, 50, 164, 225, 344, 500, 579, 95, 103, 300, 395, 452, 527, 61, 155, 212, 386, 471, 600, 82, 105, 228, 387, 446, 518, 12, 161, 216, 383, 493, 575, 74, 112, 206, 381, 444, 509, 94, 180, 230, 390, 423, 504, 49, 109, 293, 336, 409, 555, 6, 184, 221, 324, 456, 549, 24, 187, 241, 345, 495, 546, 90, 114, 265, 364, 449, 558, 93, 121, 251, 351, 412, 556, 14, 177, 272, 358, 467, 587, 47, 169, 239, 400, 431, 533, 89, 194, 263, 391, 445, 528, 81, 147, 211, 369, 403, 522, 39, 127, 242, 397, 405, 571, 11, 195, 208, 334, 459, 569, 58, 192, 207, 319, 490, 599, 92, 199, 209, 388, 487, 572, 52, 104, 203, 396, 439, 576, 59, 188, 227, 348, 441, 540, 48, 193, 237, 315, 402, 542, 7, 122, 283, 317, 457, 598, 54, 141, 246, 303, 488, 561, 17, 126, 285, 389, 478, 512, 56, 171, 248, 398, 434, 517, 97, 133, 271, 318, 481, 541, 29, 189, 245, 322, 440, 589, 34, 163, 296, 356, 450, 596, 77, 185, 292, 328, 414, 584, 46, 107, 236, 326, 419, 565, 71, 116, 257, 394, 465, 507, 31, 183, 247, 366, 494, 594, 26, 198, 279, 357, 410, 564, 25, 190, 224, 355, 455, 524, 65, 178, 231, 313, 499, 536, 83, 146, 219, 350, 480, 591, 2, 152, 267, 320, 415, 574, 8, 154, 295, 376, 408, 586, 27, 157, 276, 321, 463, 592, 85, 181, 268, 362, 458, 588, 86, 125, 278, 331, 424, 580, 36, 111, 243, 307, 432, 582, 78, 117, 299, 306, 413, 548, 44, 197, 210, 335, 497, 519, 10, 175, 273, 314, 476, 501, 98, 191, 256, 302, 428, 597, 69, 139, 274, 374, 422, 520, 67, 165, 281, 360, 426, 559, 16, 149, 249, 310, 462, 590, 13, 129, 255, 368, 447, 583, 5, 136, 213, 370, 448, 593, 41, 142, 218, 301, 433, 545, 88, 130, 262, 323, 475, 568, 100, 119, 294, 371, 430, 503]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	2152.64 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1882.62 MBs	(shape (3, 4, 3, 4, 480, 2040, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 02/07/2021 02:54:25 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (241+239=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₈₀ 25645), purity -1.1098204493092325
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+159=239 samples) on frame 1 with decision: {1} A13 ⫺ 11173, purity -0.4611182302686674
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (161+80=241 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6896), purity -0.48540183076629684
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A39 ⫹₇₀ 21517, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+77=161 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206), purity -0.13303469879143387
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
193.021022 seconds (2.00 G allocations: 42.420 GiB, 9.59% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₈₀ 25645)
✔ {1} A13 ⫺ 11173
│✔ {1} A39 ⫹₇₀ 21517
││✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_7wk : 79/79 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6896)
 ✔ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206)
  ✔ Corn_senesced_green_weeds : 76/77 (conf: 0.987012987012987)
  ✘ Lettuce_romaine_4wk : 80/84 (conf: 0.9523809523809523)
● [ 02/07/2021 02:57:38 ] Saving tree to file ./gandalf/trees/tree_633bfe974b0bbac6d68634f4a8b6da848af31f05d62a1725a3d981e1b571b84a.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₈₀ 25645)
✔ {1} A13 ⫺ 11173
│✔ {1} A39 ⫹₇₀ 21517
││✔ Lettuce_romaine_6wk : 20/21 (conf: 0.9523809523809523)
││✘ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6896)
 ✔ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206)
  ✔ Corn_senesced_green_weeds : 19/19 (conf: 1.0)
  ✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	99.17%	100.0%	95.0%	100.0%	100.0%	100.0%	100.0%	100.0%	100.0%	100.0%	100.0%	95.24%	100.0%	||	99.0%	[100.0, 97.44, 100.0, 100.0, 97.56, 100.0]%	
  accuracy: 99.17% kappa: 99.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 19  0  0  1  0	95.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9916666666666667
κ =		0.99
sensitivities:	[1.0, 0.95, 1.0, 1.0, 1.0, 1.0]
specificities:	[1.0, 1.0, 1.0, 1.0, 0.99, 1.0]
PPVs:		[1.0, 1.0, 1.0, 1.0, 0.9523809523809523, 1.0]
NPVs:		[1.0, 0.9900990099009901, 1.0, 1.0, 1.0, 1.0]
F1s:		[1.0, 0.9743589743589743, 1.0, 1.0, 0.975609756097561, 1.0]
accuracies:	[1.0, 0.9916666666666667, 1.0, 1.0, 0.9916666666666667, 1.0]
mean_accuracy:	0.9972222222222222
Dataset_slice = (600) -> [20, 148, 247, 348, 409, 562, 36, 113, 203, 353, 426, 567, 75, 145, 228, 390, 401, 547, 9, 112, 249, 319, 421, 510, 92, 159, 288, 325, 482, 513, 88, 121, 212, 365, 407, 588, 28, 186, 224, 360, 406, 551, 79, 198, 274, 367, 408, 523, 8, 118, 297, 387, 439, 502, 73, 122, 204, 330, 479, 565, 83, 194, 243, 374, 472, 552, 40, 185, 275, 366, 446, 594, 61, 195, 273, 356, 473, 528, 70, 136, 202, 343, 455, 558, 51, 155, 282, 397, 450, 533, 48, 161, 245, 331, 499, 518, 50, 130, 281, 361, 425, 537, 13, 103, 293, 378, 444, 583, 27, 187, 240, 372, 415, 579, 35, 125, 217, 391, 440, 535, 69, 120, 236, 354, 466, 524, 45, 157, 253, 309, 458, 517, 97, 200, 277, 334, 485, 573, 68, 197, 294, 394, 476, 543, 3, 156, 264, 335, 423, 548, 85, 102, 260, 381, 437, 597, 94, 191, 234, 313, 416, 509, 7, 140, 238, 399, 434, 566, 19, 119, 226, 369, 462, 598, 87, 167, 287, 318, 478, 563, 1, 184, 262, 326, 483, 544, 16, 163, 235, 306, 412, 532, 25, 123, 284, 373, 414, 526, 31, 196, 270, 398, 449, 557, 64, 129, 211, 338, 500, 534, 81, 146, 206, 388, 447, 515, 57, 138, 246, 358, 420, 555, 23, 115, 209, 322, 452, 504, 90, 199, 232, 344, 492, 572, 42, 164, 244, 310, 465, 568, 26, 181, 248, 347, 428, 527, 30, 128, 261, 345, 431, 595, 91, 153, 227, 332, 471, 520, 17, 134, 207, 385, 494, 577, 59, 141, 229, 376, 457, 511, 96, 150, 252, 302, 441, 507, 2, 126, 300, 350, 445, 584, 52, 131, 299, 357, 448, 550, 24, 189, 223, 396, 489, 560, 15, 193, 237, 351, 470, 576, 86, 142, 205, 375, 477, 549, 46, 106, 266, 327, 461, 581, 67, 124, 286, 362, 495, 553, 71, 174, 233, 389, 433, 592, 66, 110, 213, 307, 419, 600, 18, 114, 201, 364, 480, 546, 58, 151, 290, 363, 411, 508, 39, 108, 276, 340, 463, 599, 34, 116, 256, 324, 464, 587, 80, 162, 258, 314, 459, 593, 82, 158, 231, 305, 493, 596, 6, 171, 285, 352, 498, 539, 53, 182, 272, 336, 403, 569, 60, 105, 268, 386, 438, 582, 93, 179, 271, 301, 443, 556, 44, 170, 251, 329, 413, 540, 32, 180, 289, 380, 424, 554, 49, 111, 225, 337, 456, 503, 43, 192, 219, 393, 475, 505, 100, 152, 220, 346, 496, 516, 41, 190, 230, 321, 469, 578, 5, 178, 255, 368, 427, 525, 54, 132, 280, 349, 410, 531, 65, 154, 210, 384, 429, 521, 72, 144, 296, 392, 490, 506, 76, 147, 241, 341, 432, 536, 98, 101, 216, 342, 484, 585, 11, 149, 257, 333, 497, 541, 78, 177, 218, 303, 481, 501, 21, 117, 215, 315, 436, 571, 62, 173, 214, 355, 488, 529, 14, 139, 222, 339, 435, 586, 22, 143, 208, 317, 442, 522, 12, 176, 298, 328, 418, 512, 37, 168, 269, 370, 453, 589, 95, 135, 259, 323, 417, 574, 74, 107, 254, 311, 404, 514, 33, 183, 278, 304, 491, 591, 99, 172, 239, 395, 402, 545, 63, 127, 250, 316, 451, 519, 29, 160, 292, 371, 474, 530, 56, 109, 242, 312, 460, 542, 10, 169, 279, 359, 405, 570, 47, 137, 267, 377, 467, 559, 4, 104, 291, 400, 422, 580, 38, 188, 283, 320, 430, 538, 84, 165, 221, 308, 454, 590, 89, 175, 263, 382, 486, 564, 55, 133, 265, 383, 487, 575, 77, 166, 295, 379, 468, 561]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	2152.64 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1882.62 MBs	(shape (3, 4, 3, 4, 480, 2040, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 02/07/2021 02:57:50 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (241+239=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₈₀ 25645), purity -1.1098204493092325
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+159=239 samples) on frame 1 with decision: {1} A13 ⫺ 11173, purity -0.4611182302686674
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (161+80=241 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6896), purity -0.48540183076629684
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A24 ⫺₆₀ 15598, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+80=161 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206), purity -0.066857150208527
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
192.771122 seconds (2.00 G allocations: 42.508 GiB, 9.41% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₈₀ 25645)
✔ {1} A13 ⫺ 11173
│✔ {1} A24 ⫺₆₀ 15598
││✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_7wk : 79/79 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6896)
 ✔ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206)
  ✔ Corn_senesced_green_weeds : 79/80 (conf: 0.9875)
  ✘ Lettuce_romaine_4wk : 80/81 (conf: 0.9876543209876543)
● [ 02/07/2021 03:01:03 ] Saving tree to file ./gandalf/trees/tree_7ed5cd9a1b0d4b289274ffd0865f925e5404378ae83158f55f9f7961be6e81b1.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₈₀ 25645)
✔ {1} A13 ⫺ 11173
│✔ {1} A24 ⫺₆₀ 15598
││✔ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
││✘ Lettuce_romaine_7wk : 20/22 (conf: 0.9090909090909091)
│✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6896)
 ✔ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206)
  ✔ Corn_senesced_green_weeds : 16/16 (conf: 1.0)
  ✘ Lettuce_romaine_4wk : 20/23 (conf: 0.8695652173913043)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	95.83%	100.0%	80.0%	100.0%	100.0%	95.0%	100.0%	100.0%	100.0%	86.96%	100.0%	100.0%	90.91%	||	95.0%	[100.0, 88.89, 93.02, 100.0, 97.44, 95.24]%	
  accuracy: 95.83% kappa: 95.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 16  3  0  0  1	80.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 19  1	95.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9583333333333334
κ =		0.9500000000000001
sensitivities:	[1.0, 0.8, 1.0, 1.0, 0.95, 1.0]
specificities:	[1.0, 1.0, 0.97, 1.0, 1.0, 0.98]
PPVs:		[1.0, 1.0, 0.8695652173913043, 1.0, 1.0, 0.9090909090909091]
NPVs:		[1.0, 0.9615384615384616, 1.0, 1.0, 0.9900990099009901, 1.0]
F1s:		[1.0, 0.8888888888888888, 0.9302325581395349, 1.0, 0.9743589743589743, 0.9523809523809523]
accuracies:	[1.0, 0.9666666666666667, 0.975, 1.0, 0.9916666666666667, 0.9833333333333333]
mean_accuracy:	0.9861111111111112
Dataset_slice = (600) -> [14, 145, 209, 319, 413, 525, 59, 126, 201, 393, 450, 561, 55, 102, 207, 312, 445, 527, 87, 121, 255, 362, 475, 501, 44, 116, 271, 308, 421, 555, 11, 131, 219, 380, 474, 532, 60, 110, 268, 310, 440, 528, 6, 101, 211, 304, 437, 518, 83, 167, 283, 357, 414, 597, 46, 162, 229, 318, 456, 585, 20, 123, 288, 395, 424, 584, 74, 140, 291, 373, 481, 551, 32, 165, 281, 315, 434, 589, 22, 135, 220, 398, 486, 544, 40, 152, 286, 316, 451, 593, 24, 103, 221, 350, 429, 515, 18, 137, 230, 355, 438, 543, 89, 125, 262, 390, 443, 595, 62, 124, 264, 383, 406, 529, 12, 172, 276, 377, 411, 517, 31, 163, 204, 369, 471, 503, 58, 168, 208, 302, 407, 547, 30, 129, 224, 325, 415, 505, 79, 104, 235, 326, 495, 519, 99, 197, 213, 343, 464, 581, 48, 173, 284, 388, 410, 568, 67, 149, 275, 391, 455, 548, 10, 198, 289, 360, 485, 554, 5, 182, 244, 397, 487, 599, 93, 164, 257, 384, 457, 530, 64, 187, 246, 354, 458, 583, 70, 134, 242, 371, 422, 577, 41, 133, 256, 351, 473, 512, 82, 158, 299, 322, 404, 507, 84, 120, 290, 314, 423, 522, 51, 199, 261, 359, 412, 523, 81, 175, 206, 340, 472, 539, 94, 181, 300, 303, 426, 514, 23, 179, 266, 321, 459, 572, 100, 176, 270, 376, 432, 560, 90, 109, 278, 346, 418, 510, 68, 186, 274, 379, 467, 556, 43, 117, 265, 382, 480, 570, 1, 178, 280, 344, 425, 504, 95, 132, 277, 332, 491, 524, 19, 113, 282, 378, 476, 579, 98, 112, 292, 348, 462, 563, 50, 106, 285, 352, 444, 550, 33, 170, 295, 386, 493, 537, 27, 136, 241, 337, 408, 564, 63, 148, 279, 324, 427, 511, 54, 119, 216, 372, 401, 575, 86, 193, 254, 306, 428, 567, 17, 188, 293, 399, 496, 508, 91, 142, 273, 328, 494, 574, 97, 189, 297, 320, 430, 531, 57, 155, 263, 301, 492, 557, 61, 196, 294, 347, 405, 594, 75, 141, 205, 349, 436, 590, 71, 183, 203, 341, 409, 562, 92, 180, 258, 394, 441, 520, 65, 177, 249, 309, 449, 598, 37, 166, 272, 356, 498, 582, 29, 195, 234, 331, 469, 513, 21, 127, 218, 313, 435, 541, 69, 184, 267, 368, 500, 534, 3, 185, 298, 334, 488, 588, 77, 139, 225, 327, 403, 516, 56, 107, 260, 396, 490, 558, 72, 200, 217, 342, 416, 580, 8, 111, 227, 366, 465, 571, 2, 190, 237, 374, 419, 596, 73, 130, 233, 363, 482, 538, 36, 159, 238, 307, 448, 578, 45, 146, 250, 375, 463, 587, 52, 153, 212, 335, 460, 566, 53, 156, 287, 311, 478, 552, 34, 143, 222, 389, 453, 526, 28, 169, 259, 323, 452, 569, 39, 128, 243, 365, 454, 533, 76, 115, 231, 364, 461, 546, 85, 105, 228, 400, 499, 559, 66, 171, 240, 305, 402, 573, 88, 108, 248, 387, 497, 521, 15, 174, 247, 370, 417, 549, 38, 154, 253, 339, 446, 586, 9, 114, 202, 367, 489, 535, 80, 192, 251, 353, 442, 540, 25, 160, 223, 392, 447, 565, 26, 191, 215, 329, 483, 591, 7, 151, 252, 381, 484, 576, 96, 194, 210, 338, 477, 536, 16, 144, 296, 317, 466, 545, 13, 147, 269, 333, 431, 553, 47, 150, 236, 336, 470, 600, 49, 157, 214, 385, 468, 509, 35, 118, 239, 358, 479, 542, 78, 122, 232, 345, 420, 502, 42, 161, 245, 361, 433, 506, 4, 138, 226, 330, 439, 592]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	2152.64 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1882.62 MBs	(shape (3, 4, 3, 4, 480, 2040, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 02/07/2021 03:01:15 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (238+242=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A46 ⫺₈₀ 24933), purity -1.118131486148477
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+82=242 samples) on frame 1 with decision: {1} A40 ⫹₇₀ 26169, purity -0.4971326530174778
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (158+80=238 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6896), purity -0.460103344380513
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A4 ⫺₆₀ 8561, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+75=158 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206), purity -0.08168229624811901
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
188.428851 seconds (1.98 G allocations: 42.093 GiB, 8.69% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A46 ⫺₈₀ 24933)
✔ {1} A40 ⫹₇₀ 26169
│✔ Lettuce_romaine_6wk : 80/82 (conf: 0.975609756097561)
│✘ {1} A4 ⫺₆₀ 8561
│ ✔ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6896)
 ✔ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206)
  ✔ Corn_senesced_green_weeds : 75/75 (conf: 1.0)
  ✘ Lettuce_romaine_4wk : 80/83 (conf: 0.963855421686747)
● [ 02/07/2021 03:04:23 ] Saving tree to file ./gandalf/trees/tree_9e6982c7d56c10c3989fe874799ce0d75529472e1cdde98638a578bf929200dc.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A46 ⫺₈₀ 24933)
✔ {1} A40 ⫹₇₀ 26169
│✔ Lettuce_romaine_6wk : 19/21 (conf: 0.9047619047619048)
│✘ {1} A4 ⫺₆₀ 8561
│ ✔ Brocoli_green_weeds_1 : 20/21 (conf: 0.9523809523809523)
│ ✘ Lettuce_romaine_7wk : 19/20 (conf: 0.95)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6896)
 ✔ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206)
  ✔ Corn_senesced_green_weeds : 17/17 (conf: 1.0)
  ✘ Lettuce_romaine_4wk : 20/21 (conf: 0.9523809523809523)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	95.83%	100.0%	85.0%	100.0%	100.0%	95.0%	95.0%	95.24%	100.0%	95.24%	100.0%	90.48%	95.0%	||	95.0%	[97.56, 91.89, 97.56, 100.0, 92.68, 95.0]%	
  accuracy: 95.83% kappa: 95.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 17  1  0  2  0	85.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 19  1	95.0%		Lettuce_romaine_6wk
  1  0  0  0  0 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.9583333333333334
κ =		0.9500000000000001
sensitivities:	[1.0, 0.85, 1.0, 1.0, 0.95, 0.95]
specificities:	[0.99, 1.0, 0.99, 1.0, 0.98, 0.99]
PPVs:		[0.9523809523809523, 1.0, 0.9523809523809523, 1.0, 0.9047619047619048, 0.95]
NPVs:		[1.0, 0.970873786407767, 1.0, 1.0, 0.98989898989899, 0.99]
F1s:		[0.975609756097561, 0.918918918918919, 0.975609756097561, 1.0, 0.926829268292683, 0.95]
accuracies:	[0.9916666666666667, 0.975, 0.9916666666666667, 1.0, 0.975, 0.9833333333333333]
mean_accuracy:	0.9861111111111112
Dataset_slice = (600) -> [70, 177, 261, 314, 419, 581, 28, 119, 212, 327, 454, 562, 31, 139, 280, 374, 459, 507, 19, 178, 249, 324, 453, 509, 5, 145, 248, 337, 422, 598, 75, 174, 287, 378, 420, 519, 12, 144, 202, 385, 465, 588, 26, 108, 298, 344, 403, 544, 67, 162, 228, 360, 498, 513, 14, 125, 236, 322, 482, 571, 50, 105, 214, 320, 440, 559, 25, 148, 229, 376, 423, 535, 11, 196, 219, 397, 434, 552, 51, 170, 257, 399, 417, 534, 6, 199, 207, 301, 427, 583, 4, 127, 273, 338, 450, 590, 63, 141, 270, 302, 486, 586, 62, 118, 276, 392, 435, 511, 54, 194, 216, 336, 437, 569, 73, 190, 251, 349, 411, 582, 16, 168, 238, 312, 449, 597, 76, 133, 292, 308, 436, 560, 94, 191, 234, 307, 469, 566, 21, 172, 253, 370, 461, 556, 96, 176, 295, 388, 401, 578, 97, 132, 275, 382, 475, 555, 60, 173, 217, 325, 470, 514, 9, 109, 272, 398, 402, 510, 40, 154, 250, 303, 443, 524, 72, 113, 240, 368, 431, 501, 99, 156, 279, 381, 497, 540, 44, 167, 220, 335, 489, 523, 91, 104, 245, 357, 416, 533, 92, 116, 297, 355, 412, 553, 71, 166, 246, 351, 426, 536, 13, 192, 203, 394, 410, 529, 98, 129, 206, 331, 414, 537, 79, 122, 281, 346, 448, 504, 18, 137, 224, 371, 442, 549, 48, 101, 289, 362, 487, 589, 56, 175, 285, 350, 456, 516, 22, 103, 242, 356, 408, 502, 35, 124, 293, 361, 428, 577, 81, 189, 262, 364, 460, 547, 84, 187, 230, 342, 478, 557, 37, 181, 208, 310, 418, 521, 87, 120, 299, 359, 458, 530, 77, 117, 237, 354, 462, 538, 34, 115, 231, 379, 429, 525, 65, 155, 205, 316, 495, 550, 7, 121, 252, 319, 488, 508, 41, 123, 264, 358, 499, 503, 3, 182, 201, 353, 452, 531, 59, 193, 290, 345, 439, 558, 55, 186, 296, 372, 457, 546, 43, 126, 241, 377, 463, 554, 29, 161, 263, 395, 405, 551, 8, 159, 221, 333, 471, 543, 86, 158, 227, 347, 413, 592, 46, 157, 274, 304, 424, 561, 64, 112, 204, 332, 445, 585, 78, 195, 211, 391, 430, 545, 85, 198, 209, 340, 493, 575, 15, 152, 282, 317, 433, 600, 1, 149, 258, 400, 477, 595, 42, 128, 254, 309, 464, 584, 100, 130, 271, 326, 500, 573, 30, 197, 267, 323, 425, 594, 10, 140, 283, 393, 468, 542, 89, 134, 218, 389, 441, 596, 88, 114, 278, 318, 446, 532, 49, 179, 277, 365, 467, 528, 17, 160, 247, 383, 481, 568, 23, 183, 223, 339, 479, 587, 27, 142, 286, 311, 415, 570, 20, 150, 259, 305, 421, 522, 68, 171, 288, 329, 407, 526, 69, 169, 243, 352, 494, 567, 24, 106, 284, 384, 491, 520, 74, 110, 235, 390, 473, 579, 36, 163, 256, 373, 406, 515, 57, 185, 266, 343, 480, 548, 53, 180, 239, 306, 476, 527, 95, 200, 255, 369, 404, 541, 61, 107, 226, 348, 409, 518, 66, 135, 265, 380, 484, 512, 52, 111, 233, 328, 472, 565, 58, 147, 210, 315, 447, 506, 47, 153, 232, 367, 474, 517, 83, 143, 268, 341, 432, 574, 39, 146, 215, 313, 490, 572, 93, 165, 244, 330, 466, 591, 90, 138, 225, 363, 451, 539, 33, 184, 291, 396, 455, 593, 2, 151, 300, 334, 496, 505, 38, 102, 260, 366, 492, 576, 80, 131, 269, 375, 483, 580, 82, 136, 222, 386, 485, 563, 45, 188, 213, 321, 444, 599, 32, 164, 294, 387, 438, 564]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	2152.64 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1882.62 MBs	(shape (3, 4, 3, 4, 480, 2040, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 02/07/2021 03:04:36 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (240+240=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₈₀ 25645), purity -1.09861228866811
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+160=240 samples) on frame 1 with decision: {1} A13 ⫺ 11173, purity -0.46209812037329695
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+80=240 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6896), purity -0.46209812037329695
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A39 ⫹₇₀ 21517, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+76=160 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206), purity -0.10050814302780178
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
191.880875 seconds (1.99 G allocations: 42.304 GiB, 9.64% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₈₀ 25645)
✔ {1} A13 ⫺ 11173
│✔ {1} A39 ⫹₇₀ 21517
││✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6896)
 ✔ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206)
  ✔ Corn_senesced_green_weeds : 76/76 (conf: 1.0)
  ✘ Lettuce_romaine_4wk : 80/84 (conf: 0.9523809523809523)
● [ 02/07/2021 03:07:47 ] Saving tree to file ./gandalf/trees/tree_a2d27a7c16018ace986f136013b4a51f4481a546eb5c059dc8d42ced921ad241.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₈₀ 25645)
✔ {1} A13 ⫺ 11173
│✔ {1} A39 ⫹₇₀ 21517
││✔ Lettuce_romaine_6wk : 20/21 (conf: 0.9523809523809523)
││✘ Lettuce_romaine_7wk : 19/19 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6896)
 ✔ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A8 ⫹₈₀ 14206)
  ✔ Corn_senesced_green_weeds : 19/20 (conf: 0.95)
  ✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	98.33%	100.0%	95.0%	100.0%	100.0%	100.0%	95.0%	100.0%	95.0%	100.0%	100.0%	95.24%	100.0%	||	98.0%	[100.0, 95.0, 100.0, 100.0, 97.56, 97.44]%	
  accuracy: 98.33% kappa: 98.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 19  0  0  1  0	95.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  1  0  0  0 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.9833333333333333
κ =		0.98
sensitivities:	[1.0, 0.95, 1.0, 1.0, 1.0, 0.95]
specificities:	[1.0, 0.99, 1.0, 1.0, 0.99, 1.0]
PPVs:		[1.0, 0.95, 1.0, 1.0, 0.9523809523809523, 1.0]
NPVs:		[1.0, 0.99, 1.0, 1.0, 1.0, 0.9900990099009901]
F1s:		[1.0, 0.95, 1.0, 1.0, 0.975609756097561, 0.9743589743589743]
accuracies:	[1.0, 0.9833333333333333, 1.0, 1.0, 0.9916666666666667, 0.9916666666666667]
mean_accuracy:	0.9944444444444445
Dataset_slice = (600) -> [21, 173, 279, 381, 499, 569, 64, 138, 231, 310, 469, 582, 10, 149, 269, 301, 481, 525, 84, 168, 271, 334, 458, 600, 13, 194, 289, 400, 497, 548, 73, 107, 225, 375, 444, 512, 20, 174, 213, 347, 441, 545, 60, 159, 210, 398, 448, 505, 22, 196, 237, 354, 492, 558, 27, 187, 300, 345, 461, 572, 3, 110, 264, 394, 498, 583, 48, 125, 238, 341, 464, 565, 24, 171, 293, 356, 470, 502, 1, 123, 260, 339, 417, 519, 95, 165, 224, 315, 422, 550, 30, 190, 294, 327, 484, 589, 29, 188, 211, 359, 429, 586, 65, 176, 232, 305, 500, 559, 85, 157, 282, 357, 472, 516, 4, 179, 202, 362, 436, 585, 50, 169, 261, 371, 460, 594, 8, 131, 256, 343, 439, 590, 89, 192, 240, 382, 447, 557, 68, 144, 221, 342, 438, 560, 23, 134, 277, 335, 419, 587, 56, 116, 278, 364, 459, 581, 70, 121, 292, 307, 440, 520, 71, 155, 247, 324, 425, 508, 62, 133, 204, 374, 405, 551, 31, 129, 299, 368, 479, 501, 49, 162, 227, 308, 401, 579, 15, 119, 249, 361, 467, 546, 77, 115, 265, 388, 426, 598, 61, 126, 242, 396, 463, 517, 52, 189, 275, 372, 491, 521, 11, 195, 234, 365, 468, 544, 75, 154, 222, 316, 480, 555, 67, 105, 226, 393, 466, 593, 81, 178, 267, 379, 477, 596, 44, 153, 266, 366, 476, 542, 38, 127, 245, 352, 452, 518, 17, 147, 219, 340, 427, 515, 96, 193, 229, 344, 457, 578, 35, 128, 262, 325, 431, 543, 36, 113, 230, 392, 414, 554, 40, 139, 281, 314, 435, 561, 93, 135, 268, 380, 430, 562, 55, 132, 285, 312, 421, 528, 90, 199, 212, 326, 486, 511, 72, 151, 208, 331, 434, 536, 19, 166, 283, 322, 403, 599, 87, 180, 244, 351, 462, 513, 74, 140, 254, 333, 490, 524, 39, 141, 241, 391, 412, 580, 18, 142, 207, 350, 485, 591, 25, 148, 246, 383, 410, 573, 2, 175, 239, 337, 495, 523, 91, 197, 209, 378, 478, 529, 83, 114, 274, 373, 474, 553, 99, 182, 255, 360, 489, 533, 43, 106, 258, 304, 454, 509, 53, 170, 218, 353, 404, 503, 6, 101, 235, 399, 445, 597, 28, 145, 263, 309, 442, 510, 79, 146, 257, 328, 456, 556, 42, 200, 273, 319, 496, 574, 66, 158, 206, 389, 493, 541, 92, 143, 201, 397, 443, 568, 76, 161, 290, 318, 424, 527, 7, 102, 297, 311, 413, 547, 14, 150, 216, 336, 415, 507, 5, 137, 284, 348, 406, 564, 57, 130, 296, 346, 402, 532, 88, 177, 295, 384, 450, 506, 86, 104, 203, 367, 423, 595, 63, 191, 217, 349, 451, 514, 16, 183, 250, 302, 420, 538, 32, 185, 236, 355, 446, 537, 100, 118, 287, 306, 473, 534, 80, 136, 252, 330, 418, 530, 33, 112, 286, 376, 407, 504, 69, 117, 233, 370, 471, 571, 37, 111, 223, 303, 433, 577, 26, 164, 276, 317, 449, 588, 59, 167, 251, 323, 408, 575, 41, 160, 280, 358, 483, 567, 12, 172, 228, 321, 455, 566, 9, 108, 272, 386, 437, 584, 47, 156, 253, 369, 482, 531, 46, 103, 259, 313, 428, 576, 51, 198, 220, 332, 487, 563, 45, 181, 215, 329, 409, 526, 98, 152, 291, 320, 453, 592, 94, 184, 288, 363, 488, 535, 34, 122, 205, 338, 411, 522, 54, 163, 214, 385, 416, 570, 78, 109, 298, 377, 494, 539, 58, 124, 270, 387, 432, 549, 97, 186, 248, 390, 475, 552, 82, 120, 243, 395, 465, 540]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	2152.64 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1882.62 MBs	(shape (3, 4, 3, 4, 480, 2040, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 02/07/2021 03:07:59 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (240+240=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A41 ⫺₇₀ 25582), purity -1.1210112487890092
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+159=240 samples) on frame 1 with decision: {1} A13 ⫺ 11173, purity -0.48164794911986897
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+81=240 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6935), purity -0.48164794911986897
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A23 ⫹₇₀ 15833, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A8 ⫺₇₀ 14464), purity -0.06753988862970013
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
191.688532 seconds (1.99 G allocations: 42.300 GiB, 9.42% gc time, 0.01% compilation time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A41 ⫺₇₀ 25582)
✔ {1} A13 ⫺ 11173
│✔ {1} A23 ⫹₇₀ 15833
││✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_6wk : 79/79 (conf: 1.0)
│✘ Brocoli_green_weeds_1 : 80/81 (conf: 0.9876543209876543)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6935)
 ✔ Lettuce_romaine_5wk : 80/81 (conf: 0.9876543209876543)
 ✘ {1} ⟨T̅P̅P̅⟩ (A8 ⫺₇₀ 14464)
  ✔ Lettuce_romaine_4wk : 79/80 (conf: 0.9875)
  ✘ Corn_senesced_green_weeds : 78/79 (conf: 0.9873417721518988)
● [ 02/07/2021 03:11:11 ] Saving tree to file ./gandalf/trees/tree_fd1f4f10c1248806d37c852e8cf0c055179cd4d032a58fa2f374cb3b82a6114e.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  3
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A41 ⫺₇₀ 25582)
✔ {1} A13 ⫺ 11173
│✔ {1} A23 ⫹₇₀ 15833
││✔ Lettuce_romaine_7wk : 19/20 (conf: 0.95)
││✘ Lettuce_romaine_6wk : 17/18 (conf: 0.9444444444444444)
│✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A84 ⫹₈₀ 6935)
 ✔ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 ✘ {1} ⟨T̅P̅P̅⟩ (A8 ⫺₇₀ 14464)
  ✔ Lettuce_romaine_4wk : 18/19 (conf: 0.9473684210526315)
  ✘ Corn_senesced_green_weeds : 19/23 (conf: 0.8260869565217391)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC8","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	94.17%	100.0%	95.0%	90.0%	100.0%	85.0%	95.0%	100.0%	82.61%	94.74%	100.0%	94.44%	95.0%	||	93.0%	[100.0, 88.37, 92.31, 100.0, 89.47, 95.0]%	
  accuracy: 94.17% kappa: 93.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 19  1  0  0  0	95.0%		Corn_senesced_green_weeds
  0  2 18  0  0  0	90.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  2  0  0 17  1	85.0%		Lettuce_romaine_6wk
  0  0  0  0  1 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.9416666666666667
κ =		0.9299999999999999
sensitivities:	[1.0, 0.95, 0.9, 1.0, 0.85, 0.95]
specificities:	[1.0, 0.96, 0.99, 1.0, 0.99, 0.99]
PPVs:		[1.0, 0.8260869565217391, 0.9473684210526315, 1.0, 0.9444444444444444, 0.95]
NPVs:		[1.0, 0.9896907216494846, 0.9801980198019802, 1.0, 0.9705882352941176, 0.99]
F1s:		[1.0, 0.8837209302325582, 0.9230769230769231, 1.0, 0.8947368421052632, 0.95]
accuracies:	[1.0, 0.9583333333333334, 0.975, 1.0, 0.9666666666666667, 0.9833333333333333]
mean_accuracy:	0.9805555555555556
Iteration "Salinas-A,(3,false,"o_RCC5","TestOpAll")"...
● [ 02/07/2021 03:11:11 ] Computing dataset...
● [ 02/07/2021 03:11:11 ] Computed dataset in 00:00:00
● [ 02/07/2021 03:11:11 ] Saving dataset to file ./gandalf/cache/dataset_060e7f57d191c313a182a968bf329e0b696b946db9f523bf4aa3f7061588b8b5.jld...
Dataseeds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

executing run 'Salinas-A,(3,false,"o_RCC5","TestOpAll")'...
dataset type = Tuple{Array{Int64, 4}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (test_operators = TestOperator[⫺, ⫹, ⫺₉₀, ⫹₉₀, ⫺₈₀, ⫹₈₀, ⫺₇₀, ⫹₇₀, ⫺₆₀, ⫹₆₀], ontology = Ontology{DecisionTree.ModalLogic.Interval2D}(RCC5))
dataset_slices    = (10 dataset_slices)

Frame 1/1
┌ LogLevel(-500): OntologicalDataset -> FeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:12
┌ LogLevel(-500): Instance 1/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 362/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 120/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 483/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 241/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): FeatModalDataset -> StumpFeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:358
┌ LogLevel(-500): Instance 1/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 362/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 120/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
