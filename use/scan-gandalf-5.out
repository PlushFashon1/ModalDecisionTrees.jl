  Activating environment at `~/DecisionTree.jl/Project.toml`
 1 trees
 0 forests 
Loading history file "./gandalf/progress.json"...
Iteration "Pavia,(1,false,"o_None","TestOpGeq")": skipping
Iteration "Pavia,(3,:flattened,"o_None","TestOpGeq")": skipping
Iteration "Pavia,(3,:averaged,"o_None","TestOpGeq")": skipping
Iteration "Pavia,(3,false,"o_RCC8","TestOpAll")": skipping
Iteration "Pavia,(3,false,"o_RCC5","TestOpAll")": skipping
Iteration "IndianPines,(1,false,"o_None","TestOpGeq")": skipping
Iteration "IndianPines,(3,:flattened,"o_None","TestOpGeq")": skipping
Iteration "IndianPines,(3,:averaged,"o_None","TestOpGeq")": skipping
Iteration "IndianPines,(3,false,"o_RCC8","TestOpAll")": skipping
Iteration "IndianPines,(3,false,"o_RCC5","TestOpAll")": skipping
Iteration "PaviaCentre,(1,false,"o_None","TestOpGeq")": skipping
Iteration "PaviaCentre,(3,:flattened,"o_None","TestOpGeq")": skipping
Iteration "PaviaCentre,(3,:averaged,"o_None","TestOpGeq")": skipping
Iteration "PaviaCentre,(3,false,"o_RCC8","TestOpAll")": skipping
Iteration "PaviaCentre,(3,false,"o_RCC5","TestOpAll")": skipping
Iteration "Salinas,(1,false,"o_None","TestOpGeq")": skipping
Iteration "Salinas,(3,:flattened,"o_None","TestOpGeq")": skipping
Iteration "Salinas,(3,:averaged,"o_None","TestOpGeq")": skipping
Iteration "Salinas,(3,false,"o_RCC8","TestOpAll")": skipping
Iteration "Salinas,(3,false,"o_RCC5","TestOpAll")"...
● [ 08/07/2021 14:25:39 ] Loading dataset from file ./gandalf/cache/dataset_59ee58d2067fdc2332ed1e86531466658391cb67bc2e4d536fc59e556ffaa20b.jld...
Dataseeds = [4, 5, 6, 7, 8, 9, 10]

executing run 'Salinas,(3,false,"o_RCC5","TestOpAll")'...
dataset type = Tuple{Array{Int64, 4}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (test_operators = TestOperator[⫺, ⫹, ⫺₉₀, ⫹₉₀, ⫺₈₀, ⫹₈₀, ⫺₇₀, ⫹₇₀, ⫺₆₀, ⫹₆₀], ontology = Ontology{DecisionTree.ModalLogic.Interval2D}(RCC5))
dataset_slices    = (7 dataset_slices)

Frame 1/1
┌ LogLevel(-500): OntologicalDataset -> FeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:12
┌ LogLevel(-500): Instance 1/1600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 962/1600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 320/1600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 1283/1600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 641/1600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): FeatModalDataset -> StumpFeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:358
┌ LogLevel(-500): Instance 1/1600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 962/1600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 320/1600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 1283/1600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 641/1600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
104543.242917 seconds (421.92 G allocations: 48.201 TiB, 88.94% gc time, 0.00% compilation time)
Dataset_slice = (1600) -> [60, 161, 270, 359, 480, 580, 608, 710, 877, 934, 1078, 1133, 1212, 1391, 1491, 1546, 46, 140, 238, 345, 460, 561, 649, 741, 817, 979, 1100, 1139, 1271, 1345, 1418, 1511, 23, 131, 243, 309, 470, 560, 652, 781, 844, 915, 1024, 1196, 1214, 1307, 1484, 1524, 40, 121, 266, 306, 436, 558, 613, 770, 827, 918, 1091, 1125, 1269, 1386, 1464, 1576, 68, 185, 240, 312, 488, 534, 694, 736, 860, 990, 1028, 1110, 1264, 1308, 1431, 1504, 29, 183, 233, 332, 495, 531, 646, 744, 869, 926, 1092, 1185, 1294, 1366, 1499, 1569, 53, 164, 208, 386, 441, 511, 603, 782, 826, 945, 1041, 1142, 1258, 1381, 1429, 1577, 24, 154, 269, 393, 440, 551, 690, 788, 808, 971, 1009, 1192, 1248, 1334, 1443, 1583, 83, 153, 226, 339, 425, 590, 651, 799, 833, 1000, 1001, 1134, 1243, 1374, 1450, 1600, 1, 112, 263, 302, 429, 515, 618, 776, 813, 913, 1010, 1165, 1246, 1314, 1435, 1594, 47, 146, 273, 387, 432, 545, 602, 737, 893, 941, 1065, 1140, 1257, 1382, 1434, 1579, 65, 110, 300, 341, 426, 529, 660, 756, 897, 953, 1088, 1148, 1239, 1325, 1406, 1591, 98, 115, 209, 348, 419, 530, 679, 772, 874, 904, 1034, 1153, 1288, 1348, 1471, 1587, 51, 176, 286, 395, 442, 516, 609, 775, 875, 942, 1059, 1188, 1277, 1357, 1459, 1538, 6, 148, 212, 336, 452, 556, 654, 760, 855, 980, 1073, 1172, 1291, 1346, 1479, 1582, 12, 103, 204, 303, 453, 600, 612, 758, 854, 911, 1056, 1102, 1298, 1310, 1408, 1551, 45, 122, 237, 366, 420, 541, 673, 722, 819, 914, 1089, 1187, 1261, 1398, 1426, 1506, 93, 167, 293, 368, 415, 521, 617, 707, 858, 947, 1058, 1168, 1267, 1383, 1451, 1571, 80, 106, 241, 323, 496, 563, 662, 763, 811, 906, 1002, 1143, 1207, 1332, 1486, 1507, 97, 193, 276, 365, 414, 592, 631, 748, 887, 981, 1045, 1101, 1216, 1355, 1454, 1588, 5, 132, 232, 390, 444, 528, 674, 792, 888, 925, 1095, 1116, 1237, 1394, 1411, 1552, 73, 124, 231, 358, 433, 504, 635, 764, 864, 967, 1011, 1193, 1244, 1389, 1465, 1553, 85, 174, 265, 329, 462, 524, 686, 784, 816, 951, 1023, 1141, 1221, 1309, 1482, 1536, 44, 134, 255, 322, 489, 578, 648, 732, 890, 905, 1043, 1137, 1234, 1336, 1470, 1592, 18, 160, 258, 372, 493, 501, 611, 783, 837, 984, 1064, 1180, 1299, 1328, 1439, 1521, 32, 188, 290, 394, 409, 554, 626, 745, 822, 968, 1019, 1173, 1202, 1330, 1495, 1564, 62, 200, 206, 320, 473, 587, 675, 733, 883, 962, 1062, 1152, 1265, 1316, 1407, 1522, 74, 111, 234, 360, 463, 514, 681, 761, 801, 933, 1030, 1186, 1259, 1337, 1420, 1581, 49, 128, 289, 355, 406, 533, 671, 789, 840, 930, 1037, 1151, 1279, 1327, 1414, 1531, 76, 191, 257, 381, 478, 566, 624, 729, 894, 923, 1071, 1126, 1227, 1356, 1449, 1502, 88, 125, 274, 349, 424, 546, 698, 704, 802, 987, 1018, 1174, 1240, 1380, 1457, 1503, 34, 101, 262, 318, 408, 573, 664, 780, 834, 973, 1086, 1161, 1262, 1359, 1481, 1527, 2, 162, 246, 324, 486, 570, 639, 717, 857, 946, 1046, 1124, 1208, 1379, 1480, 1597, 95, 105, 292, 337, 421, 595, 656, 778, 848, 931, 1031, 1162, 1219, 1352, 1474, 1599, 36, 197, 207, 343, 492, 520, 622, 759, 810, 966, 1033, 1179, 1300, 1370, 1421, 1516, 27, 147, 203, 362, 437, 577, 663, 752, 876, 976, 1022, 1135, 1232, 1360, 1485, 1565, 35, 149, 202, 375, 411, 539, 685, 727, 803, 978, 1077, 1190, 1245, 1338, 1419, 1509, 31, 170, 242, 374, 430, 571, 696, 779, 859, 963, 1066, 1128, 1284, 1317, 1492, 1547, 7, 126, 247, 344, 500, 552, 620, 730, 870, 992, 1038, 1120, 1253, 1396, 1428, 1574, 11, 184, 298, 338, 428, 532, 669, 734, 815, 965, 1006, 1189, 1281, 1319, 1447, 1557, 52, 109, 282, 370, 456, 562, 684, 767, 831, 958, 1005, 1158, 1280, 1395, 1453, 1525, 75, 142, 213, 328, 446, 576, 672, 716, 814, 901, 1090, 1171, 1206, 1399, 1463, 1589, 69, 152, 287, 330, 455, 564, 627, 702, 880, 924, 1081, 1195, 1236, 1302, 1416, 1528, 41, 172, 248, 354, 407, 582, 667, 753, 820, 917, 1093, 1167, 1274, 1368, 1483, 1598, 22, 194, 249, 397, 466, 572, 605, 712, 898, 988, 1072, 1119, 1220, 1390, 1455, 1515, 10, 136, 253, 399, 435, 542, 638, 790, 881, 909, 1013, 1176, 1251, 1397, 1476, 1541, 16, 157, 228, 357, 448, 585, 650, 798, 842, 940, 1026, 1114, 1224, 1365, 1445, 1595, 72, 178, 291, 313, 494, 526, 655, 794, 836, 986, 1012, 1106, 1275, 1387, 1493, 1542, 61, 173, 210, 319, 404, 586, 658, 749, 871, 935, 1044, 1150, 1230, 1315, 1448, 1558, 96, 143, 220, 351, 464, 598, 657, 751, 863, 995, 1035, 1113, 1263, 1363, 1498, 1568, 56, 158, 299, 378, 401, 557, 615, 800, 839, 937, 1082, 1129, 1223, 1322, 1460, 1530, 48, 175, 211, 367, 431, 509, 668, 731, 853, 910, 1032, 1145, 1238, 1367, 1427, 1573, 89, 104, 236, 389, 417, 527, 700, 771, 861, 957, 1080, 1138, 1210, 1324, 1405, 1578, 71, 139, 260, 376, 491, 536, 683, 754, 804, 952, 1014, 1182, 1211, 1371, 1424, 1540, 15, 168, 280, 327, 443, 599, 653, 708, 856, 975, 1017, 1166, 1218, 1301, 1432, 1514, 30, 119, 288, 310, 449, 594, 619, 701, 867, 949, 1015, 1154, 1255, 1369, 1410, 1501, 90, 138, 294, 305, 459, 549, 693, 795, 882, 902, 1048, 1107, 1273, 1340, 1469, 1562, 50, 118, 205, 400, 477, 518, 616, 714, 830, 929, 1094, 1109, 1289, 1344, 1467, 1548, 66, 130, 252, 380, 483, 589, 637, 743, 852, 921, 1096, 1122, 1292, 1342, 1456, 1590, 14, 144, 261, 369, 454, 503, 633, 705, 835, 961, 1060, 1197, 1296, 1347, 1468, 1545, 100, 145, 215, 371, 447, 579, 607, 768, 846, 936, 1052, 1155, 1285, 1378, 1440, 1555, 17, 156, 296, 356, 457, 508, 677, 746, 818, 999, 1036, 1132, 1249, 1306, 1478, 1561, 84, 186, 227, 315, 475, 565, 691, 750, 878, 983, 1076, 1198, 1266, 1341, 1473, 1586, 86, 179, 283, 304, 439, 548, 699, 720, 879, 919, 1074, 1130, 1228, 1303, 1409, 1575, 92, 113, 281, 335, 461, 537, 634, 709, 841, 920, 1098, 1160, 1287, 1343, 1436, 1584, 78, 163, 279, 342, 418, 596, 682, 719, 862, 950, 1047, 1191, 1242, 1376, 1477, 1543, 43, 133, 217, 311, 469, 519, 643, 715, 865, 907, 1067, 1159, 1217, 1375, 1442, 1570, 59, 169, 251, 316, 498, 547, 676, 796, 828, 989, 1020, 1112, 1235, 1358, 1475, 1544, 54, 177, 245, 361, 403, 591, 695, 791, 885, 932, 1016, 1175, 1226, 1362, 1487, 1596, 25, 117, 254, 384, 422, 543, 614, 769, 899, 985, 1004, 1131, 1215, 1335, 1413, 1518, 64, 108, 264, 346, 434, 505, 640, 797, 900, 997, 1099, 1178, 1203, 1364, 1462, 1513, 55, 165, 297, 352, 484, 593, 629, 777, 832, 954, 1049, 1104, 1225, 1326, 1494, 1532, 99, 159, 278, 307, 416, 538, 623, 728, 892, 991, 1003, 1194, 1241, 1385, 1444, 1560, 58, 150, 256, 388, 467, 502, 642, 739, 809, 903, 1039, 1127, 1247, 1349, 1422, 1593, 42, 196, 250, 326, 427, 569, 604, 703, 868, 938, 1027, 1115, 1205, 1354, 1402, 1523, 67, 141, 216, 331, 487, 525, 601, 742, 889, 944, 1083, 1136, 1297, 1313, 1497, 1520, 3, 137, 219, 373, 445, 544, 670, 713, 807, 994, 1050, 1111, 1229, 1388, 1430, 1559, 13, 195, 222, 377, 402, 583, 632, 723, 886, 948, 1021, 1121, 1256, 1353, 1437, 1567, 8, 102, 259, 340, 476, 535, 610, 787, 823, 964, 1061, 1105, 1272, 1305, 1423, 1517, 79, 151, 272, 398, 405, 512, 666, 773, 806, 943, 1007, 1199, 1290, 1311, 1425, 1512, 91, 180, 224, 325, 471, 522, 628, 740, 825, 959, 1097, 1170, 1250, 1320, 1500, 1580, 33, 189, 284, 333, 468, 510, 659, 718, 812, 969, 1068, 1169, 1276, 1361, 1458, 1526, 38, 182, 268, 379, 472, 517, 647, 735, 829, 993, 1057, 1183, 1213, 1351, 1446, 1505, 77, 166, 275, 391, 479, 523, 687, 762, 849, 996, 1042, 1163, 1233, 1400, 1441, 1563, 9, 181, 271, 353, 499, 588, 697, 765, 843, 972, 1054, 1181, 1295, 1393, 1415, 1519, 39, 155, 221, 317, 412, 553, 680, 785, 838, 970, 1075, 1184, 1204, 1373, 1461, 1534, 4, 198, 277, 392, 458, 513, 661, 747, 896, 974, 1029, 1146, 1254, 1323, 1466, 1566, 87, 199, 295, 383, 481, 550, 645, 706, 884, 939, 1051, 1123, 1201, 1331, 1438, 1539, 21, 114, 201, 334, 465, 507, 636, 725, 847, 956, 1070, 1117, 1222, 1339, 1403, 1549, 19, 120, 230, 363, 497, 567, 689, 724, 866, 928, 1079, 1157, 1270, 1321, 1404, 1554, 94, 190, 229, 314, 485, 575, 621, 766, 873, 922, 1069, 1103, 1293, 1312, 1452, 1537, 57, 116, 214, 308, 423, 597, 625, 721, 895, 912, 1087, 1149, 1268, 1372, 1496, 1572, 82, 192, 223, 350, 450, 581, 678, 726, 851, 916, 1008, 1164, 1260, 1350, 1472, 1508, 28, 171, 285, 347, 451, 559, 606, 786, 850, 908, 1085, 1156, 1283, 1304, 1433, 1510, 26, 127, 225, 385, 474, 574, 630, 711, 891, 955, 1063, 1118, 1209, 1384, 1412, 1533, 20, 107, 244, 301, 438, 506, 644, 757, 821, 960, 1040, 1147, 1231, 1329, 1488, 1550, 81, 135, 239, 396, 482, 540, 641, 755, 824, 998, 1084, 1177, 1282, 1333, 1401, 1535, 70, 123, 235, 321, 410, 568, 688, 793, 805, 927, 1055, 1144, 1286, 1392, 1490, 1529, 63, 129, 267, 382, 413, 555, 665, 738, 872, 977, 1053, 1108, 1252, 1377, 1417, 1585, 37, 187, 218, 364, 490, 584, 692, 774, 845, 982, 1025, 1200, 1278, 1318, 1489, 1556]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	3587.07 MBs
     ├ fmd	718.32 MBs	(shape (3, 4, 3, 4, 1280, 2040))
     ├ fmd_m	2868.75 MBs	(shape (3, 4, 3, 4, 1280, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	1.12 MBs
     ├ domain shape	(3, 3, 204, 320)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 09/07/2021 19:28:55 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (550+730=1280 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A134 ⫺₇₀ 4933), purity -2.1278128830552623
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (311+239=550 samples) on frame 1 with decision: {1} A7 ⫺ 9742, purity -1.2706625525495117
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (375+355=730 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A164 ⫹₆₀ 4386), purity -1.6331436890772748
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+80=239 samples) on frame 1 with decision: {1} ⟨DR⟩ (A46 ⫺ 60766), purity -0.4835579451770631
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (152+159=311 samples) on frame 1 with decision: {1} ⟨DR⟩ (A122 ⫹ 3526), purity -0.6927561950293193
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (194+161=355 samples) on frame 1 with decision: {1} A8 ⫺₆₀ 13026, purity -0.9914798887805203
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (211+164=375 samples) on frame 1 with decision: {1} A9 ⫺₇₀ 16896, purity -0.9528089400468176
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+79=159 samples) on frame 1 with decision: {1} A24 ⫺ 11720, purity -0.03373013750381463
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (64+88=152 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A55 ⫹₇₀ 24965), purity -0.5034912379407993
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+80=161 samples) on frame 1 with decision: {1} A4 ⫺ 10227, purity -0.06685715020852698
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+82=164 samples) on frame 1 with decision: {1} A149 ⫺₈₀ 688, purity -0.11466528220290684
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (105+89=194 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A103 ⫹ 9187), purity -0.5628927774223967
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A22 ⫹ 9734, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+131=211 samples) on frame 1 with decision: {1} ⟨PO⟩ (A10 ⫺ 16364), purity -0.46380719773956774
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+58=64 samples) on frame 1 with decision: {1} ⟨DR⟩ (A60 ⫺ 19453), purity -0.3436536200513687
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+80=89 samples) on frame 1 with decision: {1} A18 ⫺ 15590, purity -0.15988588484883612
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+70=88 samples) on frame 1 with decision: {1} ⟨DR⟩ (A109 ⫺ 414), purity -0.2968455295188835
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+24=105 samples) on frame 1 with decision: {1} A41 ⫹₆₀ 27357, purity -0.15487400396000806
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+48=131 samples) on frame 1 with decision: {1} A61 ⫺ 7263, purity -0.11309423902356679
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A1 ⫺₈₀ 2424, purity -0.8941321735745001
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+5=18 samples) on frame 1 with decision: {1} ⟨PP⟩ (A40 ⫺ 20797), purity -0.186947685280349
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (51+7=58 samples) on frame 1 with decision: {1} ⟨PO⟩ (A5 ⫹₆₀ 8811), purity -0.22789612126385
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
1678.407915 seconds (21.07 G allocations: 465.966 GiB, 23.41% gc time, 0.75% compilation time)
Train tree:
Decision Tree
Leaves: 23
Tot nodes: 45
Height: 6
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A134 ⫺₇₀ 4933)
✔ {1} ⟨P̅P̅⟩ (A164 ⫹₆₀ 4386)
│✔ {1} A8 ⫺₆₀ 13026
││✔ {1} A4 ⫺ 10227
│││✔ Stubble : 80/80 (conf: 1.0)
│││✘ Fallow_smooth : 79/81 (conf: 0.9753086419753086)
││✘ {1} ⟨P̅P̅⟩ (A103 ⫹ 9187)
││ ✔ {1} A18 ⫺ 15590
││ │✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
││ │✘ {1} A1 ⫺₈₀ 2424
││ │ ✔ Vinyard_untrained : 1/4 (conf: 0.25)
││ │ ✘ Grapes_untrained : 4/5 (conf: 0.8)
││ ✘ {1} A41 ⫹₆₀ 27357
││  ✔ Corn_senesced_green_weeds : 22/24 (conf: 0.9166666666666666)
││  ✘ Lettuce_romaine_7wk : 79/81 (conf: 0.9753086419753086)
│✘ {1} A9 ⫺₇₀ 16896
│ ✔ {1} A149 ⫺₈₀ 688
│ │✔ Soil_vinyard_develop : 80/82 (conf: 0.975609756097561)
│ │✘ Lettuce_romaine_4wk : 80/82 (conf: 0.975609756097561)
│ ✘ {1} ⟨PO⟩ (A10 ⫺ 16364)
│  ✔ {1} A61 ⫺ 7263
│  │✔ Corn_senesced_green_weeds : 48/48 (conf: 1.0)
│  │✘ Fallow : 80/83 (conf: 0.963855421686747)
│  ✘ Lettuce_romaine_5wk : 79/80 (conf: 0.9875)
✘ {1} A7 ⫺ 9742
 ✔ {1} ⟨DR⟩ (A46 ⫺ 60766)
 │✔ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
 │✘ {1} A24 ⫺ 11720
 │ ✔ Fallow_rough_plow : 78/79 (conf: 0.9873417721518988)
 │ ✘ Brocoli_green_weeds_2 : 80/80 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A122 ⫹ 3526)
  ✔ {1} A22 ⫹ 9734
  │✔ Celery : 80/80 (conf: 1.0)
  │✘ Vinyard_vertical_trellis : 79/79 (conf: 1.0)
  ✘ {1} ⟨P̅P̅⟩ (A55 ⫹₇₀ 24965)
   ✔ {1} ⟨DR⟩ (A109 ⫺ 414)
   │✔ Vinyard_untrained : 65/70 (conf: 0.9285714285714286)
   │✘ {1} ⟨PP⟩ (A40 ⫺ 20797)
   │ ✔ Vinyard_untrained : 3/5 (conf: 0.6)
   │ ✘ Grapes_untrained : 13/13 (conf: 1.0)
   ✘ {1} ⟨DR⟩ (A60 ⫺ 19453)
    ✔ {1} ⟨PO⟩ (A5 ⫹₆₀ 8811)
    │✔ Vinyard_untrained : 4/7 (conf: 0.5714285714285714)
    │✘ Grapes_untrained : 49/51 (conf: 0.9607843137254902)
    ✘ Vinyard_untrained : 5/6 (conf: 0.8333333333333334)
● [ 09/07/2021 19:56:55 ] Saving tree to file ./gandalf/trees/tree_0c3e5b6728937c2a00f745469305871214e6d3d9312b808d068d5ade47e14e94.jld...
Test tree:
Decision Tree
Leaves: 23
Tot nodes: 45
Height: 6
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A134 ⫺₇₀ 4933)
✔ {1} ⟨P̅P̅⟩ (A164 ⫹₆₀ 4386)
│✔ {1} A8 ⫺₆₀ 13026
││✔ {1} A4 ⫺ 10227
│││✔ Stubble : 20/20 (conf: 1.0)
│││✘ Fallow_smooth : 19/19 (conf: 1.0)
││✘ {1} ⟨P̅P̅⟩ (A103 ⫹ 9187)
││ ✔ {1} A18 ⫺ 15590
││ │✔ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
││ │✘ {1} A1 ⫺₈₀ 2424
││ │ ✔ Vinyard_untrained : 1/1 (conf: 1.0)
││ │ ✘ Grapes_untrained : 1/2 (conf: 0.5)
││ ✘ {1} A41 ⫹₆₀ 27357
││  ✔ Corn_senesced_green_weeds : 2/2 (conf: 1.0)
││  ✘ Lettuce_romaine_7wk : 16/16 (conf: 1.0)
│✘ {1} A9 ⫺₇₀ 16896
│ ✔ {1} A149 ⫺₈₀ 688
│ │✔ Soil_vinyard_develop : 20/20 (conf: 1.0)
│ │✘ Lettuce_romaine_4wk : 19/21 (conf: 0.9047619047619048)
│ ✘ {1} ⟨PO⟩ (A10 ⫺ 16364)
│  ✔ {1} A61 ⫺ 7263
│  │✔ Corn_senesced_green_weeds : 16/17 (conf: 0.9411764705882353)
│  │✘ Fallow : 19/20 (conf: 0.95)
│  ✘ Lettuce_romaine_5wk : 19/21 (conf: 0.9047619047619048)
✘ {1} A7 ⫺ 9742
 ✔ {1} ⟨DR⟩ (A46 ⫺ 60766)
 │✔ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
 │✘ {1} A24 ⫺ 11720
 │ ✔ Fallow_rough_plow : 19/24 (conf: 0.7916666666666666)
 │ ✘ Brocoli_green_weeds_2 : 19/20 (conf: 0.95)
 ✘ {1} ⟨DR⟩ (A122 ⫹ 3526)
  ✔ {1} A22 ⫹ 9734
  │✔ Celery : 20/20 (conf: 1.0)
  │✘ Vinyard_vertical_trellis : 20/20 (conf: 1.0)
  ✘ {1} ⟨P̅P̅⟩ (A55 ⫹₇₀ 24965)
   ✔ {1} ⟨DR⟩ (A109 ⫺ 414)
   │✔ Vinyard_untrained : 14/19 (conf: 0.7368421052631579)
   │✘ {1} ⟨PP⟩ (A40 ⫺ 20797)
   │ ✔ Vinyard_untrained : 0/0 (conf: NaN)
   │ ✘ Grapes_untrained : 2/2 (conf: 1.0)
   ✘ {1} ⟨DR⟩ (A60 ⫺ 19453)
    ✔ {1} ⟨PO⟩ (A5 ⫹₆₀ 8811)
    │✔ Vinyard_untrained : 1/2 (conf: 0.5)
    │✘ Grapes_untrained : 10/11 (conf: 0.9090909090909091)
    ✘ Vinyard_untrained : 2/3 (conf: 0.6666666666666666)
 test size = [(3, 3, 204, 320)]
 Purity threshold 1.0
RESULT:	Salinas,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	93.44%	100.0%	95.0%	100.0%	90.0%	95.0%	95.0%	95.0%	65.0%	95.0%	95.0%	100.0%	80.0%	100.0%	100.0%	90.0%	100.0%	100.0%	95.0%	100.0%	94.74%	95.0%	79.17%	100.0%	86.67%	90.48%	90.48%	100.0%	100.0%	100.0%	100.0%	72.0%	100.0%	||	93.0%	[100.0, 95.0, 100.0, 92.31, 95.0, 86.36, 97.44, 74.29, 92.68, 92.68, 100.0, 88.89, 100.0, 100.0, 80.0, 100.0]%	
  accuracy: 93.44% kappa: 93.0% 
 20  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 19  0  0  0  1  0  0  0  0  0  0  0  0  0  0	95.0%		Brocoli_green_weeds_2
  0  0 20  0  0  0  0  0  0  0  0  0  0  0  0  0	100.0%		Celery
  0  0  0 18  0  0  0  0  1  1  0  0  0  0  0  0	90.0%		Corn_senesced_green_weeds
  0  0  0  0 19  0  0  0  0  1  0  0  0  0  0  0	95.0%		Fallow
  0  1  0  0  0 19  0  0  0  0  0  0  0  0  0  0	95.0%		Fallow_rough_plow
  0  0  0  0  0  0 19  0  1  0  0  0  0  0  0  0	95.0%		Fallow_smooth
  0  0  0  0  0  0  0 13  0  0  0  0  0  0  7  0	65.0%		Grapes_untrained
  0  0  0  1  0  0  0  0 19  0  0  0  0  0  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0  0  1  0  0  0  0 19  0  0  0  0  0  0	95.0%		Lettuce_romaine_5wk
  0  0  0  0  0  0  0  0  0  0 20  0  0  0  0  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0  4  0  0  0  0  0 16  0  0  0  0	80.0%		Lettuce_romaine_7wk
  0  0  0  0  0  0  0  0  0  0  0  0 20  0  0  0	100.0%		Soil_vinyard_develop
  0  0  0  0  0  0  0  0  0  0  0  0  0 20  0  0	100.0%		Stubble
  0  0  0  0  0  0  0  2  0  0  0  0  0  0 18  0	90.0%		Vinyard_untrained
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 20	100.0%		Vinyard_vertical_trellis

overall_acc:	0.934375
κ =		0.9299999999999999
sensitivities:	[1.0, 0.95, 1.0, 0.9, 0.95, 0.95, 0.95, 0.65, 0.95, 0.95, 1.0, 0.8, 1.0, 1.0, 0.9, 1.0]
specificities:	[1.0, 0.9966666666666667, 1.0, 0.9966666666666667, 0.9966666666666667, 0.9833333333333333, 1.0, 0.9933333333333333, 0.9933333333333333, 0.9933333333333333, 1.0, 1.0, 1.0, 1.0, 0.9766666666666667, 1.0]
PPVs:		[1.0, 0.95, 1.0, 0.9473684210526315, 0.95, 0.7916666666666666, 1.0, 0.8666666666666667, 0.9047619047619048, 0.9047619047619048, 1.0, 1.0, 1.0, 1.0, 0.72, 1.0]
NPVs:		[1.0, 0.9966666666666667, 1.0, 0.9933554817275747, 0.9966666666666667, 0.9966216216216216, 0.9966777408637874, 0.9770491803278688, 0.9966555183946488, 0.9966555183946488, 1.0, 0.9868421052631579, 1.0, 1.0, 0.9932203389830508, 1.0]
F1s:		[1.0, 0.95, 1.0, 0.9230769230769231, 0.95, 0.8636363636363636, 0.9743589743589743, 0.7428571428571429, 0.926829268292683, 0.926829268292683, 1.0, 0.8888888888888888, 1.0, 1.0, 0.8, 1.0]
accuracies:	[1.0, 0.99375, 1.0, 0.990625, 0.99375, 0.98125, 0.996875, 0.971875, 0.990625, 0.990625, 1.0, 0.9875, 1.0, 1.0, 0.971875, 1.0]
mean_accuracy:	0.9917968750000001
Dataset_slice = (1600) -> [10, 116, 221, 307, 469, 514, 633, 738, 882, 901, 1079, 1178, 1257, 1396, 1458, 1584, 12, 188, 231, 354, 401, 560, 622, 715, 890, 903, 1014, 1106, 1272, 1367, 1500, 1535, 84, 193, 239, 362, 483, 542, 675, 754, 826, 986, 1075, 1190, 1261, 1349, 1455, 1570, 52, 131, 230, 337, 491, 527, 664, 792, 833, 989, 1036, 1158, 1204, 1365, 1415, 1508, 45, 175, 218, 385, 492, 523, 695, 788, 851, 905, 1054, 1119, 1294, 1385, 1408, 1579, 87, 192, 265, 383, 486, 503, 657, 744, 817, 942, 1006, 1155, 1298, 1397, 1412, 1539, 14, 190, 264, 381, 480, 580, 697, 760, 849, 906, 1056, 1104, 1222, 1389, 1456, 1527, 20, 142, 242, 352, 422, 531, 678, 762, 850, 993, 1009, 1128, 1249, 1320, 1485, 1507, 39, 159, 210, 355, 453, 561, 629, 766, 848, 988, 1081, 1172, 1262, 1369, 1487, 1582, 9, 138, 279, 380, 488, 544, 665, 716, 819, 946, 1082, 1143, 1284, 1315, 1433, 1503, 38, 119, 250, 391, 454, 541, 673, 782, 816, 979, 1066, 1137, 1268, 1395, 1488, 1543, 43, 155, 289, 365, 495, 512, 669, 789, 853, 916, 1018, 1173, 1280, 1353, 1435, 1562, 23, 187, 292, 316, 457, 600, 616, 783, 820, 925, 1037, 1181, 1270, 1373, 1477, 1578, 92, 132, 205, 389, 403, 504, 607, 755, 875, 975, 1093, 1115, 1217, 1328, 1402, 1501, 93, 113, 286, 356, 440, 519, 631, 771, 821, 938, 1034, 1165, 1240, 1388, 1492, 1555, 51, 145, 296, 366, 418, 557, 699, 739, 843, 963, 1071, 1182, 1203, 1392, 1421, 1528, 89, 158, 240, 368, 433, 584, 684, 756, 811, 947, 1067, 1108, 1244, 1363, 1460, 1541, 67, 146, 259, 336, 449, 515, 693, 759, 892, 951, 1022, 1121, 1263, 1376, 1466, 1542, 100, 176, 244, 372, 464, 534, 632, 711, 865, 962, 1010, 1139, 1211, 1387, 1457, 1545, 71, 164, 283, 390, 460, 546, 656, 704, 802, 952, 1064, 1145, 1233, 1333, 1450, 1572, 36, 128, 243, 325, 404, 567, 659, 710, 857, 932, 1076, 1162, 1290, 1381, 1448, 1532, 19, 153, 236, 306, 412, 596, 615, 751, 827, 974, 1015, 1134, 1215, 1344, 1446, 1564, 94, 126, 237, 400, 496, 537, 618, 736, 847, 933, 1048, 1168, 1260, 1368, 1483, 1518, 68, 137, 260, 308, 466, 533, 658, 786, 803, 918, 1083, 1192, 1286, 1364, 1495, 1506, 22, 120, 222, 360, 493, 517, 610, 798, 900, 977, 1025, 1153, 1225, 1317, 1422, 1525, 21, 169, 214, 332, 445, 506, 660, 714, 831, 995, 1005, 1150, 1227, 1308, 1445, 1585, 1, 136, 290, 397, 413, 554, 686, 725, 805, 919, 1003, 1125, 1221, 1332, 1417, 1556, 5, 189, 238, 315, 414, 592, 642, 728, 863, 922, 1040, 1131, 1243, 1377, 1478, 1573, 53, 148, 235, 318, 456, 505, 681, 772, 801, 930, 1060, 1187, 1250, 1357, 1440, 1574, 46, 104, 300, 311, 497, 569, 691, 779, 870, 917, 1028, 1196, 1251, 1374, 1484, 1596, 91, 179, 297, 303, 416, 572, 627, 799, 822, 937, 1013, 1110, 1214, 1336, 1496, 1558, 3, 194, 248, 304, 408, 599, 617, 720, 823, 931, 1042, 1133, 1242, 1318, 1459, 1537, 34, 108, 285, 335, 407, 502, 637, 749, 858, 907, 1016, 1199, 1201, 1346, 1443, 1583, 41, 197, 247, 320, 437, 529, 620, 713, 899, 964, 1100, 1167, 1224, 1313, 1405, 1594, 62, 167, 281, 384, 431, 579, 641, 707, 838, 909, 1052, 1102, 1276, 1341, 1418, 1592, 75, 199, 272, 331, 411, 552, 612, 765, 830, 934, 1049, 1142, 1285, 1362, 1482, 1512, 73, 129, 257, 317, 439, 564, 672, 741, 889, 920, 1097, 1107, 1256, 1302, 1452, 1575, 97, 105, 209, 377, 420, 516, 690, 745, 842, 994, 1023, 1151, 1287, 1345, 1430, 1600, 55, 161, 217, 324, 475, 508, 687, 784, 872, 992, 1055, 1146, 1255, 1321, 1486, 1553, 80, 180, 298, 305, 430, 538, 653, 761, 846, 926, 1035, 1148, 1291, 1329, 1470, 1566, 59, 173, 212, 328, 424, 536, 692, 712, 814, 959, 1029, 1166, 1230, 1338, 1409, 1599, 63, 124, 206, 338, 438, 556, 680, 780, 877, 902, 1032, 1132, 1239, 1323, 1420, 1505, 4, 112, 204, 394, 417, 553, 630, 702, 815, 940, 1068, 1200, 1292, 1360, 1403, 1587, 54, 191, 220, 369, 435, 524, 670, 724, 841, 958, 1063, 1111, 1245, 1314, 1424, 1568, 74, 182, 274, 359, 443, 543, 679, 769, 812, 966, 1072, 1122, 1296, 1391, 1441, 1588, 95, 195, 234, 375, 470, 551, 608, 726, 844, 972, 1070, 1149, 1202, 1309, 1471, 1540, 78, 117, 277, 312, 487, 521, 689, 795, 809, 998, 1021, 1129, 1264, 1350, 1454, 1519, 96, 107, 226, 321, 451, 522, 638, 757, 887, 943, 1030, 1175, 1279, 1316, 1411, 1517, 99, 184, 255, 392, 410, 597, 655, 719, 879, 936, 1074, 1141, 1266, 1380, 1404, 1577, 16, 178, 232, 347, 423, 571, 700, 787, 824, 945, 1026, 1193, 1299, 1322, 1431, 1533, 72, 106, 249, 346, 479, 568, 639, 733, 896, 971, 1033, 1185, 1219, 1378, 1451, 1548, 90, 162, 295, 326, 406, 588, 604, 763, 891, 997, 1046, 1183, 1283, 1325, 1473, 1567, 60, 121, 288, 313, 471, 558, 652, 796, 861, 956, 1090, 1188, 1275, 1386, 1464, 1550, 44, 122, 219, 393, 434, 555, 651, 718, 808, 1000, 1057, 1161, 1253, 1356, 1491, 1590, 18, 115, 275, 327, 402, 562, 676, 797, 852, 944, 1089, 1127, 1271, 1352, 1436, 1569, 25, 109, 299, 358, 473, 587, 677, 732, 860, 913, 1095, 1171, 1228, 1307, 1499, 1511, 32, 125, 252, 334, 429, 548, 654, 777, 818, 991, 1045, 1179, 1297, 1347, 1416, 1536, 77, 147, 211, 343, 459, 595, 674, 747, 886, 915, 1020, 1184, 1254, 1348, 1432, 1531, 28, 200, 251, 363, 444, 539, 625, 740, 837, 984, 1031, 1186, 1288, 1311, 1463, 1565, 24, 133, 284, 322, 481, 525, 645, 785, 856, 914, 1061, 1113, 1277, 1379, 1428, 1554, 76, 130, 213, 357, 432, 578, 647, 776, 806, 990, 1024, 1136, 1246, 1400, 1490, 1510, 17, 101, 293, 344, 499, 582, 623, 774, 898, 976, 1047, 1197, 1207, 1339, 1410, 1509, 65, 114, 227, 314, 442, 511, 614, 742, 880, 912, 1019, 1103, 1273, 1334, 1407, 1502, 31, 183, 203, 349, 482, 513, 663, 743, 878, 928, 1008, 1152, 1226, 1351, 1449, 1516, 30, 149, 291, 373, 450, 535, 635, 717, 884, 949, 1039, 1198, 1274, 1382, 1427, 1549, 50, 141, 225, 310, 500, 590, 611, 767, 813, 985, 1043, 1195, 1232, 1324, 1476, 1571, 85, 139, 233, 341, 468, 507, 682, 727, 895, 927, 1073, 1176, 1220, 1354, 1461, 1557, 26, 165, 258, 333, 447, 509, 628, 737, 807, 950, 1086, 1109, 1282, 1366, 1439, 1524, 33, 144, 270, 378, 462, 598, 698, 708, 873, 980, 1084, 1112, 1229, 1372, 1401, 1526, 37, 123, 269, 398, 441, 545, 650, 770, 834, 910, 1002, 1159, 1265, 1304, 1423, 1593, 64, 110, 215, 345, 474, 570, 643, 703, 893, 967, 1011, 1160, 1210, 1330, 1497, 1529, 56, 177, 266, 329, 425, 589, 609, 706, 888, 923, 1096, 1177, 1223, 1398, 1494, 1546, 27, 170, 246, 350, 472, 520, 605, 701, 876, 953, 1053, 1157, 1231, 1343, 1426, 1581, 49, 118, 268, 376, 465, 576, 661, 752, 869, 981, 1069, 1154, 1234, 1371, 1468, 1522, 57, 196, 262, 351, 476, 577, 640, 735, 864, 954, 1038, 1156, 1209, 1355, 1413, 1560, 69, 174, 245, 388, 428, 518, 636, 768, 894, 968, 1091, 1163, 1252, 1310, 1434, 1597, 70, 154, 224, 399, 455, 540, 667, 758, 810, 955, 1059, 1147, 1218, 1331, 1406, 1551, 8, 198, 253, 370, 494, 573, 613, 781, 836, 973, 1080, 1117, 1241, 1358, 1462, 1589, 83, 181, 208, 340, 478, 594, 648, 750, 804, 921, 1044, 1180, 1300, 1359, 1480, 1563, 15, 186, 254, 309, 458, 547, 696, 753, 854, 960, 1012, 1126, 1281, 1399, 1425, 1514, 98, 102, 267, 323, 490, 565, 646, 794, 897, 929, 1094, 1135, 1295, 1383, 1442, 1559, 11, 171, 223, 386, 498, 575, 621, 764, 874, 911, 1051, 1123, 1206, 1312, 1429, 1544, 7, 150, 261, 339, 477, 549, 606, 729, 839, 941, 1050, 1144, 1267, 1394, 1465, 1586, 29, 151, 278, 364, 463, 510, 694, 723, 855, 961, 1098, 1101, 1237, 1319, 1472, 1504, 2, 156, 273, 342, 426, 559, 688, 773, 883, 969, 1065, 1174, 1248, 1384, 1479, 1513, 48, 143, 263, 301, 467, 563, 603, 775, 835, 996, 1001, 1130, 1238, 1305, 1438, 1534, 61, 185, 256, 367, 461, 574, 685, 793, 868, 987, 1077, 1194, 1269, 1337, 1498, 1538, 82, 152, 202, 330, 436, 530, 644, 730, 829, 935, 1041, 1118, 1259, 1326, 1493, 1523, 6, 160, 280, 348, 485, 585, 666, 721, 825, 965, 1092, 1140, 1258, 1361, 1467, 1561, 81, 168, 207, 396, 421, 526, 662, 790, 867, 970, 1085, 1191, 1208, 1370, 1475, 1521, 79, 166, 276, 353, 419, 591, 624, 800, 845, 978, 1004, 1164, 1216, 1327, 1437, 1552, 88, 140, 294, 361, 415, 583, 626, 734, 862, 924, 1017, 1138, 1212, 1303, 1419, 1576, 35, 111, 229, 382, 489, 581, 634, 731, 832, 982, 1058, 1116, 1235, 1375, 1414, 1591, 13, 103, 201, 302, 427, 532, 683, 748, 881, 908, 1099, 1120, 1247, 1342, 1447, 1595, 66, 127, 287, 395, 452, 501, 602, 709, 866, 957, 1087, 1189, 1289, 1301, 1453, 1598, 47, 135, 271, 387, 446, 566, 619, 791, 885, 939, 1007, 1105, 1205, 1335, 1474, 1515, 42, 157, 241, 374, 448, 528, 649, 746, 828, 948, 1078, 1169, 1236, 1306, 1489, 1530, 40, 163, 282, 319, 484, 593, 668, 778, 859, 904, 1027, 1114, 1213, 1390, 1444, 1580, 86, 172, 228, 371, 405, 586, 671, 705, 840, 983, 1062, 1170, 1278, 1393, 1469, 1547, 58, 134, 216, 379, 409, 550, 601, 722, 871, 999, 1088, 1124, 1293, 1340, 1481, 1520]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	3587.07 MBs
     ├ fmd	718.32 MBs	(shape (3, 4, 3, 4, 1280, 2040))
     ├ fmd_m	2868.75 MBs	(shape (3, 4, 3, 4, 1280, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	1.12 MBs
     ├ domain shape	(3, 3, 204, 320)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 09/07/2021 19:57:23 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (554+726=1280 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A137 ⫺₇₀ 4394), purity -2.116886334802036
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (238+316=554 samples) on frame 1 with decision: {1} ⟨DR⟩ (A8 ⫹ 10219), purity -1.2722635765726926
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (376+350=726 samples) on frame 1 with decision: {1} A164 ⫹₆₀ 4402, purity -1.6148707519008474
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (158+80=238 samples) on frame 1 with decision: {1} ⟨DR⟩ (A26 ⫹ 8264), purity -0.4825834746286413
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+216=376 samples) on frame 1 with decision: {1} ⟨DR⟩ (A38 ⫺ 21134), purity -0.9664907937685155
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (163+187=350 samples) on frame 1 with decision: {1} A8 ⫹₆₀ 12299, purity -0.9447725664605965
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (157+159=316 samples) on frame 1 with decision: {1} A122 ⫹ 3526, purity -0.6930465196748473
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+78=158 samples) on frame 1 with decision: {1} A26 ⫺ 11024, purity -0.03386247467755994
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (93+64=157 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A48 ⫺₆₀ 26130), purity -0.5080143111085027
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+82=160 samples) on frame 1 with decision: {1} ⟨DR⟩ (A10 ⫹ 15965), purity -0.05876595712898976
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+82=163 samples) on frame 1 with decision: {1} A39 ⫹₇₀ 16747, purity -0.11200620748053242
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (101+86=187 samples) on frame 1 with decision: {1} A150 ⫺₇₀ 672, purity -0.49830200482617565
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A22 ⫹ 9734, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+134=216 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A151 ⫹₆₀ 2666), purity -0.5013888325592404
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+48=64 samples) on frame 1 with decision: {1} ⟨PP⟩ (A201 ⫺ 305), purity -0.3031907002018692
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+25=101 samples) on frame 1 with decision: {1} ⟨PP⟩ (A40 ⫹ 21986), purity -0.10972937907625904
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+81=93 samples) on frame 1 with decision: {1} A111 ⫺ 665, purity -0.40236757753198427
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (53+81=134 samples) on frame 1 with decision: {1} A22 ⫺ 21407, purity -0.1037635861399926
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+7=16 samples) on frame 1 with decision: {1} ⟨PP⟩ (A40 ⫺ 22447), purity -0.1962180539117056
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+4=25 samples) on frame 1 with decision: {1} A8 ⫹ 10352, purity -0.16635532333438685
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+77=81 samples) on frame 1 with decision: {1} A158 ⫹ 2119, purity -0.3170881028652356
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A1 ⫺ 2400, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (36+41=77 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A41 ⫺₆₀ 23682), purity -0.2628074399096635
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+29=41 samples) on frame 1 with decision: {1} ⟨PP⟩ (A81 ⫺ 3995), purity -0.30488224333171593
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+6=12 samples) on frame 1 with decision: {1} A41 ⫹ 23979, purity -0.22528060443315223
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
1803.074216 seconds (23.84 G allocations: 550.070 GiB, 25.40% gc time, 0.01% compilation time)
Train tree:
Decision Tree
Leaves: 26
Tot nodes: 51
Height: 9
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A137 ⫺₇₀ 4394)
✔ {1} A164 ⫹₆₀ 4402
│✔ {1} A8 ⫹₆₀ 12299
││✔ {1} A150 ⫺₇₀ 672
│││✔ Lettuce_romaine_6wk : 80/86 (conf: 0.9302325581395349)
│││✘ {1} ⟨PP⟩ (A40 ⫹ 21986)
│││ ✔ {1} A8 ⫹ 10352
│││ │✔ Grapes_untrained : 2/4 (conf: 0.5)
│││ │✘ Corn_senesced_green_weeds : 21/21 (conf: 1.0)
│││ ✘ Lettuce_romaine_7wk : 76/76 (conf: 1.0)
││✘ {1} A39 ⫹₇₀ 16747
││ ✔ Fallow_smooth : 79/82 (conf: 0.9634146341463414)
││ ✘ Stubble : 80/81 (conf: 0.9876543209876543)
│✘ {1} ⟨DR⟩ (A38 ⫺ 21134)
│ ✔ {1} ⟨P̅P̅⟩ (A151 ⫹₆₀ 2666)
│ │✔ {1} A22 ⫺ 21407
│ ││✔ Lettuce_romaine_4wk : 80/81 (conf: 0.9876543209876543)
│ ││✘ Corn_senesced_green_weeds : 51/53 (conf: 0.9622641509433962)
│ │✘ Soil_vinyard_develop : 80/82 (conf: 0.975609756097561)
│ ✘ {1} ⟨DR⟩ (A10 ⫹ 15965)
│  ✔ Lettuce_romaine_5wk : 80/82 (conf: 0.975609756097561)
│  ✘ Fallow : 78/78 (conf: 1.0)
✘ {1} ⟨DR⟩ (A8 ⫹ 10219)
 ✔ {1} A122 ⫹ 3526
 │✔ {1} A22 ⫹ 9734
 ││✔ Celery : 80/80 (conf: 1.0)
 ││✘ Vinyard_vertical_trellis : 79/79 (conf: 1.0)
 │✘ {1} ⟨P̅P̅⟩ (A48 ⫺₆₀ 26130)
 │ ✔ {1} ⟨PP⟩ (A201 ⫺ 305)
 │ │✔ Grapes_untrained : 46/48 (conf: 0.9583333333333334)
 │ │✘ {1} ⟨PP⟩ (A40 ⫺ 22447)
 │ │ ✔ Vinyard_untrained : 7/7 (conf: 1.0)
 │ │ ✘ {1} A1 ⫺ 2400
 │ │  ✔ Grapes_untrained : 5/5 (conf: 1.0)
 │ │  ✘ Grapes_untrained : 3/4 (conf: 0.75)
 │ ✘ {1} A111 ⫺ 665
 │  ✔ {1} A158 ⫹ 2119
 │  │✔ {1} ⟨P̅P̅⟩ (A41 ⫺₆₀ 23682)
 │  ││✔ {1} ⟨PP⟩ (A81 ⫺ 3995)
 │  │││✔ Vinyard_untrained : 28/29 (conf: 0.9655172413793104)
 │  │││✘ {1} A41 ⫹ 23979
 │  │││ ✔ Vinyard_untrained : 5/6 (conf: 0.8333333333333334)
 │  │││ ✘ Grapes_untrained : 6/6 (conf: 1.0)
 │  ││✘ Vinyard_untrained : 36/36 (conf: 1.0)
 │  │✘ Grapes_untrained : 4/4 (conf: 1.0)
 │  ✘ Grapes_untrained : 11/12 (conf: 0.9166666666666666)
 ✘ {1} ⟨DR⟩ (A26 ⫹ 8264)
  ✔ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
  ✘ {1} A26 ⫺ 11024
   ✔ Fallow_rough_plow : 77/78 (conf: 0.9871794871794872)
   ✘ Brocoli_green_weeds_2 : 80/80 (conf: 1.0)
● [ 09/07/2021 20:27:27 ] Saving tree to file ./gandalf/trees/tree_d1e8408697f33ac2e209f1d6b44429e8d072b60b82f2d594457a10002caccc97.jld...
Test tree:
Decision Tree
Leaves: 26
Tot nodes: 51
Height: 9
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A137 ⫺₇₀ 4394)
✔ {1} A164 ⫹₆₀ 4402
│✔ {1} A8 ⫹₆₀ 12299
││✔ {1} A150 ⫺₇₀ 672
│││✔ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
│││✘ {1} ⟨PP⟩ (A40 ⫹ 21986)
│││ ✔ {1} A8 ⫹ 10352
│││ │✔ Grapes_untrained : 1/2 (conf: 0.5)
│││ │✘ Corn_senesced_green_weeds : 2/7 (conf: 0.2857142857142857)
│││ ✘ Lettuce_romaine_7wk : 18/18 (conf: 1.0)
││✘ {1} A39 ⫹₇₀ 16747
││ ✔ Fallow_smooth : 20/24 (conf: 0.8333333333333334)
││ ✘ Stubble : 20/22 (conf: 0.9090909090909091)
│✘ {1} ⟨DR⟩ (A38 ⫺ 21134)
│ ✔ {1} ⟨P̅P̅⟩ (A151 ⫹₆₀ 2666)
│ │✔ {1} A22 ⫺ 21407
│ ││✔ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
│ ││✘ Corn_senesced_green_weeds : 15/16 (conf: 0.9375)
│ │✘ Soil_vinyard_develop : 18/18 (conf: 1.0)
│ ✘ {1} ⟨DR⟩ (A10 ⫹ 15965)
│  ✔ Lettuce_romaine_5wk : 20/21 (conf: 0.9523809523809523)
│  ✘ Fallow : 16/20 (conf: 0.8)
✘ {1} ⟨DR⟩ (A8 ⫹ 10219)
 ✔ {1} A122 ⫹ 3526
 │✔ {1} A22 ⫹ 9734
 ││✔ Celery : 20/20 (conf: 1.0)
 ││✘ Vinyard_vertical_trellis : 20/20 (conf: 1.0)
 │✘ {1} ⟨P̅P̅⟩ (A48 ⫺₆₀ 26130)
 │ ✔ {1} ⟨PP⟩ (A201 ⫺ 305)
 │ │✔ Grapes_untrained : 10/14 (conf: 0.7142857142857143)
 │ │✘ {1} ⟨PP⟩ (A40 ⫺ 22447)
 │ │ ✔ Vinyard_untrained : 2/2 (conf: 1.0)
 │ │ ✘ {1} A1 ⫺ 2400
 │ │  ✔ Grapes_untrained : 3/3 (conf: 1.0)
 │ │  ✘ Grapes_untrained : 0/0 (conf: NaN)
 │ ✘ {1} A111 ⫺ 665
 │  ✔ {1} A158 ⫹ 2119
 │  │✔ {1} ⟨P̅P̅⟩ (A41 ⫺₆₀ 23682)
 │  ││✔ {1} ⟨PP⟩ (A81 ⫺ 3995)
 │  │││✔ Vinyard_untrained : 3/4 (conf: 0.75)
 │  │││✘ {1} A41 ⫹ 23979
 │  │││ ✔ Vinyard_untrained : 0/0 (conf: NaN)
 │  │││ ✘ Grapes_untrained : 0/1 (conf: 0.0)
 │  ││✘ Vinyard_untrained : 8/8 (conf: 1.0)
 │  │✘ Grapes_untrained : 0/1 (conf: 0.0)
 │  ✘ Grapes_untrained : 1/2 (conf: 0.5)
 ✘ {1} ⟨DR⟩ (A26 ⫹ 8264)
  ✔ Brocoli_green_weeds_1 : 19/19 (conf: 1.0)
  ✘ {1} A26 ⫺ 11024
   ✔ Fallow_rough_plow : 18/18 (conf: 1.0)
   ✘ Brocoli_green_weeds_2 : 20/21 (conf: 0.9523809523809523)
 test size = [(3, 3, 204, 320)]
 Purity threshold 1.0
RESULT:	Salinas,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	91.56%	95.0%	100.0%	100.0%	85.0%	80.0%	90.0%	100.0%	75.0%	100.0%	100.0%	95.0%	90.0%	90.0%	100.0%	65.0%	100.0%	100.0%	95.24%	100.0%	73.91%	80.0%	100.0%	83.33%	65.22%	100.0%	95.24%	100.0%	100.0%	100.0%	90.91%	92.86%	100.0%	||	91.0%	[97.44, 97.56, 100.0, 79.07, 80.0, 94.74, 90.91, 69.77, 100.0, 97.56, 97.44, 94.74, 94.74, 95.24, 76.47, 100.0]%	
  accuracy: 91.56% kappa: 91.0% 
 19  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0	95.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0  0  0  0  0  0  0  0  0  0  0	100.0%		Brocoli_green_weeds_2
  0  0 20  0  0  0  0  0  0  0  0  0  0  0  0  0	100.0%		Celery
  0  0  0 17  2  0  0  1  0  0  0  0  0  0  0  0	85.0%		Corn_senesced_green_weeds
  0  0  0  1 16  0  2  0  0  1  0  0  0  0  0  0	80.0%		Fallow
  0  0  0  0  0 18  2  0  0  0  0  0  0  0  0  0	90.0%		Fallow_rough_plow
  0  0  0  0  0  0 20  0  0  0  0  0  0  0  0  0	100.0%		Fallow_smooth
  0  0  0  4  0  0  0 15  0  0  0  0  0  0  1  0	75.0%		Grapes_untrained
  0  0  0  0  0  0  0  0 20  0  0  0  0  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0  0  0  0  0  0  0 20  0  0  0  0  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0  0  0  0  0  0  0 19  0  0  1  0  0	95.0%		Lettuce_romaine_6wk
  0  0  0  1  0  0  0  0  0  0  0 18  0  1  0  0	90.0%		Lettuce_romaine_7wk
  0  0  0  0  2  0  0  0  0  0  0  0 18  0  0  0	90.0%		Soil_vinyard_develop
  0  0  0  0  0  0  0  0  0  0  0  0  0 20  0  0	100.0%		Stubble
  0  0  0  0  0  0  0  7  0  0  0  0  0  0 13  0	65.0%		Vinyard_untrained
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 20	100.0%		Vinyard_vertical_trellis

overall_acc:	0.915625
κ =		0.91
sensitivities:	[0.95, 1.0, 1.0, 0.85, 0.8, 0.9, 1.0, 0.75, 1.0, 1.0, 0.95, 0.9, 0.9, 1.0, 0.65, 1.0]
specificities:	[1.0, 0.9966666666666667, 1.0, 0.98, 0.9866666666666667, 1.0, 0.9866666666666667, 0.9733333333333334, 1.0, 0.9966666666666667, 1.0, 1.0, 1.0, 0.9933333333333333, 0.9966666666666667, 1.0]
PPVs:		[1.0, 0.9523809523809523, 1.0, 0.7391304347826086, 0.8, 1.0, 0.8333333333333334, 0.6521739130434783, 1.0, 0.9523809523809523, 1.0, 1.0, 1.0, 0.9090909090909091, 0.9285714285714286, 1.0]
NPVs:		[0.9966777408637874, 1.0, 1.0, 0.98989898989899, 0.9866666666666667, 0.9933774834437086, 1.0, 0.9831649831649831, 1.0, 1.0, 0.9966777408637874, 0.9933774834437086, 0.9933774834437086, 1.0, 0.9771241830065359, 1.0]
F1s:		[0.9743589743589743, 0.975609756097561, 1.0, 0.7906976744186046, 0.8, 0.9473684210526315, 0.9090909090909091, 0.6976744186046512, 1.0, 0.975609756097561, 0.9743589743589743, 0.9473684210526315, 0.9473684210526315, 0.9523809523809523, 0.7647058823529411, 1.0]
accuracies:	[0.996875, 0.996875, 1.0, 0.971875, 0.975, 0.99375, 0.9875, 0.959375, 1.0, 0.996875, 0.996875, 0.99375, 0.99375, 0.99375, 0.975, 1.0]
mean_accuracy:	0.9894531249999999
Dataset_slice = (1600) -> [68, 113, 288, 329, 406, 554, 655, 710, 862, 913, 1076, 1188, 1202, 1361, 1454, 1570, 53, 120, 291, 341, 461, 505, 698, 752, 882, 933, 1074, 1200, 1269, 1308, 1440, 1583, 72, 123, 234, 372, 472, 560, 663, 709, 872, 986, 1096, 1107, 1277, 1332, 1402, 1536, 28, 128, 298, 379, 479, 553, 632, 745, 818, 981, 1032, 1127, 1278, 1352, 1411, 1559, 84, 172, 287, 311, 466, 538, 673, 773, 871, 942, 1004, 1184, 1251, 1371, 1427, 1544, 96, 182, 229, 309, 491, 516, 668, 708, 899, 948, 1027, 1115, 1287, 1368, 1465, 1538, 91, 200, 222, 382, 418, 508, 627, 753, 877, 952, 1073, 1175, 1207, 1395, 1461, 1512, 42, 156, 226, 342, 429, 562, 694, 750, 801, 910, 1058, 1151, 1274, 1321, 1483, 1511, 33, 167, 204, 385, 498, 502, 635, 701, 823, 959, 1090, 1120, 1211, 1319, 1438, 1591, 4, 158, 259, 316, 486, 511, 631, 765, 806, 920, 1007, 1125, 1300, 1360, 1479, 1599, 63, 102, 220, 354, 496, 551, 700, 717, 851, 972, 1100, 1186, 1253, 1344, 1457, 1515, 21, 101, 266, 327, 485, 570, 662, 742, 859, 909, 1094, 1113, 1272, 1341, 1422, 1541, 79, 179, 270, 393, 404, 537, 693, 725, 900, 949, 1005, 1192, 1206, 1311, 1424, 1553, 15, 151, 214, 332, 454, 532, 612, 732, 838, 956, 1018, 1150, 1229, 1329, 1413, 1596, 22, 115, 217, 375, 468, 578, 615, 748, 805, 921, 1055, 1144, 1254, 1393, 1494, 1516, 51, 118, 235, 378, 469, 525, 681, 784, 810, 955, 1053, 1143, 1245, 1372, 1499, 1543, 32, 153, 232, 352, 470, 506, 646, 729, 893, 937, 1071, 1185, 1279, 1384, 1481, 1509, 70, 160, 244, 373, 464, 595, 640, 743, 873, 939, 1072, 1109, 1291, 1339, 1445, 1507, 66, 138, 250, 380, 437, 514, 609, 751, 830, 960, 1023, 1147, 1241, 1394, 1453, 1562, 99, 176, 277, 338, 417, 547, 664, 798, 814, 982, 1080, 1142, 1244, 1333, 1404, 1577, 40, 168, 258, 305, 482, 577, 622, 779, 844, 923, 1078, 1112, 1268, 1324, 1477, 1527, 64, 196, 240, 363, 477, 521, 613, 724, 811, 978, 1009, 1182, 1242, 1362, 1448, 1533, 19, 150, 282, 347, 401, 529, 671, 723, 876, 922, 1022, 1129, 1264, 1382, 1412, 1510, 73, 140, 201, 337, 489, 550, 611, 707, 822, 954, 1047, 1195, 1221, 1318, 1463, 1592, 18, 186, 215, 304, 492, 581, 624, 711, 847, 985, 1043, 1126, 1290, 1301, 1475, 1579, 80, 106, 289, 353, 425, 585, 676, 799, 809, 930, 1062, 1102, 1292, 1334, 1491, 1548, 60, 170, 223, 330, 416, 515, 606, 781, 807, 975, 1077, 1179, 1223, 1375, 1482, 1587, 3, 144, 290, 392, 435, 530, 660, 769, 896, 950, 1099, 1133, 1212, 1367, 1420, 1555, 87, 124, 286, 384, 483, 534, 638, 746, 835, 944, 1060, 1176, 1265, 1399, 1469, 1530, 43, 131, 284, 346, 420, 552, 621, 737, 868, 983, 1042, 1169, 1228, 1358, 1451, 1588, 9, 143, 253, 361, 421, 531, 661, 764, 804, 965, 1028, 1117, 1295, 1380, 1466, 1564, 20, 162, 261, 308, 438, 513, 658, 712, 870, 915, 1052, 1183, 1243, 1309, 1417, 1576, 1, 110, 254, 343, 484, 543, 601, 758, 808, 935, 1006, 1158, 1225, 1370, 1426, 1521, 62, 174, 252, 349, 443, 567, 649, 714, 834, 990, 1001, 1193, 1293, 1387, 1443, 1595, 45, 135, 205, 339, 436, 510, 683, 791, 856, 963, 1048, 1103, 1230, 1303, 1419, 1565, 30, 134, 238, 367, 473, 539, 628, 728, 890, 991, 1085, 1181, 1284, 1326, 1444, 1506, 76, 148, 275, 325, 474, 544, 618, 722, 866, 931, 1082, 1160, 1275, 1363, 1456, 1571, 37, 173, 280, 359, 407, 557, 691, 747, 803, 987, 1075, 1132, 1286, 1379, 1433, 1578, 38, 137, 297, 377, 427, 535, 678, 793, 812, 994, 1012, 1141, 1240, 1345, 1446, 1551, 23, 166, 233, 399, 453, 523, 656, 726, 855, 951, 1002, 1110, 1203, 1381, 1487, 1501, 57, 132, 260, 365, 442, 526, 680, 727, 865, 914, 1014, 1152, 1234, 1374, 1403, 1531, 75, 108, 264, 333, 451, 563, 636, 738, 854, 996, 1064, 1173, 1294, 1377, 1441, 1573, 35, 145, 202, 312, 411, 573, 686, 749, 869, 905, 1097, 1148, 1297, 1304, 1430, 1556, 55, 159, 269, 340, 460, 566, 688, 718, 864, 928, 1046, 1199, 1296, 1388, 1498, 1585, 50, 164, 225, 344, 500, 579, 645, 731, 821, 984, 1054, 1168, 1252, 1317, 1447, 1535, 95, 103, 300, 395, 452, 527, 641, 713, 842, 906, 1093, 1196, 1298, 1302, 1439, 1581, 61, 155, 212, 386, 471, 600, 603, 736, 816, 927, 1039, 1167, 1261, 1397, 1401, 1557, 82, 105, 228, 387, 446, 518, 659, 716, 817, 943, 1061, 1116, 1217, 1336, 1432, 1600, 12, 161, 216, 383, 493, 575, 651, 721, 853, 968, 1034, 1135, 1280, 1373, 1421, 1586, 74, 112, 206, 381, 444, 509, 654, 794, 819, 999, 1030, 1111, 1267, 1323, 1428, 1554, 94, 180, 230, 390, 423, 504, 604, 740, 813, 974, 1051, 1155, 1226, 1310, 1452, 1514, 49, 109, 293, 336, 409, 555, 633, 797, 825, 998, 1098, 1134, 1214, 1366, 1474, 1520, 6, 184, 221, 324, 456, 549, 684, 756, 858, 941, 1041, 1145, 1216, 1316, 1460, 1563, 24, 187, 241, 345, 495, 546, 625, 766, 826, 973, 1019, 1156, 1215, 1351, 1464, 1525, 90, 114, 265, 364, 449, 558, 620, 786, 860, 902, 1020, 1101, 1218, 1359, 1495, 1552, 93, 121, 251, 351, 412, 556, 695, 788, 874, 977, 1084, 1161, 1288, 1398, 1459, 1593, 14, 177, 272, 358, 467, 587, 677, 703, 839, 967, 1095, 1180, 1281, 1353, 1405, 1545, 47, 169, 239, 400, 431, 533, 643, 792, 846, 917, 1086, 1114, 1232, 1378, 1436, 1561, 89, 194, 263, 391, 445, 528, 642, 777, 892, 962, 1092, 1106, 1235, 1338, 1415, 1534, 81, 147, 211, 369, 403, 522, 607, 734, 848, 958, 1059, 1149, 1256, 1347, 1458, 1547, 39, 127, 242, 397, 405, 571, 674, 780, 887, 964, 1079, 1159, 1285, 1313, 1410, 1550, 11, 195, 208, 334, 459, 569, 614, 770, 827, 976, 1044, 1128, 1257, 1330, 1490, 1590, 58, 192, 207, 319, 490, 599, 644, 787, 880, 979, 1068, 1140, 1209, 1364, 1418, 1505, 92, 199, 209, 388, 487, 572, 667, 772, 867, 940, 1065, 1165, 1259, 1350, 1431, 1539, 52, 104, 203, 396, 439, 576, 637, 795, 881, 918, 1091, 1178, 1224, 1331, 1462, 1580, 59, 188, 227, 348, 441, 540, 657, 774, 841, 936, 1008, 1137, 1258, 1306, 1425, 1517, 48, 193, 237, 315, 402, 542, 610, 739, 802, 993, 1035, 1198, 1219, 1340, 1471, 1558, 7, 122, 283, 317, 457, 598, 608, 735, 857, 966, 1026, 1187, 1237, 1376, 1480, 1582, 54, 141, 246, 303, 488, 561, 616, 757, 878, 904, 1066, 1130, 1213, 1389, 1488, 1519, 17, 126, 285, 389, 478, 512, 687, 767, 824, 946, 1040, 1172, 1250, 1390, 1473, 1504, 56, 171, 248, 398, 434, 517, 690, 800, 879, 907, 1031, 1153, 1266, 1396, 1472, 1537, 97, 133, 271, 318, 481, 541, 679, 715, 875, 924, 1038, 1131, 1239, 1386, 1470, 1522, 29, 189, 245, 322, 440, 589, 669, 705, 843, 925, 1050, 1121, 1289, 1335, 1468, 1524, 34, 163, 296, 356, 450, 596, 692, 762, 886, 989, 1049, 1118, 1262, 1327, 1496, 1546, 77, 185, 292, 328, 414, 584, 630, 754, 833, 970, 1015, 1157, 1248, 1342, 1500, 1575, 46, 107, 236, 326, 419, 565, 619, 730, 852, 969, 1021, 1108, 1231, 1348, 1497, 1572, 71, 116, 257, 394, 465, 507, 648, 776, 820, 911, 1037, 1163, 1283, 1307, 1406, 1508, 31, 183, 247, 366, 494, 594, 602, 720, 891, 953, 1016, 1105, 1246, 1356, 1407, 1566, 26, 198, 279, 357, 410, 564, 634, 778, 888, 938, 1010, 1177, 1249, 1392, 1476, 1569, 25, 190, 224, 355, 455, 524, 653, 790, 863, 916, 1033, 1166, 1270, 1357, 1489, 1523, 65, 178, 231, 313, 499, 536, 672, 719, 845, 980, 1067, 1162, 1227, 1385, 1450, 1584, 83, 146, 219, 350, 480, 591, 665, 706, 832, 957, 1056, 1171, 1255, 1355, 1442, 1594, 2, 152, 267, 320, 415, 574, 605, 704, 895, 995, 1045, 1122, 1201, 1314, 1484, 1540, 8, 154, 295, 376, 408, 586, 647, 771, 898, 945, 1003, 1119, 1236, 1354, 1493, 1560, 27, 157, 276, 321, 463, 592, 699, 768, 850, 1000, 1087, 1123, 1271, 1325, 1434, 1574, 85, 181, 268, 362, 458, 588, 689, 783, 829, 947, 1029, 1189, 1220, 1400, 1467, 1503, 86, 125, 278, 331, 424, 580, 682, 782, 849, 908, 1025, 1164, 1247, 1383, 1429, 1589, 36, 111, 243, 307, 432, 582, 685, 702, 884, 997, 1011, 1194, 1263, 1312, 1478, 1528, 78, 117, 299, 306, 413, 548, 626, 789, 828, 929, 1083, 1136, 1299, 1343, 1408, 1549, 44, 197, 210, 335, 497, 519, 666, 755, 815, 901, 1013, 1104, 1273, 1369, 1416, 1567, 10, 175, 273, 314, 476, 501, 629, 785, 840, 919, 1063, 1124, 1205, 1337, 1485, 1598, 98, 191, 256, 302, 428, 597, 650, 760, 889, 903, 1070, 1174, 1210, 1349, 1449, 1568, 69, 139, 274, 374, 422, 520, 652, 744, 897, 934, 1069, 1139, 1238, 1320, 1455, 1542, 67, 165, 281, 360, 426, 559, 639, 759, 831, 971, 1081, 1190, 1282, 1315, 1486, 1518, 16, 149, 249, 310, 462, 590, 696, 775, 894, 992, 1088, 1146, 1276, 1365, 1409, 1526, 13, 129, 255, 368, 447, 583, 670, 741, 861, 961, 1089, 1197, 1204, 1328, 1435, 1532, 5, 136, 213, 370, 448, 593, 617, 763, 883, 912, 1024, 1154, 1222, 1322, 1492, 1529, 41, 142, 218, 301, 433, 545, 697, 761, 836, 926, 1036, 1138, 1208, 1346, 1437, 1513, 88, 130, 262, 323, 475, 568, 623, 796, 885, 932, 1017, 1170, 1233, 1391, 1414, 1597, 100, 119, 294, 371, 430, 503, 675, 733, 837, 988, 1057, 1191, 1260, 1305, 1423, 1502]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	3587.07 MBs
     ├ fmd	718.32 MBs	(shape (3, 4, 3, 4, 1280, 2040))
     ├ fmd_m	2868.75 MBs	(shape (3, 4, 3, 4, 1280, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	1.12 MBs
     ├ domain shape	(3, 3, 204, 320)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 09/07/2021 20:27:46 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (550+730=1280 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A137 ⫺₇₀ 4410), purity -2.1205810727806225
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (231+319=550 samples) on frame 1 with decision: {1} ⟨DR⟩ (A122 ⫹ 3526), purity -1.2652949220025067
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (380+350=730 samples) on frame 1 with decision: {1} A164 ⫹₇₀ 4402, purity -1.6217492434255272
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+155=231 samples) on frame 1 with decision: {1} A38 ⫺ 14339, purity -0.46474958369415365
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (217+163=380 samples) on frame 1 with decision: {1} A9 ⫺₇₀ 16896, purity -0.9733720096250205
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (187+163=350 samples) on frame 1 with decision: {1} A6 ⫺₇₀ 11861, purity -0.9571211402526095
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+159=319 samples) on frame 1 with decision: {1} A4 ⫹ 7498, purity -0.6931373226451498
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (48+107=155 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A44 ⫹₇₀ 24175), purity -0.5043320985375418
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+83=163 samples) on frame 1 with decision: {1} A149 ⫺₈₀ 672, purity -0.1121567683203595
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+80=163 samples) on frame 1 with decision: {1} A4 ⫺ 10227, purity -0.07917670433866751
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A37 ⫹ 10883, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+79=159 samples) on frame 1 with decision: {1} A22 ⫺ 10211, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (96+91=187 samples) on frame 1 with decision: {1} A92 ⫹₇₀ 13542, purity -0.5341619609502007
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (134+83=217 samples) on frame 1 with decision: {1} A10 ⫹ 16263, purity -0.49874992538457114
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+10=91 samples) on frame 1 with decision: {1} A150 ⫹₆₀ 688, purity -0.2150888722419079
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+17=96 samples) on frame 1 with decision: {1} ⟨DR⟩ (A104 ⫺ 8092), purity -0.055865540240692985
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+94=107 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A19 ⫺₇₀ 11345), purity -0.429040037658769
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+52=134 samples) on frame 1 with decision: {1} A61 ⫺₇₀ 7279, purity -0.10704566595471625
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+5=10 samples) on frame 1 with decision: {1} A17 ⫺₈₀ 13135, purity -0.7253364813857112
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (89+5=94 samples) on frame 1 with decision: {1} ⟨DR⟩ (A4 ⫺ 8280), purity -0.39370809997233364
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (64+25=89 samples) on frame 1 with decision: {1} ⟨PO⟩ (A88 ⫹ 10844), purity -0.2926756866001434
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+8=25 samples) on frame 1 with decision: {1} ⟨DR⟩ (A36 ⫺ 12854), purity -0.441488881312211
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+10=17 samples) on frame 1 with decision: {1} A184 ⫺ 1110, purity -0.16887142517758014
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
1821.454768 seconds (23.67 G allocations: 542.948 GiB, 26.14% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 24
Tot nodes: 47
Height: 9
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A137 ⫺₇₀ 4410)
✔ {1} A164 ⫹₇₀ 4402
│✔ {1} A6 ⫺₇₀ 11861
││✔ {1} A4 ⫺ 10227
│││✔ Stubble : 80/80 (conf: 1.0)
│││✘ Fallow_smooth : 80/83 (conf: 0.963855421686747)
││✘ {1} A92 ⫹₇₀ 13542
││ ✔ {1} A150 ⫹₆₀ 688
││ │✔ {1} A17 ⫺₈₀ 13135
││ ││✔ Corn_senesced_green_weeds : 3/5 (conf: 0.6)
││ ││✘ Grapes_untrained : 4/5 (conf: 0.8)
││ │✘ Lettuce_romaine_6wk : 80/81 (conf: 0.9876543209876543)
││ ✘ {1} ⟨DR⟩ (A104 ⫺ 8092)
││  ✔ Corn_senesced_green_weeds : 17/17 (conf: 1.0)
││  ✘ Lettuce_romaine_7wk : 78/79 (conf: 0.9873417721518988)
│✘ {1} A9 ⫺₇₀ 16896
│ ✔ {1} A149 ⫺₈₀ 672
│ │✔ Soil_vinyard_develop : 80/83 (conf: 0.963855421686747)
│ │✘ Lettuce_romaine_4wk : 79/80 (conf: 0.9875)
│ ✘ {1} A10 ⫹ 16263
│  ✔ Lettuce_romaine_5wk : 80/83 (conf: 0.963855421686747)
│  ✘ {1} A61 ⫺₇₀ 7279
│   ✔ Corn_senesced_green_weeds : 51/52 (conf: 0.9807692307692307)
│   ✘ Fallow : 80/82 (conf: 0.975609756097561)
✘ {1} ⟨DR⟩ (A122 ⫹ 3526)
 ✔ {1} A4 ⫹ 7498
 │✔ {1} A22 ⫺ 10211
 ││✔ Vinyard_vertical_trellis : 79/79 (conf: 1.0)
 ││✘ Celery : 80/80 (conf: 1.0)
 │✘ {1} A37 ⫹ 10883
 │ ✔ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
 │ ✘ Brocoli_green_weeds_2 : 80/80 (conf: 1.0)
 ✘ {1} A38 ⫺ 14339
  ✔ {1} ⟨P̅P̅⟩ (A44 ⫹₇₀ 24175)
  │✔ {1} ⟨P̅P̅⟩ (A19 ⫺₇₀ 11345)
  ││✔ {1} ⟨DR⟩ (A4 ⫺ 8280)
  │││✔ Grapes_untrained : 5/5 (conf: 1.0)
  │││✘ {1} ⟨PO⟩ (A88 ⫹ 10844)
  │││ ✔ {1} ⟨DR⟩ (A36 ⫺ 12854)
  │││ │✔ Vinyard_untrained : 8/8 (conf: 1.0)
  │││ │✘ {1} A184 ⫺ 1110
  │││ │ ✔ Grapes_untrained : 10/10 (conf: 1.0)
  │││ │ ✘ Vinyard_untrained : 6/7 (conf: 0.8571428571428571)
  │││ ✘ Vinyard_untrained : 62/64 (conf: 0.96875)
  ││✘ Grapes_untrained : 13/13 (conf: 1.0)
  │✘ Grapes_untrained : 44/48 (conf: 0.9166666666666666)
  ✘ Fallow_rough_plow : 76/76 (conf: 1.0)
● [ 09/07/2021 20:58:08 ] Saving tree to file ./gandalf/trees/tree_3b0249b4566dd184fe7fd897872bfeb6f611e6f688b72ccab7e990cfad767dbd.jld...
Test tree:
Decision Tree
Leaves: 24
Tot nodes: 47
Height: 9
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A137 ⫺₇₀ 4410)
✔ {1} A164 ⫹₇₀ 4402
│✔ {1} A6 ⫺₇₀ 11861
││✔ {1} A4 ⫺ 10227
│││✔ Stubble : 20/20 (conf: 1.0)
│││✘ Fallow_smooth : 18/20 (conf: 0.9)
││✘ {1} A92 ⫹₇₀ 13542
││ ✔ {1} A150 ⫹₆₀ 688
││ │✔ {1} A17 ⫺₈₀ 13135
││ ││✔ Corn_senesced_green_weeds : 4/5 (conf: 0.8)
││ ││✘ Grapes_untrained : 0/0 (conf: NaN)
││ │✘ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
││ ✘ {1} ⟨DR⟩ (A104 ⫺ 8092)
││  ✔ Corn_senesced_green_weeds : 2/2 (conf: 1.0)
││  ✘ Lettuce_romaine_7wk : 19/21 (conf: 0.9047619047619048)
│✘ {1} A9 ⫺₇₀ 16896
│ ✔ {1} A149 ⫺₈₀ 672
│ │✔ Soil_vinyard_develop : 20/23 (conf: 0.8695652173913043)
│ │✘ Lettuce_romaine_4wk : 17/18 (conf: 0.9444444444444444)
│ ✘ {1} A10 ⫹ 16263
│  ✔ Lettuce_romaine_5wk : 20/23 (conf: 0.8695652173913043)
│  ✘ {1} A61 ⫺₇₀ 7279
│   ✔ Corn_senesced_green_weeds : 9/10 (conf: 0.9)
│   ✘ Fallow : 18/19 (conf: 0.9473684210526315)
✘ {1} ⟨DR⟩ (A122 ⫹ 3526)
 ✔ {1} A4 ⫹ 7498
 │✔ {1} A22 ⫺ 10211
 ││✔ Vinyard_vertical_trellis : 19/19 (conf: 1.0)
 ││✘ Celery : 18/19 (conf: 0.9473684210526315)
 │✘ {1} A37 ⫹ 10883
 │ ✔ Brocoli_green_weeds_1 : 20/23 (conf: 0.8695652173913043)
 │ ✘ Brocoli_green_weeds_2 : 19/19 (conf: 1.0)
 ✘ {1} A38 ⫺ 14339
  ✔ {1} ⟨P̅P̅⟩ (A44 ⫹₇₀ 24175)
  │✔ {1} ⟨P̅P̅⟩ (A19 ⫺₇₀ 11345)
  ││✔ {1} ⟨DR⟩ (A4 ⫺ 8280)
  │││✔ Grapes_untrained : 0/0 (conf: NaN)
  │││✘ {1} ⟨PO⟩ (A88 ⫹ 10844)
  │││ ✔ {1} ⟨DR⟩ (A36 ⫺ 12854)
  │││ │✔ Vinyard_untrained : 1/1 (conf: 1.0)
  │││ │✘ {1} A184 ⫺ 1110
  │││ │ ✔ Grapes_untrained : 0/2 (conf: 0.0)
  │││ │ ✘ Vinyard_untrained : 1/1 (conf: 1.0)
  │││ ✘ Vinyard_untrained : 14/16 (conf: 0.875)
  ││✘ Grapes_untrained : 4/4 (conf: 1.0)
  │✘ Grapes_untrained : 12/15 (conf: 0.8)
  ✘ Fallow_rough_plow : 19/20 (conf: 0.95)
 test size = [(3, 3, 204, 320)]
 Purity threshold 1.0
RESULT:	Salinas,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	91.88%	100.0%	95.0%	90.0%	75.0%	90.0%	95.0%	90.0%	80.0%	85.0%	100.0%	100.0%	95.0%	100.0%	100.0%	80.0%	95.0%	86.96%	100.0%	94.74%	88.24%	94.74%	95.0%	90.0%	76.19%	94.44%	86.96%	100.0%	90.48%	86.96%	100.0%	88.89%	100.0%	||	91.33%	[93.02, 97.44, 92.31, 81.08, 92.31, 95.0, 90.0, 78.05, 89.47, 93.02, 100.0, 92.68, 93.02, 100.0, 84.21, 97.44]%	
  accuracy: 91.88% kappa: 91.33% 
 20  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  1 19  0  0  0  0  0  0  0  0  0  0  0  0  0  0	95.0%		Brocoli_green_weeds_2
  2  0 18  0  0  0  0  0  0  0  0  0  0  0  0  0	90.0%		Celery
  0  0  0 15  1  0  0  0  1  2  0  1  0  0  0  0	75.0%		Corn_senesced_green_weeds
  0  0  0  0 18  0  1  0  0  1  0  0  0  0  0  0	90.0%		Fallow
  0  0  0  0  0 19  1  0  0  0  0  0  0  0  0  0	95.0%		Fallow_rough_plow
  0  0  0  1  0  1 18  0  0  0  0  0  0  0  0  0	90.0%		Fallow_smooth
  0  0  0  1  0  0  0 16  0  0  0  1  0  0  2  0	80.0%		Grapes_untrained
  0  0  0  0  0  0  0  0 17  0  0  0  3  0  0  0	85.0%		Lettuce_romaine_4wk
  0  0  0  0  0  0  0  0  0 20  0  0  0  0  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0  0  0  0  0  0  0 20  0  0  0  0  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0  0  0  1  0  0  0 19  0  0  0  0	95.0%		Lettuce_romaine_7wk
  0  0  0  0  0  0  0  0  0  0  0  0 20  0  0  0	100.0%		Soil_vinyard_develop
  0  0  0  0  0  0  0  0  0  0  0  0  0 20  0  0	100.0%		Stubble
  0  0  0  0  0  0  0  4  0  0  0  0  0  0 16  0	80.0%		Vinyard_untrained
  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0 19	95.0%		Vinyard_vertical_trellis

overall_acc:	0.91875
κ =		0.9133333333333333
sensitivities:	[1.0, 0.95, 0.9, 0.75, 0.9, 0.95, 0.9, 0.8, 0.85, 1.0, 1.0, 0.95, 1.0, 1.0, 0.8, 0.95]
specificities:	[0.99, 1.0, 0.9966666666666667, 0.9933333333333333, 0.9966666666666667, 0.9966666666666667, 0.9933333333333333, 0.9833333333333333, 0.9966666666666667, 0.99, 1.0, 0.9933333333333333, 0.99, 1.0, 0.9933333333333333, 1.0]
PPVs:		[0.8695652173913043, 1.0, 0.9473684210526315, 0.8823529411764706, 0.9473684210526315, 0.95, 0.9, 0.7619047619047619, 0.9444444444444444, 0.8695652173913043, 1.0, 0.9047619047619048, 0.8695652173913043, 1.0, 0.8888888888888888, 1.0]
NPVs:		[1.0, 0.9966777408637874, 0.9933554817275747, 0.9834983498349835, 0.9933554817275747, 0.9966666666666667, 0.9933333333333333, 0.9866220735785953, 0.9900662251655629, 1.0, 1.0, 0.9966555183946488, 1.0, 1.0, 0.9867549668874173, 0.9966777408637874]
F1s:		[0.9302325581395349, 0.9743589743589743, 0.9230769230769231, 0.8108108108108109, 0.9230769230769231, 0.95, 0.9, 0.7804878048780488, 0.8947368421052632, 0.9302325581395349, 1.0, 0.926829268292683, 0.9302325581395349, 1.0, 0.8421052631578947, 0.9743589743589743]
accuracies:	[0.990625, 0.996875, 0.990625, 0.978125, 0.990625, 0.99375, 0.9875, 0.971875, 0.9875, 0.990625, 1.0, 0.990625, 0.990625, 1.0, 0.98125, 0.996875]
mean_accuracy:	0.9898437499999998
Dataset_slice = (1600) -> [20, 148, 247, 348, 409, 562, 685, 736, 873, 923, 1055, 1132, 1293, 1383, 1466, 1531, 36, 113, 203, 353, 426, 567, 608, 720, 812, 948, 1050, 1121, 1297, 1341, 1433, 1584, 75, 145, 228, 390, 401, 547, 663, 735, 807, 906, 1034, 1108, 1233, 1335, 1463, 1558, 9, 112, 249, 319, 421, 510, 661, 792, 865, 985, 1054, 1149, 1290, 1396, 1498, 1561, 92, 159, 288, 325, 482, 513, 648, 741, 803, 910, 1065, 1143, 1219, 1373, 1423, 1576, 88, 121, 212, 365, 407, 588, 626, 748, 885, 907, 1023, 1174, 1278, 1399, 1459, 1551, 28, 186, 224, 360, 406, 551, 662, 734, 857, 916, 1027, 1159, 1260, 1388, 1442, 1530, 79, 198, 274, 367, 408, 523, 633, 708, 826, 977, 1060, 1156, 1239, 1364, 1435, 1557, 8, 118, 297, 387, 439, 502, 687, 737, 890, 976, 1098, 1163, 1264, 1372, 1431, 1540, 73, 122, 204, 330, 479, 565, 683, 789, 836, 949, 1003, 1119, 1259, 1356, 1436, 1583, 83, 194, 243, 374, 472, 552, 632, 775, 856, 944, 1100, 1145, 1212, 1302, 1485, 1598, 40, 185, 275, 366, 446, 594, 700, 784, 821, 995, 1084, 1118, 1210, 1343, 1482, 1523, 61, 195, 273, 356, 473, 528, 620, 745, 810, 982, 1019, 1117, 1205, 1366, 1464, 1559, 70, 136, 202, 343, 455, 558, 673, 783, 830, 983, 1005, 1166, 1283, 1384, 1407, 1508, 51, 155, 282, 397, 450, 533, 647, 777, 892, 929, 1006, 1182, 1218, 1390, 1422, 1552, 48, 161, 245, 331, 499, 518, 676, 728, 872, 980, 1047, 1175, 1280, 1336, 1490, 1507, 50, 130, 281, 361, 425, 537, 671, 701, 852, 969, 1076, 1146, 1285, 1359, 1417, 1578, 13, 103, 293, 378, 444, 583, 627, 788, 815, 940, 1014, 1112, 1277, 1371, 1444, 1575, 27, 187, 240, 372, 415, 579, 606, 722, 823, 939, 1052, 1147, 1295, 1339, 1471, 1565, 35, 125, 217, 391, 440, 535, 609, 706, 867, 994, 1081, 1155, 1220, 1321, 1446, 1506, 69, 120, 236, 354, 466, 524, 628, 730, 868, 903, 1041, 1141, 1267, 1397, 1420, 1556, 45, 157, 253, 309, 458, 517, 610, 791, 811, 988, 1094, 1180, 1217, 1316, 1497, 1525, 97, 200, 277, 334, 485, 573, 617, 733, 900, 925, 1092, 1176, 1261, 1323, 1441, 1553, 68, 197, 294, 394, 476, 543, 646, 727, 833, 919, 1022, 1178, 1292, 1320, 1408, 1543, 3, 156, 264, 335, 423, 548, 640, 757, 831, 921, 1026, 1129, 1255, 1347, 1465, 1519, 85, 102, 260, 381, 437, 597, 642, 723, 881, 930, 1017, 1109, 1263, 1370, 1493, 1517, 94, 191, 234, 313, 416, 509, 653, 781, 893, 979, 1087, 1171, 1231, 1329, 1404, 1568, 7, 140, 238, 399, 434, 566, 645, 763, 848, 950, 1010, 1161, 1222, 1377, 1478, 1582, 19, 119, 226, 369, 462, 598, 680, 709, 835, 959, 1024, 1124, 1272, 1400, 1491, 1590, 87, 167, 287, 318, 478, 563, 604, 755, 883, 943, 1073, 1104, 1265, 1330, 1401, 1524, 1, 184, 262, 326, 483, 544, 636, 715, 820, 993, 1095, 1139, 1230, 1393, 1402, 1572, 16, 163, 235, 306, 412, 532, 615, 766, 814, 996, 1009, 1185, 1251, 1358, 1418, 1520, 25, 123, 284, 373, 414, 526, 691, 786, 859, 917, 1018, 1177, 1258, 1303, 1409, 1596, 31, 196, 270, 398, 449, 557, 693, 751, 825, 935, 1068, 1162, 1270, 1314, 1443, 1577, 64, 129, 211, 338, 500, 534, 619, 762, 828, 909, 1069, 1144, 1266, 1344, 1499, 1546, 81, 146, 206, 388, 447, 515, 681, 796, 889, 981, 1089, 1116, 1284, 1395, 1428, 1592, 57, 138, 246, 358, 420, 555, 605, 710, 824, 905, 1048, 1181, 1294, 1367, 1437, 1549, 23, 115, 209, 322, 452, 504, 694, 761, 888, 989, 1091, 1134, 1291, 1376, 1462, 1593, 90, 199, 232, 344, 492, 572, 614, 773, 874, 965, 1004, 1102, 1225, 1338, 1454, 1599, 42, 164, 244, 310, 465, 568, 695, 760, 805, 922, 1020, 1165, 1202, 1386, 1494, 1569, 26, 181, 248, 347, 428, 527, 650, 753, 891, 947, 1044, 1167, 1216, 1318, 1411, 1550, 30, 128, 261, 345, 431, 595, 670, 785, 875, 997, 1029, 1122, 1206, 1392, 1412, 1541, 91, 153, 227, 332, 471, 520, 689, 759, 866, 918, 1072, 1198, 1223, 1353, 1480, 1560, 17, 134, 207, 385, 494, 577, 607, 747, 895, 961, 1030, 1168, 1241, 1332, 1474, 1538, 59, 141, 229, 376, 457, 511, 675, 731, 858, 902, 1059, 1195, 1296, 1369, 1419, 1566, 96, 150, 252, 302, 441, 507, 643, 705, 827, 1000, 1088, 1183, 1246, 1301, 1449, 1513, 2, 126, 300, 350, 445, 584, 602, 764, 846, 936, 1085, 1172, 1235, 1350, 1410, 1563, 52, 131, 299, 357, 448, 550, 677, 704, 860, 986, 1083, 1103, 1242, 1387, 1495, 1503, 24, 189, 223, 396, 489, 560, 659, 717, 896, 998, 1033, 1151, 1299, 1357, 1415, 1564, 15, 193, 237, 351, 470, 576, 644, 770, 838, 984, 1075, 1126, 1214, 1351, 1426, 1567, 86, 142, 205, 375, 477, 549, 624, 732, 851, 945, 1040, 1190, 1208, 1375, 1445, 1527, 46, 106, 266, 327, 461, 581, 638, 726, 882, 968, 1008, 1197, 1228, 1346, 1492, 1574, 67, 124, 286, 362, 495, 553, 667, 743, 840, 937, 1042, 1101, 1289, 1348, 1470, 1579, 71, 174, 233, 389, 433, 592, 630, 765, 849, 957, 1021, 1105, 1256, 1391, 1476, 1581, 66, 110, 213, 307, 419, 600, 634, 738, 845, 911, 1025, 1164, 1221, 1345, 1456, 1555, 18, 114, 201, 364, 480, 546, 688, 767, 817, 904, 1063, 1200, 1232, 1325, 1429, 1539, 58, 151, 290, 363, 411, 508, 655, 768, 899, 928, 1015, 1110, 1245, 1327, 1414, 1514, 39, 108, 276, 340, 463, 599, 629, 718, 806, 912, 1039, 1196, 1298, 1307, 1475, 1509, 34, 116, 256, 324, 464, 587, 699, 800, 841, 973, 1097, 1199, 1286, 1355, 1427, 1501, 80, 162, 258, 314, 459, 593, 658, 707, 887, 956, 1061, 1125, 1238, 1310, 1461, 1554, 82, 158, 231, 305, 493, 596, 652, 795, 870, 975, 1031, 1113, 1281, 1308, 1424, 1536, 6, 171, 285, 352, 498, 539, 674, 794, 854, 960, 1080, 1154, 1279, 1331, 1477, 1528, 53, 182, 272, 336, 403, 569, 668, 721, 864, 927, 1046, 1133, 1282, 1324, 1421, 1542, 60, 105, 268, 386, 438, 582, 613, 714, 898, 953, 1079, 1138, 1227, 1352, 1430, 1512, 93, 179, 271, 301, 443, 556, 612, 756, 832, 987, 1053, 1187, 1257, 1379, 1500, 1589, 44, 170, 251, 329, 413, 540, 690, 713, 822, 963, 1011, 1140, 1247, 1349, 1483, 1573, 32, 180, 289, 380, 424, 554, 697, 746, 837, 924, 1007, 1120, 1254, 1385, 1453, 1516, 49, 111, 225, 337, 456, 503, 625, 787, 804, 932, 1036, 1106, 1275, 1378, 1473, 1547, 43, 192, 219, 393, 475, 505, 603, 776, 842, 908, 1002, 1158, 1274, 1306, 1452, 1580, 100, 152, 220, 346, 496, 516, 622, 750, 801, 971, 1078, 1142, 1213, 1315, 1457, 1526, 41, 190, 230, 321, 469, 578, 682, 797, 884, 964, 1099, 1170, 1237, 1382, 1425, 1545, 5, 178, 255, 368, 427, 525, 657, 782, 829, 955, 1045, 1160, 1287, 1309, 1447, 1571, 54, 132, 280, 349, 410, 531, 635, 703, 802, 990, 1071, 1115, 1253, 1354, 1479, 1586, 65, 154, 210, 384, 429, 521, 639, 754, 894, 931, 1013, 1169, 1203, 1326, 1439, 1529, 72, 144, 296, 392, 490, 506, 684, 716, 816, 999, 1062, 1194, 1244, 1342, 1481, 1505, 76, 147, 241, 341, 432, 536, 696, 719, 839, 938, 1038, 1179, 1224, 1360, 1438, 1588, 98, 101, 216, 342, 484, 585, 665, 779, 897, 958, 1051, 1130, 1204, 1365, 1455, 1548, 11, 149, 257, 333, 497, 541, 649, 780, 844, 978, 1077, 1127, 1226, 1368, 1484, 1562, 78, 177, 218, 303, 481, 501, 631, 712, 834, 920, 1074, 1107, 1273, 1389, 1405, 1504, 21, 117, 215, 315, 436, 571, 651, 790, 886, 926, 1056, 1192, 1236, 1380, 1472, 1534, 62, 173, 214, 355, 488, 529, 686, 711, 808, 966, 1032, 1148, 1269, 1361, 1432, 1532, 14, 139, 222, 339, 435, 586, 669, 702, 861, 952, 1049, 1131, 1249, 1319, 1488, 1570, 22, 143, 208, 317, 442, 522, 660, 752, 880, 914, 1096, 1184, 1276, 1333, 1416, 1510, 12, 176, 298, 328, 418, 512, 623, 725, 809, 951, 1093, 1189, 1250, 1394, 1406, 1600, 37, 168, 269, 370, 453, 589, 641, 740, 847, 970, 1001, 1186, 1201, 1334, 1450, 1535, 95, 135, 259, 323, 417, 574, 664, 749, 878, 974, 1028, 1114, 1300, 1304, 1460, 1521, 74, 107, 254, 311, 404, 514, 698, 798, 818, 915, 1064, 1128, 1211, 1311, 1486, 1511, 33, 183, 278, 304, 491, 591, 678, 799, 879, 933, 1066, 1137, 1229, 1374, 1467, 1502, 99, 172, 239, 395, 402, 545, 654, 769, 853, 934, 1070, 1193, 1268, 1381, 1451, 1597, 63, 127, 250, 316, 451, 519, 692, 724, 877, 942, 1067, 1188, 1207, 1312, 1403, 1595, 29, 160, 292, 371, 474, 530, 672, 744, 813, 954, 1037, 1123, 1262, 1313, 1496, 1591, 56, 109, 242, 312, 460, 542, 621, 793, 871, 992, 1012, 1157, 1240, 1328, 1468, 1537, 10, 169, 279, 359, 405, 570, 601, 774, 876, 962, 1057, 1135, 1234, 1398, 1413, 1515, 47, 137, 267, 377, 467, 559, 611, 739, 869, 972, 1043, 1173, 1215, 1322, 1434, 1585, 4, 104, 291, 400, 422, 580, 616, 758, 863, 941, 1086, 1191, 1271, 1363, 1487, 1518, 38, 188, 283, 320, 430, 538, 618, 778, 855, 967, 1035, 1153, 1248, 1340, 1458, 1522, 84, 165, 221, 308, 454, 590, 656, 771, 850, 901, 1082, 1111, 1209, 1337, 1489, 1533, 89, 175, 263, 382, 486, 564, 637, 729, 843, 946, 1058, 1152, 1243, 1362, 1448, 1544, 55, 133, 265, 383, 487, 575, 666, 742, 819, 991, 1090, 1150, 1288, 1305, 1469, 1594, 77, 166, 295, 379, 468, 561, 679, 772, 862, 913, 1016, 1136, 1252, 1317, 1440, 1587]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	3587.07 MBs
     ├ fmd	718.32 MBs	(shape (3, 4, 3, 4, 1280, 2040))
     ├ fmd_m	2868.75 MBs	(shape (3, 4, 3, 4, 1280, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	1.12 MBs
     ├ domain shape	(3, 3, 204, 320)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 09/07/2021 20:58:27 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (732+548=1280 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A136 ⫹₆₀ 4347), purity -2.1231075118808524
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (378+354=732 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A164 ⫹₆₀ 4386), purity -1.6278884218387493
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (314+234=548 samples) on frame 1 with decision: {1} A7 ⫺ 9758, purity -1.2628508228195692
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+218=378 samples) on frame 1 with decision: {1} ⟨DR⟩ (A37 ⫺ 21282), purity -0.9686396029590106
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (154+80=234 samples) on frame 1 with decision: {1} A158 ⫹₇₀ 555, purity -0.45567415854991367
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (154+160=314 samples) on frame 1 with decision: {1} ⟨DR⟩ (A125 ⫹ 3487), purity -0.692774847102774
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (193+161=354 samples) on frame 1 with decision: {1} A8 ⫺₇₀ 13026, purity -0.973887304446547
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A9 ⫹₆₀ 15449), purity -0.05845342456876512
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (74+80=154 samples) on frame 1 with decision: {1} A5 ⫺₈₀ 11118, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (88+66=154 samples) on frame 1 with decision: {1} ⟨PO⟩ (A48 ⫺₆₀ 26130), purity -0.49120123401224025
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+80=161 samples) on frame 1 with decision: {1} A4 ⫺ 10227, purity -0.033467395991037596
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (95+98=193 samples) on frame 1 with decision: {1} A103 ⫺₇₀ 9187, purity -0.5980667132758511
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A22 ⫹ 9679, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (85+133=218 samples) on frame 1 with decision: {1} A200 ⫹ 1345, purity -0.5128895718438647
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+80=88 samples) on frame 1 with decision: {1} ⟨PO⟩ (A29 ⫺ 10305), purity -0.36399924949906254
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (74+24=98 samples) on frame 1 with decision: {1} ⟨PP⟩ (A40 ⫹ 21986), purity -0.08439140769865035
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+12=95 samples) on frame 1 with decision: {1} ⟨DR⟩ (A18 ⫹ 15301), purity -0.2657264117810307
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+52=133 samples) on frame 1 with decision: {1} A6 ⫹ 13135, purity -0.04051316356809814
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (47+19=66 samples) on frame 1 with decision: {1} ⟨DR⟩ (A136 ⫹ 3464), purity -0.27246820484954987
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+9=19 samples) on frame 1 with decision: {1} ⟨DR⟩ (A42 ⫺ 27654), purity -0.17109630178497284
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+7=12 samples) on frame 1 with decision: {1} A6 ⫹ 10633, purity -0.3489905933414
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+20=24 samples) on frame 1 with decision: {1} A84 ⫺ 7373, purity -0.17328679513998632
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+74=80 samples) on frame 1 with decision: {1} A21 ⫹ 12557, purity -0.2940887922870349
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A1 ⫹ 1892, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
1581.397997 seconds (21.77 G allocations: 498.886 GiB, 26.41% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 25
Tot nodes: 49
Height: 7
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A136 ⫹₆₀ 4347)
✔ {1} A7 ⫺ 9758
│✔ {1} A158 ⫹₇₀ 555
││✔ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
││✘ {1} A5 ⫺₈₀ 11118
││ ✔ Brocoli_green_weeds_2 : 80/80 (conf: 1.0)
││ ✘ Fallow_rough_plow : 74/74 (conf: 1.0)
│✘ {1} ⟨DR⟩ (A125 ⫹ 3487)
│ ✔ {1} A22 ⫹ 9679
│ │✔ Celery : 80/80 (conf: 1.0)
│ │✘ Vinyard_vertical_trellis : 80/80 (conf: 1.0)
│ ✘ {1} ⟨PO⟩ (A48 ⫺₆₀ 26130)
│  ✔ {1} ⟨DR⟩ (A136 ⫹ 3464)
│  │✔ {1} ⟨DR⟩ (A42 ⫺ 27654)
│  ││✔ Vinyard_untrained : 9/9 (conf: 1.0)
│  ││✘ {1} A1 ⫹ 1892
│  ││ ✔ Grapes_untrained : 3/4 (conf: 0.75)
│  ││ ✘ Grapes_untrained : 6/6 (conf: 1.0)
│  │✘ Grapes_untrained : 46/47 (conf: 0.9787234042553191)
│  ✘ {1} ⟨PO⟩ (A29 ⫺ 10305)
│   ✔ {1} A21 ⫹ 12557
│   │✔ Vinyard_untrained : 68/74 (conf: 0.918918918918919)
│   │✘ Grapes_untrained : 5/6 (conf: 0.8333333333333334)
│   ✘ Grapes_untrained : 8/8 (conf: 1.0)
✘ {1} ⟨P̅P̅⟩ (A164 ⫹₆₀ 4386)
 ✔ {1} A8 ⫺₇₀ 13026
 │✔ {1} A4 ⫺ 10227
 ││✔ Stubble : 80/80 (conf: 1.0)
 ││✘ Fallow_smooth : 80/81 (conf: 0.9876543209876543)
 │✘ {1} A103 ⫺₇₀ 9187
 │ ✔ {1} ⟨PP⟩ (A40 ⫹ 21986)
 │ │✔ {1} A84 ⫺ 7373
 │ ││✔ Corn_senesced_green_weeds : 20/20 (conf: 1.0)
 │ ││✘ Corn_senesced_green_weeds : 2/4 (conf: 0.5)
 │ │✘ Lettuce_romaine_7wk : 74/74 (conf: 1.0)
 │ ✘ {1} ⟨DR⟩ (A18 ⫹ 15301)
 │  ✔ {1} A6 ⫹ 10633
 │  │✔ Grapes_untrained : 5/7 (conf: 0.7142857142857143)
 │  │✘ Fallow_rough_plow : 5/5 (conf: 1.0)
 │  ✘ Lettuce_romaine_6wk : 80/83 (conf: 0.963855421686747)
 ✘ {1} ⟨DR⟩ (A37 ⫺ 21282)
  ✔ {1} A200 ⫹ 1345
  │✔ {1} A6 ⫹ 13135
  ││✔ Corn_senesced_green_weeds : 52/52 (conf: 1.0)
  ││✘ Lettuce_romaine_4wk : 80/81 (conf: 0.9876543209876543)
  │✘ Soil_vinyard_develop : 80/85 (conf: 0.9411764705882353)
  ✘ {1} ⟨P̅P̅⟩ (A9 ⫹₆₀ 15449)
   ✔ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
   ✘ Fallow : 78/80 (conf: 0.975)
● [ 09/07/2021 21:24:48 ] Saving tree to file ./gandalf/trees/tree_aa158fc5303f558faf61cafc8c0b2e7732fee479902841f54f760b53a05795b2.jld...
Test tree:
Decision Tree
Leaves: 25
Tot nodes: 49
Height: 7
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A136 ⫹₆₀ 4347)
✔ {1} A7 ⫺ 9758
│✔ {1} A158 ⫹₇₀ 555
││✔ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
││✘ {1} A5 ⫺₈₀ 11118
││ ✔ Brocoli_green_weeds_2 : 17/17 (conf: 1.0)
││ ✘ Fallow_rough_plow : 18/23 (conf: 0.782608695652174)
│✘ {1} ⟨DR⟩ (A125 ⫹ 3487)
│ ✔ {1} A22 ⫹ 9679
│ │✔ Celery : 19/19 (conf: 1.0)
│ │✘ Vinyard_vertical_trellis : 20/21 (conf: 0.9523809523809523)
│ ✘ {1} ⟨PO⟩ (A48 ⫺₆₀ 26130)
│  ✔ {1} ⟨DR⟩ (A136 ⫹ 3464)
│  │✔ {1} ⟨DR⟩ (A42 ⫺ 27654)
│  ││✔ Vinyard_untrained : 2/5 (conf: 0.4)
│  ││✘ {1} A1 ⫹ 1892
│  ││ ✔ Grapes_untrained : 0/0 (conf: NaN)
│  ││ ✘ Grapes_untrained : 0/1 (conf: 0.0)
│  │✘ Grapes_untrained : 9/11 (conf: 0.8181818181818182)
│  ✘ {1} ⟨PO⟩ (A29 ⫺ 10305)
│   ✔ {1} A21 ⫹ 12557
│   │✔ Vinyard_untrained : 12/17 (conf: 0.7058823529411765)
│   │✘ Grapes_untrained : 0/1 (conf: 0.0)
│   ✘ Grapes_untrained : 2/3 (conf: 0.6666666666666666)
✘ {1} ⟨P̅P̅⟩ (A164 ⫹₆₀ 4386)
 ✔ {1} A8 ⫺₇₀ 13026
 │✔ {1} A4 ⫺ 10227
 ││✔ Stubble : 19/19 (conf: 1.0)
 ││✘ Fallow_smooth : 18/18 (conf: 1.0)
 │✘ {1} A103 ⫺₇₀ 9187
 │ ✔ {1} ⟨PP⟩ (A40 ⫹ 21986)
 │ │✔ {1} A84 ⫺ 7373
 │ ││✔ Corn_senesced_green_weeds : 4/5 (conf: 0.8)
 │ ││✘ Corn_senesced_green_weeds : 0/0 (conf: NaN)
 │ │✘ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
 │ ✘ {1} ⟨DR⟩ (A18 ⫹ 15301)
 │  ✔ {1} A6 ⫹ 10633
 │  │✔ Grapes_untrained : 1/3 (conf: 0.3333333333333333)
 │  │✘ Fallow_rough_plow : 1/1 (conf: 1.0)
 │  ✘ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A37 ⫺ 21282)
  ✔ {1} A200 ⫹ 1345
  │✔ {1} A6 ⫹ 13135
  ││✔ Corn_senesced_green_weeds : 11/13 (conf: 0.8461538461538461)
  ││✘ Lettuce_romaine_4wk : 19/21 (conf: 0.9047619047619048)
  │✘ Soil_vinyard_develop : 18/20 (conf: 0.9)
  ✘ {1} ⟨P̅P̅⟩ (A9 ⫹₆₀ 15449)
   ✔ Lettuce_romaine_5wk : 20/22 (conf: 0.9090909090909091)
   ✘ Fallow : 18/20 (conf: 0.9)
 test size = [(3, 3, 204, 320)]
 Purity threshold 1.0
RESULT:	Salinas,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	90.0%	100.0%	85.0%	95.0%	75.0%	90.0%	95.0%	90.0%	60.0%	95.0%	100.0%	100.0%	100.0%	90.0%	95.0%	70.0%	100.0%	100.0%	100.0%	100.0%	83.33%	90.0%	79.17%	100.0%	63.16%	90.48%	90.91%	100.0%	100.0%	90.0%	100.0%	63.64%	95.24%	||	89.33%	[100.0, 91.89, 97.44, 78.95, 90.0, 86.36, 94.74, 61.54, 92.68, 95.24, 100.0, 100.0, 90.0, 97.44, 66.67, 97.56]%	
  accuracy: 90.0% kappa: 89.33% 
 20  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 17  0  0  0  3  0  0  0  0  0  0  0  0  0  0	85.0%		Brocoli_green_weeds_2
  0  0 19  0  0  0  0  0  0  0  0  0  0  0  0  1	95.0%		Celery
  0  0  0 15  1  0  0  1  0  2  0  0  1  0  0  0	75.0%		Corn_senesced_green_weeds
  0  0  0  1 18  0  0  0  0  0  0  0  1  0  0  0	90.0%		Fallow
  0  0  0  0  0 19  0  0  0  0  0  0  0  0  1  0	95.0%		Fallow_rough_plow
  0  0  0  0  0  1 18  0  1  0  0  0  0  0  0  0	90.0%		Fallow_smooth
  0  0  0  1  0  0  0 12  0  0  0  0  0  0  7  0	60.0%		Grapes_untrained
  0  0  0  1  0  0  0  0 19  0  0  0  0  0  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0  0  0  0  0  0  0 20  0  0  0  0  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0  0  0  0  0  0  0 20  0  0  0  0  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0  0  0  0  0  0  0 20  0  0  0  0	100.0%		Lettuce_romaine_7wk
  0  0  0  0  1  0  0  0  1  0  0  0 18  0  0  0	90.0%		Soil_vinyard_develop
  0  0  0  0  0  1  0  0  0  0  0  0  0 19  0  0	95.0%		Stubble
  0  0  0  0  0  0  0  6  0  0  0  0  0  0 14  0	70.0%		Vinyard_untrained
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 20	100.0%		Vinyard_vertical_trellis

overall_acc:	0.9
κ =		0.8933333333333333
sensitivities:	[1.0, 0.85, 0.95, 0.75, 0.9, 0.95, 0.9, 0.6, 0.95, 1.0, 1.0, 1.0, 0.9, 0.95, 0.7, 1.0]
specificities:	[1.0, 1.0, 1.0, 0.99, 0.9933333333333333, 0.9833333333333333, 1.0, 0.9766666666666667, 0.9933333333333333, 0.9933333333333333, 1.0, 1.0, 0.9933333333333333, 1.0, 0.9733333333333334, 0.9966666666666667]
PPVs:		[1.0, 1.0, 1.0, 0.8333333333333334, 0.9, 0.7916666666666666, 1.0, 0.631578947368421, 0.9047619047619048, 0.9090909090909091, 1.0, 1.0, 0.9, 1.0, 0.6363636363636364, 0.9523809523809523]
NPVs:		[1.0, 0.9900990099009901, 0.9966777408637874, 0.9834437086092715, 0.9933333333333333, 0.9966216216216216, 0.9933774834437086, 0.973421926910299, 0.9966555183946488, 1.0, 1.0, 1.0, 0.9933333333333333, 0.9966777408637874, 0.9798657718120806, 1.0]
F1s:		[1.0, 0.918918918918919, 0.9743589743589743, 0.7894736842105263, 0.9, 0.8636363636363636, 0.9473684210526315, 0.6153846153846154, 0.926829268292683, 0.9523809523809523, 1.0, 1.0, 0.9, 0.9743589743589743, 0.6666666666666666, 0.975609756097561]
accuracies:	[1.0, 0.990625, 0.996875, 0.975, 0.9875, 0.98125, 0.99375, 0.953125, 0.990625, 0.99375, 1.0, 1.0, 0.9875, 0.996875, 0.95625, 0.996875]
mean_accuracy:	0.9875
Dataset_slice = (1600) -> [14, 145, 209, 319, 413, 525, 605, 718, 878, 987, 1075, 1184, 1257, 1319, 1442, 1559, 59, 126, 201, 393, 450, 561, 606, 736, 841, 921, 1009, 1181, 1282, 1366, 1496, 1576, 55, 102, 207, 312, 445, 527, 660, 764, 888, 956, 1062, 1193, 1296, 1302, 1455, 1572, 87, 121, 255, 362, 475, 501, 637, 796, 884, 997, 1025, 1185, 1225, 1338, 1472, 1568, 44, 116, 271, 308, 421, 555, 635, 715, 875, 963, 1096, 1129, 1273, 1316, 1408, 1502, 11, 131, 219, 380, 474, 532, 648, 743, 873, 977, 1040, 1113, 1248, 1400, 1492, 1518, 60, 110, 268, 310, 440, 528, 674, 739, 876, 965, 1008, 1140, 1279, 1330, 1420, 1585, 6, 101, 211, 304, 437, 518, 694, 795, 857, 984, 1057, 1155, 1249, 1311, 1453, 1566, 83, 167, 283, 357, 414, 597, 655, 701, 854, 967, 1090, 1158, 1264, 1354, 1471, 1569, 46, 162, 229, 318, 456, 585, 678, 770, 861, 971, 1041, 1114, 1221, 1342, 1486, 1533, 20, 123, 288, 395, 424, 584, 666, 774, 882, 918, 1050, 1102, 1262, 1353, 1416, 1505, 74, 140, 291, 373, 481, 551, 623, 763, 829, 934, 1010, 1161, 1226, 1380, 1448, 1548, 32, 165, 281, 315, 434, 589, 634, 732, 820, 950, 1004, 1118, 1247, 1369, 1458, 1596, 22, 135, 220, 398, 486, 544, 691, 780, 858, 986, 1053, 1111, 1286, 1333, 1417, 1574, 40, 152, 286, 316, 451, 593, 610, 719, 855, 952, 1015, 1103, 1253, 1337, 1500, 1522, 24, 103, 221, 350, 429, 515, 686, 709, 851, 924, 1054, 1151, 1258, 1384, 1421, 1597, 18, 137, 230, 355, 438, 543, 665, 772, 848, 931, 1017, 1163, 1294, 1359, 1495, 1531, 89, 125, 262, 390, 443, 595, 681, 710, 825, 914, 1006, 1107, 1280, 1343, 1459, 1525, 62, 124, 264, 383, 406, 529, 653, 703, 818, 929, 1027, 1112, 1300, 1323, 1452, 1571, 12, 172, 276, 377, 411, 517, 700, 741, 822, 903, 1083, 1186, 1297, 1312, 1481, 1539, 31, 163, 204, 369, 471, 503, 687, 707, 839, 939, 1052, 1169, 1252, 1397, 1462, 1558, 58, 168, 208, 302, 407, 547, 614, 742, 899, 917, 1094, 1170, 1241, 1340, 1497, 1581, 30, 129, 224, 325, 415, 505, 642, 735, 801, 938, 1023, 1166, 1207, 1309, 1425, 1510, 79, 104, 235, 326, 495, 519, 668, 753, 852, 989, 1021, 1146, 1215, 1355, 1412, 1556, 99, 197, 213, 343, 464, 581, 676, 773, 897, 995, 1002, 1160, 1216, 1332, 1423, 1549, 48, 173, 284, 388, 410, 568, 679, 760, 898, 962, 1063, 1133, 1202, 1334, 1494, 1538, 67, 149, 275, 391, 455, 548, 695, 798, 842, 985, 1078, 1104, 1265, 1328, 1411, 1570, 10, 198, 289, 360, 485, 554, 697, 766, 831, 932, 1069, 1152, 1278, 1350, 1432, 1528, 5, 182, 244, 397, 487, 599, 698, 747, 844, 943, 1070, 1121, 1229, 1339, 1428, 1534, 93, 164, 257, 384, 457, 530, 611, 756, 869, 909, 1013, 1132, 1261, 1329, 1443, 1550, 64, 187, 246, 354, 458, 583, 659, 761, 837, 1000, 1080, 1117, 1246, 1398, 1479, 1580, 70, 134, 242, 371, 422, 577, 612, 784, 846, 928, 1081, 1157, 1228, 1306, 1439, 1546, 41, 133, 256, 351, 473, 512, 630, 726, 865, 982, 1100, 1154, 1260, 1301, 1468, 1507, 82, 158, 299, 322, 404, 507, 693, 724, 802, 913, 1064, 1123, 1220, 1364, 1404, 1530, 84, 120, 290, 314, 423, 522, 661, 757, 867, 953, 1020, 1196, 1283, 1388, 1435, 1520, 51, 199, 261, 359, 412, 523, 646, 771, 812, 905, 1034, 1195, 1234, 1360, 1446, 1508, 81, 175, 206, 340, 472, 539, 609, 711, 824, 901, 1037, 1159, 1250, 1307, 1451, 1555, 94, 181, 300, 303, 426, 514, 654, 729, 891, 979, 1024, 1142, 1289, 1336, 1499, 1591, 23, 179, 266, 321, 459, 572, 669, 779, 856, 957, 1067, 1176, 1270, 1326, 1415, 1535, 100, 176, 270, 376, 432, 560, 601, 751, 874, 919, 1028, 1148, 1205, 1324, 1419, 1529, 90, 109, 278, 346, 418, 510, 602, 792, 823, 912, 1005, 1143, 1213, 1356, 1407, 1543, 68, 186, 274, 379, 467, 556, 645, 762, 894, 959, 1086, 1174, 1293, 1346, 1485, 1567, 43, 117, 265, 382, 480, 570, 617, 708, 879, 976, 1036, 1187, 1211, 1344, 1464, 1579, 1, 178, 280, 344, 425, 504, 650, 794, 819, 911, 1055, 1190, 1222, 1393, 1437, 1562, 95, 132, 277, 332, 491, 524, 683, 787, 828, 908, 1003, 1153, 1233, 1327, 1413, 1547, 19, 113, 282, 378, 476, 579, 608, 720, 887, 964, 1076, 1188, 1208, 1345, 1461, 1600, 98, 112, 292, 348, 462, 563, 640, 767, 849, 902, 1092, 1127, 1217, 1385, 1441, 1553, 50, 106, 285, 352, 444, 550, 656, 791, 886, 978, 1059, 1199, 1277, 1335, 1447, 1511, 33, 170, 295, 386, 493, 537, 643, 777, 850, 961, 1084, 1168, 1242, 1381, 1403, 1532, 27, 136, 241, 337, 408, 564, 624, 783, 859, 954, 1018, 1179, 1266, 1370, 1484, 1551, 63, 148, 279, 324, 427, 511, 696, 744, 893, 933, 1065, 1164, 1256, 1315, 1429, 1516, 54, 119, 216, 372, 401, 575, 633, 740, 838, 904, 1071, 1128, 1210, 1373, 1488, 1583, 86, 193, 254, 306, 428, 567, 652, 721, 805, 945, 1031, 1130, 1275, 1357, 1431, 1594, 17, 188, 293, 399, 496, 508, 671, 758, 895, 955, 1045, 1189, 1244, 1331, 1483, 1584, 91, 142, 273, 328, 494, 574, 641, 785, 835, 925, 1035, 1183, 1276, 1308, 1454, 1521, 97, 189, 297, 320, 430, 531, 647, 790, 883, 968, 1014, 1137, 1243, 1351, 1410, 1560, 57, 155, 263, 301, 492, 557, 690, 733, 847, 999, 1046, 1149, 1204, 1386, 1434, 1524, 61, 196, 294, 347, 405, 594, 677, 745, 890, 980, 1049, 1119, 1259, 1352, 1433, 1593, 75, 141, 205, 349, 436, 590, 675, 789, 814, 946, 1085, 1182, 1292, 1376, 1445, 1582, 71, 183, 203, 341, 409, 562, 639, 716, 868, 948, 1007, 1167, 1295, 1371, 1450, 1557, 92, 180, 258, 394, 441, 520, 616, 759, 881, 993, 1060, 1106, 1238, 1368, 1424, 1592, 65, 177, 249, 309, 449, 598, 644, 722, 840, 949, 1082, 1198, 1223, 1363, 1476, 1536, 37, 166, 272, 356, 498, 582, 657, 737, 815, 988, 1097, 1139, 1271, 1382, 1498, 1513, 29, 195, 234, 331, 469, 513, 628, 778, 853, 991, 1087, 1162, 1272, 1367, 1489, 1590, 21, 127, 218, 313, 435, 541, 670, 752, 804, 996, 1030, 1150, 1263, 1390, 1469, 1503, 69, 184, 267, 368, 500, 534, 604, 793, 862, 915, 1074, 1126, 1274, 1303, 1449, 1527, 3, 185, 298, 334, 488, 588, 673, 754, 872, 937, 1043, 1138, 1255, 1391, 1406, 1575, 77, 139, 225, 327, 403, 516, 663, 788, 836, 923, 1029, 1177, 1203, 1321, 1456, 1514, 56, 107, 260, 396, 490, 558, 619, 705, 811, 920, 1077, 1171, 1231, 1320, 1430, 1523, 72, 200, 217, 342, 416, 580, 607, 768, 870, 941, 1044, 1109, 1281, 1389, 1418, 1598, 8, 111, 227, 366, 465, 571, 620, 786, 821, 942, 1098, 1124, 1227, 1394, 1426, 1545, 2, 190, 237, 374, 419, 596, 638, 755, 808, 974, 1012, 1144, 1212, 1379, 1493, 1595, 73, 130, 233, 363, 482, 538, 667, 746, 863, 970, 1058, 1110, 1269, 1349, 1436, 1526, 36, 159, 238, 307, 448, 578, 682, 765, 816, 944, 1072, 1131, 1254, 1374, 1470, 1589, 45, 146, 250, 375, 463, 587, 621, 706, 866, 972, 1022, 1116, 1285, 1375, 1473, 1563, 52, 153, 212, 335, 460, 566, 662, 717, 845, 958, 1079, 1175, 1284, 1314, 1457, 1573, 53, 156, 287, 311, 478, 552, 629, 799, 860, 990, 1039, 1165, 1291, 1347, 1477, 1509, 34, 143, 222, 389, 453, 526, 689, 769, 832, 966, 1068, 1141, 1230, 1378, 1401, 1587, 28, 169, 259, 323, 452, 569, 699, 782, 826, 975, 1056, 1122, 1206, 1395, 1478, 1542, 39, 128, 243, 365, 454, 533, 632, 712, 896, 930, 1011, 1178, 1299, 1325, 1474, 1540, 76, 115, 231, 364, 461, 546, 692, 748, 803, 910, 1066, 1120, 1219, 1348, 1438, 1599, 85, 105, 228, 400, 499, 559, 625, 775, 809, 936, 1088, 1135, 1240, 1399, 1463, 1554, 66, 171, 240, 305, 402, 573, 631, 704, 833, 940, 1099, 1192, 1290, 1310, 1460, 1588, 88, 108, 248, 387, 497, 521, 651, 727, 806, 907, 1038, 1180, 1218, 1341, 1440, 1544, 15, 174, 247, 370, 417, 549, 626, 738, 813, 983, 1073, 1134, 1214, 1361, 1475, 1512, 38, 154, 253, 339, 446, 586, 627, 702, 900, 935, 1033, 1172, 1245, 1362, 1405, 1552, 9, 114, 202, 367, 489, 535, 688, 797, 810, 916, 1061, 1105, 1237, 1396, 1487, 1517, 80, 192, 251, 353, 442, 540, 615, 728, 843, 981, 1095, 1191, 1232, 1305, 1490, 1515, 25, 160, 223, 392, 447, 565, 636, 723, 880, 922, 1047, 1194, 1287, 1358, 1466, 1504, 26, 191, 215, 329, 483, 591, 672, 749, 892, 906, 1016, 1101, 1201, 1318, 1414, 1586, 7, 151, 252, 381, 484, 576, 603, 734, 871, 998, 1091, 1145, 1209, 1304, 1422, 1519, 96, 194, 210, 338, 477, 536, 684, 781, 864, 951, 1093, 1147, 1298, 1322, 1409, 1561, 16, 144, 296, 317, 466, 545, 649, 776, 817, 969, 1048, 1125, 1251, 1387, 1465, 1578, 13, 147, 269, 333, 431, 553, 618, 730, 885, 927, 1089, 1156, 1288, 1392, 1402, 1577, 47, 150, 236, 336, 470, 600, 613, 714, 830, 992, 1051, 1136, 1236, 1383, 1444, 1501, 49, 157, 214, 385, 468, 509, 680, 725, 834, 960, 1001, 1108, 1224, 1372, 1480, 1506, 35, 118, 239, 358, 479, 542, 622, 750, 889, 994, 1019, 1173, 1268, 1317, 1482, 1541, 78, 122, 232, 345, 420, 502, 658, 800, 827, 926, 1042, 1200, 1235, 1377, 1491, 1565, 42, 161, 245, 361, 433, 506, 664, 713, 877, 947, 1032, 1115, 1267, 1313, 1467, 1564, 4, 138, 226, 330, 439, 592, 685, 731, 807, 973, 1026, 1197, 1239, 1365, 1427, 1537]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	3587.07 MBs
     ├ fmd	718.32 MBs	(shape (3, 4, 3, 4, 1280, 2040))
     ├ fmd_m	2868.75 MBs	(shape (3, 4, 3, 4, 1280, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	1.12 MBs
     ├ domain shape	(3, 3, 204, 320)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 09/07/2021 21:25:08 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (555+725=1280 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A135 ⫺₇₀ 4793), purity -2.1152315483602067
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (242+313=555 samples) on frame 1 with decision: {1} ⟨DR⟩ (A8 ⫹ 10219), purity -1.2798346027417848
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (379+346=725 samples) on frame 1 with decision: {1} A169 ⫹₇₀ 4183, purity -1.6071576650510573
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+82=242 samples) on frame 1 with decision: {1} A26 ⫺ 11024, purity -0.5028611421130147
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (216+163=379 samples) on frame 1 with decision: {1} A7 ⫺₆₀ 13221, purity -0.9855364912023884
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (187+159=346 samples) on frame 1 with decision: {1} A8 ⫺₇₀ 13026, purity -0.9072906545605862
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+153=313 samples) on frame 1 with decision: {1} A122 ⫺ 4152, purity -0.6926354021881497
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} ⟨DR⟩ (A26 ⫹ 8264), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (66+87=153 samples) on frame 1 with decision: {1} ⟨PO⟩ (A51 ⫹₇₀ 24363), purity -0.5206036291578813
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+82=163 samples) on frame 1 with decision: {1} A151 ⫺ 2643, purity -0.11521631879197158
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A4 ⫺ 10234, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A22 ⫹ 9734, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (97+90=187 samples) on frame 1 with decision: {1} A95 ⫹₇₀ 11485, purity -0.4862988018660028
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+133=216 samples) on frame 1 with decision: {1} A13 ⫺₇₀ 15833, purity -0.5196157352678009
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (32+34=66 samples) on frame 1 with decision: {1} A28 ⫹ 10094, purity -0.327497979370135
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (31+56=87 samples) on frame 1 with decision: {1} ⟨PP⟩ (A105 ⫺ 4973), purity -0.34150381443087663
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+80=90 samples) on frame 1 with decision: {1} A18 ⫺ 15739, purity -0.07477907411213962
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+18=97 samples) on frame 1 with decision: {1} ⟨PP⟩ (A40 ⫹ 21986), purity -0.06473172912551109
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+51=133 samples) on frame 1 with decision: {1} ⟨DR⟩ (A61 ⫺ 7295), purity -0.1445598932493102
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A85 ⫺₆₀ 10727, purity 1.3322676295501878e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+4=18 samples) on frame 1 with decision: {1} A2 ⫹ 3041, purity -0.15403270679109896
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+10=31 samples) on frame 1 with decision: {1} A37 ⫹₆₀ 13596, purity -0.4501644261855875
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+9=32 samples) on frame 1 with decision: {1} A158 ⫹ 1603, purity -0.3320890286790161
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+12=21 samples) on frame 1 with decision: {1} ⟨PO⟩ (A50 ⫺₆₀ 22642), purity -0.3637223818827503
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+18=23 samples) on frame 1 with decision: {1} ⟨DR⟩ (A43 ⫺ 16036), purity -0.10878313555177997
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+5=12 samples) on frame 1 with decision: {1} A5 ⫹₆₀ 8999, purity -0.20850100980757827
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
1724.641494 seconds (23.25 G allocations: 531.171 GiB, 25.71% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 27
Tot nodes: 53
Height: 8
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A135 ⫺₇₀ 4793)
✔ {1} A169 ⫹₇₀ 4183
│✔ {1} A8 ⫺₇₀ 13026
││✔ {1} A4 ⫺ 10234
│││✔ Stubble : 80/80 (conf: 1.0)
│││✘ Fallow_smooth : 79/79 (conf: 1.0)
││✘ {1} A95 ⫹₇₀ 11485
││ ✔ {1} A18 ⫺ 15739
││ │✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
││ │✘ {1} A85 ⫺₆₀ 10727
││ │ ✔ Corn_senesced_green_weeds : 6/6 (conf: 1.0)
││ │ ✘ Grapes_untrained : 4/4 (conf: 1.0)
││ ✘ {1} ⟨PP⟩ (A40 ⫹ 21986)
││  ✔ {1} A2 ⫹ 3041
││  │✔ Corn_senesced_green_weeds : 2/4 (conf: 0.5)
││  │✘ Corn_senesced_green_weeds : 14/14 (conf: 1.0)
││  ✘ Lettuce_romaine_7wk : 79/79 (conf: 1.0)
│✘ {1} A7 ⫺₆₀ 13221
│ ✔ {1} A151 ⫺ 2643
│ │✔ Soil_vinyard_develop : 80/82 (conf: 0.975609756097561)
│ │✘ Lettuce_romaine_4wk : 79/81 (conf: 0.9753086419753086)
│ ✘ {1} A13 ⫺₇₀ 15833
│  ✔ {1} ⟨DR⟩ (A61 ⫺ 7295)
│  │✔ Corn_senesced_green_weeds : 49/51 (conf: 0.9607843137254902)
│  │✘ Fallow : 80/82 (conf: 0.975609756097561)
│  ✘ Lettuce_romaine_5wk : 80/83 (conf: 0.963855421686747)
✘ {1} ⟨DR⟩ (A8 ⫹ 10219)
 ✔ {1} A122 ⫺ 4152
 │✔ {1} ⟨PO⟩ (A51 ⫹₇₀ 24363)
 ││✔ {1} ⟨PP⟩ (A105 ⫺ 4973)
 │││✔ Vinyard_untrained : 54/56 (conf: 0.9642857142857143)
 │││✘ {1} A37 ⫹₆₀ 13596
 │││ ✔ Grapes_untrained : 10/10 (conf: 1.0)
 │││ ✘ {1} ⟨PO⟩ (A50 ⫺₆₀ 22642)
 │││  ✔ {1} A5 ⫹₆₀ 8999
 │││  │✔ Vinyard_untrained : 4/5 (conf: 0.8)
 │││  │✘ Grapes_untrained : 7/7 (conf: 1.0)
 │││  ✘ Vinyard_untrained : 9/9 (conf: 1.0)
 ││✘ {1} A28 ⫹ 10094
 ││ ✔ Grapes_untrained : 34/34 (conf: 1.0)
 ││ ✘ {1} A158 ⫹ 1603
 ││  ✔ Vinyard_untrained : 9/9 (conf: 1.0)
 ││  ✘ {1} ⟨DR⟩ (A43 ⫺ 16036)
 ││   ✔ Grapes_untrained : 18/18 (conf: 1.0)
 ││   ✘ Vinyard_untrained : 4/5 (conf: 0.8)
 │✘ {1} A22 ⫹ 9734
 │ ✔ Celery : 80/80 (conf: 1.0)
 │ ✘ Vinyard_vertical_trellis : 80/80 (conf: 1.0)
 ✘ {1} A26 ⫺ 11024
  ✔ Fallow_rough_plow : 80/82 (conf: 0.975609756097561)
  ✘ {1} ⟨DR⟩ (A26 ⫹ 8264)
   ✔ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
   ✘ Brocoli_green_weeds_2 : 80/80 (conf: 1.0)
● [ 09/07/2021 21:53:52 ] Saving tree to file ./gandalf/trees/tree_a3598beee089cc0e3d90885415a7a24ad07f70cc8d6008651456f23a4a8f0d6f.jld...
Test tree:
Decision Tree
Leaves: 27
Tot nodes: 53
Height: 8
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A135 ⫺₇₀ 4793)
✔ {1} A169 ⫹₇₀ 4183
│✔ {1} A8 ⫺₇₀ 13026
││✔ {1} A4 ⫺ 10234
│││✔ Stubble : 19/19 (conf: 1.0)
│││✘ Fallow_smooth : 20/22 (conf: 0.9090909090909091)
││✘ {1} A95 ⫹₇₀ 11485
││ ✔ {1} A18 ⫺ 15739
││ │✔ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
││ │✘ {1} A85 ⫺₆₀ 10727
││ │ ✔ Corn_senesced_green_weeds : 0/1 (conf: 0.0)
││ │ ✘ Grapes_untrained : 0/3 (conf: 0.0)
││ ✘ {1} ⟨PP⟩ (A40 ⫹ 21986)
││  ✔ {1} A2 ⫹ 3041
││  │✔ Corn_senesced_green_weeds : 3/3 (conf: 1.0)
││  │✘ Corn_senesced_green_weeds : 1/3 (conf: 0.3333333333333333)
││  ✘ Lettuce_romaine_7wk : 17/18 (conf: 0.9444444444444444)
│✘ {1} A7 ⫺₆₀ 13221
│ ✔ {1} A151 ⫺ 2643
│ │✔ Soil_vinyard_develop : 20/20 (conf: 1.0)
│ │✘ Lettuce_romaine_4wk : 18/19 (conf: 0.9473684210526315)
│ ✘ {1} A13 ⫺₇₀ 15833
│  ✔ {1} ⟨DR⟩ (A61 ⫺ 7295)
│  │✔ Corn_senesced_green_weeds : 15/18 (conf: 0.8333333333333334)
│  │✘ Fallow : 18/19 (conf: 0.9473684210526315)
│  ✘ Lettuce_romaine_5wk : 19/20 (conf: 0.95)
✘ {1} ⟨DR⟩ (A8 ⫹ 10219)
 ✔ {1} A122 ⫺ 4152
 │✔ {1} ⟨PO⟩ (A51 ⫹₇₀ 24363)
 ││✔ {1} ⟨PP⟩ (A105 ⫺ 4973)
 │││✔ Vinyard_untrained : 10/11 (conf: 0.9090909090909091)
 │││✘ {1} A37 ⫹₆₀ 13596
 │││ ✔ Grapes_untrained : 0/2 (conf: 0.0)
 │││ ✘ {1} ⟨PO⟩ (A50 ⫺₆₀ 22642)
 │││  ✔ {1} A5 ⫹₆₀ 8999
 │││  │✔ Vinyard_untrained : 1/2 (conf: 0.5)
 │││  │✘ Grapes_untrained : 0/1 (conf: 0.0)
 │││  ✘ Vinyard_untrained : 1/1 (conf: 1.0)
 ││✘ {1} A28 ⫹ 10094
 ││ ✔ Grapes_untrained : 4/5 (conf: 0.8)
 ││ ✘ {1} A158 ⫹ 1603
 ││  ✔ Vinyard_untrained : 2/3 (conf: 0.6666666666666666)
 ││  ✘ {1} ⟨DR⟩ (A43 ⫺ 16036)
 ││   ✔ Grapes_untrained : 12/14 (conf: 0.8571428571428571)
 ││   ✘ Vinyard_untrained : 0/0 (conf: NaN)
 │✘ {1} A22 ⫹ 9734
 │ ✔ Celery : 20/20 (conf: 1.0)
 │ ✘ Vinyard_vertical_trellis : 18/18 (conf: 1.0)
 ✘ {1} A26 ⫺ 11024
  ✔ Fallow_rough_plow : 17/19 (conf: 0.8947368421052632)
  ✘ {1} ⟨DR⟩ (A26 ⫹ 8264)
   ✔ Brocoli_green_weeds_1 : 19/19 (conf: 1.0)
   ✘ Brocoli_green_weeds_2 : 20/21 (conf: 0.9523809523809523)
 test size = [(3, 3, 204, 320)]
 Purity threshold 1.0
RESULT:	Salinas,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	91.56%	95.0%	100.0%	100.0%	95.0%	90.0%	85.0%	100.0%	80.0%	90.0%	95.0%	95.0%	85.0%	100.0%	95.0%	70.0%	90.0%	100.0%	95.24%	100.0%	76.0%	94.74%	89.47%	90.91%	64.0%	94.74%	95.0%	100.0%	94.44%	100.0%	100.0%	82.35%	100.0%	||	91.0%	[97.44, 97.56, 100.0, 84.44, 92.31, 87.18, 95.24, 71.11, 92.31, 95.0, 97.44, 89.47, 100.0, 97.44, 75.68, 94.74]%	
  accuracy: 91.56% kappa: 91.0% 
 19  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0	95.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0  0  0  0  0  0  0  0  0  0  0	100.0%		Brocoli_green_weeds_2
  0  0 20  0  0  0  0  0  0  0  0  0  0  0  0  0	100.0%		Celery
  0  0  0 19  0  0  0  1  0  0  0  0  0  0  0  0	95.0%		Corn_senesced_green_weeds
  0  0  0  1 18  0  0  0  1  0  0  0  0  0  0  0	90.0%		Fallow
  0  0  0  0  0 17  1  1  0  1  0  0  0  0  0  0	85.0%		Fallow_rough_plow
  0  0  0  0  0  0 20  0  0  0  0  0  0  0  0  0	100.0%		Fallow_smooth
  0  0  0  1  0  0  0 16  0  0  0  0  0  0  3  0	80.0%		Grapes_untrained
  0  0  0  2  0  0  0  0 18  0  0  0  0  0  0  0	90.0%		Lettuce_romaine_4wk
  0  0  0  0  1  0  0  0  0 19  0  0  0  0  0  0	95.0%		Lettuce_romaine_5wk
  0  0  0  0  0  0  0  0  0  0 19  1  0  0  0  0	95.0%		Lettuce_romaine_6wk
  0  0  0  1  0  2  0  0  0  0  0 17  0  0  0  0	85.0%		Lettuce_romaine_7wk
  0  0  0  0  0  0  0  0  0  0  0  0 20  0  0  0	100.0%		Soil_vinyard_develop
  0  0  0  0  0  0  1  0  0  0  0  0  0 19  0  0	95.0%		Stubble
  0  0  0  1  0  0  0  5  0  0  0  0  0  0 14  0	70.0%		Vinyard_untrained
  0  0  0  0  0  0  0  2  0  0  0  0  0  0  0 18	90.0%		Vinyard_vertical_trellis

overall_acc:	0.915625
κ =		0.91
sensitivities:	[0.95, 1.0, 1.0, 0.95, 0.9, 0.85, 1.0, 0.8, 0.9, 0.95, 0.95, 0.85, 1.0, 0.95, 0.7, 0.9]
specificities:	[1.0, 0.9966666666666667, 1.0, 0.98, 0.9966666666666667, 0.9933333333333333, 0.9933333333333333, 0.97, 0.9966666666666667, 0.9966666666666667, 1.0, 0.9966666666666667, 1.0, 1.0, 0.99, 1.0]
PPVs:		[1.0, 0.9523809523809523, 1.0, 0.76, 0.9473684210526315, 0.8947368421052632, 0.9090909090909091, 0.64, 0.9473684210526315, 0.95, 1.0, 0.9444444444444444, 1.0, 1.0, 0.8235294117647058, 1.0]
NPVs:		[0.9966777408637874, 1.0, 1.0, 0.9966101694915255, 0.9933554817275747, 0.9900332225913622, 1.0, 0.9864406779661017, 0.9933554817275747, 0.9966666666666667, 0.9966777408637874, 0.9900662251655629, 1.0, 0.9966777408637874, 0.9801980198019802, 0.9933774834437086]
F1s:		[0.9743589743589743, 0.975609756097561, 1.0, 0.8444444444444444, 0.9230769230769231, 0.8717948717948718, 0.9523809523809523, 0.7111111111111111, 0.9230769230769231, 0.95, 0.9743589743589743, 0.8947368421052632, 1.0, 0.9743589743589743, 0.7567567567567568, 0.9473684210526315]
accuracies:	[0.996875, 0.996875, 1.0, 0.978125, 0.990625, 0.984375, 0.99375, 0.959375, 0.990625, 0.99375, 0.996875, 0.9875, 1.0, 0.996875, 0.971875, 0.99375]
mean_accuracy:	0.989453125
Dataset_slice = (1600) -> [70, 177, 261, 314, 419, 581, 639, 713, 846, 937, 1036, 1133, 1236, 1383, 1465, 1546, 28, 119, 212, 327, 454, 562, 671, 731, 805, 960, 1063, 1168, 1292, 1304, 1425, 1502, 31, 139, 280, 374, 459, 507, 684, 793, 820, 903, 1017, 1195, 1219, 1395, 1437, 1551, 19, 178, 249, 324, 453, 509, 643, 732, 831, 948, 1012, 1199, 1226, 1399, 1485, 1589, 5, 145, 248, 337, 422, 598, 659, 780, 874, 933, 1090, 1192, 1238, 1382, 1405, 1575, 75, 174, 287, 378, 420, 519, 670, 791, 844, 954, 1005, 1113, 1289, 1307, 1428, 1525, 12, 144, 202, 385, 465, 588, 689, 721, 897, 982, 1087, 1126, 1246, 1317, 1420, 1507, 26, 108, 298, 344, 403, 544, 641, 785, 801, 961, 1049, 1151, 1267, 1385, 1427, 1526, 67, 162, 228, 360, 498, 513, 628, 725, 881, 970, 1009, 1117, 1266, 1388, 1449, 1564, 14, 125, 236, 322, 482, 571, 638, 706, 857, 996, 1014, 1156, 1259, 1347, 1446, 1548, 50, 105, 214, 320, 440, 559, 627, 737, 841, 992, 1020, 1102, 1294, 1391, 1422, 1534, 25, 148, 229, 376, 423, 535, 679, 712, 826, 941, 1028, 1107, 1295, 1359, 1433, 1545, 11, 196, 219, 397, 434, 552, 633, 714, 893, 991, 1037, 1124, 1252, 1319, 1410, 1593, 51, 170, 257, 399, 417, 534, 607, 764, 888, 994, 1007, 1188, 1211, 1344, 1404, 1553, 6, 199, 207, 301, 427, 583, 696, 781, 812, 966, 1040, 1158, 1288, 1371, 1453, 1576, 4, 127, 273, 338, 450, 590, 602, 738, 827, 928, 1075, 1106, 1299, 1328, 1463, 1583, 63, 141, 270, 302, 486, 586, 654, 716, 814, 957, 1068, 1101, 1235, 1349, 1454, 1580, 62, 118, 276, 392, 435, 511, 680, 703, 829, 995, 1039, 1118, 1257, 1380, 1460, 1519, 54, 194, 216, 336, 437, 569, 669, 701, 880, 945, 1080, 1152, 1248, 1368, 1500, 1521, 73, 190, 251, 349, 411, 582, 631, 724, 885, 944, 1016, 1128, 1263, 1378, 1438, 1563, 16, 168, 238, 312, 449, 597, 657, 787, 860, 949, 1097, 1119, 1204, 1366, 1489, 1541, 76, 133, 292, 308, 436, 560, 606, 704, 843, 976, 1032, 1181, 1262, 1345, 1484, 1573, 94, 191, 234, 307, 469, 566, 656, 752, 808, 912, 1078, 1182, 1207, 1375, 1493, 1536, 21, 172, 253, 370, 461, 556, 667, 789, 863, 962, 1067, 1144, 1291, 1394, 1421, 1552, 96, 176, 295, 388, 401, 578, 687, 794, 832, 963, 1046, 1108, 1256, 1336, 1487, 1591, 97, 132, 275, 382, 475, 555, 624, 796, 878, 924, 1079, 1197, 1264, 1352, 1439, 1549, 60, 173, 217, 325, 470, 514, 683, 763, 894, 964, 1089, 1155, 1271, 1339, 1414, 1555, 9, 109, 272, 398, 402, 510, 619, 735, 869, 920, 1069, 1134, 1244, 1337, 1467, 1561, 40, 154, 250, 303, 443, 524, 652, 799, 851, 931, 1093, 1105, 1240, 1381, 1441, 1585, 72, 113, 240, 368, 431, 501, 663, 756, 899, 980, 1085, 1121, 1221, 1343, 1464, 1501, 99, 156, 279, 381, 497, 540, 664, 759, 806, 981, 1024, 1132, 1218, 1393, 1469, 1554, 44, 167, 220, 335, 489, 523, 661, 710, 866, 969, 1082, 1177, 1285, 1332, 1424, 1567, 91, 104, 245, 357, 416, 533, 608, 777, 872, 990, 1083, 1190, 1277, 1360, 1406, 1505, 92, 116, 297, 355, 412, 553, 647, 779, 855, 987, 1035, 1136, 1241, 1396, 1402, 1533, 71, 166, 246, 351, 426, 536, 646, 745, 853, 989, 1011, 1180, 1230, 1321, 1440, 1512, 13, 192, 203, 394, 410, 529, 697, 798, 828, 911, 1059, 1103, 1287, 1302, 1430, 1544, 98, 129, 206, 331, 414, 537, 640, 743, 858, 975, 1100, 1137, 1234, 1334, 1419, 1540, 79, 122, 281, 346, 448, 504, 682, 723, 879, 930, 1008, 1120, 1296, 1325, 1423, 1596, 18, 137, 224, 371, 442, 549, 666, 782, 816, 929, 1057, 1191, 1276, 1354, 1435, 1504, 48, 101, 289, 362, 487, 589, 695, 746, 835, 935, 1010, 1174, 1229, 1374, 1486, 1531, 56, 175, 285, 350, 456, 516, 677, 775, 833, 921, 1002, 1173, 1206, 1346, 1474, 1569, 22, 103, 242, 356, 408, 502, 693, 741, 882, 902, 1056, 1138, 1237, 1362, 1483, 1520, 35, 124, 293, 361, 428, 577, 698, 707, 883, 922, 1047, 1166, 1232, 1389, 1416, 1557, 81, 189, 262, 364, 460, 547, 691, 773, 807, 973, 1095, 1171, 1225, 1340, 1458, 1538, 84, 187, 230, 342, 478, 557, 681, 795, 849, 932, 1043, 1172, 1290, 1342, 1432, 1559, 37, 181, 208, 310, 418, 521, 673, 772, 867, 972, 1070, 1139, 1227, 1335, 1488, 1582, 87, 120, 299, 359, 458, 530, 630, 768, 822, 917, 1071, 1112, 1268, 1363, 1444, 1566, 77, 117, 237, 354, 462, 538, 668, 771, 854, 909, 1026, 1122, 1213, 1314, 1471, 1599, 34, 115, 231, 379, 429, 525, 637, 727, 815, 901, 1018, 1186, 1272, 1355, 1447, 1560, 65, 155, 205, 316, 495, 550, 690, 733, 875, 925, 1077, 1187, 1260, 1308, 1492, 1586, 7, 121, 252, 319, 488, 508, 625, 748, 802, 906, 1064, 1127, 1210, 1397, 1426, 1542, 41, 123, 264, 358, 499, 503, 672, 790, 852, 934, 1006, 1175, 1298, 1400, 1495, 1529, 3, 182, 201, 353, 452, 531, 623, 786, 837, 984, 1073, 1179, 1215, 1351, 1413, 1503, 59, 193, 290, 345, 439, 558, 653, 758, 850, 955, 1065, 1169, 1251, 1303, 1466, 1587, 55, 186, 296, 372, 457, 546, 636, 766, 877, 999, 1052, 1183, 1280, 1353, 1403, 1530, 43, 126, 241, 377, 463, 554, 699, 709, 809, 916, 1061, 1150, 1278, 1356, 1459, 1568, 29, 161, 263, 395, 405, 551, 605, 749, 870, 967, 1092, 1153, 1216, 1387, 1461, 1537, 8, 159, 221, 333, 471, 543, 658, 715, 817, 947, 1054, 1145, 1283, 1357, 1442, 1597, 86, 158, 227, 347, 413, 592, 662, 722, 810, 914, 1022, 1111, 1212, 1384, 1443, 1513, 46, 157, 274, 304, 424, 561, 613, 719, 896, 946, 1034, 1135, 1273, 1372, 1477, 1527, 64, 112, 204, 332, 445, 585, 610, 753, 886, 968, 1074, 1143, 1222, 1379, 1491, 1556, 78, 195, 211, 391, 430, 545, 676, 757, 868, 988, 1066, 1159, 1249, 1312, 1445, 1535, 85, 198, 209, 340, 493, 575, 655, 740, 803, 907, 1094, 1131, 1270, 1370, 1450, 1522, 15, 152, 282, 317, 433, 600, 688, 755, 818, 986, 1086, 1189, 1220, 1398, 1455, 1584, 1, 149, 258, 400, 477, 595, 604, 765, 821, 908, 1048, 1194, 1284, 1327, 1418, 1579, 42, 128, 254, 309, 464, 584, 615, 761, 813, 904, 1021, 1140, 1208, 1316, 1452, 1590, 100, 130, 271, 326, 500, 573, 603, 744, 871, 979, 1051, 1167, 1258, 1338, 1473, 1581, 30, 197, 267, 323, 425, 594, 635, 797, 864, 1000, 1096, 1125, 1231, 1376, 1409, 1515, 10, 140, 283, 393, 468, 542, 674, 788, 840, 936, 1025, 1198, 1217, 1392, 1401, 1550, 89, 134, 218, 389, 441, 596, 634, 767, 839, 974, 1013, 1165, 1233, 1301, 1482, 1570, 88, 114, 278, 318, 446, 532, 617, 728, 873, 943, 1029, 1193, 1205, 1365, 1479, 1509, 49, 179, 277, 365, 467, 528, 620, 754, 865, 985, 1019, 1123, 1243, 1386, 1407, 1598, 17, 160, 247, 383, 481, 568, 618, 792, 892, 965, 1098, 1154, 1293, 1361, 1475, 1524, 23, 183, 223, 339, 479, 587, 629, 750, 898, 959, 1003, 1116, 1286, 1333, 1448, 1517, 27, 142, 286, 311, 415, 570, 692, 776, 823, 971, 1058, 1170, 1202, 1320, 1412, 1514, 20, 150, 259, 305, 421, 522, 651, 736, 884, 977, 1076, 1160, 1223, 1313, 1462, 1578, 68, 171, 288, 329, 407, 526, 694, 729, 834, 915, 1084, 1109, 1214, 1305, 1490, 1543, 69, 169, 243, 352, 494, 567, 644, 747, 804, 952, 1088, 1141, 1297, 1329, 1408, 1588, 24, 106, 284, 384, 491, 520, 675, 730, 811, 998, 1050, 1114, 1282, 1341, 1415, 1592, 74, 110, 235, 390, 473, 579, 650, 717, 887, 958, 1060, 1146, 1228, 1358, 1497, 1562, 36, 163, 256, 373, 406, 515, 611, 720, 830, 956, 1027, 1142, 1269, 1323, 1481, 1528, 57, 185, 266, 343, 480, 548, 601, 705, 856, 942, 1001, 1110, 1245, 1326, 1429, 1574, 53, 180, 239, 306, 476, 527, 614, 734, 819, 927, 1091, 1185, 1239, 1310, 1436, 1565, 95, 200, 255, 369, 404, 541, 626, 708, 842, 951, 1031, 1157, 1300, 1324, 1451, 1595, 61, 107, 226, 348, 409, 518, 660, 702, 889, 910, 1045, 1161, 1247, 1364, 1496, 1558, 66, 135, 265, 380, 484, 512, 649, 762, 890, 939, 1023, 1200, 1275, 1306, 1431, 1510, 52, 111, 233, 328, 472, 565, 700, 800, 900, 950, 1055, 1149, 1254, 1311, 1434, 1511, 58, 147, 210, 315, 447, 506, 642, 778, 862, 938, 1030, 1176, 1255, 1322, 1468, 1547, 47, 153, 232, 367, 474, 517, 678, 742, 845, 919, 1042, 1129, 1201, 1330, 1411, 1523, 83, 143, 268, 341, 432, 574, 632, 784, 891, 983, 1015, 1104, 1279, 1331, 1478, 1600, 39, 146, 215, 313, 490, 572, 616, 739, 861, 923, 1062, 1163, 1203, 1318, 1470, 1532, 93, 165, 244, 330, 466, 591, 612, 774, 838, 918, 1038, 1148, 1209, 1377, 1417, 1571, 90, 138, 225, 363, 451, 539, 686, 718, 847, 940, 1004, 1162, 1250, 1315, 1457, 1508, 33, 184, 291, 396, 455, 593, 648, 783, 825, 978, 1053, 1178, 1224, 1369, 1456, 1516, 2, 151, 300, 334, 496, 505, 665, 770, 848, 997, 1099, 1164, 1265, 1390, 1476, 1518, 38, 102, 260, 366, 492, 576, 622, 769, 859, 993, 1044, 1147, 1274, 1348, 1480, 1572, 80, 131, 269, 375, 483, 580, 609, 751, 895, 913, 1033, 1115, 1253, 1309, 1499, 1539, 82, 136, 222, 386, 485, 563, 645, 760, 836, 905, 1041, 1184, 1261, 1367, 1472, 1506, 45, 188, 213, 321, 444, 599, 685, 726, 876, 953, 1081, 1130, 1281, 1350, 1498, 1577, 32, 164, 294, 387, 438, 564, 621, 711, 824, 926, 1072, 1196, 1242, 1373, 1494, 1594]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	3587.07 MBs
     ├ fmd	718.32 MBs	(shape (3, 4, 3, 4, 1280, 2040))
     ├ fmd_m	2868.75 MBs	(shape (3, 4, 3, 4, 1280, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	1.12 MBs
     ├ domain shape	(3, 3, 204, 320)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 09/07/2021 21:54:13 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (552+728=1280 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A137 ⫺₇₀ 4394), purity -2.1212799985156585
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (313+239=552 samples) on frame 1 with decision: {1} A7 ⫺ 9742, purity -1.2711546716146114
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (378+350=728 samples) on frame 1 with decision: {1} A164 ⫹₆₀ 4386, purity -1.6193679045179716
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+80=239 samples) on frame 1 with decision: {1} ⟨DR⟩ (A45 ⫺ 63377), purity -0.4835579451770631
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (154+159=313 samples) on frame 1 with decision: {1} ⟨DR⟩ (A122 ⫹ 3526), purity -0.6927636106546049
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (213+165=378 samples) on frame 1 with decision: {1} ⟨PO⟩ (A11 ⫺ 17975), purity -0.9622091280783821
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (190+160=350 samples) on frame 1 with decision: {1} A8 ⫺₇₀ 13026, purity -0.9523889162629348
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+79=159 samples) on frame 1 with decision: {1} A25 ⫺ 11845, purity -0.03373013750381463
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (55+99=154 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A45 ⫹₈₀ 26630), purity -0.48634887278901046
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A4 ⫺ 10227, purity -0.03359844018134872
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (96+94=190 samples) on frame 1 with decision: {1} A88 ⫹₇₀ 12525, purity -0.5359661091809517
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A22 ⫹ 9734, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+84=165 samples) on frame 1 with decision: {1} A150 ⫺ 1079, purity -0.13011850690306265
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (129+84=213 samples) on frame 1 with decision: {1} A9 ⫹₈₀ 15449, purity -0.47763275899423857
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+42=55 samples) on frame 1 with decision: {1} A198 ⫺ 414, purity -0.16313479614989881
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+80=94 samples) on frame 1 with decision: {1} A18 ⫺ 15739, purity -0.16253448945804172
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+88=99 samples) on frame 1 with decision: {1} ⟨PO⟩ (A20 ⫺₆₀ 11634), purity -0.43972065176321307
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+16=96 samples) on frame 1 with decision: {1} ⟨PP⟩ (A40 ⫹ 21986), purity -0.03896527645107654
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+47=129 samples) on frame 1 with decision: {1} ⟨DR⟩ (A39 ⫺ 18937), purity -0.07288800884215783
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+6=13 samples) on frame 1 with decision: {1} ⟨DR⟩ (A39 ⫹ 16130), purity -0.22083186369375854
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+4=11 samples) on frame 1 with decision: {1} A2 ⫺ 3135, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+7=14 samples) on frame 1 with decision: {1} ⟨DR⟩ (A17 ⫹ 12580), purity -0.39815582008690653
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (39+49=88 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A41 ⫺₆₀ 23729), purity -0.3429793608402054
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+43=49 samples) on frame 1 with decision: {1} A70 ⫺ 19335, purity -0.4502107335070964
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+5=43 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A3 ⫺₆₀ 4808), purity -0.2973683439110139
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+10=38 samples) on frame 1 with decision: {1} ⟨DR⟩ (A204 ⫺ 203), purity -0.17710833342348856
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} ⟨DR⟩ (A39 ⫺ 17858), purity 1.3322676295501878e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
1775.025867 seconds (22.31 G allocations: 503.153 GiB, 24.48% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 28
Tot nodes: 55
Height: 10
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A137 ⫺₇₀ 4394)
✔ {1} A164 ⫹₆₀ 4386
│✔ {1} A8 ⫺₇₀ 13026
││✔ {1} A4 ⫺ 10227
│││✔ Stubble : 80/80 (conf: 1.0)
│││✘ Fallow_smooth : 79/80 (conf: 0.9875)
││✘ {1} A88 ⫹₇₀ 12525
││ ✔ {1} A18 ⫺ 15739
││ │✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
││ │✘ {1} ⟨DR⟩ (A17 ⫹ 12580)
││ │ ✔ Grapes_untrained : 5/7 (conf: 0.7142857142857143)
││ │ ✘ Corn_senesced_green_weeds : 7/7 (conf: 1.0)
││ ✘ {1} ⟨PP⟩ (A40 ⫹ 21986)
││  ✔ Corn_senesced_green_weeds : 15/16 (conf: 0.9375)
││  ✘ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A11 ⫺ 17975)
│ ✔ {1} A150 ⫺ 1079
│ │✔ Soil_vinyard_develop : 80/84 (conf: 0.9523809523809523)
│ │✘ Lettuce_romaine_4wk : 80/81 (conf: 0.9876543209876543)
│ ✘ {1} A9 ⫹₈₀ 15449
│  ✔ Lettuce_romaine_5wk : 80/84 (conf: 0.9523809523809523)
│  ✘ {1} ⟨DR⟩ (A39 ⫺ 18937)
│   ✔ Corn_senesced_green_weeds : 47/47 (conf: 1.0)
│   ✘ Fallow : 80/82 (conf: 0.975609756097561)
✘ {1} A7 ⫺ 9742
 ✔ {1} ⟨DR⟩ (A45 ⫺ 63377)
 │✔ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
 │✘ {1} A25 ⫺ 11845
 │ ✔ Fallow_rough_plow : 78/79 (conf: 0.9873417721518988)
 │ ✘ Brocoli_green_weeds_2 : 80/80 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A122 ⫹ 3526)
  ✔ {1} A22 ⫹ 9734
  │✔ Celery : 80/80 (conf: 1.0)
  │✘ Vinyard_vertical_trellis : 79/79 (conf: 1.0)
  ✘ {1} ⟨P̅P̅⟩ (A45 ⫹₈₀ 26630)
   ✔ {1} ⟨PO⟩ (A20 ⫺₆₀ 11634)
   │✔ {1} ⟨P̅P̅⟩ (A41 ⫺₆₀ 23729)
   ││✔ {1} A70 ⫺ 19335
   │││✔ {1} ⟨P̅P̅⟩ (A3 ⫺₆₀ 4808)
   ││││✔ Grapes_untrained : 5/5 (conf: 1.0)
   ││││✘ {1} ⟨DR⟩ (A204 ⫺ 203)
   ││││ ✔ {1} ⟨DR⟩ (A39 ⫺ 17858)
   ││││ │✔ Vinyard_untrained : 6/6 (conf: 1.0)
   ││││ │✘ Grapes_untrained : 4/4 (conf: 1.0)
   ││││ ✘ Vinyard_untrained : 28/28 (conf: 1.0)
   │││✘ Grapes_untrained : 6/6 (conf: 1.0)
   ││✘ Vinyard_untrained : 39/39 (conf: 1.0)
   │✘ {1} A2 ⫺ 3135
   │ ✔ Grapes_untrained : 3/4 (conf: 0.75)
   │ ✘ Grapes_untrained : 7/7 (conf: 1.0)
   ✘ {1} A198 ⫺ 414
    ✔ Grapes_untrained : 42/42 (conf: 1.0)
    ✘ {1} ⟨DR⟩ (A39 ⫹ 16130)
     ✔ Grapes_untrained : 6/6 (conf: 1.0)
     ✘ Vinyard_untrained : 6/7 (conf: 0.8571428571428571)
● [ 09/07/2021 22:23:48 ] Saving tree to file ./gandalf/trees/tree_d69a09781674c24199e3ebb2bf50a063468c5b822e0e90f1eb5f737bc1006939.jld...
Test tree:
Decision Tree
Leaves: 28
Tot nodes: 55
Height: 10
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A137 ⫺₇₀ 4394)
✔ {1} A164 ⫹₆₀ 4386
│✔ {1} A8 ⫺₇₀ 13026
││✔ {1} A4 ⫺ 10227
│││✔ Stubble : 20/20 (conf: 1.0)
│││✘ Fallow_smooth : 19/19 (conf: 1.0)
││✘ {1} A88 ⫹₇₀ 12525
││ ✔ {1} A18 ⫺ 15739
││ │✔ Lettuce_romaine_6wk : 18/19 (conf: 0.9473684210526315)
││ │✘ {1} ⟨DR⟩ (A17 ⫹ 12580)
││ │ ✔ Grapes_untrained : 2/2 (conf: 1.0)
││ │ ✘ Corn_senesced_green_weeds : 0/3 (conf: 0.0)
││ ✘ {1} ⟨PP⟩ (A40 ⫹ 21986)
││  ✔ Corn_senesced_green_weeds : 5/7 (conf: 0.7142857142857143)
││  ✘ Lettuce_romaine_7wk : 17/19 (conf: 0.8947368421052632)
│✘ {1} ⟨PO⟩ (A11 ⫺ 17975)
│ ✔ {1} A150 ⫺ 1079
│ │✔ Soil_vinyard_develop : 20/23 (conf: 0.8695652173913043)
│ │✘ Lettuce_romaine_4wk : 20/22 (conf: 0.9090909090909091)
│ ✘ {1} A9 ⫹₈₀ 15449
│  ✔ Lettuce_romaine_5wk : 18/19 (conf: 0.9473684210526315)
│  ✘ {1} ⟨DR⟩ (A39 ⫺ 18937)
│   ✔ Corn_senesced_green_weeds : 9/10 (conf: 0.9)
│   ✘ Fallow : 19/22 (conf: 0.8636363636363636)
✘ {1} A7 ⫺ 9742
 ✔ {1} ⟨DR⟩ (A45 ⫺ 63377)
 │✔ Brocoli_green_weeds_1 : 19/19 (conf: 1.0)
 │✘ {1} A25 ⫺ 11845
 │ ✔ Fallow_rough_plow : 16/17 (conf: 0.9411764705882353)
 │ ✘ Brocoli_green_weeds_2 : 20/22 (conf: 0.9090909090909091)
 ✘ {1} ⟨DR⟩ (A122 ⫹ 3526)
  ✔ {1} A22 ⫹ 9734
  │✔ Celery : 20/20 (conf: 1.0)
  │✘ Vinyard_vertical_trellis : 20/20 (conf: 1.0)
  ✘ {1} ⟨P̅P̅⟩ (A45 ⫹₈₀ 26630)
   ✔ {1} ⟨PO⟩ (A20 ⫺₆₀ 11634)
   │✔ {1} ⟨P̅P̅⟩ (A41 ⫺₆₀ 23729)
   ││✔ {1} A70 ⫺ 19335
   │││✔ {1} ⟨P̅P̅⟩ (A3 ⫺₆₀ 4808)
   ││││✔ Grapes_untrained : 0/0 (conf: NaN)
   ││││✘ {1} ⟨DR⟩ (A204 ⫺ 203)
   ││││ ✔ {1} ⟨DR⟩ (A39 ⫺ 17858)
   ││││ │✔ Vinyard_untrained : 0/0 (conf: NaN)
   ││││ │✘ Grapes_untrained : 0/1 (conf: 0.0)
   ││││ ✘ Vinyard_untrained : 6/6 (conf: 1.0)
   │││✘ Grapes_untrained : 0/0 (conf: NaN)
   ││✘ Vinyard_untrained : 7/9 (conf: 0.7777777777777778)
   │✘ {1} A2 ⫺ 3135
   │ ✔ Grapes_untrained : 4/4 (conf: 1.0)
   │ ✘ Grapes_untrained : 0/0 (conf: NaN)
   ✘ {1} A198 ⫺ 414
    ✔ Grapes_untrained : 8/11 (conf: 0.7272727272727273)
    ✘ {1} ⟨DR⟩ (A39 ⫹ 16130)
     ✔ Grapes_untrained : 0/0 (conf: NaN)
     ✘ Vinyard_untrained : 2/6 (conf: 0.3333333333333333)
 test size = [(3, 3, 204, 320)]
 Purity threshold 1.0
RESULT:	Salinas,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	90.31%	95.0%	100.0%	100.0%	70.0%	95.0%	80.0%	95.0%	70.0%	100.0%	90.0%	90.0%	85.0%	100.0%	100.0%	75.0%	100.0%	100.0%	90.91%	100.0%	70.0%	86.36%	94.12%	100.0%	77.78%	90.91%	94.74%	94.74%	89.47%	86.96%	100.0%	71.43%	100.0%	||	89.67%	[97.44, 95.24, 100.0, 70.0, 90.48, 86.49, 97.44, 73.68, 95.24, 92.31, 92.31, 87.18, 93.02, 100.0, 73.17, 100.0]%	
  accuracy: 90.31% kappa: 89.67% 
 19  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0	95.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0  0  0  0  0  0  0  0  0  0  0	100.0%		Brocoli_green_weeds_2
  0  0 20  0  0  0  0  0  0  0  0  0  0  0  0  0	100.0%		Celery
  0  0  0 14  1  0  0  0  1  1  0  0  3  0  0  0	70.0%		Corn_senesced_green_weeds
  0  0  0  1 19  0  0  0  0  0  0  0  0  0  0  0	95.0%		Fallow
  0  1  0  3  0 16  0  0  0  0  0  0  0  0  0  0	80.0%		Fallow_rough_plow
  0  0  0  0  0  0 19  0  1  0  0  0  0  0  0  0	95.0%		Fallow_smooth
  0  0  0  0  0  0  0 14  0  0  0  0  0  0  6  0	70.0%		Grapes_untrained
  0  0  0  0  0  0  0  0 20  0  0  0  0  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0  0  2  0  0  0  0 18  0  0  0  0  0  0	90.0%		Lettuce_romaine_5wk
  0  0  0  0  0  0  0  0  0  0 18  2  0  0  0  0	90.0%		Lettuce_romaine_6wk
  0  0  0  2  0  0  0  0  0  0  1 17  0  0  0  0	85.0%		Lettuce_romaine_7wk
  0  0  0  0  0  0  0  0  0  0  0  0 20  0  0  0	100.0%		Soil_vinyard_develop
  0  0  0  0  0  0  0  0  0  0  0  0  0 20  0  0	100.0%		Stubble
  0  0  0  0  0  1  0  4  0  0  0  0  0  0 15  0	75.0%		Vinyard_untrained
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 20	100.0%		Vinyard_vertical_trellis

overall_acc:	0.903125
κ =		0.8966666666666666
sensitivities:	[0.95, 1.0, 1.0, 0.7, 0.95, 0.8, 0.95, 0.7, 1.0, 0.9, 0.9, 0.85, 1.0, 1.0, 0.75, 1.0]
specificities:	[1.0, 0.9933333333333333, 1.0, 0.98, 0.99, 0.9966666666666667, 1.0, 0.9866666666666667, 0.9933333333333333, 0.9966666666666667, 0.9966666666666667, 0.9933333333333333, 0.99, 1.0, 0.98, 1.0]
PPVs:		[1.0, 0.9090909090909091, 1.0, 0.7, 0.8636363636363636, 0.9411764705882353, 1.0, 0.7777777777777778, 0.9090909090909091, 0.9473684210526315, 0.9473684210526315, 0.8947368421052632, 0.8695652173913043, 1.0, 0.7142857142857143, 1.0]
NPVs:		[0.9966777408637874, 1.0, 1.0, 0.98, 0.9966442953020134, 0.9867986798679867, 0.9966777408637874, 0.9801324503311258, 1.0, 0.9933554817275747, 0.9933554817275747, 0.9900332225913622, 1.0, 1.0, 0.9832775919732442, 1.0]
F1s:		[0.9743589743589743, 0.9523809523809523, 1.0, 0.7, 0.9047619047619048, 0.8648648648648649, 0.9743589743589743, 0.7368421052631579, 0.9523809523809523, 0.9230769230769231, 0.9230769230769231, 0.8717948717948718, 0.9302325581395349, 1.0, 0.7317073170731707, 1.0]
accuracies:	[0.996875, 0.99375, 1.0, 0.9625, 0.9875, 0.984375, 0.996875, 0.96875, 0.99375, 0.990625, 0.990625, 0.984375, 0.990625, 1.0, 0.965625, 1.0]
mean_accuracy:	0.9878906249999999
Dataset_slice = (1600) -> [21, 173, 279, 381, 499, 569, 691, 744, 847, 933, 1010, 1145, 1244, 1394, 1437, 1589, 64, 138, 231, 310, 469, 582, 680, 764, 808, 907, 1013, 1113, 1260, 1389, 1440, 1550, 10, 149, 269, 301, 481, 525, 602, 729, 862, 986, 1076, 1175, 1280, 1368, 1452, 1565, 84, 168, 271, 334, 458, 600, 640, 775, 883, 952, 1043, 1168, 1255, 1330, 1424, 1593, 13, 194, 289, 400, 497, 548, 626, 769, 896, 973, 1018, 1121, 1267, 1346, 1459, 1503, 73, 107, 225, 375, 444, 512, 628, 755, 891, 959, 1035, 1112, 1224, 1317, 1414, 1578, 20, 174, 213, 347, 441, 545, 677, 706, 849, 964, 1041, 1189, 1209, 1354, 1436, 1552, 60, 159, 210, 398, 448, 505, 611, 742, 854, 942, 1050, 1158, 1226, 1309, 1427, 1516, 22, 196, 237, 354, 492, 558, 667, 779, 832, 963, 1064, 1108, 1218, 1322, 1453, 1562, 27, 187, 300, 345, 461, 572, 696, 704, 877, 960, 1001, 1195, 1297, 1384, 1498, 1534, 3, 110, 264, 394, 498, 583, 655, 772, 813, 996, 1086, 1170, 1253, 1377, 1448, 1521, 48, 125, 238, 341, 464, 565, 688, 721, 814, 905, 1025, 1117, 1254, 1362, 1406, 1529, 24, 171, 293, 356, 470, 502, 631, 757, 836, 977, 1027, 1186, 1240, 1395, 1472, 1553, 1, 123, 260, 339, 417, 519, 685, 712, 838, 922, 1028, 1180, 1225, 1305, 1467, 1515, 95, 165, 224, 315, 422, 550, 652, 762, 880, 936, 1020, 1198, 1278, 1369, 1481, 1591, 30, 190, 294, 327, 484, 589, 684, 713, 829, 925, 1074, 1127, 1216, 1349, 1473, 1569, 29, 188, 211, 359, 429, 586, 645, 733, 889, 983, 1029, 1169, 1289, 1341, 1480, 1592, 65, 176, 232, 305, 500, 559, 698, 780, 885, 990, 1036, 1123, 1220, 1352, 1485, 1530, 85, 157, 282, 357, 472, 516, 647, 800, 898, 951, 1083, 1138, 1270, 1364, 1420, 1546, 4, 179, 202, 362, 436, 585, 681, 752, 801, 971, 1022, 1165, 1293, 1399, 1401, 1580, 50, 169, 261, 371, 460, 594, 694, 796, 815, 984, 1094, 1151, 1227, 1332, 1477, 1586, 8, 131, 256, 343, 439, 590, 610, 785, 843, 1000, 1006, 1136, 1286, 1314, 1418, 1555, 89, 192, 240, 382, 447, 557, 606, 756, 804, 938, 1055, 1184, 1271, 1380, 1443, 1581, 68, 144, 221, 342, 438, 560, 683, 751, 876, 915, 1072, 1178, 1239, 1311, 1462, 1563, 23, 134, 277, 335, 419, 587, 635, 748, 895, 975, 1100, 1120, 1265, 1381, 1428, 1517, 56, 116, 278, 364, 459, 581, 644, 797, 865, 987, 1092, 1107, 1211, 1303, 1470, 1542, 70, 121, 292, 307, 440, 520, 633, 793, 866, 980, 1046, 1182, 1234, 1343, 1488, 1547, 71, 155, 247, 324, 425, 508, 608, 724, 818, 982, 1005, 1160, 1259, 1393, 1495, 1531, 62, 133, 204, 374, 405, 551, 604, 740, 824, 956, 1007, 1124, 1245, 1342, 1405, 1545, 31, 129, 299, 368, 479, 501, 636, 741, 807, 989, 1097, 1134, 1285, 1323, 1489, 1598, 49, 162, 227, 308, 401, 579, 692, 754, 855, 970, 1071, 1141, 1235, 1385, 1444, 1519, 15, 119, 249, 361, 467, 546, 630, 795, 846, 921, 1070, 1193, 1208, 1331, 1417, 1536, 77, 115, 265, 388, 426, 598, 646, 716, 894, 927, 1030, 1164, 1219, 1388, 1425, 1540, 61, 126, 242, 396, 463, 517, 622, 735, 857, 995, 1085, 1148, 1287, 1327, 1402, 1560, 52, 189, 275, 372, 491, 521, 660, 709, 872, 928, 1045, 1177, 1202, 1313, 1434, 1584, 11, 195, 234, 365, 468, 544, 661, 777, 890, 935, 1023, 1172, 1256, 1316, 1490, 1551, 75, 154, 222, 316, 480, 555, 675, 701, 856, 901, 1049, 1135, 1204, 1328, 1419, 1596, 67, 105, 226, 393, 466, 593, 659, 731, 881, 908, 1021, 1152, 1207, 1386, 1408, 1525, 81, 178, 267, 379, 477, 596, 656, 746, 886, 961, 1031, 1115, 1233, 1344, 1446, 1511, 44, 153, 266, 366, 476, 542, 662, 720, 828, 992, 1052, 1109, 1241, 1307, 1468, 1573, 38, 127, 245, 352, 452, 518, 648, 728, 848, 940, 1087, 1140, 1238, 1308, 1491, 1577, 17, 147, 219, 340, 427, 515, 624, 771, 850, 944, 1088, 1105, 1230, 1374, 1479, 1590, 96, 193, 229, 344, 457, 578, 663, 732, 817, 914, 1062, 1146, 1205, 1379, 1482, 1514, 35, 128, 262, 325, 431, 543, 699, 737, 822, 999, 1051, 1166, 1261, 1372, 1487, 1579, 36, 113, 230, 392, 414, 554, 620, 719, 812, 924, 1060, 1171, 1298, 1378, 1403, 1509, 40, 139, 281, 314, 435, 561, 674, 749, 806, 923, 1081, 1187, 1296, 1361, 1422, 1502, 93, 135, 268, 380, 430, 562, 682, 767, 863, 937, 1065, 1102, 1264, 1366, 1416, 1588, 55, 132, 285, 312, 421, 528, 668, 776, 845, 957, 1019, 1132, 1237, 1356, 1471, 1567, 90, 199, 212, 326, 486, 511, 616, 723, 816, 962, 1037, 1176, 1250, 1363, 1455, 1510, 72, 151, 208, 331, 434, 536, 638, 781, 874, 968, 1089, 1111, 1291, 1392, 1475, 1512, 19, 166, 283, 322, 403, 599, 625, 705, 864, 909, 1078, 1101, 1263, 1345, 1493, 1528, 87, 180, 244, 351, 462, 513, 651, 794, 893, 916, 1068, 1159, 1262, 1301, 1415, 1561, 74, 140, 254, 333, 490, 524, 621, 790, 830, 974, 1038, 1126, 1282, 1355, 1492, 1597, 39, 141, 241, 391, 412, 580, 637, 798, 844, 949, 1053, 1150, 1221, 1373, 1438, 1513, 18, 142, 207, 350, 485, 591, 687, 707, 882, 920, 1082, 1188, 1231, 1310, 1476, 1508, 25, 148, 246, 383, 410, 573, 697, 789, 823, 948, 1026, 1163, 1217, 1396, 1474, 1532, 2, 175, 239, 337, 495, 523, 673, 708, 873, 947, 1033, 1129, 1258, 1333, 1423, 1548, 91, 197, 209, 378, 478, 529, 676, 773, 887, 913, 1058, 1199, 1283, 1357, 1442, 1557, 83, 114, 274, 373, 474, 553, 650, 788, 834, 958, 1032, 1104, 1295, 1335, 1450, 1566, 99, 182, 255, 360, 489, 533, 666, 787, 851, 918, 1014, 1162, 1213, 1304, 1413, 1576, 43, 106, 258, 304, 454, 509, 623, 792, 803, 994, 1063, 1110, 1294, 1306, 1451, 1523, 53, 170, 218, 353, 404, 503, 671, 727, 811, 969, 1048, 1181, 1266, 1351, 1447, 1568, 6, 101, 235, 399, 445, 597, 612, 718, 871, 904, 1059, 1139, 1288, 1348, 1458, 1538, 28, 145, 263, 309, 442, 510, 603, 739, 859, 910, 1075, 1185, 1229, 1320, 1411, 1558, 79, 146, 257, 328, 456, 556, 601, 702, 861, 903, 1044, 1173, 1214, 1390, 1441, 1587, 42, 200, 273, 319, 496, 574, 617, 791, 853, 943, 1057, 1114, 1284, 1312, 1460, 1583, 66, 158, 206, 389, 493, 541, 695, 761, 884, 929, 1056, 1130, 1232, 1302, 1439, 1507, 92, 143, 201, 397, 443, 568, 653, 738, 831, 965, 1016, 1200, 1275, 1319, 1483, 1526, 76, 161, 290, 318, 424, 527, 693, 747, 820, 993, 1095, 1157, 1215, 1315, 1412, 1582, 7, 102, 297, 311, 413, 547, 665, 715, 821, 946, 1039, 1174, 1248, 1318, 1463, 1504, 14, 150, 216, 336, 415, 507, 669, 783, 840, 985, 1047, 1161, 1299, 1382, 1445, 1595, 5, 137, 284, 348, 406, 564, 700, 760, 825, 967, 1015, 1143, 1206, 1325, 1429, 1544, 57, 130, 296, 346, 402, 532, 686, 758, 842, 954, 1061, 1103, 1203, 1397, 1426, 1594, 88, 177, 295, 384, 450, 506, 639, 736, 809, 997, 1098, 1190, 1269, 1347, 1454, 1549, 86, 104, 203, 367, 423, 595, 609, 786, 868, 976, 1069, 1147, 1268, 1371, 1499, 1600, 63, 191, 217, 349, 451, 514, 641, 717, 867, 998, 1034, 1133, 1252, 1358, 1469, 1524, 16, 183, 250, 302, 420, 538, 658, 714, 888, 988, 1054, 1194, 1210, 1400, 1421, 1533, 32, 185, 236, 355, 446, 537, 679, 766, 899, 930, 1080, 1154, 1247, 1370, 1404, 1599, 100, 118, 287, 306, 473, 534, 654, 734, 860, 978, 1084, 1149, 1223, 1376, 1484, 1585, 80, 136, 252, 330, 418, 530, 607, 759, 878, 911, 1073, 1179, 1222, 1367, 1432, 1575, 33, 112, 286, 376, 407, 504, 618, 753, 805, 917, 1017, 1144, 1228, 1383, 1430, 1543, 69, 117, 233, 370, 471, 571, 690, 782, 858, 919, 1091, 1125, 1292, 1391, 1496, 1518, 37, 111, 223, 303, 433, 577, 678, 725, 841, 932, 1002, 1167, 1274, 1321, 1486, 1571, 26, 164, 276, 317, 449, 588, 627, 743, 819, 941, 1096, 1122, 1246, 1340, 1466, 1556, 59, 167, 251, 323, 408, 575, 615, 711, 879, 966, 1099, 1191, 1276, 1398, 1457, 1574, 41, 160, 280, 358, 483, 567, 672, 765, 839, 931, 1012, 1153, 1300, 1326, 1435, 1539, 12, 172, 228, 321, 455, 566, 657, 768, 897, 981, 1090, 1183, 1236, 1353, 1497, 1505, 9, 108, 272, 386, 437, 584, 649, 722, 826, 912, 1011, 1156, 1257, 1338, 1456, 1506, 47, 156, 253, 369, 482, 531, 643, 774, 900, 906, 1077, 1142, 1201, 1365, 1433, 1501, 46, 103, 259, 313, 428, 576, 619, 745, 810, 972, 1040, 1196, 1279, 1375, 1461, 1564, 51, 198, 220, 332, 487, 563, 664, 778, 833, 950, 1009, 1119, 1212, 1329, 1407, 1570, 45, 181, 215, 329, 409, 526, 605, 784, 802, 979, 1067, 1197, 1249, 1359, 1465, 1554, 98, 152, 291, 320, 453, 592, 629, 799, 827, 934, 1066, 1155, 1281, 1324, 1431, 1537, 94, 184, 288, 363, 488, 535, 689, 726, 869, 991, 1042, 1116, 1242, 1360, 1464, 1520, 34, 122, 205, 338, 411, 522, 614, 770, 875, 953, 1004, 1131, 1272, 1387, 1494, 1541, 54, 163, 214, 385, 416, 570, 613, 763, 837, 945, 1003, 1128, 1243, 1339, 1409, 1535, 78, 109, 298, 377, 494, 539, 642, 703, 870, 926, 1079, 1118, 1273, 1334, 1449, 1559, 58, 124, 270, 387, 432, 549, 632, 750, 835, 955, 1008, 1192, 1251, 1336, 1500, 1522, 97, 186, 248, 390, 475, 552, 670, 710, 892, 939, 1093, 1106, 1277, 1350, 1478, 1572, 82, 120, 243, 395, 465, 540, 634, 730, 852, 902, 1024, 1137, 1290, 1337, 1410, 1527]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	3587.07 MBs
     ├ fmd	718.32 MBs	(shape (3, 4, 3, 4, 1280, 2040))
     ├ fmd_m	2868.75 MBs	(shape (3, 4, 3, 4, 1280, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	1.12 MBs
     ├ domain shape	(3, 3, 204, 320)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 09/07/2021 22:24:09 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (553+727=1280 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A137 ⫺₇₀ 4394), purity -2.119511272169551
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (238+315=553 samples) on frame 1 with decision: {1} ⟨DR⟩ (A8 ⫹ 10219), purity -1.2720020737411468
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (378+349=727 samples) on frame 1 with decision: {1} A169 ⫹₇₀ 4183, purity -1.6166976177916421
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (158+80=238 samples) on frame 1 with decision: {1} ⟨DR⟩ (A46 ⫺ 60766), purity -0.4825834746286413
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (214+164=378 samples) on frame 1 with decision: {1} A9 ⫺₇₀ 16896, purity -0.956344238950403
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (162+187=349 samples) on frame 1 with decision: {1} A7 ⫹₇₀ 11165, purity -0.9418085865571943
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+156=315 samples) on frame 1 with decision: {1} A122 ⫺ 4152, purity -0.6929743794586275
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+78=158 samples) on frame 1 with decision: {1} A24 ⫺ 11861, purity -0.03386247467755994
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (97+59=156 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A56 ⫺₆₀ 25942), purity -0.5049434507181112
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+83=164 samples) on frame 1 with decision: {1} A151 ⫺ 2611, purity -0.11154910708390156
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+80=162 samples) on frame 1 with decision: {1} A4 ⫺ 10227, purity -0.07943679669610945
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A22 ⫹ 9734, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (104+83=187 samples) on frame 1 with decision: {1} A102 ⫹₇₀ 10485, purity -0.4854433277155383
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+131=214 samples) on frame 1 with decision: {1} A10 ⫺₇₀ 16270, purity -0.46949258926963794
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+51=59 samples) on frame 1 with decision: {1} A200 ⫺ 336, purity -0.13451047945058991
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (33+64=97 samples) on frame 1 with decision: {1} A101 ⫺ 11040, purity -0.43717394038738344
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+22=104 samples) on frame 1 with decision: {1} ⟨PP⟩ (A40 ⫹ 21986), purity -0.12952419156085995
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+50=131 samples) on frame 1 with decision: {1} A61 ⫺₇₀ 7279, purity -0.04113168514929048
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A1 ⫺ 2463, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (20+13=33 samples) on frame 1 with decision: {1} ⟨DR⟩ (A114 ⫹ 962), purity -0.3702207891241781
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (60+4=64 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A40 ⫺ 21571), purity -0.1370106993830282
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+16=20 samples) on frame 1 with decision: {1} A1 ⫺ 2799, purity -0.3014161290051497
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+4=16 samples) on frame 1 with decision: {1} A28 ⫹ 10227, purity -0.17328679513998632
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
1731.847182 seconds (23.07 G allocations: 526.065 GiB, 25.10% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 24
Tot nodes: 47
Height: 8
Modal height:  4
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A137 ⫺₇₀ 4394)
✔ {1} A169 ⫹₇₀ 4183
│✔ {1} A7 ⫹₇₀ 11165
││✔ {1} A102 ⫹₇₀ 10485
│││✔ Lettuce_romaine_6wk : 78/83 (conf: 0.9397590361445783)
│││✘ {1} ⟨PP⟩ (A40 ⫹ 21986)
│││ ✔ Corn_senesced_green_weeds : 21/22 (conf: 0.9545454545454546)
│││ ✘ Lettuce_romaine_7wk : 80/82 (conf: 0.975609756097561)
││✘ {1} A4 ⫺ 10227
││ ✔ Stubble : 80/80 (conf: 1.0)
││ ✘ Fallow_smooth : 79/82 (conf: 0.9634146341463414)
│✘ {1} A9 ⫺₇₀ 16896
│ ✔ {1} A151 ⫺ 2611
│ │✔ Soil_vinyard_develop : 80/83 (conf: 0.963855421686747)
│ │✘ Lettuce_romaine_4wk : 80/81 (conf: 0.9876543209876543)
│ ✘ {1} A10 ⫺₇₀ 16270
│  ✔ {1} A61 ⫺₇₀ 7279
│  │✔ Corn_senesced_green_weeds : 50/50 (conf: 1.0)
│  │✘ Fallow : 80/81 (conf: 0.9876543209876543)
│  ✘ Lettuce_romaine_5wk : 80/83 (conf: 0.963855421686747)
✘ {1} ⟨DR⟩ (A8 ⫹ 10219)
 ✔ {1} A122 ⫺ 4152
 │✔ {1} ⟨P̅P̅⟩ (A56 ⫺₆₀ 25942)
 ││✔ {1} A200 ⫺ 336
 │││✔ Grapes_untrained : 50/51 (conf: 0.9803921568627451)
 │││✘ {1} A1 ⫺ 2463
 │││ ✔ Vinyard_untrained : 4/4 (conf: 1.0)
 │││ ✘ Vinyard_untrained : 3/4 (conf: 0.75)
 ││✘ {1} A101 ⫺ 11040
 ││ ✔ {1} ⟨P̅P̅⟩ (A40 ⫺ 21571)
 ││ │✔ Grapes_untrained : 4/4 (conf: 1.0)
 ││ │✘ Vinyard_untrained : 58/60 (conf: 0.9666666666666667)
 ││ ✘ {1} ⟨DR⟩ (A114 ⫹ 962)
 ││  ✔ Grapes_untrained : 13/13 (conf: 1.0)
 ││  ✘ {1} A1 ⫺ 2799
 ││   ✔ {1} A28 ⫹ 10227
 ││   │✔ Vinyard_untrained : 2/4 (conf: 0.5)
 ││   │✘ Vinyard_untrained : 12/12 (conf: 1.0)
 ││   ✘ Grapes_untrained : 4/4 (conf: 1.0)
 │✘ {1} A22 ⫹ 9734
 │ ✔ Celery : 80/80 (conf: 1.0)
 │ ✘ Vinyard_vertical_trellis : 79/79 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A46 ⫺ 60766)
  ✔ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
  ✘ {1} A24 ⫺ 11861
   ✔ Fallow_rough_plow : 77/78 (conf: 0.9871794871794872)
   ✘ Brocoli_green_weeds_2 : 80/80 (conf: 1.0)
● [ 09/07/2021 22:53:00 ] Saving tree to file ./gandalf/trees/tree_6d1a6b0430f77d555a2b1cbadd76e3ef87291fea9c95f5c66fb6c7fb4f9afb84.jld...
Test tree:
Decision Tree
Leaves: 24
Tot nodes: 47
Height: 8
Modal height:  4
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A137 ⫺₇₀ 4394)
✔ {1} A169 ⫹₇₀ 4183
│✔ {1} A7 ⫹₇₀ 11165
││✔ {1} A102 ⫹₇₀ 10485
│││✔ Lettuce_romaine_6wk : 19/22 (conf: 0.8636363636363636)
│││✘ {1} ⟨PP⟩ (A40 ⫹ 21986)
│││ ✔ Corn_senesced_green_weeds : 4/7 (conf: 0.5714285714285714)
│││ ✘ Lettuce_romaine_7wk : 19/20 (conf: 0.95)
││✘ {1} A4 ⫺ 10227
││ ✔ Stubble : 20/20 (conf: 1.0)
││ ✘ Fallow_smooth : 18/21 (conf: 0.8571428571428571)
│✘ {1} A9 ⫺₇₀ 16896
│ ✔ {1} A151 ⫺ 2611
│ │✔ Soil_vinyard_develop : 20/20 (conf: 1.0)
│ │✘ Lettuce_romaine_4wk : 19/20 (conf: 0.95)
│ ✘ {1} A10 ⫺₇₀ 16270
│  ✔ {1} A61 ⫺₇₀ 7279
│  │✔ Corn_senesced_green_weeds : 10/12 (conf: 0.8333333333333334)
│  │✘ Fallow : 20/22 (conf: 0.9090909090909091)
│  ✘ Lettuce_romaine_5wk : 20/22 (conf: 0.9090909090909091)
✘ {1} ⟨DR⟩ (A8 ⫹ 10219)
 ✔ {1} A122 ⫺ 4152
 │✔ {1} ⟨P̅P̅⟩ (A56 ⫺₆₀ 25942)
 ││✔ {1} A200 ⫺ 336
 │││✔ Grapes_untrained : 9/11 (conf: 0.8181818181818182)
 │││✘ {1} A1 ⫺ 2463
 │││ ✔ Vinyard_untrained : 0/0 (conf: NaN)
 │││ ✘ Vinyard_untrained : 3/4 (conf: 0.75)
 ││✘ {1} A101 ⫺ 11040
 ││ ✔ {1} ⟨P̅P̅⟩ (A40 ⫺ 21571)
 ││ │✔ Grapes_untrained : 0/1 (conf: 0.0)
 ││ │✘ Vinyard_untrained : 12/14 (conf: 0.8571428571428571)
 ││ ✘ {1} ⟨DR⟩ (A114 ⫹ 962)
 ││  ✔ Grapes_untrained : 3/5 (conf: 0.6)
 ││  ✘ {1} A1 ⫺ 2799
 ││   ✔ {1} A28 ⫹ 10227
 ││   │✔ Vinyard_untrained : 0/0 (conf: NaN)
 ││   │✘ Vinyard_untrained : 1/1 (conf: 1.0)
 ││   ✘ Grapes_untrained : 1/1 (conf: 1.0)
 │✘ {1} A22 ⫹ 9734
 │ ✔ Celery : 20/20 (conf: 1.0)
 │ ✘ Vinyard_vertical_trellis : 19/19 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A46 ⫺ 60766)
  ✔ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
  ✘ {1} A24 ⫺ 11861
   ✔ Fallow_rough_plow : 16/16 (conf: 1.0)
   ✘ Brocoli_green_weeds_2 : 20/22 (conf: 0.9090909090909091)
 test size = [(3, 3, 204, 320)]
 Purity threshold 1.0
RESULT:	Salinas,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	91.56%	100.0%	100.0%	100.0%	70.0%	100.0%	80.0%	90.0%	65.0%	95.0%	100.0%	95.0%	95.0%	100.0%	100.0%	80.0%	95.0%	100.0%	90.91%	100.0%	73.68%	90.91%	100.0%	85.71%	72.22%	95.0%	90.91%	86.36%	95.0%	100.0%	100.0%	84.21%	100.0%	||	91.0%	[100.0, 95.24, 100.0, 71.79, 95.24, 88.89, 87.8, 68.42, 95.0, 95.24, 90.48, 95.0, 100.0, 100.0, 82.05, 97.44]%	
  accuracy: 91.56% kappa: 91.0% 
 20  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0  0  0  0  0  0  0  0  0  0  0	100.0%		Brocoli_green_weeds_2
  0  0 20  0  0  0  0  0  0  0  0  0  0  0  0  0	100.0%		Celery
  0  0  0 14  2  0  0  0  1  2  1  0  0  0  0  0	70.0%		Corn_senesced_green_weeds
  0  0  0  0 20  0  0  0  0  0  0  0  0  0  0  0	100.0%		Fallow
  0  2  0  0  0 16  2  0  0  0  0  0  0  0  0  0	80.0%		Fallow_rough_plow
  0  0  0  0  0  0 18  0  0  0  2  0  0  0  0  0	90.0%		Fallow_smooth
  0  0  0  3  0  0  1 13  0  0  0  0  0  0  3  0	65.0%		Grapes_untrained
  0  0  0  1  0  0  0  0 19  0  0  0  0  0  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0  0  0  0  0  0  0 20  0  0  0  0  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0  0  0  0  0  0  0 19  1  0  0  0  0	95.0%		Lettuce_romaine_6wk
  0  0  0  1  0  0  0  0  0  0  0 19  0  0  0  0	95.0%		Lettuce_romaine_7wk
  0  0  0  0  0  0  0  0  0  0  0  0 20  0  0  0	100.0%		Soil_vinyard_develop
  0  0  0  0  0  0  0  0  0  0  0  0  0 20  0  0	100.0%		Stubble
  0  0  0  0  0  0  0  4  0  0  0  0  0  0 16  0	80.0%		Vinyard_untrained
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0 19	95.0%		Vinyard_vertical_trellis

overall_acc:	0.915625
κ =		0.91
sensitivities:	[1.0, 1.0, 1.0, 0.7, 1.0, 0.8, 0.9, 0.65, 0.95, 1.0, 0.95, 0.95, 1.0, 1.0, 0.8, 0.95]
specificities:	[1.0, 0.9933333333333333, 1.0, 0.9833333333333333, 0.9933333333333333, 1.0, 0.99, 0.9833333333333333, 0.9966666666666667, 0.9933333333333333, 0.99, 0.9966666666666667, 1.0, 1.0, 0.99, 1.0]
PPVs:		[1.0, 0.9090909090909091, 1.0, 0.7368421052631579, 0.9090909090909091, 1.0, 0.8571428571428571, 0.7222222222222222, 0.95, 0.9090909090909091, 0.8636363636363636, 0.95, 1.0, 1.0, 0.8421052631578947, 1.0]
NPVs:		[1.0, 1.0, 1.0, 0.9800664451827242, 1.0, 0.9868421052631579, 0.9933110367892977, 0.9768211920529801, 0.9966666666666667, 1.0, 0.9966442953020134, 0.9966666666666667, 1.0, 1.0, 0.9867109634551495, 0.9966777408637874]
F1s:		[1.0, 0.9523809523809523, 1.0, 0.717948717948718, 0.9523809523809523, 0.8888888888888888, 0.8780487804878049, 0.6842105263157895, 0.95, 0.9523809523809523, 0.9047619047619048, 0.95, 1.0, 1.0, 0.8205128205128205, 0.9743589743589743]
accuracies:	[1.0, 0.99375, 1.0, 0.965625, 0.99375, 0.9875, 0.984375, 0.9625, 0.99375, 0.99375, 0.9875, 0.99375, 1.0, 1.0, 0.978125, 0.996875]
mean_accuracy:	0.989453125
Iteration "Salinas-A,(1,false,"o_None","TestOpGeq")": skipping
Iteration "Salinas-A,(3,:flattened,"o_None","TestOpGeq")": skipping
Iteration "Salinas-A,(3,:averaged,"o_None","TestOpGeq")": skipping
Iteration "Salinas-A,(3,false,"o_RCC8","TestOpAll")": skipping
Iteration "Salinas-A,(3,false,"o_RCC5","TestOpAll")"...
● [ 09/07/2021 22:53:01 ] Loading dataset from file ./gandalf/cache/dataset_060e7f57d191c313a182a968bf329e0b696b946db9f523bf4aa3f7061588b8b5.jld...
Dataseeds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

executing run 'Salinas-A,(3,false,"o_RCC5","TestOpAll")'...
dataset type = Tuple{Array{Int64, 4}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (test_operators = TestOperator[⫺, ⫹, ⫺₉₀, ⫹₉₀, ⫺₈₀, ⫹₈₀, ⫺₇₀, ⫹₇₀, ⫺₆₀, ⫹₆₀], ontology = Ontology{DecisionTree.ModalLogic.Interval2D}(RCC5))
dataset_slices    = (10 dataset_slices)

Frame 1/1
┌ LogLevel(-500): OntologicalDataset -> FeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:12
┌ LogLevel(-500): Instance 1/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 362/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 120/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 483/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 241/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): FeatModalDataset -> StumpFeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:358
┌ LogLevel(-500): Instance 1/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 362/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 120/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 483/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 241/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
52822.495582 seconds (157.79 G allocations: 18.069 TiB, 91.51% gc time)
Dataset_slice = (600) -> [10, 122, 267, 386, 478, 583, 3, 166, 252, 331, 497, 503, 27, 190, 228, 353, 403, 521, 63, 130, 246, 366, 462, 566, 50, 195, 235, 350, 474, 501, 57, 186, 201, 397, 447, 511, 36, 116, 254, 326, 457, 542, 21, 123, 248, 340, 469, 593, 75, 157, 258, 336, 417, 509, 78, 183, 238, 394, 408, 596, 35, 154, 264, 376, 477, 599, 66, 191, 274, 307, 448, 548, 20, 167, 215, 392, 467, 549, 67, 188, 239, 310, 434, 568, 25, 141, 231, 330, 490, 594, 24, 117, 270, 400, 492, 592, 82, 194, 226, 387, 455, 560, 74, 197, 289, 378, 441, 565, 69, 105, 227, 341, 461, 539, 81, 187, 300, 388, 427, 585, 28, 159, 210, 342, 405, 531, 15, 179, 244, 323, 420, 554, 59, 163, 223, 332, 416, 558, 29, 124, 268, 351, 459, 564, 18, 153, 232, 329, 500, 582, 31, 162, 220, 319, 418, 535, 43, 177, 288, 346, 465, 576, 40, 155, 249, 325, 470, 575, 12, 149, 205, 327, 496, 578, 83, 192, 275, 305, 464, 597, 100, 145, 247, 398, 415, 508, 94, 178, 261, 322, 488, 519, 16, 110, 291, 347, 485, 551, 51, 119, 204, 337, 466, 590, 73, 148, 297, 362, 449, 522, 19, 103, 292, 358, 425, 533, 8, 142, 213, 382, 499, 530, 11, 134, 207, 345, 472, 598, 95, 136, 296, 357, 407, 515, 58, 169, 284, 339, 458, 595, 72, 101, 241, 321, 491, 581, 13, 127, 230, 349, 432, 550, 53, 172, 240, 301, 435, 555, 22, 200, 285, 335, 483, 532, 71, 176, 260, 379, 437, 517, 87, 139, 202, 399, 439, 514, 33, 160, 299, 389, 451, 544, 61, 168, 208, 343, 480, 540, 90, 180, 233, 309, 428, 586, 55, 175, 216, 348, 476, 518, 60, 137, 290, 383, 443, 573, 96, 198, 211, 308, 456, 552, 68, 144, 214, 317, 431, 563, 77, 189, 203, 315, 471, 507, 9, 135, 279, 361, 473, 536, 42, 147, 221, 352, 481, 553, 64, 115, 287, 391, 423, 528, 85, 196, 256, 390, 453, 516, 54, 182, 280, 359, 442, 588, 2, 140, 245, 320, 429, 541, 23, 170, 272, 313, 402, 559, 91, 104, 269, 324, 413, 538, 65, 181, 257, 344, 414, 505, 48, 132, 224, 367, 487, 523, 70, 173, 271, 303, 444, 589, 80, 118, 276, 338, 460, 570, 49, 171, 265, 333, 454, 577, 7, 120, 281, 360, 438, 572, 88, 193, 218, 372, 482, 584, 45, 121, 229, 381, 475, 510, 14, 174, 236, 364, 450, 534, 97, 128, 283, 304, 436, 562, 26, 111, 243, 311, 463, 561, 52, 112, 294, 302, 412, 506, 4, 158, 234, 384, 410, 569, 32, 150, 253, 371, 409, 512, 34, 146, 277, 374, 493, 579, 99, 125, 266, 380, 430, 504, 93, 102, 206, 363, 422, 587, 56, 152, 286, 375, 445, 513, 46, 113, 250, 306, 498, 524, 47, 185, 263, 373, 404, 525, 84, 108, 242, 385, 419, 600, 79, 129, 217, 318, 486, 546, 39, 156, 282, 365, 494, 591, 17, 114, 251, 312, 468, 574, 38, 143, 225, 369, 452, 556, 5, 151, 212, 368, 426, 502, 44, 138, 278, 355, 433, 526, 98, 126, 237, 395, 489, 529, 86, 109, 273, 334, 421, 537, 92, 199, 262, 354, 479, 527, 41, 184, 209, 328, 446, 547, 89, 107, 259, 370, 411, 567, 6, 131, 222, 377, 495, 545, 1, 106, 295, 314, 401, 557, 76, 161, 255, 396, 406, 520, 37, 164, 298, 393, 484, 543, 30, 133, 219, 356, 440, 580, 62, 165, 293, 316, 424, 571]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1345.8 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1075.78 MBs	(shape (3, 4, 3, 4, 480, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 10/07/2021 13:33:34 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (239+241=480 samples) on frame 1 with decision: {1} ⟨DR⟩ (A42 ⫹ 25543), purity -1.1098204493092325
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+159=239 samples) on frame 1 with decision: {1} A13 ⫺ 11493, purity -0.4611182302686674
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+160=241 samples) on frame 1 with decision: {1} A85 ⫺ 10625, purity -0.48253858773505526
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+79=159 samples) on frame 1 with decision: {1} A85 ⫺ 11118, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A5 ⫹ 12056, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
335.547237 seconds (2.73 G allocations: 68.439 GiB, 16.68% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  1
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨DR⟩ (A42 ⫹ 25543)
✔ {1} A85 ⫺ 10625
│✔ {1} A5 ⫹ 12056
││✔ Corn_senesced_green_weeds : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/81 (conf: 0.9876543209876543)
✘ {1} A13 ⫺ 11493
 ✔ {1} A85 ⫺ 11118
 │✔ Lettuce_romaine_7wk : 79/79 (conf: 1.0)
 │✘ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
● [ 10/07/2021 13:39:10 ] Saving tree to file ./gandalf/trees/tree_3777e863f8ca0bcf8b648d0082e08ae71117c2f3a4badaff488b34a56dd576e5.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  1
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨DR⟩ (A42 ⫹ 25543)
✔ {1} A85 ⫺ 10625
│✔ {1} A5 ⫹ 12056
││✔ Corn_senesced_green_weeds : 19/19 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 19/19 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/23 (conf: 0.8695652173913043)
✘ {1} A13 ⫺ 11493
 ✔ {1} A85 ⫺ 11118
 │✔ Lettuce_romaine_7wk : 19/20 (conf: 0.95)
 │✘ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 19/19 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	96.67%	95.0%	95.0%	95.0%	100.0%	100.0%	95.0%	100.0%	100.0%	100.0%	86.96%	100.0%	95.0%	||	96.0%	[97.44, 97.44, 97.44, 93.02, 100.0, 95.0]%	
  accuracy: 96.67% kappa: 96.0% 
 19  0  0  1  0  0	95.0%		Brocoli_green_weeds_1
  0 19  0  0  0  1	95.0%		Corn_senesced_green_weeds
  0  0 19  1  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  1  0 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.9666666666666667
κ =		0.96
sensitivities:	[0.95, 0.95, 0.95, 1.0, 1.0, 0.95]
specificities:	[1.0, 1.0, 1.0, 0.97, 1.0, 0.99]
PPVs:		[1.0, 1.0, 1.0, 0.8695652173913043, 1.0, 0.95]
NPVs:		[0.9900990099009901, 0.9900990099009901, 0.9900990099009901, 1.0, 1.0, 0.99]
F1s:		[0.9743589743589743, 0.9743589743589743, 0.9743589743589743, 0.9302325581395349, 1.0, 0.95]
accuracies:	[0.9916666666666667, 0.9916666666666667, 0.9916666666666667, 0.975, 1.0, 0.9833333333333333]
mean_accuracy:	0.9888888888888889
Dataset_slice = (600) -> [19, 131, 215, 348, 496, 545, 50, 123, 292, 322, 459, 579, 6, 121, 285, 331, 464, 513, 53, 110, 205, 315, 435, 505, 51, 109, 209, 311, 473, 521, 80, 124, 226, 364, 462, 528, 76, 158, 287, 370, 471, 541, 54, 114, 245, 399, 458, 519, 24, 151, 225, 332, 409, 527, 38, 128, 231, 316, 429, 518, 86, 191, 265, 391, 487, 566, 56, 141, 221, 356, 402, 555, 28, 200, 232, 346, 467, 520, 100, 140, 259, 325, 420, 595, 21, 171, 206, 379, 454, 589, 46, 184, 222, 395, 468, 560, 74, 146, 214, 343, 418, 540, 79, 143, 237, 320, 448, 558, 98, 188, 201, 390, 442, 600, 83, 186, 235, 338, 484, 503, 10, 119, 286, 398, 422, 547, 52, 167, 293, 396, 449, 544, 42, 176, 202, 326, 476, 509, 62, 154, 269, 304, 461, 561, 45, 144, 278, 334, 417, 597, 33, 163, 250, 333, 474, 534, 90, 134, 256, 388, 431, 549, 77, 172, 271, 367, 450, 584, 75, 189, 233, 387, 405, 573, 47, 182, 247, 312, 432, 501, 37, 137, 299, 340, 440, 568, 59, 125, 273, 345, 411, 506, 78, 149, 229, 305, 480, 529, 82, 102, 243, 374, 407, 533, 34, 104, 253, 329, 427, 585, 67, 108, 224, 335, 408, 526, 44, 198, 261, 357, 452, 569, 89, 180, 279, 363, 414, 580, 68, 105, 267, 306, 413, 557, 85, 166, 274, 365, 447, 542, 26, 145, 220, 369, 404, 578, 39, 142, 227, 376, 428, 590, 99, 193, 264, 321, 483, 512, 20, 147, 272, 381, 481, 572, 9, 130, 204, 301, 424, 565, 7, 156, 257, 344, 438, 570, 12, 199, 230, 336, 466, 571, 41, 132, 289, 337, 415, 593, 16, 170, 262, 373, 444, 543, 58, 196, 210, 347, 433, 551, 31, 107, 260, 383, 477, 535, 92, 164, 254, 355, 463, 502, 97, 174, 298, 397, 478, 508, 88, 106, 219, 317, 446, 531, 27, 115, 248, 360, 470, 515, 32, 153, 291, 330, 489, 582, 63, 185, 251, 362, 500, 524, 22, 160, 207, 352, 401, 577, 55, 152, 283, 353, 485, 525, 96, 169, 280, 389, 403, 586, 70, 173, 255, 366, 493, 550, 43, 127, 300, 339, 451, 507, 72, 155, 236, 400, 492, 539, 84, 168, 203, 324, 455, 564, 69, 187, 239, 378, 419, 546, 4, 139, 268, 368, 498, 598, 15, 111, 241, 319, 479, 536, 93, 175, 294, 302, 439, 548, 17, 122, 297, 307, 421, 538, 48, 190, 295, 318, 456, 594, 57, 138, 208, 354, 488, 563, 49, 183, 281, 385, 469, 517, 66, 195, 258, 372, 472, 583, 61, 118, 266, 351, 425, 599, 94, 116, 277, 349, 475, 537, 8, 135, 213, 375, 457, 504, 29, 197, 263, 394, 441, 588, 91, 117, 290, 342, 494, 567, 64, 113, 284, 380, 445, 514, 30, 181, 282, 303, 486, 581, 40, 179, 296, 350, 430, 552, 5, 157, 223, 384, 453, 522, 18, 161, 270, 314, 499, 576, 87, 177, 275, 308, 443, 554, 73, 129, 242, 382, 490, 574, 60, 136, 212, 358, 416, 523, 71, 148, 238, 393, 434, 511, 81, 150, 228, 371, 437, 510, 23, 178, 276, 328, 497, 556, 95, 101, 252, 392, 410, 591, 3, 165, 246, 323, 460, 530, 36, 133, 217, 361, 423, 559, 35, 126, 218, 386, 491, 562, 2, 103, 216, 359, 436, 532, 13, 162, 240, 309, 412, 553, 14, 192, 288, 341, 406, 587, 25, 159, 249, 310, 465, 592, 11, 112, 211, 377, 495, 575, 65, 120, 234, 313, 482, 596, 1, 194, 244, 327, 426, 516]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1345.8 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1075.78 MBs	(shape (3, 4, 3, 4, 480, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 10/07/2021 13:39:17 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (241+239=480 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26700), purity -1.1293049241654884
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+159=241 samples) on frame 1 with decision: {1} A13 ⫺ 11493, purity -0.4963062662856841
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+158=239 samples) on frame 1 with decision: {1} ⟨PO⟩ (A84 ⫺ 6943), purity -0.480723208021419
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A85 ⫺ 11118, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+78=158 samples) on frame 1 with decision: {1} A8 ⫹₆₀ 13948, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
355.758207 seconds (2.89 G allocations: 73.176 GiB, 17.17% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26700)
✔ {1} ⟨PO⟩ (A84 ⫺ 6943)
│✔ {1} A8 ⫹₆₀ 13948
││✔ Corn_senesced_green_weeds : 78/78 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/81 (conf: 0.9876543209876543)
✘ {1} A13 ⫺ 11493
 ✔ {1} A85 ⫺ 11118
 │✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
 │✘ Lettuce_romaine_6wk : 79/79 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/82 (conf: 0.975609756097561)
● [ 10/07/2021 13:45:13 ] Saving tree to file ./gandalf/trees/tree_9f329e3b6197843a76c1affb24a4e7546bdefc0911eeb392834ecfec3a92b885.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26700)
✔ {1} ⟨PO⟩ (A84 ⫺ 6943)
│✔ {1} A8 ⫹₆₀ 13948
││✔ Corn_senesced_green_weeds : 20/20 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/21 (conf: 0.9523809523809523)
✘ {1} A13 ⫺ 11493
 ✔ {1} A85 ⫺ 11118
 │✔ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
 │✘ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	99.17%	100.0%	100.0%	100.0%	100.0%	95.0%	100.0%	100.0%	100.0%	100.0%	95.24%	100.0%	100.0%	||	99.0%	[100.0, 100.0, 100.0, 97.56, 97.44, 100.0]%	
  accuracy: 99.17% kappa: 99.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0	100.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  1 19  0	95.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9916666666666667
κ =		0.99
sensitivities:	[1.0, 1.0, 1.0, 1.0, 0.95, 1.0]
specificities:	[1.0, 1.0, 1.0, 0.99, 1.0, 1.0]
PPVs:		[1.0, 1.0, 1.0, 0.9523809523809523, 1.0, 1.0]
NPVs:		[1.0, 1.0, 1.0, 1.0, 0.9900990099009901, 1.0]
F1s:		[1.0, 1.0, 1.0, 0.975609756097561, 0.9743589743589743, 1.0]
accuracies:	[1.0, 1.0, 1.0, 0.9916666666666667, 0.9916666666666667, 1.0]
mean_accuracy:	0.9972222222222222
Dataset_slice = (600) -> [69, 125, 224, 361, 493, 514, 56, 174, 287, 365, 435, 502, 62, 169, 286, 356, 466, 569, 91, 135, 227, 360, 414, 522, 63, 180, 272, 321, 443, 562, 66, 141, 201, 312, 426, 509, 98, 175, 260, 368, 409, 518, 32, 187, 210, 383, 490, 549, 41, 185, 278, 364, 500, 551, 100, 165, 256, 334, 417, 567, 48, 101, 289, 351, 477, 597, 95, 137, 246, 338, 464, 563, 38, 149, 277, 328, 480, 578, 57, 146, 293, 341, 412, 552, 14, 176, 298, 390, 442, 594, 22, 126, 218, 309, 441, 582, 1, 120, 266, 344, 405, 592, 93, 168, 254, 381, 419, 556, 37, 123, 225, 313, 453, 533, 54, 138, 204, 315, 437, 568, 49, 156, 203, 335, 402, 507, 58, 164, 257, 343, 440, 577, 15, 155, 234, 394, 489, 542, 60, 186, 285, 306, 423, 583, 71, 107, 291, 348, 459, 513, 85, 160, 283, 353, 496, 547, 77, 178, 247, 316, 469, 544, 25, 189, 237, 387, 495, 599, 45, 182, 292, 373, 482, 584, 39, 117, 250, 392, 456, 520, 83, 162, 274, 346, 421, 576, 44, 194, 231, 366, 448, 527, 35, 112, 219, 333, 497, 560, 28, 106, 236, 311, 468, 600, 51, 119, 261, 310, 431, 516, 96, 114, 273, 347, 465, 536, 78, 163, 251, 352, 404, 538, 2, 129, 213, 359, 403, 591, 26, 183, 288, 308, 454, 598, 19, 113, 282, 400, 401, 540, 5, 111, 252, 302, 473, 566, 10, 108, 211, 393, 427, 581, 55, 152, 235, 342, 470, 541, 65, 148, 276, 327, 428, 511, 99, 136, 233, 304, 472, 546, 6, 184, 230, 332, 413, 517, 23, 131, 244, 330, 452, 515, 7, 199, 240, 322, 422, 529, 74, 142, 214, 319, 467, 505, 86, 128, 264, 399, 494, 559, 75, 200, 212, 389, 449, 573, 42, 122, 300, 388, 418, 561, 9, 150, 259, 339, 491, 510, 11, 170, 296, 382, 484, 554, 80, 140, 208, 374, 457, 596, 73, 130, 239, 354, 458, 595, 16, 134, 294, 370, 475, 519, 31, 177, 202, 336, 432, 580, 89, 151, 275, 317, 438, 572, 13, 104, 243, 391, 479, 504, 72, 144, 262, 375, 436, 548, 84, 173, 258, 320, 451, 575, 64, 109, 221, 350, 474, 555, 97, 102, 228, 325, 408, 508, 61, 118, 248, 378, 487, 553, 59, 172, 279, 395, 434, 545, 40, 132, 241, 358, 406, 574, 43, 171, 217, 380, 425, 526, 20, 124, 215, 385, 486, 501, 30, 105, 269, 355, 445, 558, 53, 195, 280, 369, 463, 550, 12, 157, 297, 377, 439, 565, 50, 159, 238, 345, 499, 589, 34, 193, 284, 398, 424, 579, 81, 115, 253, 397, 416, 570, 67, 166, 222, 372, 450, 585, 24, 127, 281, 371, 481, 524, 4, 145, 263, 384, 492, 539, 68, 154, 265, 324, 410, 503, 90, 139, 255, 349, 462, 534, 3, 143, 249, 357, 455, 506, 52, 181, 220, 305, 420, 523, 94, 188, 229, 329, 483, 543, 29, 153, 270, 303, 446, 535, 36, 179, 226, 307, 433, 564, 82, 158, 209, 314, 478, 530, 27, 190, 245, 318, 485, 521, 70, 197, 206, 376, 476, 537, 92, 196, 271, 363, 415, 532, 76, 191, 295, 331, 447, 571, 21, 110, 268, 337, 498, 557, 17, 167, 242, 396, 407, 588, 46, 192, 290, 301, 429, 531, 18, 161, 216, 362, 430, 525, 87, 103, 267, 379, 471, 590, 8, 147, 232, 323, 411, 593, 47, 198, 223, 326, 444, 586, 33, 133, 207, 386, 488, 512, 88, 121, 299, 340, 460, 528, 79, 116, 205, 367, 461, 587]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1345.8 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1075.78 MBs	(shape (3, 4, 3, 4, 480, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 10/07/2021 13:45:21 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (241+239=480 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26700), purity -1.1293049241654884
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+159=241 samples) on frame 1 with decision: {1} A13 ⫺ 11493, purity -0.4963062662856841
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+158=239 samples) on frame 1 with decision: {1} ⟨PO⟩ (A84 ⫺ 6943), purity -0.480723208021419
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A85 ⫺ 11118, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+78=158 samples) on frame 1 with decision: {1} A8 ⫹₆₀ 13948, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
359.279160 seconds (2.89 G allocations: 73.258 GiB, 16.97% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26700)
✔ {1} ⟨PO⟩ (A84 ⫺ 6943)
│✔ {1} A8 ⫹₆₀ 13948
││✔ Corn_senesced_green_weeds : 78/78 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/81 (conf: 0.9876543209876543)
✘ {1} A13 ⫺ 11493
 ✔ {1} A85 ⫺ 11118
 │✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
 │✘ Lettuce_romaine_6wk : 79/79 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/82 (conf: 0.975609756097561)
● [ 10/07/2021 13:51:20 ] Saving tree to file ./gandalf/trees/tree_928decdaf5c211822317340b8a70b34e2c08dd06f8e5c343dc0f8bdd4bca6ab5.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26700)
✔ {1} ⟨PO⟩ (A84 ⫺ 6943)
│✔ {1} A8 ⫹₆₀ 13948
││✔ Corn_senesced_green_weeds : 20/20 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/21 (conf: 0.9523809523809523)
✘ {1} A13 ⫺ 11493
 ✔ {1} A85 ⫺ 11118
 │✔ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
 │✘ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	99.17%	100.0%	100.0%	100.0%	100.0%	95.0%	100.0%	100.0%	100.0%	100.0%	95.24%	100.0%	100.0%	||	99.0%	[100.0, 100.0, 100.0, 97.56, 97.44, 100.0]%	
  accuracy: 99.17% kappa: 99.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0	100.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  1 19  0	95.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9916666666666667
κ =		0.99
sensitivities:	[1.0, 1.0, 1.0, 1.0, 0.95, 1.0]
specificities:	[1.0, 1.0, 1.0, 0.99, 1.0, 1.0]
PPVs:		[1.0, 1.0, 1.0, 0.9523809523809523, 1.0, 1.0]
NPVs:		[1.0, 1.0, 1.0, 1.0, 0.9900990099009901, 1.0]
F1s:		[1.0, 1.0, 1.0, 0.975609756097561, 0.9743589743589743, 1.0]
accuracies:	[1.0, 1.0, 1.0, 0.9916666666666667, 0.9916666666666667, 1.0]
mean_accuracy:	0.9972222222222222
Dataset_slice = (600) -> [60, 161, 270, 359, 480, 580, 46, 140, 238, 345, 460, 561, 23, 131, 243, 309, 470, 560, 40, 121, 266, 306, 436, 558, 68, 185, 240, 312, 488, 534, 29, 183, 233, 332, 495, 531, 53, 164, 208, 386, 441, 511, 24, 154, 269, 393, 440, 551, 83, 153, 226, 339, 425, 590, 1, 112, 263, 302, 429, 515, 47, 146, 273, 387, 432, 545, 65, 110, 300, 341, 426, 529, 98, 115, 209, 348, 419, 530, 51, 176, 286, 395, 442, 516, 6, 148, 212, 336, 452, 556, 12, 103, 204, 303, 453, 600, 45, 122, 237, 366, 420, 541, 93, 167, 293, 368, 415, 521, 80, 106, 241, 323, 496, 563, 97, 193, 276, 365, 414, 592, 5, 132, 232, 390, 444, 528, 73, 124, 231, 358, 433, 504, 85, 174, 265, 329, 462, 524, 44, 134, 255, 322, 489, 578, 18, 160, 258, 372, 493, 501, 32, 188, 290, 394, 409, 554, 62, 200, 206, 320, 473, 587, 74, 111, 234, 360, 463, 514, 49, 128, 289, 355, 406, 533, 76, 191, 257, 381, 478, 566, 88, 125, 274, 349, 424, 546, 34, 101, 262, 318, 408, 573, 2, 162, 246, 324, 486, 570, 95, 105, 292, 337, 421, 595, 36, 197, 207, 343, 492, 520, 27, 147, 203, 362, 437, 577, 35, 149, 202, 375, 411, 539, 31, 170, 242, 374, 430, 571, 7, 126, 247, 344, 500, 552, 11, 184, 298, 338, 428, 532, 52, 109, 282, 370, 456, 562, 75, 142, 213, 328, 446, 576, 69, 152, 287, 330, 455, 564, 41, 172, 248, 354, 407, 582, 22, 194, 249, 397, 466, 572, 10, 136, 253, 399, 435, 542, 16, 157, 228, 357, 448, 585, 72, 178, 291, 313, 494, 526, 61, 173, 210, 319, 404, 586, 96, 143, 220, 351, 464, 598, 56, 158, 299, 378, 401, 557, 48, 175, 211, 367, 431, 509, 89, 104, 236, 389, 417, 527, 71, 139, 260, 376, 491, 536, 15, 168, 280, 327, 443, 599, 30, 119, 288, 310, 449, 594, 90, 138, 294, 305, 459, 549, 50, 118, 205, 400, 477, 518, 66, 130, 252, 380, 483, 589, 14, 144, 261, 369, 454, 503, 100, 145, 215, 371, 447, 579, 17, 156, 296, 356, 457, 508, 84, 186, 227, 315, 475, 565, 86, 179, 283, 304, 439, 548, 92, 113, 281, 335, 461, 537, 78, 163, 279, 342, 418, 596, 43, 133, 217, 311, 469, 519, 59, 169, 251, 316, 498, 547, 54, 177, 245, 361, 403, 591, 25, 117, 254, 384, 422, 543, 64, 108, 264, 346, 434, 505, 55, 165, 297, 352, 484, 593, 99, 159, 278, 307, 416, 538, 58, 150, 256, 388, 467, 502, 42, 196, 250, 326, 427, 569, 67, 141, 216, 331, 487, 525, 3, 137, 219, 373, 445, 544, 13, 195, 222, 377, 402, 583, 8, 102, 259, 340, 476, 535, 79, 151, 272, 398, 405, 512, 91, 180, 224, 325, 471, 522, 33, 189, 284, 333, 468, 510, 38, 182, 268, 379, 472, 517, 77, 166, 275, 391, 479, 523, 9, 181, 271, 353, 499, 588, 39, 155, 221, 317, 412, 553, 4, 198, 277, 392, 458, 513, 87, 199, 295, 383, 481, 550, 21, 114, 201, 334, 465, 507, 19, 120, 230, 363, 497, 567, 94, 190, 229, 314, 485, 575, 57, 116, 214, 308, 423, 597, 82, 192, 223, 350, 450, 581, 28, 171, 285, 347, 451, 559, 26, 127, 225, 385, 474, 574, 20, 107, 244, 301, 438, 506, 81, 135, 239, 396, 482, 540, 70, 123, 235, 321, 410, 568, 63, 129, 267, 382, 413, 555, 37, 187, 218, 364, 490, 584]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1345.8 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1075.78 MBs	(shape (3, 4, 3, 4, 480, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 10/07/2021 13:51:28 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (241+239=480 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26700), purity -1.1293049241654884
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+159=241 samples) on frame 1 with decision: {1} A13 ⫺ 11493, purity -0.4963062662856841
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+158=239 samples) on frame 1 with decision: {1} ⟨PO⟩ (A84 ⫺ 6943), purity -0.480723208021419
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A85 ⫺ 11118, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+78=158 samples) on frame 1 with decision: {1} A5 ⫹₆₀ 12228, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
359.595533 seconds (2.91 G allocations: 73.678 GiB, 17.02% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26700)
✔ {1} ⟨PO⟩ (A84 ⫺ 6943)
│✔ {1} A5 ⫹₆₀ 12228
││✔ Corn_senesced_green_weeds : 78/78 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/81 (conf: 0.9876543209876543)
✘ {1} A13 ⫺ 11493
 ✔ {1} A85 ⫺ 11118
 │✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
 │✘ Lettuce_romaine_6wk : 79/79 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/82 (conf: 0.975609756097561)
● [ 10/07/2021 13:57:28 ] Saving tree to file ./gandalf/trees/tree_0da405ae87881d75314dae1264e96c8c341f39028fc5bb599a53c666bbbefc32.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26700)
✔ {1} ⟨PO⟩ (A84 ⫺ 6943)
│✔ {1} A5 ⫹₆₀ 12228
││✔ Corn_senesced_green_weeds : 19/20 (conf: 0.95)
││✘ Lettuce_romaine_4wk : 19/20 (conf: 0.95)
│✘ Lettuce_romaine_5wk : 20/21 (conf: 0.9523809523809523)
✘ {1} A13 ⫺ 11493
 ✔ {1} A85 ⫺ 11118
 │✔ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
 │✘ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	97.5%	100.0%	95.0%	95.0%	100.0%	95.0%	100.0%	100.0%	95.0%	95.0%	95.24%	100.0%	100.0%	||	97.0%	[100.0, 95.0, 95.0, 97.56, 97.44, 100.0]%	
  accuracy: 97.5% kappa: 97.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 19  1  0  0  0	95.0%		Corn_senesced_green_weeds
  0  1 19  0  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  1 19  0	95.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.975
κ =		0.97
sensitivities:	[1.0, 0.95, 0.95, 1.0, 0.95, 1.0]
specificities:	[1.0, 0.99, 0.99, 0.99, 1.0, 1.0]
PPVs:		[1.0, 0.95, 0.95, 0.9523809523809523, 1.0, 1.0]
NPVs:		[1.0, 0.99, 0.99, 1.0, 0.9900990099009901, 1.0]
F1s:		[1.0, 0.95, 0.95, 0.975609756097561, 0.9743589743589743, 1.0]
accuracies:	[1.0, 0.9833333333333333, 0.9833333333333333, 0.9916666666666667, 0.9916666666666667, 1.0]
mean_accuracy:	0.9916666666666667
Dataset_slice = (600) -> [10, 116, 221, 307, 469, 514, 12, 188, 231, 354, 401, 560, 84, 193, 239, 362, 483, 542, 52, 131, 230, 337, 491, 527, 45, 175, 218, 385, 492, 523, 87, 192, 265, 383, 486, 503, 14, 190, 264, 381, 480, 580, 20, 142, 242, 352, 422, 531, 39, 159, 210, 355, 453, 561, 9, 138, 279, 380, 488, 544, 38, 119, 250, 391, 454, 541, 43, 155, 289, 365, 495, 512, 23, 187, 292, 316, 457, 600, 92, 132, 205, 389, 403, 504, 93, 113, 286, 356, 440, 519, 51, 145, 296, 366, 418, 557, 89, 158, 240, 368, 433, 584, 67, 146, 259, 336, 449, 515, 100, 176, 244, 372, 464, 534, 71, 164, 283, 390, 460, 546, 36, 128, 243, 325, 404, 567, 19, 153, 236, 306, 412, 596, 94, 126, 237, 400, 496, 537, 68, 137, 260, 308, 466, 533, 22, 120, 222, 360, 493, 517, 21, 169, 214, 332, 445, 506, 1, 136, 290, 397, 413, 554, 5, 189, 238, 315, 414, 592, 53, 148, 235, 318, 456, 505, 46, 104, 300, 311, 497, 569, 91, 179, 297, 303, 416, 572, 3, 194, 248, 304, 408, 599, 34, 108, 285, 335, 407, 502, 41, 197, 247, 320, 437, 529, 62, 167, 281, 384, 431, 579, 75, 199, 272, 331, 411, 552, 73, 129, 257, 317, 439, 564, 97, 105, 209, 377, 420, 516, 55, 161, 217, 324, 475, 508, 80, 180, 298, 305, 430, 538, 59, 173, 212, 328, 424, 536, 63, 124, 206, 338, 438, 556, 4, 112, 204, 394, 417, 553, 54, 191, 220, 369, 435, 524, 74, 182, 274, 359, 443, 543, 95, 195, 234, 375, 470, 551, 78, 117, 277, 312, 487, 521, 96, 107, 226, 321, 451, 522, 99, 184, 255, 392, 410, 597, 16, 178, 232, 347, 423, 571, 72, 106, 249, 346, 479, 568, 90, 162, 295, 326, 406, 588, 60, 121, 288, 313, 471, 558, 44, 122, 219, 393, 434, 555, 18, 115, 275, 327, 402, 562, 25, 109, 299, 358, 473, 587, 32, 125, 252, 334, 429, 548, 77, 147, 211, 343, 459, 595, 28, 200, 251, 363, 444, 539, 24, 133, 284, 322, 481, 525, 76, 130, 213, 357, 432, 578, 17, 101, 293, 344, 499, 582, 65, 114, 227, 314, 442, 511, 31, 183, 203, 349, 482, 513, 30, 149, 291, 373, 450, 535, 50, 141, 225, 310, 500, 590, 85, 139, 233, 341, 468, 507, 26, 165, 258, 333, 447, 509, 33, 144, 270, 378, 462, 598, 37, 123, 269, 398, 441, 545, 64, 110, 215, 345, 474, 570, 56, 177, 266, 329, 425, 589, 27, 170, 246, 350, 472, 520, 49, 118, 268, 376, 465, 576, 57, 196, 262, 351, 476, 577, 69, 174, 245, 388, 428, 518, 70, 154, 224, 399, 455, 540, 8, 198, 253, 370, 494, 573, 83, 181, 208, 340, 478, 594, 15, 186, 254, 309, 458, 547, 98, 102, 267, 323, 490, 565, 11, 171, 223, 386, 498, 575, 7, 150, 261, 339, 477, 549, 29, 151, 278, 364, 463, 510, 2, 156, 273, 342, 426, 559, 48, 143, 263, 301, 467, 563, 61, 185, 256, 367, 461, 574, 82, 152, 202, 330, 436, 530, 6, 160, 280, 348, 485, 585, 81, 168, 207, 396, 421, 526, 79, 166, 276, 353, 419, 591, 88, 140, 294, 361, 415, 583, 35, 111, 229, 382, 489, 581, 13, 103, 201, 302, 427, 532, 66, 127, 287, 395, 452, 501, 47, 135, 271, 387, 446, 566, 42, 157, 241, 374, 448, 528, 40, 163, 282, 319, 484, 593, 86, 172, 228, 371, 405, 586, 58, 134, 216, 379, 409, 550]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1345.8 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1075.78 MBs	(shape (3, 4, 3, 4, 480, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 10/07/2021 13:57:36 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (241+239=480 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A41 ⫹₇₀ 25684), purity -1.1293049241654884
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+159=241 samples) on frame 1 with decision: {1} A13 ⫺ 11493, purity -0.4963062662856841
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+158=239 samples) on frame 1 with decision: {1} ⟨PO⟩ (A84 ⫺ 6943), purity -0.480723208021419
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A40 ⫺ 26630, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+78=158 samples) on frame 1 with decision: {1} A6 ⫹₆₀ 12799, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
360.469415 seconds (2.89 G allocations: 73.290 GiB, 17.15% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A41 ⫹₇₀ 25684)
✔ {1} ⟨PO⟩ (A84 ⫺ 6943)
│✔ {1} A6 ⫹₆₀ 12799
││✔ Corn_senesced_green_weeds : 78/78 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/81 (conf: 0.9876543209876543)
✘ {1} A13 ⫺ 11493
 ✔ {1} A40 ⫺ 26630
 │✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
 │✘ Lettuce_romaine_6wk : 79/79 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/82 (conf: 0.975609756097561)
● [ 10/07/2021 14:03:37 ] Saving tree to file ./gandalf/trees/tree_6cf992f6b80225d3eb1448cc5868b7e2ea2158d160c712699df2bd3b855276bb.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A41 ⫹₇₀ 25684)
✔ {1} ⟨PO⟩ (A84 ⫺ 6943)
│✔ {1} A6 ⫹₆₀ 12799
││✔ Corn_senesced_green_weeds : 19/20 (conf: 0.95)
││✘ Lettuce_romaine_4wk : 19/19 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/21 (conf: 0.9523809523809523)
✘ {1} A13 ⫺ 11493
 ✔ {1} A40 ⫺ 26630
 │✔ Lettuce_romaine_7wk : 19/19 (conf: 1.0)
 │✘ Lettuce_romaine_6wk : 19/21 (conf: 0.9047619047619048)
 ✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	96.67%	100.0%	95.0%	95.0%	100.0%	95.0%	95.0%	100.0%	95.0%	100.0%	95.24%	90.48%	100.0%	||	96.0%	[100.0, 95.0, 97.44, 97.56, 92.68, 97.44]%	
  accuracy: 96.67% kappa: 96.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 19  0  0  1  0	95.0%		Corn_senesced_green_weeds
  0  1 19  0  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  1 19  0	95.0%		Lettuce_romaine_6wk
  0  0  0  0  1 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.9666666666666667
κ =		0.96
sensitivities:	[1.0, 0.95, 0.95, 1.0, 0.95, 0.95]
specificities:	[1.0, 0.99, 1.0, 0.99, 0.98, 1.0]
PPVs:		[1.0, 0.95, 1.0, 0.9523809523809523, 0.9047619047619048, 1.0]
NPVs:		[1.0, 0.99, 0.9900990099009901, 1.0, 0.98989898989899, 0.9900990099009901]
F1s:		[1.0, 0.95, 0.9743589743589743, 0.975609756097561, 0.926829268292683, 0.9743589743589743]
accuracies:	[1.0, 0.9833333333333333, 0.9916666666666667, 0.9916666666666667, 0.975, 0.9916666666666667]
mean_accuracy:	0.9888888888888889
Dataset_slice = (600) -> [68, 113, 288, 329, 406, 554, 53, 120, 291, 341, 461, 505, 72, 123, 234, 372, 472, 560, 28, 128, 298, 379, 479, 553, 84, 172, 287, 311, 466, 538, 96, 182, 229, 309, 491, 516, 91, 200, 222, 382, 418, 508, 42, 156, 226, 342, 429, 562, 33, 167, 204, 385, 498, 502, 4, 158, 259, 316, 486, 511, 63, 102, 220, 354, 496, 551, 21, 101, 266, 327, 485, 570, 79, 179, 270, 393, 404, 537, 15, 151, 214, 332, 454, 532, 22, 115, 217, 375, 468, 578, 51, 118, 235, 378, 469, 525, 32, 153, 232, 352, 470, 506, 70, 160, 244, 373, 464, 595, 66, 138, 250, 380, 437, 514, 99, 176, 277, 338, 417, 547, 40, 168, 258, 305, 482, 577, 64, 196, 240, 363, 477, 521, 19, 150, 282, 347, 401, 529, 73, 140, 201, 337, 489, 550, 18, 186, 215, 304, 492, 581, 80, 106, 289, 353, 425, 585, 60, 170, 223, 330, 416, 515, 3, 144, 290, 392, 435, 530, 87, 124, 286, 384, 483, 534, 43, 131, 284, 346, 420, 552, 9, 143, 253, 361, 421, 531, 20, 162, 261, 308, 438, 513, 1, 110, 254, 343, 484, 543, 62, 174, 252, 349, 443, 567, 45, 135, 205, 339, 436, 510, 30, 134, 238, 367, 473, 539, 76, 148, 275, 325, 474, 544, 37, 173, 280, 359, 407, 557, 38, 137, 297, 377, 427, 535, 23, 166, 233, 399, 453, 523, 57, 132, 260, 365, 442, 526, 75, 108, 264, 333, 451, 563, 35, 145, 202, 312, 411, 573, 55, 159, 269, 340, 460, 566, 50, 164, 225, 344, 500, 579, 95, 103, 300, 395, 452, 527, 61, 155, 212, 386, 471, 600, 82, 105, 228, 387, 446, 518, 12, 161, 216, 383, 493, 575, 74, 112, 206, 381, 444, 509, 94, 180, 230, 390, 423, 504, 49, 109, 293, 336, 409, 555, 6, 184, 221, 324, 456, 549, 24, 187, 241, 345, 495, 546, 90, 114, 265, 364, 449, 558, 93, 121, 251, 351, 412, 556, 14, 177, 272, 358, 467, 587, 47, 169, 239, 400, 431, 533, 89, 194, 263, 391, 445, 528, 81, 147, 211, 369, 403, 522, 39, 127, 242, 397, 405, 571, 11, 195, 208, 334, 459, 569, 58, 192, 207, 319, 490, 599, 92, 199, 209, 388, 487, 572, 52, 104, 203, 396, 439, 576, 59, 188, 227, 348, 441, 540, 48, 193, 237, 315, 402, 542, 7, 122, 283, 317, 457, 598, 54, 141, 246, 303, 488, 561, 17, 126, 285, 389, 478, 512, 56, 171, 248, 398, 434, 517, 97, 133, 271, 318, 481, 541, 29, 189, 245, 322, 440, 589, 34, 163, 296, 356, 450, 596, 77, 185, 292, 328, 414, 584, 46, 107, 236, 326, 419, 565, 71, 116, 257, 394, 465, 507, 31, 183, 247, 366, 494, 594, 26, 198, 279, 357, 410, 564, 25, 190, 224, 355, 455, 524, 65, 178, 231, 313, 499, 536, 83, 146, 219, 350, 480, 591, 2, 152, 267, 320, 415, 574, 8, 154, 295, 376, 408, 586, 27, 157, 276, 321, 463, 592, 85, 181, 268, 362, 458, 588, 86, 125, 278, 331, 424, 580, 36, 111, 243, 307, 432, 582, 78, 117, 299, 306, 413, 548, 44, 197, 210, 335, 497, 519, 10, 175, 273, 314, 476, 501, 98, 191, 256, 302, 428, 597, 69, 139, 274, 374, 422, 520, 67, 165, 281, 360, 426, 559, 16, 149, 249, 310, 462, 590, 13, 129, 255, 368, 447, 583, 5, 136, 213, 370, 448, 593, 41, 142, 218, 301, 433, 545, 88, 130, 262, 323, 475, 568, 100, 119, 294, 371, 430, 503]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1345.8 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1075.78 MBs	(shape (3, 4, 3, 4, 480, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 10/07/2021 14:03:45 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (238+242=480 samples) on frame 1 with decision: {1} ⟨DR⟩ (A42 ⫹ 25543), purity -1.118131486148477
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+158=238 samples) on frame 1 with decision: {1} A13 ⫺ 11493, purity -0.460103344380513
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+160=242 samples) on frame 1 with decision: {1} ⟨PO⟩ (A101 ⫺ 11392), purity -0.4971326530174778
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+78=158 samples) on frame 1 with decision: {1} A85 ⫺ 11118, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A6 ⫹ 12799, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
373.681074 seconds (3.00 G allocations: 77.033 GiB, 17.27% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨DR⟩ (A42 ⫹ 25543)
✔ {1} ⟨PO⟩ (A101 ⫺ 11392)
│✔ {1} A6 ⫹ 12799
││✔ Corn_senesced_green_weeds : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/82 (conf: 0.975609756097561)
✘ {1} A13 ⫺ 11493
 ✔ {1} A85 ⫺ 11118
 │✔ Lettuce_romaine_7wk : 78/78 (conf: 1.0)
 │✘ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
● [ 10/07/2021 14:09:59 ] Saving tree to file ./gandalf/trees/tree_81176027336513e62d371c22461837003652e1ff571fb4279c083096f58392c7.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨DR⟩ (A42 ⫹ 25543)
✔ {1} ⟨PO⟩ (A101 ⫺ 11392)
│✔ {1} A6 ⫹ 12799
││✔ Corn_senesced_green_weeds : 19/20 (conf: 0.95)
││✘ Lettuce_romaine_4wk : 19/19 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/21 (conf: 0.9523809523809523)
✘ {1} A13 ⫺ 11493
 ✔ {1} A85 ⫺ 11118
 │✔ Lettuce_romaine_7wk : 20/21 (conf: 0.9523809523809523)
 │✘ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 19/19 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	97.5%	95.0%	95.0%	95.0%	100.0%	100.0%	100.0%	100.0%	95.0%	100.0%	95.24%	100.0%	95.24%	||	97.0%	[97.44, 95.0, 97.44, 97.56, 100.0, 97.56]%	
  accuracy: 97.5% kappa: 97.0% 
 19  0  0  1  0  0	95.0%		Brocoli_green_weeds_1
  0 19  0  0  0  1	95.0%		Corn_senesced_green_weeds
  0  1 19  0  0  0	95.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.975
κ =		0.97
sensitivities:	[0.95, 0.95, 0.95, 1.0, 1.0, 1.0]
specificities:	[1.0, 0.99, 1.0, 0.99, 1.0, 0.99]
PPVs:		[1.0, 0.95, 1.0, 0.9523809523809523, 1.0, 0.9523809523809523]
NPVs:		[0.9900990099009901, 0.99, 0.9900990099009901, 1.0, 1.0, 1.0]
F1s:		[0.9743589743589743, 0.95, 0.9743589743589743, 0.975609756097561, 1.0, 0.975609756097561]
accuracies:	[0.9916666666666667, 0.9833333333333333, 0.9916666666666667, 0.9916666666666667, 1.0, 0.9916666666666667]
mean_accuracy:	0.9916666666666668
Dataset_slice = (600) -> [20, 148, 247, 348, 409, 562, 36, 113, 203, 353, 426, 567, 75, 145, 228, 390, 401, 547, 9, 112, 249, 319, 421, 510, 92, 159, 288, 325, 482, 513, 88, 121, 212, 365, 407, 588, 28, 186, 224, 360, 406, 551, 79, 198, 274, 367, 408, 523, 8, 118, 297, 387, 439, 502, 73, 122, 204, 330, 479, 565, 83, 194, 243, 374, 472, 552, 40, 185, 275, 366, 446, 594, 61, 195, 273, 356, 473, 528, 70, 136, 202, 343, 455, 558, 51, 155, 282, 397, 450, 533, 48, 161, 245, 331, 499, 518, 50, 130, 281, 361, 425, 537, 13, 103, 293, 378, 444, 583, 27, 187, 240, 372, 415, 579, 35, 125, 217, 391, 440, 535, 69, 120, 236, 354, 466, 524, 45, 157, 253, 309, 458, 517, 97, 200, 277, 334, 485, 573, 68, 197, 294, 394, 476, 543, 3, 156, 264, 335, 423, 548, 85, 102, 260, 381, 437, 597, 94, 191, 234, 313, 416, 509, 7, 140, 238, 399, 434, 566, 19, 119, 226, 369, 462, 598, 87, 167, 287, 318, 478, 563, 1, 184, 262, 326, 483, 544, 16, 163, 235, 306, 412, 532, 25, 123, 284, 373, 414, 526, 31, 196, 270, 398, 449, 557, 64, 129, 211, 338, 500, 534, 81, 146, 206, 388, 447, 515, 57, 138, 246, 358, 420, 555, 23, 115, 209, 322, 452, 504, 90, 199, 232, 344, 492, 572, 42, 164, 244, 310, 465, 568, 26, 181, 248, 347, 428, 527, 30, 128, 261, 345, 431, 595, 91, 153, 227, 332, 471, 520, 17, 134, 207, 385, 494, 577, 59, 141, 229, 376, 457, 511, 96, 150, 252, 302, 441, 507, 2, 126, 300, 350, 445, 584, 52, 131, 299, 357, 448, 550, 24, 189, 223, 396, 489, 560, 15, 193, 237, 351, 470, 576, 86, 142, 205, 375, 477, 549, 46, 106, 266, 327, 461, 581, 67, 124, 286, 362, 495, 553, 71, 174, 233, 389, 433, 592, 66, 110, 213, 307, 419, 600, 18, 114, 201, 364, 480, 546, 58, 151, 290, 363, 411, 508, 39, 108, 276, 340, 463, 599, 34, 116, 256, 324, 464, 587, 80, 162, 258, 314, 459, 593, 82, 158, 231, 305, 493, 596, 6, 171, 285, 352, 498, 539, 53, 182, 272, 336, 403, 569, 60, 105, 268, 386, 438, 582, 93, 179, 271, 301, 443, 556, 44, 170, 251, 329, 413, 540, 32, 180, 289, 380, 424, 554, 49, 111, 225, 337, 456, 503, 43, 192, 219, 393, 475, 505, 100, 152, 220, 346, 496, 516, 41, 190, 230, 321, 469, 578, 5, 178, 255, 368, 427, 525, 54, 132, 280, 349, 410, 531, 65, 154, 210, 384, 429, 521, 72, 144, 296, 392, 490, 506, 76, 147, 241, 341, 432, 536, 98, 101, 216, 342, 484, 585, 11, 149, 257, 333, 497, 541, 78, 177, 218, 303, 481, 501, 21, 117, 215, 315, 436, 571, 62, 173, 214, 355, 488, 529, 14, 139, 222, 339, 435, 586, 22, 143, 208, 317, 442, 522, 12, 176, 298, 328, 418, 512, 37, 168, 269, 370, 453, 589, 95, 135, 259, 323, 417, 574, 74, 107, 254, 311, 404, 514, 33, 183, 278, 304, 491, 591, 99, 172, 239, 395, 402, 545, 63, 127, 250, 316, 451, 519, 29, 160, 292, 371, 474, 530, 56, 109, 242, 312, 460, 542, 10, 169, 279, 359, 405, 570, 47, 137, 267, 377, 467, 559, 4, 104, 291, 400, 422, 580, 38, 188, 283, 320, 430, 538, 84, 165, 221, 308, 454, 590, 89, 175, 263, 382, 486, 564, 55, 133, 265, 383, 487, 575, 77, 166, 295, 379, 468, 561]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1345.8 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1075.78 MBs	(shape (3, 4, 3, 4, 480, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 10/07/2021 14:10:07 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (237+243=480 samples) on frame 1 with decision: {1} ⟨DR⟩ (A42 ⫹ 25543), purity -1.1293743706194475
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (157+80=237 samples) on frame 1 with decision: {1} ⟨DR⟩ (A110 ⫺ 797), purity -0.4591600110253228
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+160=243 samples) on frame 1 with decision: {1} ⟨PO⟩ (A101 ⫺ 11392), purity -0.5173617045336564
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+78=157 samples) on frame 1 with decision: {1} A13 ⫺ 11493, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A8 ⫺ 14339, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
377.723123 seconds (2.98 G allocations: 76.543 GiB, 17.18% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨DR⟩ (A42 ⫹ 25543)
✔ {1} ⟨PO⟩ (A101 ⫺ 11392)
│✔ {1} A8 ⫺ 14339
││✔ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
││✘ Corn_senesced_green_weeds : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/83 (conf: 0.963855421686747)
✘ {1} ⟨DR⟩ (A110 ⫺ 797)
 ✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
 ✘ {1} A13 ⫺ 11493
  ✔ Lettuce_romaine_7wk : 78/78 (conf: 1.0)
  ✘ Brocoli_green_weeds_1 : 79/79 (conf: 1.0)
● [ 10/07/2021 14:16:24 ] Saving tree to file ./gandalf/trees/tree_b1d43d40bd95f8a8dcb2dd5c5a5a7fd6ad955b6fb4db5dc87caaf75ba6eacb28.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨DR⟩ (A42 ⫹ 25543)
✔ {1} ⟨PO⟩ (A101 ⫺ 11392)
│✔ {1} A8 ⫺ 14339
││✔ Lettuce_romaine_4wk : 20/23 (conf: 0.8695652173913043)
││✘ Corn_senesced_green_weeds : 16/16 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
✘ {1} ⟨DR⟩ (A110 ⫺ 797)
 ✔ Lettuce_romaine_6wk : 18/18 (conf: 1.0)
 ✘ {1} A13 ⫺ 11493
  ✔ Lettuce_romaine_7wk : 20/23 (conf: 0.8695652173913043)
  ✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	95.0%	100.0%	80.0%	100.0%	100.0%	90.0%	100.0%	100.0%	100.0%	86.96%	100.0%	100.0%	86.96%	||	94.0%	[100.0, 88.89, 93.02, 100.0, 94.74, 93.02]%	
  accuracy: 95.0% kappa: 94.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 16  3  0  0  1	80.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 18  2	90.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.95
κ =		0.94
sensitivities:	[1.0, 0.8, 1.0, 1.0, 0.9, 1.0]
specificities:	[1.0, 1.0, 0.97, 1.0, 1.0, 0.97]
PPVs:		[1.0, 1.0, 0.8695652173913043, 1.0, 1.0, 0.8695652173913043]
NPVs:		[1.0, 0.9615384615384616, 1.0, 1.0, 0.9803921568627451, 1.0]
F1s:		[1.0, 0.8888888888888888, 0.9302325581395349, 1.0, 0.9473684210526315, 0.9302325581395349]
accuracies:	[1.0, 0.9666666666666667, 0.975, 1.0, 0.9833333333333333, 0.975]
mean_accuracy:	0.9833333333333333
Dataset_slice = (600) -> [14, 145, 209, 319, 413, 525, 59, 126, 201, 393, 450, 561, 55, 102, 207, 312, 445, 527, 87, 121, 255, 362, 475, 501, 44, 116, 271, 308, 421, 555, 11, 131, 219, 380, 474, 532, 60, 110, 268, 310, 440, 528, 6, 101, 211, 304, 437, 518, 83, 167, 283, 357, 414, 597, 46, 162, 229, 318, 456, 585, 20, 123, 288, 395, 424, 584, 74, 140, 291, 373, 481, 551, 32, 165, 281, 315, 434, 589, 22, 135, 220, 398, 486, 544, 40, 152, 286, 316, 451, 593, 24, 103, 221, 350, 429, 515, 18, 137, 230, 355, 438, 543, 89, 125, 262, 390, 443, 595, 62, 124, 264, 383, 406, 529, 12, 172, 276, 377, 411, 517, 31, 163, 204, 369, 471, 503, 58, 168, 208, 302, 407, 547, 30, 129, 224, 325, 415, 505, 79, 104, 235, 326, 495, 519, 99, 197, 213, 343, 464, 581, 48, 173, 284, 388, 410, 568, 67, 149, 275, 391, 455, 548, 10, 198, 289, 360, 485, 554, 5, 182, 244, 397, 487, 599, 93, 164, 257, 384, 457, 530, 64, 187, 246, 354, 458, 583, 70, 134, 242, 371, 422, 577, 41, 133, 256, 351, 473, 512, 82, 158, 299, 322, 404, 507, 84, 120, 290, 314, 423, 522, 51, 199, 261, 359, 412, 523, 81, 175, 206, 340, 472, 539, 94, 181, 300, 303, 426, 514, 23, 179, 266, 321, 459, 572, 100, 176, 270, 376, 432, 560, 90, 109, 278, 346, 418, 510, 68, 186, 274, 379, 467, 556, 43, 117, 265, 382, 480, 570, 1, 178, 280, 344, 425, 504, 95, 132, 277, 332, 491, 524, 19, 113, 282, 378, 476, 579, 98, 112, 292, 348, 462, 563, 50, 106, 285, 352, 444, 550, 33, 170, 295, 386, 493, 537, 27, 136, 241, 337, 408, 564, 63, 148, 279, 324, 427, 511, 54, 119, 216, 372, 401, 575, 86, 193, 254, 306, 428, 567, 17, 188, 293, 399, 496, 508, 91, 142, 273, 328, 494, 574, 97, 189, 297, 320, 430, 531, 57, 155, 263, 301, 492, 557, 61, 196, 294, 347, 405, 594, 75, 141, 205, 349, 436, 590, 71, 183, 203, 341, 409, 562, 92, 180, 258, 394, 441, 520, 65, 177, 249, 309, 449, 598, 37, 166, 272, 356, 498, 582, 29, 195, 234, 331, 469, 513, 21, 127, 218, 313, 435, 541, 69, 184, 267, 368, 500, 534, 3, 185, 298, 334, 488, 588, 77, 139, 225, 327, 403, 516, 56, 107, 260, 396, 490, 558, 72, 200, 217, 342, 416, 580, 8, 111, 227, 366, 465, 571, 2, 190, 237, 374, 419, 596, 73, 130, 233, 363, 482, 538, 36, 159, 238, 307, 448, 578, 45, 146, 250, 375, 463, 587, 52, 153, 212, 335, 460, 566, 53, 156, 287, 311, 478, 552, 34, 143, 222, 389, 453, 526, 28, 169, 259, 323, 452, 569, 39, 128, 243, 365, 454, 533, 76, 115, 231, 364, 461, 546, 85, 105, 228, 400, 499, 559, 66, 171, 240, 305, 402, 573, 88, 108, 248, 387, 497, 521, 15, 174, 247, 370, 417, 549, 38, 154, 253, 339, 446, 586, 9, 114, 202, 367, 489, 535, 80, 192, 251, 353, 442, 540, 25, 160, 223, 392, 447, 565, 26, 191, 215, 329, 483, 591, 7, 151, 252, 381, 484, 576, 96, 194, 210, 338, 477, 536, 16, 144, 296, 317, 466, 545, 13, 147, 269, 333, 431, 553, 47, 150, 236, 336, 470, 600, 49, 157, 214, 385, 468, 509, 35, 118, 239, 358, 479, 542, 78, 122, 232, 345, 420, 502, 42, 161, 245, 361, 433, 506, 4, 138, 226, 330, 439, 592]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1345.8 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1075.78 MBs	(shape (3, 4, 3, 4, 480, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 10/07/2021 14:16:32 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (240+240=480 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A41 ⫹₇₀ 25684), purity -1.1210112487890092
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+159=240 samples) on frame 1 with decision: {1} A13 ⫺ 11493, purity -0.48164794911986897
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+159=240 samples) on frame 1 with decision: {1} ⟨PO⟩ (A84 ⫺ 6943), purity -0.48164794911986897
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A61 ⫺ 9195, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+79=159 samples) on frame 1 with decision: {1} A8 ⫹₆₀ 13948, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
359.184813 seconds (2.90 G allocations: 73.405 GiB, 17.11% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A41 ⫹₇₀ 25684)
✔ {1} ⟨PO⟩ (A84 ⫺ 6943)
│✔ {1} A8 ⫹₆₀ 13948
││✔ Corn_senesced_green_weeds : 79/79 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/81 (conf: 0.9876543209876543)
✘ {1} A13 ⫺ 11493
 ✔ {1} A61 ⫺ 9195
 │✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
 │✘ Lettuce_romaine_6wk : 79/79 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/81 (conf: 0.9876543209876543)
● [ 10/07/2021 14:22:32 ] Saving tree to file ./gandalf/trees/tree_c1cbe9bbb2b05241f9f7c73a64a3d60fe9fa381727d5af329a67eeec5d65b85a.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A41 ⫹₇₀ 25684)
✔ {1} ⟨PO⟩ (A84 ⫺ 6943)
│✔ {1} A8 ⫹₆₀ 13948
││✔ Corn_senesced_green_weeds : 18/18 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/21 (conf: 0.9523809523809523)
✘ {1} A13 ⫺ 11493
 ✔ {1} A61 ⫺ 9195
 │✔ Lettuce_romaine_7wk : 20/21 (conf: 0.9523809523809523)
 │✘ Lettuce_romaine_6wk : 18/19 (conf: 0.9473684210526315)
 ✘ Brocoli_green_weeds_1 : 20/21 (conf: 0.9523809523809523)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	96.67%	100.0%	90.0%	100.0%	100.0%	90.0%	100.0%	95.24%	100.0%	100.0%	95.24%	94.74%	95.24%	||	96.0%	[97.56, 94.74, 100.0, 97.56, 92.31, 97.56]%	
  accuracy: 96.67% kappa: 96.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  1 18  0  0  1  0	90.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  1 18  1	90.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9666666666666667
κ =		0.96
sensitivities:	[1.0, 0.9, 1.0, 1.0, 0.9, 1.0]
specificities:	[0.99, 1.0, 1.0, 0.99, 0.99, 0.99]
PPVs:		[0.9523809523809523, 1.0, 1.0, 0.9523809523809523, 0.9473684210526315, 0.9523809523809523]
NPVs:		[1.0, 0.9803921568627451, 1.0, 1.0, 0.9801980198019802, 1.0]
F1s:		[0.975609756097561, 0.9473684210526315, 1.0, 0.975609756097561, 0.9230769230769231, 0.975609756097561]
accuracies:	[0.9916666666666667, 0.9833333333333333, 1.0, 0.9916666666666667, 0.975, 0.9916666666666667]
mean_accuracy:	0.9888888888888889
Dataset_slice = (600) -> [70, 177, 261, 314, 419, 581, 28, 119, 212, 327, 454, 562, 31, 139, 280, 374, 459, 507, 19, 178, 249, 324, 453, 509, 5, 145, 248, 337, 422, 598, 75, 174, 287, 378, 420, 519, 12, 144, 202, 385, 465, 588, 26, 108, 298, 344, 403, 544, 67, 162, 228, 360, 498, 513, 14, 125, 236, 322, 482, 571, 50, 105, 214, 320, 440, 559, 25, 148, 229, 376, 423, 535, 11, 196, 219, 397, 434, 552, 51, 170, 257, 399, 417, 534, 6, 199, 207, 301, 427, 583, 4, 127, 273, 338, 450, 590, 63, 141, 270, 302, 486, 586, 62, 118, 276, 392, 435, 511, 54, 194, 216, 336, 437, 569, 73, 190, 251, 349, 411, 582, 16, 168, 238, 312, 449, 597, 76, 133, 292, 308, 436, 560, 94, 191, 234, 307, 469, 566, 21, 172, 253, 370, 461, 556, 96, 176, 295, 388, 401, 578, 97, 132, 275, 382, 475, 555, 60, 173, 217, 325, 470, 514, 9, 109, 272, 398, 402, 510, 40, 154, 250, 303, 443, 524, 72, 113, 240, 368, 431, 501, 99, 156, 279, 381, 497, 540, 44, 167, 220, 335, 489, 523, 91, 104, 245, 357, 416, 533, 92, 116, 297, 355, 412, 553, 71, 166, 246, 351, 426, 536, 13, 192, 203, 394, 410, 529, 98, 129, 206, 331, 414, 537, 79, 122, 281, 346, 448, 504, 18, 137, 224, 371, 442, 549, 48, 101, 289, 362, 487, 589, 56, 175, 285, 350, 456, 516, 22, 103, 242, 356, 408, 502, 35, 124, 293, 361, 428, 577, 81, 189, 262, 364, 460, 547, 84, 187, 230, 342, 478, 557, 37, 181, 208, 310, 418, 521, 87, 120, 299, 359, 458, 530, 77, 117, 237, 354, 462, 538, 34, 115, 231, 379, 429, 525, 65, 155, 205, 316, 495, 550, 7, 121, 252, 319, 488, 508, 41, 123, 264, 358, 499, 503, 3, 182, 201, 353, 452, 531, 59, 193, 290, 345, 439, 558, 55, 186, 296, 372, 457, 546, 43, 126, 241, 377, 463, 554, 29, 161, 263, 395, 405, 551, 8, 159, 221, 333, 471, 543, 86, 158, 227, 347, 413, 592, 46, 157, 274, 304, 424, 561, 64, 112, 204, 332, 445, 585, 78, 195, 211, 391, 430, 545, 85, 198, 209, 340, 493, 575, 15, 152, 282, 317, 433, 600, 1, 149, 258, 400, 477, 595, 42, 128, 254, 309, 464, 584, 100, 130, 271, 326, 500, 573, 30, 197, 267, 323, 425, 594, 10, 140, 283, 393, 468, 542, 89, 134, 218, 389, 441, 596, 88, 114, 278, 318, 446, 532, 49, 179, 277, 365, 467, 528, 17, 160, 247, 383, 481, 568, 23, 183, 223, 339, 479, 587, 27, 142, 286, 311, 415, 570, 20, 150, 259, 305, 421, 522, 68, 171, 288, 329, 407, 526, 69, 169, 243, 352, 494, 567, 24, 106, 284, 384, 491, 520, 74, 110, 235, 390, 473, 579, 36, 163, 256, 373, 406, 515, 57, 185, 266, 343, 480, 548, 53, 180, 239, 306, 476, 527, 95, 200, 255, 369, 404, 541, 61, 107, 226, 348, 409, 518, 66, 135, 265, 380, 484, 512, 52, 111, 233, 328, 472, 565, 58, 147, 210, 315, 447, 506, 47, 153, 232, 367, 474, 517, 83, 143, 268, 341, 432, 574, 39, 146, 215, 313, 490, 572, 93, 165, 244, 330, 466, 591, 90, 138, 225, 363, 451, 539, 33, 184, 291, 396, 455, 593, 2, 151, 300, 334, 496, 505, 38, 102, 260, 366, 492, 576, 80, 131, 269, 375, 483, 580, 82, 136, 222, 386, 485, 563, 45, 188, 213, 321, 444, 599, 32, 164, 294, 387, 438, 564]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1345.8 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1075.78 MBs	(shape (3, 4, 3, 4, 480, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 10/07/2021 14:22:39 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (238+242=480 samples) on frame 1 with decision: {1} ⟨DR⟩ (A42 ⫹ 25543), purity -1.1210459714131205
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+158=238 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A39 ⫺₇₀ 21587), purity -0.46015653163223263
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+160=242 samples) on frame 1 with decision: {1} ⟨PO⟩ (A84 ⫺ 6943), purity -0.5028611421130147
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+79=158 samples) on frame 1 with decision: {1} A13 ⫺ 11493, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A8 ⫹ 13948, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
393.320981 seconds (3.39 G allocations: 89.220 GiB, 19.83% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨DR⟩ (A42 ⫹ 25543)
✔ {1} ⟨PO⟩ (A84 ⫺ 6943)
│✔ {1} A8 ⫹ 13948
││✔ Corn_senesced_green_weeds : 80/80 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/82 (conf: 0.975609756097561)
✘ {1} ⟨P̅P̅⟩ (A39 ⫺₇₀ 21587)
 ✔ {1} A13 ⫺ 11493
 │✔ Lettuce_romaine_7wk : 79/79 (conf: 1.0)
 │✘ Brocoli_green_weeds_1 : 79/79 (conf: 1.0)
 ✘ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
● [ 10/07/2021 14:29:13 ] Saving tree to file ./gandalf/trees/tree_a0edebb1c024b5eac4ed39d22dc3be27cc5bf00acbcd0c5597743e8dbc5c0773.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨DR⟩ (A42 ⫹ 25543)
✔ {1} ⟨PO⟩ (A84 ⫺ 6943)
│✔ {1} A8 ⫹ 13948
││✔ Corn_senesced_green_weeds : 19/20 (conf: 0.95)
││✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
✘ {1} ⟨P̅P̅⟩ (A39 ⫺₇₀ 21587)
 ✔ {1} A13 ⫺ 11493
 │✔ Lettuce_romaine_7wk : 19/19 (conf: 1.0)
 │✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
 ✘ Lettuce_romaine_6wk : 20/21 (conf: 0.9523809523809523)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	98.33%	100.0%	95.0%	100.0%	100.0%	100.0%	95.0%	100.0%	95.0%	100.0%	100.0%	95.24%	100.0%	||	98.0%	[100.0, 95.0, 100.0, 100.0, 97.56, 97.44]%	
  accuracy: 98.33% kappa: 98.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 19  0  0  1  0	95.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  1  0  0  0 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.9833333333333333
κ =		0.98
sensitivities:	[1.0, 0.95, 1.0, 1.0, 1.0, 0.95]
specificities:	[1.0, 0.99, 1.0, 1.0, 0.99, 1.0]
PPVs:		[1.0, 0.95, 1.0, 1.0, 0.9523809523809523, 1.0]
NPVs:		[1.0, 0.99, 1.0, 1.0, 1.0, 0.9900990099009901]
F1s:		[1.0, 0.95, 1.0, 1.0, 0.975609756097561, 0.9743589743589743]
accuracies:	[1.0, 0.9833333333333333, 1.0, 1.0, 0.9916666666666667, 0.9916666666666667]
mean_accuracy:	0.9944444444444445
Dataset_slice = (600) -> [21, 173, 279, 381, 499, 569, 64, 138, 231, 310, 469, 582, 10, 149, 269, 301, 481, 525, 84, 168, 271, 334, 458, 600, 13, 194, 289, 400, 497, 548, 73, 107, 225, 375, 444, 512, 20, 174, 213, 347, 441, 545, 60, 159, 210, 398, 448, 505, 22, 196, 237, 354, 492, 558, 27, 187, 300, 345, 461, 572, 3, 110, 264, 394, 498, 583, 48, 125, 238, 341, 464, 565, 24, 171, 293, 356, 470, 502, 1, 123, 260, 339, 417, 519, 95, 165, 224, 315, 422, 550, 30, 190, 294, 327, 484, 589, 29, 188, 211, 359, 429, 586, 65, 176, 232, 305, 500, 559, 85, 157, 282, 357, 472, 516, 4, 179, 202, 362, 436, 585, 50, 169, 261, 371, 460, 594, 8, 131, 256, 343, 439, 590, 89, 192, 240, 382, 447, 557, 68, 144, 221, 342, 438, 560, 23, 134, 277, 335, 419, 587, 56, 116, 278, 364, 459, 581, 70, 121, 292, 307, 440, 520, 71, 155, 247, 324, 425, 508, 62, 133, 204, 374, 405, 551, 31, 129, 299, 368, 479, 501, 49, 162, 227, 308, 401, 579, 15, 119, 249, 361, 467, 546, 77, 115, 265, 388, 426, 598, 61, 126, 242, 396, 463, 517, 52, 189, 275, 372, 491, 521, 11, 195, 234, 365, 468, 544, 75, 154, 222, 316, 480, 555, 67, 105, 226, 393, 466, 593, 81, 178, 267, 379, 477, 596, 44, 153, 266, 366, 476, 542, 38, 127, 245, 352, 452, 518, 17, 147, 219, 340, 427, 515, 96, 193, 229, 344, 457, 578, 35, 128, 262, 325, 431, 543, 36, 113, 230, 392, 414, 554, 40, 139, 281, 314, 435, 561, 93, 135, 268, 380, 430, 562, 55, 132, 285, 312, 421, 528, 90, 199, 212, 326, 486, 511, 72, 151, 208, 331, 434, 536, 19, 166, 283, 322, 403, 599, 87, 180, 244, 351, 462, 513, 74, 140, 254, 333, 490, 524, 39, 141, 241, 391, 412, 580, 18, 142, 207, 350, 485, 591, 25, 148, 246, 383, 410, 573, 2, 175, 239, 337, 495, 523, 91, 197, 209, 378, 478, 529, 83, 114, 274, 373, 474, 553, 99, 182, 255, 360, 489, 533, 43, 106, 258, 304, 454, 509, 53, 170, 218, 353, 404, 503, 6, 101, 235, 399, 445, 597, 28, 145, 263, 309, 442, 510, 79, 146, 257, 328, 456, 556, 42, 200, 273, 319, 496, 574, 66, 158, 206, 389, 493, 541, 92, 143, 201, 397, 443, 568, 76, 161, 290, 318, 424, 527, 7, 102, 297, 311, 413, 547, 14, 150, 216, 336, 415, 507, 5, 137, 284, 348, 406, 564, 57, 130, 296, 346, 402, 532, 88, 177, 295, 384, 450, 506, 86, 104, 203, 367, 423, 595, 63, 191, 217, 349, 451, 514, 16, 183, 250, 302, 420, 538, 32, 185, 236, 355, 446, 537, 100, 118, 287, 306, 473, 534, 80, 136, 252, 330, 418, 530, 33, 112, 286, 376, 407, 504, 69, 117, 233, 370, 471, 571, 37, 111, 223, 303, 433, 577, 26, 164, 276, 317, 449, 588, 59, 167, 251, 323, 408, 575, 41, 160, 280, 358, 483, 567, 12, 172, 228, 321, 455, 566, 9, 108, 272, 386, 437, 584, 47, 156, 253, 369, 482, 531, 46, 103, 259, 313, 428, 576, 51, 198, 220, 332, 487, 563, 45, 181, 215, 329, 409, 526, 98, 152, 291, 320, 453, 592, 94, 184, 288, 363, 488, 535, 34, 122, 205, 338, 411, 522, 54, 163, 214, 385, 416, 570, 78, 109, 298, 377, 494, 539, 58, 124, 270, 387, 432, 549, 97, 186, 248, 390, 475, 552, 82, 120, 243, 395, 465, 540]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDataset{UInt16, DecisionTree.ModalLogic.Interval2D}	1345.8 MBs
     ├ fmd	270.02 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	1075.78 MBs	(shape (3, 4, 3, 4, 480, 2040, 4))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.42 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 10/07/2021 14:29:20 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (241+239=480 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A41 ⫹₇₀ 25684), purity -1.1293049241654884
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+159=241 samples) on frame 1 with decision: {1} A13 ⫺ 11493, purity -0.4963062662856841
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+158=239 samples) on frame 1 with decision: {1} ⟨PO⟩ (A84 ⫺ 6943), purity -0.480723208021419
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A40 ⫺ 26630, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+78=158 samples) on frame 1 with decision: {1} A8 ⫹₆₀ 13948, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
358.846714 seconds (2.90 G allocations: 73.526 GiB, 17.20% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A41 ⫹₇₀ 25684)
✔ {1} ⟨PO⟩ (A84 ⫺ 6943)
│✔ {1} A8 ⫹₆₀ 13948
││✔ Corn_senesced_green_weeds : 78/78 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/81 (conf: 0.9876543209876543)
✘ {1} A13 ⫺ 11493
 ✔ {1} A40 ⫺ 26630
 │✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
 │✘ Lettuce_romaine_6wk : 79/79 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/82 (conf: 0.975609756097561)
● [ 10/07/2021 14:35:19 ] Saving tree to file ./gandalf/trees/tree_931797b7953921f11919943e1a66427d6bcf0be924b7c0f7e7104c6e8cee21bf.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A41 ⫹₇₀ 25684)
✔ {1} ⟨PO⟩ (A84 ⫺ 6943)
│✔ {1} A8 ⫹₆₀ 13948
││✔ Corn_senesced_green_weeds : 19/19 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/21 (conf: 0.9523809523809523)
✘ {1} A13 ⫺ 11493
 ✔ {1} A40 ⫺ 26630
 │✔ Lettuce_romaine_7wk : 19/19 (conf: 1.0)
 │✘ Lettuce_romaine_6wk : 19/21 (conf: 0.9047619047619048)
 ✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	Salinas-A,(3,false,"o_RCC5","TestOpAll")	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	97.5%	100.0%	95.0%	100.0%	100.0%	95.0%	95.0%	100.0%	100.0%	100.0%	95.24%	90.48%	100.0%	||	97.0%	[100.0, 97.44, 100.0, 97.56, 92.68, 97.44]%	
  accuracy: 97.5% kappa: 97.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 19  0  0  1  0	95.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  1 19  0	95.0%		Lettuce_romaine_6wk
  0  0  0  0  1 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.975
κ =		0.97
sensitivities:	[1.0, 0.95, 1.0, 1.0, 0.95, 0.95]
specificities:	[1.0, 1.0, 1.0, 0.99, 0.98, 1.0]
PPVs:		[1.0, 1.0, 1.0, 0.9523809523809523, 0.9047619047619048, 1.0]
NPVs:		[1.0, 0.9900990099009901, 1.0, 1.0, 0.98989898989899, 0.9900990099009901]
F1s:		[1.0, 0.9743589743589743, 1.0, 0.975609756097561, 0.926829268292683, 0.9743589743589743]
accuracies:	[1.0, 0.9916666666666667, 1.0, 0.9916666666666667, 0.975, 0.9916666666666667]
mean_accuracy:	0.9916666666666666
Done!
               _
   _       _ _(_)_     |  Documentation: https://docs.julialang.org
  (_)     | (_) (_)    |
   _ _   _| |_  __ _   |  Type "?" for help, "]?" for Pkg help.
  | | | | | | |/ _` |  |
  | | |_| | | | (_| |  |  Version 1.6.1 (2021-04-23)
 _/ |\__'_|_|_|\__'_|  |  Official https://julialang.org/ release
|__/                   |

[?2004h[0Kjulia> [7C[7C[0Kjulia> [7C[7C
[?2004l
[0K[0Kjulia> [7C[7C[?2004h[0Kjulia> [7C[7C
[?2004l