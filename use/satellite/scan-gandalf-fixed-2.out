  Activating environment at `~/DecisionTree.jl/Project.toml`
 1 trees
 0 forests 
Loading history file "./gandalf/progress.json"...
Iteration "((3,7),false,"o_RCC8","TestOpAll"),100,-1,Pavia"...
● [ 22/07/2021 00:07:50 ] Computing dataset...
● [ 22/07/2021 00:07:55 ] Computed dataset in 5.182 seconds (00:00:05)
● [ 22/07/2021 00:07:59 ] Saving dataset to file ./gandalf/cache/dataset_af12187cc6a4fcfe36e5cad8318e57a626cd56b4bfeb76a509e281e14d6ada81.jld...
Dataseeds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

executing run '((3,7),false,"o_RCC8","TestOpAll"),100,-1,Pavia'...
dataset type = Tuple{Array{Int64, 4}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (test_operators = TestOperator[⫺, ⫹, ⫺₉₀, ⫹₉₀, ⫺₈₀, ⫹₈₀, ⫺₇₀, ⫹₇₀, ⫺₆₀, ⫹₆₀], ontology = Ontology{DecisionTree.ModalLogic.Interval2D}(RCC8))
dataset_slices    = (10 dataset_slices)

Frame 1/1
  0.230624 seconds (345.35 k allocations: 20.226 MiB, 11.70% gc time, 96.64% compilation time)
Frame 1/1
┌ LogLevel(-500): OntologicalDataset -> FeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:11
┌ LogLevel(-500): Instance 1/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 723/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 542/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 361/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 180/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): FeatModalDataset -> StumpFeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:388
┌ LogLevel(-500): Instance 1/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 723/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 542/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 361/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 180/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
103.425153 seconds (1.17 G allocations: 67.256 GiB, 66.17% gc time, 1.44% compilation time)
Dataset_slice = (900) -> [10, 122, 267, 386, 478, 583, 633, 707, 810, 3, 166, 252, 331, 497, 503, 670, 754, 819, 27, 190, 228, 353, 403, 521, 606, 735, 887, 63, 130, 246, 366, 462, 566, 687, 712, 872, 50, 195, 235, 350, 474, 501, 671, 769, 829, 57, 186, 201, 397, 447, 511, 660, 778, 843, 36, 116, 254, 326, 457, 542, 622, 766, 867, 21, 123, 248, 340, 469, 593, 666, 720, 868, 75, 157, 258, 336, 417, 509, 634, 704, 854, 78, 183, 238, 394, 408, 596, 624, 759, 862, 35, 154, 264, 376, 477, 599, 697, 748, 865, 66, 191, 274, 307, 448, 548, 602, 787, 823, 20, 167, 215, 392, 467, 549, 650, 795, 875, 67, 188, 239, 310, 434, 568, 682, 775, 890, 25, 141, 231, 330, 490, 594, 678, 732, 871, 24, 117, 270, 400, 492, 592, 668, 750, 816, 82, 194, 226, 387, 455, 560, 690, 793, 825, 74, 197, 289, 378, 441, 565, 683, 788, 896, 69, 105, 227, 341, 461, 539, 636, 705, 822, 81, 187, 300, 388, 427, 585, 646, 776, 811, 28, 159, 210, 342, 405, 531, 675, 710, 856, 15, 179, 244, 323, 420, 554, 618, 714, 830, 59, 163, 223, 332, 416, 558, 661, 740, 878, 29, 124, 268, 351, 459, 564, 601, 786, 820, 18, 153, 232, 329, 500, 582, 673, 767, 847, 31, 162, 220, 319, 418, 535, 685, 791, 821, 43, 177, 288, 346, 465, 576, 681, 770, 876, 40, 155, 249, 325, 470, 575, 625, 784, 860, 12, 149, 205, 327, 496, 578, 651, 718, 848, 83, 192, 275, 305, 464, 597, 665, 774, 836, 100, 145, 247, 398, 415, 508, 688, 746, 888, 94, 178, 261, 322, 488, 519, 607, 717, 824, 16, 110, 291, 347, 485, 551, 680, 722, 849, 51, 119, 204, 337, 466, 590, 612, 796, 894, 73, 148, 297, 362, 449, 522, 611, 749, 885, 19, 103, 292, 358, 425, 533, 623, 800, 801, 8, 142, 213, 382, 499, 530, 684, 785, 846, 11, 134, 207, 345, 472, 598, 628, 761, 827, 95, 136, 296, 357, 407, 515, 652, 701, 881, 58, 169, 284, 339, 458, 595, 632, 709, 899, 72, 101, 241, 321, 491, 581, 603, 777, 898, 13, 127, 230, 349, 432, 550, 620, 723, 863, 53, 172, 240, 301, 435, 555, 657, 757, 813, 22, 200, 285, 335, 483, 532, 663, 744, 859, 71, 176, 260, 379, 437, 517, 643, 782, 869, 87, 139, 202, 399, 439, 514, 672, 702, 855, 33, 160, 299, 389, 451, 544, 674, 727, 828, 61, 168, 208, 343, 480, 540, 617, 781, 808, 90, 180, 233, 309, 428, 586, 629, 772, 897, 55, 175, 216, 348, 476, 518, 613, 731, 886, 60, 137, 290, 383, 443, 573, 637, 711, 900, 96, 198, 211, 308, 456, 552, 610, 706, 852, 68, 144, 214, 317, 431, 563, 692, 733, 806, 77, 189, 203, 315, 471, 507, 669, 789, 832, 9, 135, 279, 361, 473, 536, 621, 743, 858, 42, 147, 221, 352, 481, 553, 698, 762, 834, 64, 115, 287, 391, 423, 528, 604, 763, 835, 85, 196, 256, 390, 453, 516, 614, 752, 818, 54, 182, 280, 359, 442, 588, 689, 783, 837, 2, 140, 245, 320, 429, 541, 609, 726, 805, 23, 170, 272, 313, 402, 559, 656, 764, 839, 91, 104, 269, 324, 413, 538, 642, 737, 833, 65, 181, 257, 344, 414, 505, 619, 758, 857, 48, 132, 224, 367, 487, 523, 638, 742, 826, 70, 173, 271, 303, 444, 589, 658, 779, 804, 80, 118, 276, 338, 460, 570, 644, 794, 895, 49, 171, 265, 333, 454, 577, 677, 773, 817, 7, 120, 281, 360, 438, 572, 694, 768, 807, 88, 193, 218, 372, 482, 584, 635, 753, 873, 45, 121, 229, 381, 475, 510, 676, 771, 866, 14, 174, 236, 364, 450, 534, 645, 741, 844, 97, 128, 283, 304, 436, 562, 695, 751, 841, 26, 111, 243, 311, 463, 561, 653, 729, 883, 52, 112, 294, 302, 412, 506, 654, 797, 851, 4, 158, 234, 384, 410, 569, 648, 721, 861, 32, 150, 253, 371, 409, 512, 616, 780, 870, 34, 146, 277, 374, 493, 579, 699, 765, 893, 99, 125, 266, 380, 430, 504, 631, 798, 802, 93, 102, 206, 363, 422, 587, 659, 792, 842, 56, 152, 286, 375, 445, 513, 630, 715, 882, 46, 113, 250, 306, 498, 524, 627, 730, 812, 47, 185, 263, 373, 404, 525, 679, 716, 850, 84, 108, 242, 385, 419, 600, 691, 760, 877, 79, 129, 217, 318, 486, 546, 655, 734, 840, 39, 156, 282, 365, 494, 591, 640, 799, 815, 17, 114, 251, 312, 468, 574, 615, 756, 838, 38, 143, 225, 369, 452, 556, 700, 790, 880, 5, 151, 212, 368, 426, 502, 649, 736, 809, 44, 138, 278, 355, 433, 526, 641, 724, 831, 98, 126, 237, 395, 489, 529, 693, 713, 889, 86, 109, 273, 334, 421, 537, 608, 755, 853, 92, 199, 262, 354, 479, 527, 647, 725, 803, 41, 184, 209, 328, 446, 547, 605, 719, 814, 89, 107, 259, 370, 411, 567, 664, 703, 891, 6, 131, 222, 377, 495, 545, 639, 708, 845, 1, 106, 295, 314, 401, 557, 667, 747, 864, 76, 161, 255, 396, 406, 520, 686, 738, 879, 37, 164, 298, 393, 484, 543, 696, 739, 884, 30, 133, 219, 356, 440, 580, 626, 745, 874, 62, 165, 293, 316, 424, 571, 662, 728, 892]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2877.69 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	2673.39 MBs	(shape (3, 4, 3, 4, 720, 1030, 7), 747532800 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 00:10:18 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (252+468=720 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A103 ⫺₆₀ 15873), purity -1.6329212370666524
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+171=252 samples) on frame 1 with decision: {1} A37 ⫺ 8541, purity -0.651960719302806
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (247+221=468 samples) on frame 1 with decision: {1} A36 ⫹₆₀ 14605, purity -1.2225442949001812
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (69+102=171 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A67 ⫺₇₀ 13208), purity -0.5349292296190439
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (94+127=221 samples) on frame 1 with decision: {1} A64 ⫺ 4231, purity -0.5848725417926761
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+167=247 samples) on frame 1 with decision: {1} A1 ⫹ 23216, purity -0.7094566569629992
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (69+25=94 samples) on frame 1 with decision: {1} A73 ⫺ 17033, purity -0.17899246463012128
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+148=167 samples) on frame 1 with decision: {1} A80 ⫹ 24405, purity -0.7084546424909522
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (96+31=127 samples) on frame 1 with decision: {1} A100 ⫺₈₀ 25158, purity -0.5306663023888638
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (90+12=102 samples) on frame 1 with decision: {1} A14 ⫹ 11534, purity -0.41908539691262964
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+15=25 samples) on frame 1 with decision: {1} A29 ⫹₆₀ 7739, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (31+59=90 samples) on frame 1 with decision: {1} A18 ⫺₈₀ 12356, purity -0.29626410372229567
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (67+29=96 samples) on frame 1 with decision: {1} A36 ⫹ 8928, purity -0.5356584063572479
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (39+109=148 samples) on frame 1 with decision: {1} A17 ⫹₆₀ 15447, purity -0.6297340312809637
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+10=31 samples) on frame 1 with decision: {1} A1 ⫺₇₀ 9601, purity -0.4392408683689829
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+40=67 samples) on frame 1 with decision: {1} A85 ⫺ 20322, purity -0.38653530688634746
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+18=29 samples) on frame 1 with decision: {1} A69 ⫺ 10245, purity -0.22225788970134694
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (63+46=109 samples) on frame 1 with decision: {1} A2 ⫺₆₀ 11940, purity -0.6174706678406225
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A8 ⫺₆₀ 3963, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+4=21 samples) on frame 1 with decision: {1} A3 ⫺₇₀ 10117, purity -0.10711145611786825
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A1 ⫺ 9482, purity -0.277258872223978
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+22=40 samples) on frame 1 with decision: {1} A82 ⫹ 26416, purity -0.3605149756457663
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+54=63 samples) on frame 1 with decision: {1} A65 ⫹ 20937, purity -0.6434394592359345
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (30+16=46 samples) on frame 1 with decision: {1} A35 ⫹ 18420, purity -0.21603004332356351
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+5=16 samples) on frame 1 with decision: {1} A9 ⫺₇₀ 12663, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+17=22 samples) on frame 1 with decision: {1} A32 ⫹ 13674, purity -0.3600903349244421
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (36+18=54 samples) on frame 1 with decision: {1} A81 ⫹ 19341, purity -0.5696894854644717
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+12=17 samples) on frame 1 with decision: {1} ⟨NTPP⟩ (A27 ⫺ 8393), purity -0.19794460794389893
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+9=36 samples) on frame 1 with decision: {1} A15 ⫹₈₀ 13495, purity -0.17174039414933048
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+11=18 samples) on frame 1 with decision: {1} A71 ⫺ 16022, purity -0.5994285513807168
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A2 ⫺ 8016, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+4=11 samples) on frame 1 with decision: {1} A6 ⫹ 13436, purity -0.3780802803054247
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
1256.940263 seconds (8.86 G allocations: 420.049 GiB, 25.27% gc time, 1.19% compilation time)
Train tree:
Decision Tree
Leaves: 33
Tot nodes: 65
Height: 10
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A103 ⫺₆₀ 15873)
✔ {1} A36 ⫹₆₀ 14605
│✔ {1} A64 ⫺ 4231
││✔ {1} A100 ⫺₈₀ 25158
│││✔ Meadows : 30/31 (conf: 0.967741935483871)
│││✘ {1} A36 ⫹ 8928
│││ ✔ {1} A69 ⫺ 10245
│││ │✔ Meadows : 18/18 (conf: 1.0)
│││ │✘ {1} A8 ⫺₆₀ 3963
│││ │ ✔ Bare Soil : 7/7 (conf: 1.0)
│││ │ ✘ Meadows : 3/4 (conf: 0.75)
│││ ✘ {1} A85 ⫺ 20322
│││  ✔ {1} A82 ⫹ 26416
│││  │✔ {1} A32 ⫹ 13674
│││  ││✔ {1} ⟨NTPP⟩ (A27 ⫺ 8393)
│││  │││✔ Meadows : 12/12 (conf: 1.0)
│││  │││✘ Bare Soil : 3/5 (conf: 0.6)
│││  ││✘ Bare Soil : 5/5 (conf: 1.0)
│││  │✘ Bare Soil : 18/18 (conf: 1.0)
│││  ✘ Bare Soil : 27/27 (conf: 1.0)
││✘ {1} A73 ⫺ 17033
││ ✔ {1} A29 ⫹₆₀ 7739
││ │✔ Meadows : 15/15 (conf: 1.0)
││ │✘ Trees : 10/10 (conf: 1.0)
││ ✘ Trees : 69/69 (conf: 1.0)
│✘ {1} A1 ⫹ 23216
│ ✔ {1} A80 ⫹ 24405
│ │✔ {1} A17 ⫹₆₀ 15447
│ ││✔ {1} A2 ⫺₆₀ 11940
│ │││✔ {1} A35 ⫹ 18420
│ ││││✔ {1} A9 ⫺₇₀ 12663
│ │││││✔ Self-Blocking Bricks : 5/5 (conf: 1.0)
│ │││││✘ Gravel : 11/11 (conf: 1.0)
│ ││││✘ Gravel : 30/30 (conf: 1.0)
│ │││✘ {1} A65 ⫹ 20937
│ │││ ✔ {1} A81 ⫹ 19341
│ │││ │✔ {1} A71 ⫺ 16022
│ │││ ││✔ {1} A6 ⫹ 13436
│ │││ │││✔ Gravel : 2/4 (conf: 0.5)
│ │││ │││✘ Gravel : 7/7 (conf: 1.0)
│ │││ ││✘ Self-Blocking Bricks : 5/7 (conf: 0.7142857142857143)
│ │││ │✘ {1} A15 ⫹₈₀ 13495
│ │││ │ ✔ {1} A2 ⫺ 8016
│ │││ │ │✔ Gravel : 4/4 (conf: 1.0)
│ │││ │ │✘ Self-Blocking Bricks : 5/5 (conf: 1.0)
│ │││ │ ✘ Self-Blocking Bricks : 27/27 (conf: 1.0)
│ │││ ✘ Gravel : 9/9 (conf: 1.0)
│ ││✘ Self-Blocking Bricks : 37/39 (conf: 0.9487179487179487)
│ │✘ Bare Soil : 18/19 (conf: 0.9473684210526315)
│ ✘ Painted metal sheets : 80/80 (conf: 1.0)
✘ {1} A37 ⫺ 8541
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A67 ⫺₇₀ 13208)
 │✔ {1} A14 ⫹ 11534
 ││✔ Gravel : 12/12 (conf: 1.0)
 ││✘ {1} A18 ⫺₈₀ 12356
 ││ ✔ Bitumen : 59/59 (conf: 1.0)
 ││ ✘ {1} A1 ⫺₇₀ 9601
 ││  ✔ {1} A1 ⫺ 9482
 ││  │✔ Gravel : 2/4 (conf: 0.5)
 ││  │✘ Asphalt : 6/6 (conf: 1.0)
 ││  ✘ {1} A3 ⫺₇₀ 10117
 ││   ✔ Asphalt : 3/4 (conf: 0.75)
 ││   ✘ Bitumen : 17/17 (conf: 1.0)
 │✘ Asphalt : 65/69 (conf: 0.9420289855072463)
 ✘ Shadows : 80/81 (conf: 0.9876543209876543)
● [ 22/07/2021 00:31:16 ] Saving tree to file ./gandalf/trees/tree_3ccb3dcb0e37945c43b62b960d6a194a16eada58acdc1de0f68fb0f1acffffe4.jld...
Test tree:
Decision Tree
Leaves: 33
Tot nodes: 65
Height: 10
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A103 ⫺₆₀ 15873)
✔ {1} A36 ⫹₆₀ 14605
│✔ {1} A64 ⫺ 4231
││✔ {1} A100 ⫺₈₀ 25158
│││✔ Meadows : 6/7 (conf: 0.8571428571428571)
│││✘ {1} A36 ⫹ 8928
│││ ✔ {1} A69 ⫺ 10245
│││ │✔ Meadows : 2/3 (conf: 0.6666666666666666)
│││ │✘ {1} A8 ⫺₆₀ 3963
│││ │ ✔ Bare Soil : 0/0 (conf: NaN)
│││ │ ✘ Meadows : 0/0 (conf: NaN)
│││ ✘ {1} A85 ⫺ 20322
│││  ✔ {1} A82 ⫹ 26416
│││  │✔ {1} A32 ⫹ 13674
│││  ││✔ {1} ⟨NTPP⟩ (A27 ⫺ 8393)
│││  │││✔ Meadows : 2/6 (conf: 0.3333333333333333)
│││  │││✘ Bare Soil : 1/2 (conf: 0.5)
│││  ││✘ Bare Soil : 1/2 (conf: 0.5)
│││  │✘ Bare Soil : 3/3 (conf: 1.0)
│││  ✘ Bare Soil : 7/10 (conf: 0.7)
││✘ {1} A73 ⫺ 17033
││ ✔ {1} A29 ⫹₆₀ 7739
││ │✔ Meadows : 4/6 (conf: 0.6666666666666666)
││ │✘ Trees : 0/0 (conf: NaN)
││ ✘ Trees : 17/19 (conf: 0.8947368421052632)
│✘ {1} A1 ⫹ 23216
│ ✔ {1} A80 ⫹ 24405
│ │✔ {1} A17 ⫹₆₀ 15447
│ ││✔ {1} A2 ⫺₆₀ 11940
│ │││✔ {1} A35 ⫹ 18420
│ ││││✔ {1} A9 ⫺₇₀ 12663
│ │││││✔ Self-Blocking Bricks : 1/4 (conf: 0.25)
│ │││││✘ Gravel : 2/3 (conf: 0.6666666666666666)
│ ││││✘ Gravel : 2/5 (conf: 0.4)
│ │││✘ {1} A65 ⫹ 20937
│ │││ ✔ {1} A81 ⫹ 19341
│ │││ │✔ {1} A71 ⫺ 16022
│ │││ ││✔ {1} A6 ⫹ 13436
│ │││ │││✔ Gravel : 0/0 (conf: NaN)
│ │││ │││✘ Gravel : 0/2 (conf: 0.0)
│ │││ ││✘ Self-Blocking Bricks : 0/0 (conf: NaN)
│ │││ │✘ {1} A15 ⫹₈₀ 13495
│ │││ │ ✔ {1} A2 ⫺ 8016
│ │││ │ │✔ Gravel : 1/1 (conf: 1.0)
│ │││ │ │✘ Self-Blocking Bricks : 0/0 (conf: NaN)
│ │││ │ ✘ Self-Blocking Bricks : 7/10 (conf: 0.7)
│ │││ ✘ Gravel : 2/2 (conf: 1.0)
│ ││✘ Self-Blocking Bricks : 5/8 (conf: 0.625)
│ │✘ Bare Soil : 2/5 (conf: 0.4)
│ ✘ Painted metal sheets : 20/21 (conf: 0.9523809523809523)
✘ {1} A37 ⫺ 8541
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A67 ⫺₇₀ 13208)
 │✔ {1} A14 ⫹ 11534
 ││✔ Gravel : 3/3 (conf: 1.0)
 ││✘ {1} A18 ⫺₈₀ 12356
 ││ ✔ Bitumen : 14/14 (conf: 1.0)
 ││ ✘ {1} A1 ⫺₇₀ 9601
 ││  ✔ {1} A1 ⫺ 9482
 ││  │✔ Gravel : 0/0 (conf: NaN)
 ││  │✘ Asphalt : 1/1 (conf: 1.0)
 ││  ✘ {1} A3 ⫺₇₀ 10117
 ││   ✔ Asphalt : 0/1 (conf: 0.0)
 ││   ✘ Bitumen : 2/4 (conf: 0.5)
 │✘ Asphalt : 15/17 (conf: 0.8823529411764706)
 ✘ Shadows : 20/21 (conf: 0.9523809523809523)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Pavia	1	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	77.78%	80.0%	70.0%	80.0%	50.0%	70.0%	100.0%	65.0%	100.0%	85.0%	84.21%	63.64%	88.89%	62.5%	63.64%	95.24%	59.09%	95.24%	89.47%	||	75.0%	[82.05, 66.67, 84.21, 55.56, 66.67, 97.56, 61.9, 97.56, 87.18]%	|||	77.78%	97.22%	77.99%	97.23%	77.71%	
  accuracy: 77.78% kappa: 75.0% 
 16  0  2  0  0  0  1  1  0	80.0%		Asphalt
  0 14  0  0  5  1  0  0  0	70.0%		Bare Soil
  3  0 16  0  0  0  1  0  0	80.0%		Bitumen
  0  3  0 10  0  0  7  0  0	50.0%		Gravel
  0  4  0  0 14  0  0  0  2	70.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  1  0  6  0  0 13  0  0	65.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  3  0  0  0 17	85.0%		Trees

overall_acc:	0.7777777777777778
κ =		0.7500000000000001
sensitivities:	[0.8, 0.7, 0.8, 0.5, 0.7, 1.0, 0.65, 1.0, 0.85]
specificities:	[0.98125, 0.95, 0.9875, 0.9625, 0.95, 0.99375, 0.94375, 0.99375, 0.9875]
PPVs:		[0.8421052631578947, 0.6363636363636364, 0.8888888888888888, 0.625, 0.6363636363636364, 0.9523809523809523, 0.5909090909090909, 0.9523809523809523, 0.8947368421052632]
NPVs:		[0.9751552795031055, 0.9620253164556962, 0.9753086419753086, 0.9390243902439024, 0.9620253164556962, 1.0, 0.9556962025316456, 1.0, 0.9813664596273292]
F1s:		[0.8205128205128205, 0.6666666666666666, 0.8421052631578947, 0.5555555555555556, 0.6666666666666666, 0.975609756097561, 0.6190476190476191, 0.975609756097561, 0.8717948717948718]
accuracies:	[0.9611111111111111, 0.9222222222222223, 0.9666666666666667, 0.9111111111111111, 0.9222222222222223, 0.9944444444444445, 0.9111111111111111, 0.9944444444444445, 0.9722222222222222]
mean_accuracy:	0.9506172839506173
Dataset_slice = (900) -> [19, 131, 215, 348, 496, 545, 639, 707, 847, 50, 123, 292, 322, 459, 579, 650, 796, 817, 6, 121, 285, 331, 464, 513, 654, 769, 869, 53, 110, 205, 315, 435, 505, 680, 790, 891, 51, 109, 209, 311, 473, 521, 694, 780, 806, 80, 124, 226, 364, 462, 528, 612, 795, 802, 76, 158, 287, 370, 471, 541, 626, 745, 853, 54, 114, 245, 399, 458, 519, 633, 713, 855, 24, 151, 225, 332, 409, 527, 630, 735, 837, 38, 128, 231, 316, 429, 518, 664, 734, 820, 86, 191, 265, 391, 487, 566, 666, 747, 823, 56, 141, 221, 356, 402, 555, 615, 758, 873, 28, 200, 232, 346, 467, 520, 646, 715, 825, 100, 140, 259, 325, 420, 595, 602, 753, 838, 21, 171, 206, 379, 454, 589, 644, 789, 842, 46, 184, 222, 395, 468, 560, 659, 725, 859, 74, 146, 214, 343, 418, 540, 698, 775, 826, 79, 143, 237, 320, 448, 558, 641, 732, 815, 98, 188, 201, 390, 442, 600, 691, 736, 899, 83, 186, 235, 338, 484, 503, 604, 702, 892, 10, 119, 286, 398, 422, 547, 687, 712, 818, 52, 167, 293, 396, 449, 544, 672, 711, 894, 42, 176, 202, 326, 476, 509, 619, 727, 821, 62, 154, 269, 304, 461, 561, 608, 720, 868, 45, 144, 278, 334, 417, 597, 670, 762, 878, 33, 163, 250, 333, 474, 534, 658, 717, 877, 90, 134, 256, 388, 431, 549, 631, 768, 890, 77, 172, 271, 367, 450, 584, 673, 729, 871, 75, 189, 233, 387, 405, 573, 656, 756, 870, 47, 182, 247, 312, 432, 501, 651, 787, 884, 37, 137, 299, 340, 440, 568, 649, 774, 897, 59, 125, 273, 345, 411, 506, 605, 766, 887, 78, 149, 229, 305, 480, 529, 662, 794, 813, 82, 102, 243, 374, 407, 533, 647, 786, 885, 34, 104, 253, 329, 427, 585, 616, 792, 808, 67, 108, 224, 335, 408, 526, 613, 785, 811, 44, 198, 261, 357, 452, 569, 653, 741, 860, 89, 180, 279, 363, 414, 580, 634, 708, 846, 68, 105, 267, 306, 413, 557, 618, 743, 832, 85, 166, 274, 365, 447, 542, 700, 760, 814, 26, 145, 220, 369, 404, 578, 628, 746, 841, 39, 142, 227, 376, 428, 590, 606, 750, 900, 99, 193, 264, 321, 483, 512, 665, 777, 845, 20, 147, 272, 381, 481, 572, 648, 754, 812, 9, 130, 204, 301, 424, 565, 693, 783, 819, 7, 156, 257, 344, 438, 570, 622, 731, 840, 12, 199, 230, 336, 466, 571, 669, 718, 805, 41, 132, 289, 337, 415, 593, 638, 776, 810, 16, 170, 262, 373, 444, 543, 635, 703, 801, 58, 196, 210, 347, 433, 551, 627, 752, 861, 31, 107, 260, 383, 477, 535, 632, 740, 822, 92, 164, 254, 355, 463, 502, 620, 791, 831, 97, 174, 298, 397, 478, 508, 686, 751, 809, 88, 106, 219, 317, 446, 531, 617, 749, 850, 27, 115, 248, 360, 470, 515, 677, 701, 844, 32, 153, 291, 330, 489, 582, 689, 799, 864, 63, 185, 251, 362, 500, 524, 671, 716, 874, 22, 160, 207, 352, 401, 577, 697, 764, 839, 55, 152, 283, 353, 485, 525, 674, 757, 830, 96, 169, 280, 389, 403, 586, 601, 719, 872, 70, 173, 255, 366, 493, 550, 690, 730, 862, 43, 127, 300, 339, 451, 507, 692, 797, 816, 72, 155, 236, 400, 492, 539, 603, 767, 851, 84, 168, 203, 324, 455, 564, 642, 798, 879, 69, 187, 239, 378, 419, 546, 609, 748, 881, 4, 139, 268, 368, 498, 598, 699, 781, 896, 15, 111, 241, 319, 479, 536, 667, 726, 804, 93, 175, 294, 302, 439, 548, 684, 765, 866, 17, 122, 297, 307, 421, 538, 652, 782, 848, 48, 190, 295, 318, 456, 594, 679, 788, 898, 57, 138, 208, 354, 488, 563, 621, 763, 835, 49, 183, 281, 385, 469, 517, 668, 724, 824, 66, 195, 258, 372, 472, 583, 695, 784, 865, 61, 118, 266, 351, 425, 599, 645, 733, 854, 94, 116, 277, 349, 475, 537, 683, 771, 803, 8, 135, 213, 375, 457, 504, 663, 759, 829, 29, 197, 263, 394, 441, 588, 682, 737, 883, 91, 117, 290, 342, 494, 567, 655, 755, 888, 64, 113, 284, 380, 445, 514, 675, 761, 827, 30, 181, 282, 303, 486, 581, 610, 742, 882, 40, 179, 296, 350, 430, 552, 678, 704, 807, 5, 157, 223, 384, 453, 522, 625, 706, 856, 18, 161, 270, 314, 499, 576, 623, 723, 857, 87, 177, 275, 308, 443, 554, 624, 800, 875, 73, 129, 242, 382, 490, 574, 640, 705, 889, 60, 136, 212, 358, 416, 523, 676, 710, 876, 71, 148, 238, 393, 434, 511, 685, 778, 834, 81, 150, 228, 371, 437, 510, 643, 728, 893, 23, 178, 276, 328, 497, 556, 657, 709, 833, 95, 101, 252, 392, 410, 591, 661, 773, 867, 3, 165, 246, 323, 460, 530, 614, 779, 863, 36, 133, 217, 361, 423, 559, 637, 772, 858, 35, 126, 218, 386, 491, 562, 688, 793, 886, 2, 103, 216, 359, 436, 532, 607, 714, 836, 13, 162, 240, 309, 412, 553, 660, 722, 852, 14, 192, 288, 341, 406, 587, 611, 744, 828, 25, 159, 249, 310, 465, 592, 696, 721, 880, 11, 112, 211, 377, 495, 575, 681, 739, 895, 65, 120, 234, 313, 482, 596, 629, 770, 849, 1, 194, 244, 327, 426, 516, 636, 738, 843]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2877.69 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	2673.39 MBs	(shape (3, 4, 3, 4, 720, 1030, 7), 740207440 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 00:31:31 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (259+461=720 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A95 ⫺₆₀ 16339), purity -1.620917759942673
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+179=259 samples) on frame 1 with decision: {1} A38 ⫺ 8313, purity -0.6726705358980873
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (242+219=461 samples) on frame 1 with decision: {1} A36 ⫹₆₀ 14605, purity -1.2143393308674697
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (66+113=179 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A68 ⫺₇₀ 13129), purity -0.5723584497402573
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (103+116=219 samples) on frame 1 with decision: {1} A66 ⫺ 6242, purity -0.6168329623685069
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+162=242 samples) on frame 1 with decision: {1} A3 ⫹₇₀ 22443, purity -0.6931095073966382
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (72+31=103 samples) on frame 1 with decision: {1} A70 ⫺ 10265, purity -0.2779784512765839
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+141=162 samples) on frame 1 with decision: {1} A83 ⫹₇₀ 23652, purity -0.6497037667768758
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (91+25=116 samples) on frame 1 with decision: {1} A100 ⫺₈₀ 25158, purity -0.5087065259741778
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (54+59=113 samples) on frame 1 with decision: {1} A18 ⫺₈₀ 12356, purity -0.5636996419154223
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+19=31 samples) on frame 1 with decision: {1} A4 ⫹₇₀ 4726, purity -0.17441079052889197
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+20=54 samples) on frame 1 with decision: {1} A85 ⫺ 14536, purity -0.717835356577835
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (52+39=91 samples) on frame 1 with decision: {1} A19 ⫹ 7203, purity -0.5055351235815413
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (109+32=141 samples) on frame 1 with decision: {1} A15 ⫺₆₀ 14972, purity -0.6256431286049321
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+4=12 samples) on frame 1 with decision: {1} A2 ⫺₈₀ 4350, purity -0.23104906018664842
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+23=34 samples) on frame 1 with decision: {1} A1 ⫹ 14952, purity -0.4515106891360401
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+16=20 samples) on frame 1 with decision: {1} A96 ⫹₈₀ 17142, purity -0.11246702892376166
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (43+9=52 samples) on frame 1 with decision: {1} A2 ⫺₇₀ 6728, purity -0.20150208695336552
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+18=39 samples) on frame 1 with decision: {1} A18 ⫺ 4528, purity -0.34273839831259173
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (44+65=109 samples) on frame 1 with decision: {1} A1 ⫹₆₀ 13168, purity -0.6221873457376166
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A2 ⫹ 10622, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+4=11 samples) on frame 1 with decision: {1} A2 ⫹₈₀ 14338, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+4=23 samples) on frame 1 with decision: {1} A2 ⫺₇₀ 9542, purity -0.09779741645544492
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+35=44 samples) on frame 1 with decision: {1} ⟨NTPP⟩ (A43 ⫺ 17330), purity -0.2948390700688894
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+54=65 samples) on frame 1 with decision: {1} A65 ⫹ 21006, purity -0.47150280938011085
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+10=21 samples) on frame 1 with decision: {1} A15 ⫹₆₀ 4855, purity -0.2908877628832828
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A2 ⫹ 8135, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (29+25=54 samples) on frame 1 with decision: {1} A17 ⫹₇₀ 14506, purity -0.3796155940213136
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A1 ⫹ 15913, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+10=25 samples) on frame 1 with decision: {1} A2 ⫺₇₀ 10364, purity -0.49121742419660225
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A1 ⫹ 15636, purity -0.41588830833596707
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+11=15 samples) on frame 1 with decision: {1} A1 ⫺₇₀ 8502, purity -0.18483924814931874
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
559.968486 seconds (5.89 G allocations: 165.910 GiB, 17.03% gc time, 0.01% compilation time)
Train tree:
Decision Tree
Leaves: 33
Tot nodes: 65
Height: 10
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A95 ⫺₆₀ 16339)
✔ {1} A36 ⫹₆₀ 14605
│✔ {1} A66 ⫺ 6242
││✔ {1} A100 ⫺₈₀ 25158
│││✔ Meadows : 25/25 (conf: 1.0)
│││✘ {1} A19 ⫹ 7203
│││ ✔ {1} A18 ⫺ 4528
│││ │✔ Meadows : 18/18 (conf: 1.0)
│││ │✘ {1} A15 ⫹₆₀ 4855
│││ │ ✔ {1} A2 ⫹ 8135
│││ │ │✔ Bare Soil : 3/4 (conf: 0.75)
│││ │ │✘ Meadows : 6/6 (conf: 1.0)
│││ │ ✘ Bare Soil : 11/11 (conf: 1.0)
│││ ✘ {1} A2 ⫺₇₀ 6728
│││  ✔ {1} A2 ⫹ 10622
│││  │✔ Bare Soil : 3/4 (conf: 0.75)
│││  │✘ Meadows : 5/5 (conf: 1.0)
│││  ✘ Bare Soil : 42/43 (conf: 0.9767441860465116)
││✘ {1} A70 ⫺ 10265
││ ✔ {1} A4 ⫹₇₀ 4726
││ │✔ Meadows : 19/19 (conf: 1.0)
││ │✘ {1} A2 ⫺₈₀ 4350
││ │ ✔ Trees : 2/4 (conf: 0.5)
││ │ ✘ Trees : 8/8 (conf: 1.0)
││ ✘ Trees : 70/72 (conf: 0.9722222222222222)
│✘ {1} A3 ⫹₇₀ 22443
│ ✔ {1} A83 ⫹₇₀ 23652
│ │✔ {1} A15 ⫺₆₀ 14972
│ ││✔ Self-Blocking Bricks : 31/32 (conf: 0.96875)
│ ││✘ {1} A1 ⫹₆₀ 13168
│ ││ ✔ {1} A65 ⫹ 21006
│ ││ │✔ {1} A17 ⫹₇₀ 14506
│ ││ ││✔ {1} A2 ⫺₇₀ 10364
│ ││ │││✔ {1} A1 ⫹ 15636
│ ││ ││││✔ Gravel : 6/6 (conf: 1.0)
│ ││ ││││✘ Gravel : 2/4 (conf: 0.5)
│ ││ │││✘ {1} A1 ⫺₇₀ 8502
│ ││ │││ ✔ Self-Blocking Bricks : 11/11 (conf: 1.0)
│ ││ │││ ✘ Self-Blocking Bricks : 2/4 (conf: 0.5)
│ ││ ││✘ Self-Blocking Bricks : 29/29 (conf: 1.0)
│ ││ │✘ Gravel : 11/11 (conf: 1.0)
│ ││ ✘ {1} ⟨NTPP⟩ (A43 ⫺ 17330)
│ ││  ✔ Gravel : 34/35 (conf: 0.9714285714285714)
│ ││  ✘ {1} A1 ⫹ 15913
│ ││   ✔ Self-Blocking Bricks : 5/5 (conf: 1.0)
│ ││   ✘ Gravel : 3/4 (conf: 0.75)
│ │✘ Bare Soil : 21/21 (conf: 1.0)
│ ✘ Painted metal sheets : 80/80 (conf: 1.0)
✘ {1} A38 ⫺ 8313
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A68 ⫺₇₀ 13129)
 │✔ {1} A18 ⫺₈₀ 12356
 ││✔ Bitumen : 58/59 (conf: 0.9830508474576272)
 ││✘ {1} A85 ⫺ 14536
 ││ ✔ {1} A96 ⫹₈₀ 17142
 ││ │✔ Gravel : 16/16 (conf: 1.0)
 ││ │✘ Asphalt : 3/4 (conf: 0.75)
 ││ ✘ {1} A1 ⫹ 14952
 ││  ✔ {1} A2 ⫺₇₀ 9542
 ││  │✔ Asphalt : 3/4 (conf: 0.75)
 ││  │✘ Bitumen : 19/19 (conf: 1.0)
 ││  ✘ {1} A2 ⫹₈₀ 14338
 ││   ✔ Gravel : 3/4 (conf: 0.75)
 ││   ✘ Asphalt : 7/7 (conf: 1.0)
 │✘ Asphalt : 64/66 (conf: 0.9696969696969697)
 ✘ Shadows : 80/80 (conf: 1.0)
● [ 22/07/2021 00:40:51 ] Saving tree to file ./gandalf/trees/tree_be053fee6d05224e7b17a092e2ec6476ba977392a8f7e1ef912e0b3389e70b51.jld...
Test tree:
Decision Tree
Leaves: 33
Tot nodes: 65
Height: 10
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A95 ⫺₆₀ 16339)
✔ {1} A36 ⫹₆₀ 14605
│✔ {1} A66 ⫺ 6242
││✔ {1} A100 ⫺₈₀ 25158
│││✔ Meadows : 7/8 (conf: 0.875)
│││✘ {1} A19 ⫹ 7203
│││ ✔ {1} A18 ⫺ 4528
│││ │✔ Meadows : 4/8 (conf: 0.5)
│││ │✘ {1} A15 ⫹₆₀ 4855
│││ │ ✔ {1} A2 ⫹ 8135
│││ │ │✔ Bare Soil : 1/1 (conf: 1.0)
│││ │ │✘ Meadows : 1/2 (conf: 0.5)
│││ │ ✘ Bare Soil : 2/2 (conf: 1.0)
│││ ✘ {1} A2 ⫺₇₀ 6728
│││  ✔ {1} A2 ⫹ 10622
│││  │✔ Bare Soil : 0/0 (conf: NaN)
│││  │✘ Meadows : 1/4 (conf: 0.25)
│││  ✘ Bare Soil : 7/8 (conf: 0.875)
││✘ {1} A70 ⫺ 10265
││ ✔ {1} A4 ⫹₇₀ 4726
││ │✔ Meadows : 2/2 (conf: 1.0)
││ │✘ {1} A2 ⫺₈₀ 4350
││ │ ✔ Trees : 2/4 (conf: 0.5)
││ │ ✘ Trees : 0/1 (conf: 0.0)
││ ✘ Trees : 18/20 (conf: 0.9)
│✘ {1} A3 ⫹₇₀ 22443
│ ✔ {1} A83 ⫹₇₀ 23652
│ │✔ {1} A15 ⫺₆₀ 14972
│ ││✔ Self-Blocking Bricks : 6/6 (conf: 1.0)
│ ││✘ {1} A1 ⫹₆₀ 13168
│ ││ ✔ {1} A65 ⫹ 21006
│ ││ │✔ {1} A17 ⫹₇₀ 14506
│ ││ ││✔ {1} A2 ⫺₇₀ 10364
│ ││ │││✔ {1} A1 ⫹ 15636
│ ││ ││││✔ Gravel : 0/0 (conf: NaN)
│ ││ ││││✘ Gravel : 1/2 (conf: 0.5)
│ ││ │││✘ {1} A1 ⫺₇₀ 8502
│ ││ │││ ✔ Self-Blocking Bricks : 2/4 (conf: 0.5)
│ ││ │││ ✘ Self-Blocking Bricks : 2/2 (conf: 1.0)
│ ││ ││✘ Self-Blocking Bricks : 7/9 (conf: 0.7777777777777778)
│ ││ │✘ Gravel : 2/2 (conf: 1.0)
│ ││ ✘ {1} ⟨NTPP⟩ (A43 ⫺ 17330)
│ ││  ✔ Gravel : 9/11 (conf: 0.8181818181818182)
│ ││  ✘ {1} A1 ⫹ 15913
│ ││   ✔ Self-Blocking Bricks : 0/1 (conf: 0.0)
│ ││   ✘ Gravel : 2/2 (conf: 1.0)
│ │✘ Bare Soil : 0/1 (conf: 0.0)
│ ✘ Painted metal sheets : 19/19 (conf: 1.0)
✘ {1} A38 ⫺ 8313
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A68 ⫺₇₀ 13129)
 │✔ {1} A18 ⫺₈₀ 12356
 ││✔ Bitumen : 16/17 (conf: 0.9411764705882353)
 ││✘ {1} A85 ⫺ 14536
 ││ ✔ {1} A96 ⫹₈₀ 17142
 ││ │✔ Gravel : 3/3 (conf: 1.0)
 ││ │✘ Asphalt : 0/0 (conf: NaN)
 ││ ✘ {1} A1 ⫹ 14952
 ││  ✔ {1} A2 ⫺₇₀ 9542
 ││  │✔ Asphalt : 1/2 (conf: 0.5)
 ││  │✘ Bitumen : 2/3 (conf: 0.6666666666666666)
 ││  ✘ {1} A2 ⫹₈₀ 14338
 ││   ✔ Gravel : 0/0 (conf: NaN)
 ││   ✘ Asphalt : 0/0 (conf: NaN)
 │✘ Asphalt : 15/16 (conf: 0.9375)
 ✘ Shadows : 20/20 (conf: 1.0)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Pavia	2	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	84.44%	80.0%	50.0%	90.0%	85.0%	75.0%	95.0%	85.0%	100.0%	100.0%	88.89%	83.33%	90.0%	85.0%	62.5%	100.0%	77.27%	100.0%	80.0%	||	82.5%	[84.21, 62.5, 90.0, 85.0, 68.18, 97.44, 80.95, 100.0, 88.89]%	|||	84.44%	98.06%	85.22%	98.08%	84.13%	
  accuracy: 84.44% kappa: 82.5% 
 16  1  1  0  0  0  2  0  0	80.0%		Asphalt
  0 10  0  0  9  0  0  0  1	50.0%		Bare Soil
  2  0 18  0  0  0  0  0  0	90.0%		Bitumen
  0  0  0 17  0  0  3  0  0	85.0%		Gravel
  0  1  0  0 15  0  0  0  4	75.0%		Meadows
  0  0  1  0  0 19  0  0  0	95.0%		Painted metal sheets
  0  0  0  3  0  0 17  0  0	85.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  0  0  0  0 20	100.0%		Trees

overall_acc:	0.8444444444444444
κ =		0.8250000000000001
sensitivities:	[0.8, 0.5, 0.9, 0.85, 0.75, 0.95, 0.85, 1.0, 1.0]
specificities:	[0.9875, 0.9875, 0.9875, 0.98125, 0.94375, 1.0, 0.96875, 1.0, 0.96875]
PPVs:		[0.8888888888888888, 0.8333333333333334, 0.9, 0.85, 0.625, 1.0, 0.7727272727272727, 1.0, 0.8]
NPVs:		[0.9753086419753086, 0.9404761904761905, 0.9875, 0.98125, 0.967948717948718, 0.9937888198757764, 0.9810126582278481, 1.0, 1.0]
F1s:		[0.8421052631578947, 0.625, 0.9, 0.85, 0.6818181818181818, 0.9743589743589743, 0.8095238095238095, 1.0, 0.8888888888888888]
accuracies:	[0.9666666666666667, 0.9333333333333333, 0.9777777777777777, 0.9666666666666667, 0.9222222222222223, 0.9944444444444445, 0.9555555555555556, 1.0, 0.9722222222222222]
mean_accuracy:	0.965432098765432
Dataset_slice = (900) -> [69, 125, 224, 361, 493, 514, 611, 763, 813, 56, 174, 287, 365, 435, 502, 659, 726, 860, 62, 169, 286, 356, 466, 569, 685, 738, 880, 91, 135, 227, 360, 414, 522, 653, 796, 867, 63, 180, 272, 321, 443, 562, 623, 795, 824, 66, 141, 201, 312, 426, 509, 652, 718, 802, 98, 175, 260, 368, 409, 518, 684, 749, 859, 32, 187, 210, 383, 490, 549, 636, 725, 854, 41, 185, 278, 364, 500, 551, 617, 750, 833, 100, 165, 256, 334, 417, 567, 681, 703, 830, 48, 101, 289, 351, 477, 597, 674, 791, 865, 95, 137, 246, 338, 464, 563, 682, 733, 853, 38, 149, 277, 328, 480, 578, 610, 770, 866, 57, 146, 293, 341, 412, 552, 648, 772, 851, 14, 176, 298, 390, 442, 594, 666, 727, 846, 22, 126, 218, 309, 441, 582, 655, 769, 808, 1, 120, 266, 344, 405, 592, 619, 793, 884, 93, 168, 254, 381, 419, 556, 697, 730, 826, 37, 123, 225, 313, 453, 533, 688, 728, 823, 54, 138, 204, 315, 437, 568, 643, 768, 875, 49, 156, 203, 335, 402, 507, 698, 706, 856, 58, 164, 257, 343, 440, 577, 612, 731, 845, 15, 155, 234, 394, 489, 542, 640, 775, 816, 60, 186, 285, 306, 423, 583, 637, 709, 810, 71, 107, 291, 348, 459, 513, 650, 777, 818, 85, 160, 283, 353, 496, 547, 687, 754, 861, 77, 178, 247, 316, 469, 544, 606, 741, 838, 25, 189, 237, 387, 495, 599, 692, 797, 828, 45, 182, 292, 373, 482, 584, 634, 788, 888, 39, 117, 250, 392, 456, 520, 660, 761, 894, 83, 162, 274, 346, 421, 576, 677, 739, 827, 44, 194, 231, 366, 448, 527, 691, 762, 897, 35, 112, 219, 333, 497, 560, 646, 740, 850, 28, 106, 236, 311, 468, 600, 662, 702, 852, 51, 119, 261, 310, 431, 516, 647, 737, 849, 96, 114, 273, 347, 465, 536, 670, 720, 863, 78, 163, 251, 352, 404, 538, 608, 779, 809, 2, 129, 213, 359, 403, 591, 624, 715, 848, 26, 183, 288, 308, 454, 598, 663, 701, 892, 19, 113, 282, 400, 401, 540, 625, 756, 882, 5, 111, 252, 302, 473, 566, 671, 743, 868, 10, 108, 211, 393, 427, 581, 621, 707, 893, 55, 152, 235, 342, 470, 541, 695, 717, 811, 65, 148, 276, 327, 428, 511, 673, 705, 855, 99, 136, 233, 304, 472, 546, 632, 708, 891, 6, 184, 230, 332, 413, 517, 633, 800, 812, 23, 131, 244, 330, 452, 515, 616, 766, 878, 7, 199, 240, 322, 422, 529, 627, 721, 819, 74, 142, 214, 319, 467, 505, 607, 746, 887, 86, 128, 264, 399, 494, 559, 602, 716, 847, 75, 200, 212, 389, 449, 573, 700, 755, 840, 42, 122, 300, 388, 418, 561, 622, 748, 843, 9, 150, 259, 339, 491, 510, 639, 759, 889, 11, 170, 296, 382, 484, 554, 630, 764, 805, 80, 140, 208, 374, 457, 596, 690, 751, 831, 73, 130, 239, 354, 458, 595, 631, 757, 806, 16, 134, 294, 370, 475, 519, 686, 790, 862, 31, 177, 202, 336, 432, 580, 613, 745, 872, 89, 151, 275, 317, 438, 572, 699, 712, 834, 13, 104, 243, 391, 479, 504, 680, 742, 890, 72, 144, 262, 375, 436, 548, 672, 781, 877, 84, 173, 258, 320, 451, 575, 693, 799, 836, 64, 109, 221, 350, 474, 555, 669, 744, 801, 97, 102, 228, 325, 408, 508, 683, 735, 898, 61, 118, 248, 378, 487, 553, 651, 794, 815, 59, 172, 279, 395, 434, 545, 696, 776, 817, 40, 132, 241, 358, 406, 574, 667, 753, 803, 43, 171, 217, 380, 425, 526, 679, 734, 820, 20, 124, 215, 385, 486, 501, 678, 722, 807, 30, 105, 269, 355, 445, 558, 614, 786, 825, 53, 195, 280, 369, 463, 550, 668, 771, 839, 12, 157, 297, 377, 439, 565, 644, 719, 857, 50, 159, 238, 345, 499, 589, 676, 704, 873, 34, 193, 284, 398, 424, 579, 661, 732, 870, 81, 115, 253, 397, 416, 570, 664, 724, 844, 67, 166, 222, 372, 450, 585, 649, 774, 804, 24, 127, 281, 371, 481, 524, 615, 729, 841, 4, 145, 263, 384, 492, 539, 641, 783, 871, 68, 154, 265, 324, 410, 503, 605, 765, 885, 90, 139, 255, 349, 462, 534, 665, 758, 821, 3, 143, 249, 357, 455, 506, 654, 711, 837, 52, 181, 220, 305, 420, 523, 628, 780, 883, 94, 188, 229, 329, 483, 543, 642, 785, 822, 29, 153, 270, 303, 446, 535, 626, 767, 832, 36, 179, 226, 307, 433, 564, 694, 747, 829, 82, 158, 209, 314, 478, 530, 620, 773, 900, 27, 190, 245, 318, 485, 521, 609, 760, 895, 70, 197, 206, 376, 476, 537, 657, 714, 899, 92, 196, 271, 363, 415, 532, 656, 723, 835, 76, 191, 295, 331, 447, 571, 601, 782, 858, 21, 110, 268, 337, 498, 557, 638, 792, 842, 17, 167, 242, 396, 407, 588, 629, 713, 881, 46, 192, 290, 301, 429, 531, 635, 784, 864, 18, 161, 216, 362, 430, 525, 689, 736, 814, 87, 103, 267, 379, 471, 590, 675, 789, 879, 8, 147, 232, 323, 411, 593, 604, 752, 874, 47, 198, 223, 326, 444, 586, 645, 798, 869, 33, 133, 207, 386, 488, 512, 658, 787, 896, 88, 121, 299, 340, 460, 528, 618, 778, 886, 79, 116, 205, 367, 461, 587, 603, 710, 876]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2877.69 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	2673.39 MBs	(shape (3, 4, 3, 4, 720, 1030, 7), 738491460 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 00:40:58 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (301+419=720 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A10 ⫺₇₀ 7788), purity -1.6323112516517597
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+219=301 samples) on frame 1 with decision: {1} A78 ⫺ 12168, purity -0.8572043904647199
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (173+246=419 samples) on frame 1 with decision: {1} A103 ⫺₆₀ 16260, purity -1.2422089179017866
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (62+111=173 samples) on frame 1 with decision: {1} A61 ⫺₇₀ 13050, purity -0.5694274018737044
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+166=246 samples) on frame 1 with decision: {1} A3 ⫹₇₀ 22443, purity -0.8027924878182564
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (118+101=219 samples) on frame 1 with decision: {1} ⟨EC⟩ (A66 ⫹ 5886), purity -0.6539035562591405
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+94=111 samples) on frame 1 with decision: {1} ⟨NTPP⟩ (A15 ⫺ 11514), purity -0.5313510176571377
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (94+24=118 samples) on frame 1 with decision: {1} ⟨EC⟩ (A38 ⫺ 13555), purity -0.601639461421186
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (142+24=166 samples) on frame 1 with decision: {1} A99 ⫺₇₀ 21640, purity -0.8087227966439102
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (40+61=101 samples) on frame 1 with decision: {1} ⟨DC⟩ (A71 ⫹ 11197), purity -0.27253022325290616
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+4=17 samples) on frame 1 with decision: {1} A1 ⫺₆₀ 11861, purity -0.1630934542493989
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+12=94 samples) on frame 1 with decision: {1} ⟨EC⟩ (A79 ⫺ 17598), purity -0.31757345373065715
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (29+65=94 samples) on frame 1 with decision: {1} ⟨EC⟩ (A100 ⫹ 24474), purity -0.46072445486121194
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+18=40 samples) on frame 1 with decision: {1} ⟨EC⟩ (A30 ⫺ 8244), purity 2.4424906541753446e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (95+47=142 samples) on frame 1 with decision: {1} A16 ⫺ 13594, purity -0.6909100040219567
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+18=24 samples) on frame 1 with decision: {1} A74 ⫺₈₀ 21402, purity -0.21689080712036532
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (29+66=95 samples) on frame 1 with decision: {1} A52 ⫺₈₀ 16607, purity -0.6389390498776646
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+13=47 samples) on frame 1 with decision: {1} A1 ⫺₆₀ 12742, purity -0.1909024210264777
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+6=12 samples) on frame 1 with decision: {1} ⟨DC⟩ (A14 ⫹ 11504), purity -0.22528060443315223
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (39+26=65 samples) on frame 1 with decision: {1} ⟨DC⟩ (A39 ⫺ 9899), purity -0.464976517246552
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+7=13 samples) on frame 1 with decision: {1} A4 ⫺₇₀ 13258, purity 1.0248212535001446e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+25=29 samples) on frame 1 with decision: {1} A82 ⫺₇₀ 16458, purity -0.4313813996018865
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+43=66 samples) on frame 1 with decision: {1} A9 ⫺₆₀ 12554, purity -0.4300392429828756
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+18=39 samples) on frame 1 with decision: {1} A8 ⫺ 6470, purity -0.32214516308436925
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+4=25 samples) on frame 1 with decision: {1} A1 ⫺₇₀ 11761, purity -0.16081302884448284
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+24=43 samples) on frame 1 with decision: {1} A2 ⫹₆₀ 13218, purity -0.46035271343774364
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+11=21 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A15 ⫺ 4905), purity -0.32048174619488407
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+18=24 samples) on frame 1 with decision: {1} A61 ⫹₈₀ 20808, purity -0.3379209066497284
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A11 ⫹ 3220, purity 1.3322676295501878e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+4=18 samples) on frame 1 with decision: {1} A13 ⫹₇₀ 13773, purity -0.12496336547084629
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
2306.657162 seconds (14.59 G allocations: 932.856 GiB, 26.48% gc time, 0.24% compilation time)
Train tree:
Decision Tree
Leaves: 31
Tot nodes: 61
Height: 10
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A10 ⫺₇₀ 7788)
✔ {1} A103 ⫺₆₀ 16260
│✔ {1} A3 ⫹₇₀ 22443
││✔ {1} A99 ⫺₇₀ 21640
│││✔ {1} A74 ⫺₈₀ 21402
││││✔ Bare Soil : 18/18 (conf: 1.0)
││││✘ Meadows : 4/6 (conf: 0.6666666666666666)
│││✘ {1} A16 ⫺ 13594
│││ ✔ {1} A1 ⫺₆₀ 12742
│││ │✔ {1} A4 ⫺₇₀ 13258
│││ ││✔ Self-Blocking Bricks : 7/7 (conf: 1.0)
│││ ││✘ Gravel : 6/6 (conf: 1.0)
│││ │✘ Self-Blocking Bricks : 34/34 (conf: 1.0)
│││ ✘ {1} A52 ⫺₈₀ 16607
│││  ✔ {1} A9 ⫺₆₀ 12554
│││  │✔ {1} A2 ⫹₆₀ 13218
│││  ││✔ {1} A61 ⫹₈₀ 20808
│││  │││✔ {1} A13 ⫹₇₀ 13773
│││  ││││✔ Gravel : 3/4 (conf: 0.75)
│││  ││││✘ Self-Blocking Bricks : 14/14 (conf: 1.0)
│││  │││✘ Gravel : 6/6 (conf: 1.0)
│││  ││✘ Gravel : 18/19 (conf: 0.9473684210526315)
│││  │✘ Gravel : 23/23 (conf: 1.0)
│││  ✘ {1} A82 ⫺₇₀ 16458
│││   ✔ {1} A1 ⫺₇₀ 11761
│││   │✔ Asphalt : 4/4 (conf: 1.0)
│││   │✘ Self-Blocking Bricks : 20/21 (conf: 0.9523809523809523)
│││   ✘ Gravel : 4/4 (conf: 1.0)
││✘ Painted metal sheets : 80/80 (conf: 1.0)
│✘ {1} A61 ⫺₇₀ 13050
│ ✔ {1} ⟨NTPP⟩ (A15 ⫺ 11514)
│ │✔ {1} ⟨EC⟩ (A79 ⫺ 17598)
│ ││✔ {1} ⟨DC⟩ (A14 ⫹ 11504)
│ │││✔ Asphalt : 6/6 (conf: 1.0)
│ │││✘ Gravel : 5/6 (conf: 0.8333333333333334)
│ ││✘ Bitumen : 77/82 (conf: 0.9390243902439024)
│ │✘ {1} A1 ⫺₆₀ 11861
│ │ ✔ Gravel : 2/4 (conf: 0.5)
│ │ ✘ Gravel : 13/13 (conf: 1.0)
│ ✘ Asphalt : 60/62 (conf: 0.967741935483871)
✘ {1} A78 ⫺ 12168
 ✔ {1} ⟨EC⟩ (A66 ⫹ 5886)
 │✔ {1} ⟨DC⟩ (A71 ⫹ 11197)
 ││✔ Trees : 61/61 (conf: 1.0)
 ││✘ {1} ⟨EC⟩ (A30 ⫺ 8244)
 ││ ✔ Trees : 18/18 (conf: 1.0)
 ││ ✘ Meadows : 22/22 (conf: 1.0)
 │✘ {1} ⟨EC⟩ (A38 ⫺ 13555)
 │ ✔ Bare Soil : 22/24 (conf: 0.9166666666666666)
 │ ✘ {1} ⟨EC⟩ (A100 ⫹ 24474)
 │  ✔ {1} ⟨DC⟩ (A39 ⫺ 9899)
 │  │✔ Bare Soil : 25/26 (conf: 0.9615384615384616)
 │  │✘ {1} A8 ⫺ 6470
 │  │ ✔ Meadows : 18/18 (conf: 1.0)
 │  │ ✘ {1} ⟨T̅P̅P̅⟩ (A15 ⫺ 4905)
 │  │  ✔ Bare Soil : 11/11 (conf: 1.0)
 │  │  ✘ {1} A11 ⫹ 3220
 │  │   ✔ Bare Soil : 4/4 (conf: 1.0)
 │  │   ✘ Meadows : 6/6 (conf: 1.0)
 │  ✘ Meadows : 29/29 (conf: 1.0)
 ✘ Shadows : 80/82 (conf: 0.975609756097561)
● [ 22/07/2021 01:19:25 ] Saving tree to file ./gandalf/trees/tree_bc089984600bbfac19fa30ebfe4f6fb39617c013422a86f69545accbcc0a6426.jld...
Test tree:
Decision Tree
Leaves: 31
Tot nodes: 61
Height: 10
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A10 ⫺₇₀ 7788)
✔ {1} A103 ⫺₆₀ 16260
│✔ {1} A3 ⫹₇₀ 22443
││✔ {1} A99 ⫺₇₀ 21640
│││✔ {1} A74 ⫺₈₀ 21402
││││✔ Bare Soil : 1/1 (conf: 1.0)
││││✘ Meadows : 0/3 (conf: 0.0)
│││✘ {1} A16 ⫺ 13594
│││ ✔ {1} A1 ⫺₆₀ 12742
│││ │✔ {1} A4 ⫺₇₀ 13258
│││ ││✔ Self-Blocking Bricks : 1/1 (conf: 1.0)
│││ ││✘ Gravel : 1/2 (conf: 0.5)
│││ │✘ Self-Blocking Bricks : 5/6 (conf: 0.8333333333333334)
│││ ✘ {1} A52 ⫺₈₀ 16607
│││  ✔ {1} A9 ⫺₆₀ 12554
│││  │✔ {1} A2 ⫹₆₀ 13218
│││  ││✔ {1} A61 ⫹₈₀ 20808
│││  │││✔ {1} A13 ⫹₇₀ 13773
│││  ││││✔ Gravel : 2/2 (conf: 1.0)
│││  ││││✘ Self-Blocking Bricks : 4/5 (conf: 0.8)
│││  │││✘ Gravel : 0/0 (conf: NaN)
│││  ││✘ Gravel : 3/7 (conf: 0.42857142857142855)
│││  │✘ Gravel : 5/6 (conf: 0.8333333333333334)
│││  ✘ {1} A82 ⫺₇₀ 16458
│││   ✔ {1} A1 ⫺₇₀ 11761
│││   │✔ Asphalt : 0/0 (conf: NaN)
│││   │✘ Self-Blocking Bricks : 4/8 (conf: 0.5)
│││   ✘ Gravel : 0/0 (conf: NaN)
││✘ Painted metal sheets : 20/20 (conf: 1.0)
│✘ {1} A61 ⫺₇₀ 13050
│ ✔ {1} ⟨NTPP⟩ (A15 ⫺ 11514)
│ │✔ {1} ⟨EC⟩ (A79 ⫺ 17598)
│ ││✔ {1} ⟨DC⟩ (A14 ⫹ 11504)
│ │││✔ Asphalt : 0/1 (conf: 0.0)
│ │││✘ Gravel : 0/0 (conf: NaN)
│ ││✘ Bitumen : 16/20 (conf: 0.8)
│ │✘ {1} A1 ⫺₆₀ 11861
│ │ ✔ Gravel : 0/0 (conf: NaN)
│ │ ✘ Gravel : 2/3 (conf: 0.6666666666666666)
│ ✘ Asphalt : 16/19 (conf: 0.8421052631578947)
✘ {1} A78 ⫺ 12168
 ✔ {1} ⟨EC⟩ (A66 ⫹ 5886)
 │✔ {1} ⟨DC⟩ (A71 ⫹ 11197)
 ││✔ Trees : 17/17 (conf: 1.0)
 ││✘ {1} ⟨EC⟩ (A30 ⫺ 8244)
 ││ ✔ Trees : 2/4 (conf: 0.5)
 ││ ✘ Meadows : 4/5 (conf: 0.8)
 │✘ {1} ⟨EC⟩ (A38 ⫺ 13555)
 │ ✔ Bare Soil : 7/9 (conf: 0.7777777777777778)
 │ ✘ {1} ⟨EC⟩ (A100 ⫹ 24474)
 │  ✔ {1} ⟨DC⟩ (A39 ⫺ 9899)
 │  │✔ Bare Soil : 5/9 (conf: 0.5555555555555556)
 │  │✘ {1} A8 ⫺ 6470
 │  │ ✔ Meadows : 1/1 (conf: 1.0)
 │  │ ✘ {1} ⟨T̅P̅P̅⟩ (A15 ⫺ 4905)
 │  │  ✔ Bare Soil : 1/1 (conf: 1.0)
 │  │  ✘ {1} A11 ⫹ 3220
 │  │   ✔ Bare Soil : 0/0 (conf: NaN)
 │  │   ✘ Meadows : 1/3 (conf: 0.3333333333333333)
 │  ✘ Meadows : 8/8 (conf: 1.0)
 ✘ Shadows : 19/19 (conf: 1.0)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Pavia	3	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	80.56%	80.0%	70.0%	80.0%	65.0%	70.0%	100.0%	70.0%	95.0%	95.0%	80.0%	70.0%	80.0%	65.0%	70.0%	100.0%	70.0%	100.0%	90.48%	||	78.12%	[80.0, 70.0, 80.0, 65.0, 70.0, 100.0, 70.0, 97.44, 92.68]%	|||	80.56%	97.57%	80.61%	97.57%	80.57%	
  accuracy: 80.56% kappa: 78.12% 
 16  2  2  0  0  0  0  0  0	80.0%		Asphalt
  0 14  0  0  5  0  1  0  0	70.0%		Bare Soil
  2  1 16  1  0  0  0  0  0	80.0%		Bitumen
  1  0  2 13  0  0  4  0  0	65.0%		Gravel
  0  3  0  0 14  0  1  0  2	70.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  0  0  6  0  0 14  0  0	70.0%		Self-Blocking Bricks
  1  0  0  0  0  0  0 19  0	95.0%		Shadows
  0  0  0  0  1  0  0  0 19	95.0%		Trees

overall_acc:	0.8055555555555556
κ =		0.78125
sensitivities:	[0.8, 0.7, 0.8, 0.65, 0.7, 1.0, 0.7, 0.95, 0.95]
specificities:	[0.975, 0.9625, 0.975, 0.95625, 0.9625, 1.0, 0.9625, 1.0, 0.9875]
PPVs:		[0.8, 0.7, 0.8, 0.65, 0.7, 1.0, 0.7, 1.0, 0.9047619047619048]
NPVs:		[0.975, 0.9625, 0.975, 0.95625, 0.9625, 1.0, 0.9625, 0.9937888198757764, 0.9937106918238994]
F1s:		[0.8, 0.7, 0.8, 0.65, 0.7, 1.0, 0.7, 0.9743589743589743, 0.926829268292683]
accuracies:	[0.9555555555555556, 0.9333333333333333, 0.9555555555555556, 0.9222222222222223, 0.9333333333333333, 1.0, 0.9333333333333333, 0.9944444444444445, 0.9833333333333333]
mean_accuracy:	0.95679012345679
Dataset_slice = (900) -> [60, 161, 270, 359, 480, 580, 608, 710, 877, 46, 140, 238, 345, 460, 561, 649, 741, 817, 23, 131, 243, 309, 470, 560, 652, 781, 844, 40, 121, 266, 306, 436, 558, 613, 770, 827, 68, 185, 240, 312, 488, 534, 694, 736, 860, 29, 183, 233, 332, 495, 531, 646, 744, 869, 53, 164, 208, 386, 441, 511, 603, 782, 826, 24, 154, 269, 393, 440, 551, 690, 788, 808, 83, 153, 226, 339, 425, 590, 651, 799, 833, 1, 112, 263, 302, 429, 515, 618, 776, 813, 47, 146, 273, 387, 432, 545, 602, 737, 893, 65, 110, 300, 341, 426, 529, 660, 756, 897, 98, 115, 209, 348, 419, 530, 679, 772, 874, 51, 176, 286, 395, 442, 516, 609, 775, 875, 6, 148, 212, 336, 452, 556, 654, 760, 855, 12, 103, 204, 303, 453, 600, 612, 758, 854, 45, 122, 237, 366, 420, 541, 673, 722, 819, 93, 167, 293, 368, 415, 521, 617, 707, 858, 80, 106, 241, 323, 496, 563, 662, 763, 811, 97, 193, 276, 365, 414, 592, 631, 748, 887, 5, 132, 232, 390, 444, 528, 674, 792, 888, 73, 124, 231, 358, 433, 504, 635, 764, 864, 85, 174, 265, 329, 462, 524, 686, 784, 816, 44, 134, 255, 322, 489, 578, 648, 732, 890, 18, 160, 258, 372, 493, 501, 611, 783, 837, 32, 188, 290, 394, 409, 554, 626, 745, 822, 62, 200, 206, 320, 473, 587, 675, 733, 883, 74, 111, 234, 360, 463, 514, 681, 761, 801, 49, 128, 289, 355, 406, 533, 671, 789, 840, 76, 191, 257, 381, 478, 566, 624, 729, 894, 88, 125, 274, 349, 424, 546, 698, 704, 802, 34, 101, 262, 318, 408, 573, 664, 780, 834, 2, 162, 246, 324, 486, 570, 639, 717, 857, 95, 105, 292, 337, 421, 595, 656, 778, 848, 36, 197, 207, 343, 492, 520, 622, 759, 810, 27, 147, 203, 362, 437, 577, 663, 752, 876, 35, 149, 202, 375, 411, 539, 685, 727, 803, 31, 170, 242, 374, 430, 571, 696, 779, 859, 7, 126, 247, 344, 500, 552, 620, 730, 870, 11, 184, 298, 338, 428, 532, 669, 734, 815, 52, 109, 282, 370, 456, 562, 684, 767, 831, 75, 142, 213, 328, 446, 576, 672, 716, 814, 69, 152, 287, 330, 455, 564, 627, 702, 880, 41, 172, 248, 354, 407, 582, 667, 753, 820, 22, 194, 249, 397, 466, 572, 605, 712, 898, 10, 136, 253, 399, 435, 542, 638, 790, 881, 16, 157, 228, 357, 448, 585, 650, 798, 842, 72, 178, 291, 313, 494, 526, 655, 794, 836, 61, 173, 210, 319, 404, 586, 658, 749, 871, 96, 143, 220, 351, 464, 598, 657, 751, 863, 56, 158, 299, 378, 401, 557, 615, 800, 839, 48, 175, 211, 367, 431, 509, 668, 731, 853, 89, 104, 236, 389, 417, 527, 700, 771, 861, 71, 139, 260, 376, 491, 536, 683, 754, 804, 15, 168, 280, 327, 443, 599, 653, 708, 856, 30, 119, 288, 310, 449, 594, 619, 701, 867, 90, 138, 294, 305, 459, 549, 693, 795, 882, 50, 118, 205, 400, 477, 518, 616, 714, 830, 66, 130, 252, 380, 483, 589, 637, 743, 852, 14, 144, 261, 369, 454, 503, 633, 705, 835, 100, 145, 215, 371, 447, 579, 607, 768, 846, 17, 156, 296, 356, 457, 508, 677, 746, 818, 84, 186, 227, 315, 475, 565, 691, 750, 878, 86, 179, 283, 304, 439, 548, 699, 720, 879, 92, 113, 281, 335, 461, 537, 634, 709, 841, 78, 163, 279, 342, 418, 596, 682, 719, 862, 43, 133, 217, 311, 469, 519, 643, 715, 865, 59, 169, 251, 316, 498, 547, 676, 796, 828, 54, 177, 245, 361, 403, 591, 695, 791, 885, 25, 117, 254, 384, 422, 543, 614, 769, 899, 64, 108, 264, 346, 434, 505, 640, 797, 900, 55, 165, 297, 352, 484, 593, 629, 777, 832, 99, 159, 278, 307, 416, 538, 623, 728, 892, 58, 150, 256, 388, 467, 502, 642, 739, 809, 42, 196, 250, 326, 427, 569, 604, 703, 868, 67, 141, 216, 331, 487, 525, 601, 742, 889, 3, 137, 219, 373, 445, 544, 670, 713, 807, 13, 195, 222, 377, 402, 583, 632, 723, 886, 8, 102, 259, 340, 476, 535, 610, 787, 823, 79, 151, 272, 398, 405, 512, 666, 773, 806, 91, 180, 224, 325, 471, 522, 628, 740, 825, 33, 189, 284, 333, 468, 510, 659, 718, 812, 38, 182, 268, 379, 472, 517, 647, 735, 829, 77, 166, 275, 391, 479, 523, 687, 762, 849, 9, 181, 271, 353, 499, 588, 697, 765, 843, 39, 155, 221, 317, 412, 553, 680, 785, 838, 4, 198, 277, 392, 458, 513, 661, 747, 896, 87, 199, 295, 383, 481, 550, 645, 706, 884, 21, 114, 201, 334, 465, 507, 636, 725, 847, 19, 120, 230, 363, 497, 567, 689, 724, 866, 94, 190, 229, 314, 485, 575, 621, 766, 873, 57, 116, 214, 308, 423, 597, 625, 721, 895, 82, 192, 223, 350, 450, 581, 678, 726, 851, 28, 171, 285, 347, 451, 559, 606, 786, 850, 26, 127, 225, 385, 474, 574, 630, 711, 891, 20, 107, 244, 301, 438, 506, 644, 757, 821, 81, 135, 239, 396, 482, 540, 641, 755, 824, 70, 123, 235, 321, 410, 568, 688, 793, 805, 63, 129, 267, 382, 413, 555, 665, 738, 872, 37, 187, 218, 364, 490, 584, 692, 774, 845]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2877.69 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	2673.39 MBs	(shape (3, 4, 3, 4, 720, 1030, 7), 722261750 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 01:19:32 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (256+464=720 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A95 ⫺₆₀ 16359), purity -1.6309454334607374
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+176=256 samples) on frame 1 with decision: {1} A38 ⫺ 8313, purity -0.6655963789842311
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (241+223=464 samples) on frame 1 with decision: {1} A36 ⫹₇₀ 14962, purity -1.2176699937969493
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (66+110=176 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A68 ⫺₇₀ 13228), purity -0.548059248661631
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (94+129=223 samples) on frame 1 with decision: {1} A58 ⫺ 3983, purity -0.6090839283799334
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+161=241 samples) on frame 1 with decision: {1} A3 ⫹₇₀ 22443, purity -0.6978153276424344
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+18=94 samples) on frame 1 with decision: {1} A73 ⫺ 17568, purity -0.21152960677120342
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (93+17=110 samples) on frame 1 with decision: {1} A16 ⫹₆₀ 11732, purity -0.5163000305514214
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+143=161 samples) on frame 1 with decision: {1} A83 ⫹₇₀ 23652, purity -0.708262146255286
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (93+36=129 samples) on frame 1 with decision: {1} A99 ⫺ 24434, purity -0.5584416542324955
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+13=18 samples) on frame 1 with decision: {1} A4 ⫹₈₀ 5479, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+82=93 samples) on frame 1 with decision: {1} A1 ⫹₇₀ 14407, purity -0.3130455925505986
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (56+37=93 samples) on frame 1 with decision: {1} A42 ⫹ 9770, purity -0.5495673976195355
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+13=17 samples) on frame 1 with decision: {1} A3 ⫺₈₀ 8274, purity -0.1630934542493989
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (114+29=143 samples) on frame 1 with decision: {1} A15 ⫺₆₀ 14972, purity -0.63249654020071
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+6=11 samples) on frame 1 with decision: {1} A7 ⫺₇₀ 12267, purity -0.24576065938162073
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (30+26=56 samples) on frame 1 with decision: {1} A102 ⫺ 21739, purity -0.2865765359462302
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+19=37 samples) on frame 1 with decision: {1} A3 ⫺₇₀ 4152, purity -0.39331917283761847
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (46+68=114 samples) on frame 1 with decision: {1} A1 ⫹₆₀ 13168, purity -0.6142387402898914
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+4=18 samples) on frame 1 with decision: {1} A4 ⫹₇₀ 4528, purity -0.20013672042298003
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+5=26 samples) on frame 1 with decision: {1} A77 ⫹ 22492, purity -0.331247795540638
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (36+10=46 samples) on frame 1 with decision: {1} A3 ⫹₇₀ 12891, purity -0.3044126859908887
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+58=68 samples) on frame 1 with decision: {1} A65 ⫹ 21006, purity -0.5143536041490226
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A4 ⫺₇₀ 11434, purity -0.4952707831673061
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+16=21 samples) on frame 1 with decision: {1} A1 ⫹₈₀ 10671, purity -0.16024087309744198
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (32+26=58 samples) on frame 1 with decision: {1} A13 ⫹₇₀ 13773, purity -0.40261313936007875
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+13=26 samples) on frame 1 with decision: {1} A36 ⫺₈₀ 14922, purity -0.48476358215973825
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+9=13 samples) on frame 1 with decision: {1} A1 ⫹ 15834, purity -0.21327605555690624
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+4=13 samples) on frame 1 with decision: {1} A2 ⫹ 13079, purity -0.1730261983442487
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
406.011024 seconds (5.15 G allocations: 100.379 GiB, 11.55% gc time)
Train tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 10
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A95 ⫺₆₀ 16359)
✔ {1} A36 ⫹₇₀ 14962
│✔ {1} A58 ⫺ 3983
││✔ {1} A99 ⫺ 24434
│││✔ Meadows : 34/36 (conf: 0.9444444444444444)
│││✘ {1} A42 ⫹ 9770
│││ ✔ {1} A3 ⫺₇₀ 4152
│││ │✔ Meadows : 18/19 (conf: 0.9473684210526315)
│││ │✘ {1} A4 ⫹₇₀ 4528
│││ │ ✔ Meadows : 4/4 (conf: 1.0)
│││ │ ✘ Bare Soil : 13/14 (conf: 0.9285714285714286)
│││ ✘ {1} A102 ⫺ 21739
│││  ✔ {1} A77 ⫹ 22492
│││  │✔ Meadows : 5/5 (conf: 1.0)
│││  │✘ {1} A1 ⫹₈₀ 10671
│││  │ ✔ Bare Soil : 16/16 (conf: 1.0)
│││  │ ✘ Meadows : 3/5 (conf: 0.6)
│││  ✘ Bare Soil : 30/30 (conf: 1.0)
││✘ {1} A73 ⫺ 17568
││ ✔ {1} A4 ⫹₈₀ 5479
││ │✔ Meadows : 13/13 (conf: 1.0)
││ │✘ Trees : 5/5 (conf: 1.0)
││ ✘ Trees : 74/76 (conf: 0.9736842105263158)
│✘ {1} A3 ⫹₇₀ 22443
│ ✔ {1} A83 ⫹₇₀ 23652
│ │✔ {1} A15 ⫺₆₀ 14972
│ ││✔ Self-Blocking Bricks : 29/29 (conf: 1.0)
│ ││✘ {1} A1 ⫹₆₀ 13168
│ ││ ✔ {1} A65 ⫹ 21006
│ ││ │✔ {1} A13 ⫹₇₀ 13773
│ ││ ││✔ {1} A36 ⫺₈₀ 14922
│ ││ │││✔ {1} A2 ⫹ 13079
│ ││ ││││✔ Self-Blocking Bricks : 3/4 (conf: 0.75)
│ ││ ││││✘ Gravel : 9/9 (conf: 1.0)
│ ││ │││✘ {1} A1 ⫹ 15834
│ ││ │││ ✔ Self-Blocking Bricks : 9/9 (conf: 1.0)
│ ││ │││ ✘ Self-Blocking Bricks : 2/4 (conf: 0.5)
│ ││ ││✘ Self-Blocking Bricks : 32/32 (conf: 1.0)
│ ││ │✘ Gravel : 10/10 (conf: 1.0)
│ ││ ✘ {1} A3 ⫹₇₀ 12891
│ ││  ✔ {1} A4 ⫺₇₀ 11434
│ ││  │✔ Gravel : 5/6 (conf: 0.8333333333333334)
│ ││  │✘ Self-Blocking Bricks : 3/4 (conf: 0.75)
│ ││  ✘ Gravel : 35/36 (conf: 0.9722222222222222)
│ │✘ Bare Soil : 17/18 (conf: 0.9444444444444444)
│ ✘ Painted metal sheets : 80/80 (conf: 1.0)
✘ {1} A38 ⫺ 8313
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A68 ⫺₇₀ 13228)
 │✔ {1} A16 ⫹₆₀ 11732
 ││✔ {1} A3 ⫺₈₀ 8274
 │││✔ Gravel : 13/13 (conf: 1.0)
 │││✘ Gravel : 2/4 (conf: 0.5)
 ││✘ {1} A1 ⫹₇₀ 14407
 ││ ✔ Bitumen : 77/82 (conf: 0.9390243902439024)
 ││ ✘ {1} A7 ⫺₇₀ 12267
 ││  ✔ Gravel : 5/6 (conf: 0.8333333333333334)
 ││  ✘ Asphalt : 5/5 (conf: 1.0)
 │✘ Asphalt : 64/66 (conf: 0.9696969696969697)
 ✘ Shadows : 80/80 (conf: 1.0)
● [ 22/07/2021 01:26:18 ] Saving tree to file ./gandalf/trees/tree_8869bb14fd0a57055f27b37eac3ff83f025a11b1077e9a5e5cbfa59d5b2b90cf.jld...
Test tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 10
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A95 ⫺₆₀ 16359)
✔ {1} A36 ⫹₇₀ 14962
│✔ {1} A58 ⫺ 3983
││✔ {1} A99 ⫺ 24434
│││✔ Meadows : 9/12 (conf: 0.75)
│││✘ {1} A42 ⫹ 9770
│││ ✔ {1} A3 ⫺₇₀ 4152
│││ │✔ Meadows : 3/4 (conf: 0.75)
│││ │✘ {1} A4 ⫹₇₀ 4528
│││ │ ✔ Meadows : 2/2 (conf: 1.0)
│││ │ ✘ Bare Soil : 2/2 (conf: 1.0)
│││ ✘ {1} A102 ⫺ 21739
│││  ✔ {1} A77 ⫹ 22492
│││  │✔ Meadows : 1/1 (conf: 1.0)
│││  │✘ {1} A1 ⫹₈₀ 10671
│││  │ ✔ Bare Soil : 1/1 (conf: 1.0)
│││  │ ✘ Meadows : 0/2 (conf: 0.0)
│││  ✘ Bare Soil : 6/7 (conf: 0.8571428571428571)
││✘ {1} A73 ⫺ 17568
││ ✔ {1} A4 ⫹₈₀ 5479
││ │✔ Meadows : 3/3 (conf: 1.0)
││ │✘ Trees : 0/0 (conf: NaN)
││ ✘ Trees : 18/19 (conf: 0.9473684210526315)
│✘ {1} A3 ⫹₇₀ 22443
│ ✔ {1} A83 ⫹₇₀ 23652
│ │✔ {1} A15 ⫺₆₀ 14972
│ ││✔ Self-Blocking Bricks : 8/9 (conf: 0.8888888888888888)
│ ││✘ {1} A1 ⫹₆₀ 13168
│ ││ ✔ {1} A65 ⫹ 21006
│ ││ │✔ {1} A13 ⫹₇₀ 13773
│ ││ ││✔ {1} A36 ⫺₈₀ 14922
│ ││ │││✔ {1} A2 ⫹ 13079
│ ││ ││││✔ Self-Blocking Bricks : 0/0 (conf: NaN)
│ ││ ││││✘ Gravel : 0/0 (conf: NaN)
│ ││ │││✘ {1} A1 ⫹ 15834
│ ││ │││ ✔ Self-Blocking Bricks : 2/3 (conf: 0.6666666666666666)
│ ││ │││ ✘ Self-Blocking Bricks : 0/0 (conf: NaN)
│ ││ ││✘ Self-Blocking Bricks : 7/9 (conf: 0.7777777777777778)
│ ││ │✘ Gravel : 3/3 (conf: 1.0)
│ ││ ✘ {1} A3 ⫹₇₀ 12891
│ ││  ✔ {1} A4 ⫺₇₀ 11434
│ ││  │✔ Gravel : 2/2 (conf: 1.0)
│ ││  │✘ Self-Blocking Bricks : 0/0 (conf: NaN)
│ ││  ✘ Gravel : 6/10 (conf: 0.6)
│ │✘ Bare Soil : 6/7 (conf: 0.8571428571428571)
│ ✘ Painted metal sheets : 19/19 (conf: 1.0)
✘ {1} A38 ⫺ 8313
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A68 ⫺₇₀ 13228)
 │✔ {1} A16 ⫹₆₀ 11732
 ││✔ {1} A3 ⫺₈₀ 8274
 │││✔ Gravel : 1/2 (conf: 0.5)
 │││✘ Gravel : 0/1 (conf: 0.0)
 ││✘ {1} A1 ⫹₇₀ 14407
 ││ ✔ Bitumen : 16/20 (conf: 0.8)
 ││ ✘ {1} A7 ⫺₇₀ 12267
 ││  ✔ Gravel : 0/2 (conf: 0.0)
 ││  ✘ Asphalt : 0/2 (conf: 0.0)
 │✘ Asphalt : 16/18 (conf: 0.8888888888888888)
 ✘ Shadows : 20/20 (conf: 1.0)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Pavia	4	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	83.89%	80.0%	75.0%	80.0%	60.0%	90.0%	95.0%	85.0%	100.0%	90.0%	80.0%	88.24%	80.0%	60.0%	75.0%	100.0%	80.95%	100.0%	94.74%	||	81.88%	[80.0, 81.08, 80.0, 60.0, 81.82, 97.44, 82.93, 100.0, 92.31]%	|||	83.89%	97.99%	84.32%	97.99%	83.95%	
  accuracy: 83.89% kappa: 81.88% 
 16  0  2  2  0  0  0  0  0	80.0%		Asphalt
  0 15  0  0  5  0  0  0  0	75.0%		Bare Soil
  2  0 16  2  0  0  0  0  0	80.0%		Bitumen
  2  0  2 12  0  0  4  0  0	60.0%		Gravel
  0  1  0  0 18  0  0  0  1	90.0%		Meadows
  0  0  0  1  0 19  0  0  0	95.0%		Painted metal sheets
  0  0  0  3  0  0 17  0  0	85.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  1  0  0  1  0  0  0 18	90.0%		Trees

overall_acc:	0.8388888888888889
κ =		0.8187500000000001
sensitivities:	[0.8, 0.75, 0.8, 0.6, 0.9, 0.95, 0.85, 1.0, 0.9]
specificities:	[0.975, 0.9875, 0.975, 0.95, 0.9625, 1.0, 0.975, 1.0, 0.99375]
PPVs:		[0.8, 0.8823529411764706, 0.8, 0.6, 0.75, 1.0, 0.8095238095238095, 1.0, 0.9473684210526315]
NPVs:		[0.975, 0.9693251533742331, 0.975, 0.95, 0.9871794871794872, 0.9937888198757764, 0.9811320754716981, 1.0, 0.9875776397515528]
F1s:		[0.8, 0.8108108108108109, 0.8, 0.6, 0.8181818181818182, 0.9743589743589743, 0.8292682926829268, 1.0, 0.9230769230769231]
accuracies:	[0.9555555555555556, 0.9611111111111111, 0.9555555555555556, 0.9111111111111111, 0.9555555555555556, 0.9944444444444445, 0.9611111111111111, 1.0, 0.9833333333333333]
mean_accuracy:	0.9641975308641975
Dataset_slice = (900) -> [10, 116, 221, 307, 469, 514, 633, 738, 882, 12, 188, 231, 354, 401, 560, 622, 715, 890, 84, 193, 239, 362, 483, 542, 675, 754, 826, 52, 131, 230, 337, 491, 527, 664, 792, 833, 45, 175, 218, 385, 492, 523, 695, 788, 851, 87, 192, 265, 383, 486, 503, 657, 744, 817, 14, 190, 264, 381, 480, 580, 697, 760, 849, 20, 142, 242, 352, 422, 531, 678, 762, 850, 39, 159, 210, 355, 453, 561, 629, 766, 848, 9, 138, 279, 380, 488, 544, 665, 716, 819, 38, 119, 250, 391, 454, 541, 673, 782, 816, 43, 155, 289, 365, 495, 512, 669, 789, 853, 23, 187, 292, 316, 457, 600, 616, 783, 820, 92, 132, 205, 389, 403, 504, 607, 755, 875, 93, 113, 286, 356, 440, 519, 631, 771, 821, 51, 145, 296, 366, 418, 557, 699, 739, 843, 89, 158, 240, 368, 433, 584, 684, 756, 811, 67, 146, 259, 336, 449, 515, 693, 759, 892, 100, 176, 244, 372, 464, 534, 632, 711, 865, 71, 164, 283, 390, 460, 546, 656, 704, 802, 36, 128, 243, 325, 404, 567, 659, 710, 857, 19, 153, 236, 306, 412, 596, 615, 751, 827, 94, 126, 237, 400, 496, 537, 618, 736, 847, 68, 137, 260, 308, 466, 533, 658, 786, 803, 22, 120, 222, 360, 493, 517, 610, 798, 900, 21, 169, 214, 332, 445, 506, 660, 714, 831, 1, 136, 290, 397, 413, 554, 686, 725, 805, 5, 189, 238, 315, 414, 592, 642, 728, 863, 53, 148, 235, 318, 456, 505, 681, 772, 801, 46, 104, 300, 311, 497, 569, 691, 779, 870, 91, 179, 297, 303, 416, 572, 627, 799, 822, 3, 194, 248, 304, 408, 599, 617, 720, 823, 34, 108, 285, 335, 407, 502, 637, 749, 858, 41, 197, 247, 320, 437, 529, 620, 713, 899, 62, 167, 281, 384, 431, 579, 641, 707, 838, 75, 199, 272, 331, 411, 552, 612, 765, 830, 73, 129, 257, 317, 439, 564, 672, 741, 889, 97, 105, 209, 377, 420, 516, 690, 745, 842, 55, 161, 217, 324, 475, 508, 687, 784, 872, 80, 180, 298, 305, 430, 538, 653, 761, 846, 59, 173, 212, 328, 424, 536, 692, 712, 814, 63, 124, 206, 338, 438, 556, 680, 780, 877, 4, 112, 204, 394, 417, 553, 630, 702, 815, 54, 191, 220, 369, 435, 524, 670, 724, 841, 74, 182, 274, 359, 443, 543, 679, 769, 812, 95, 195, 234, 375, 470, 551, 608, 726, 844, 78, 117, 277, 312, 487, 521, 689, 795, 809, 96, 107, 226, 321, 451, 522, 638, 757, 887, 99, 184, 255, 392, 410, 597, 655, 719, 879, 16, 178, 232, 347, 423, 571, 700, 787, 824, 72, 106, 249, 346, 479, 568, 639, 733, 896, 90, 162, 295, 326, 406, 588, 604, 763, 891, 60, 121, 288, 313, 471, 558, 652, 796, 861, 44, 122, 219, 393, 434, 555, 651, 718, 808, 18, 115, 275, 327, 402, 562, 676, 797, 852, 25, 109, 299, 358, 473, 587, 677, 732, 860, 32, 125, 252, 334, 429, 548, 654, 777, 818, 77, 147, 211, 343, 459, 595, 674, 747, 886, 28, 200, 251, 363, 444, 539, 625, 740, 837, 24, 133, 284, 322, 481, 525, 645, 785, 856, 76, 130, 213, 357, 432, 578, 647, 776, 806, 17, 101, 293, 344, 499, 582, 623, 774, 898, 65, 114, 227, 314, 442, 511, 614, 742, 880, 31, 183, 203, 349, 482, 513, 663, 743, 878, 30, 149, 291, 373, 450, 535, 635, 717, 884, 50, 141, 225, 310, 500, 590, 611, 767, 813, 85, 139, 233, 341, 468, 507, 682, 727, 895, 26, 165, 258, 333, 447, 509, 628, 737, 807, 33, 144, 270, 378, 462, 598, 698, 708, 873, 37, 123, 269, 398, 441, 545, 650, 770, 834, 64, 110, 215, 345, 474, 570, 643, 703, 893, 56, 177, 266, 329, 425, 589, 609, 706, 888, 27, 170, 246, 350, 472, 520, 605, 701, 876, 49, 118, 268, 376, 465, 576, 661, 752, 869, 57, 196, 262, 351, 476, 577, 640, 735, 864, 69, 174, 245, 388, 428, 518, 636, 768, 894, 70, 154, 224, 399, 455, 540, 667, 758, 810, 8, 198, 253, 370, 494, 573, 613, 781, 836, 83, 181, 208, 340, 478, 594, 648, 750, 804, 15, 186, 254, 309, 458, 547, 696, 753, 854, 98, 102, 267, 323, 490, 565, 646, 794, 897, 11, 171, 223, 386, 498, 575, 621, 764, 874, 7, 150, 261, 339, 477, 549, 606, 729, 839, 29, 151, 278, 364, 463, 510, 694, 723, 855, 2, 156, 273, 342, 426, 559, 688, 773, 883, 48, 143, 263, 301, 467, 563, 603, 775, 835, 61, 185, 256, 367, 461, 574, 685, 793, 868, 82, 152, 202, 330, 436, 530, 644, 730, 829, 6, 160, 280, 348, 485, 585, 666, 721, 825, 81, 168, 207, 396, 421, 526, 662, 790, 867, 79, 166, 276, 353, 419, 591, 624, 800, 845, 88, 140, 294, 361, 415, 583, 626, 734, 862, 35, 111, 229, 382, 489, 581, 634, 731, 832, 13, 103, 201, 302, 427, 532, 683, 748, 881, 66, 127, 287, 395, 452, 501, 602, 709, 866, 47, 135, 271, 387, 446, 566, 619, 791, 885, 42, 157, 241, 374, 448, 528, 649, 746, 828, 40, 163, 282, 319, 484, 593, 668, 778, 859, 86, 172, 228, 371, 405, 586, 671, 705, 840, 58, 134, 216, 379, 409, 550, 601, 722, 871]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2877.69 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	2673.39 MBs	(shape (3, 4, 3, 4, 720, 1030, 7), 722492470 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 01:26:24 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (290+430=720 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A16 ⫺₇₀ 7689), purity -1.635052538837371
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+209=290 samples) on frame 1 with decision: {1} A81 ⫺ 15923, purity -0.8177134438200219
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (167+263=430 samples) on frame 1 with decision: {1} A103 ⫺₆₀ 15873, purity -1.2609297178621544
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (65+102=167 samples) on frame 1 with decision: {1} A68 ⫺₇₀ 13129, purity -0.49629909746285183
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (108+101=209 samples) on frame 1 with decision: {1} ⟨EC⟩ (A66 ⫹ 5886), purity -0.629041305414102
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+183=263 samples) on frame 1 with decision: {1} A1 ⫹₇₀ 22076, purity -0.8614083579653367
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+18=102 samples) on frame 1 with decision: {1} A17 ⫹₈₀ 12534, purity -0.38960161496196977
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (89+19=108 samples) on frame 1 with decision: {1} ⟨EC⟩ (A33 ⫺ 12514), purity -0.5885552333480697
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (149+34=183 samples) on frame 1 with decision: {1} A94 ⫺₆₀ 21898, purity -0.8155400103353035
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+74=101 samples) on frame 1 with decision: {1} ⟨DC⟩ (A71 ⫹ 12584), purity -0.25348796446879757
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+77=84 samples) on frame 1 with decision: {1} A2 ⫹₈₀ 15219, purity -0.14318074831857514
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+8=27 samples) on frame 1 with decision: {1} A40 ⫺ 6599, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+12=18 samples) on frame 1 with decision: {1} A9 ⫹₈₀ 11563, purity 7.401486830834377e-17
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (35+54=89 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A101 ⫹₆₀ 25118), purity -0.450956848557545
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (110+39=149 samples) on frame 1 with decision: {1} A16 ⫺₆₀ 14853, purity -0.7113689873532519
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+6=34 samples) on frame 1 with decision: {1} A92 ⫹ 23860, purity -0.20639700458784233
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (29+25=54 samples) on frame 1 with decision: {1} A83 ⫹₆₀ 20283, purity -0.4688327528584355
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (32+78=110 samples) on frame 1 with decision: {1} A4 ⫹₇₀ 13803, purity -0.6869822996672036
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+35=39 samples) on frame 1 with decision: {1} A1 ⫹₇₀ 15735, purity -0.10663802777845312
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+15=25 samples) on frame 1 with decision: {1} A5 ⫺₇₀ 4934, purity -0.20016096941527534
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+24=29 samples) on frame 1 with decision: {1} A3 ⫺ 1714, purity -0.11603649431194075
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (32+46=78 samples) on frame 1 with decision: {1} A13 ⫹₇₀ 13822, purity -0.7578183042850127
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A1 ⫺₈₀ 4845, purity -0.277258872223978
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+27=32 samples) on frame 1 with decision: {1} A30 ⫹₇₀ 17875, purity -0.13365891854869832
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+36=46 samples) on frame 1 with decision: {1} A3 ⫺ 7838, purity -0.5744938999054999
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+17=36 samples) on frame 1 with decision: {1} A4 ⫹ 13624, purity -0.498242430801859
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+7=17 samples) on frame 1 with decision: {1} A25 ⫺₇₀ 14397, purity -0.6422355170699626
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A3 ⫹ 13357, purity 1.3322676295501878e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
652.346408 seconds (6.46 G allocations: 203.002 GiB, 18.76% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 29
Tot nodes: 57
Height: 11
Modal height:  4
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A16 ⫺₇₀ 7689)
✔ {1} A103 ⫺₆₀ 15873
│✔ {1} A1 ⫹₇₀ 22076
││✔ {1} A94 ⫺₆₀ 21898
│││✔ {1} A92 ⫹ 23860
││││✔ Meadows : 5/6 (conf: 0.8333333333333334)
││││✘ Bare Soil : 27/28 (conf: 0.9642857142857143)
│││✘ {1} A16 ⫺₆₀ 14853
│││ ✔ {1} A1 ⫹₇₀ 15735
│││ │✔ Self-Blocking Bricks : 35/35 (conf: 1.0)
│││ │✘ Gravel : 2/4 (conf: 0.5)
│││ ✘ {1} A4 ⫹₇₀ 13803
│││  ✔ {1} A13 ⫹₇₀ 13822
│││  │✔ {1} A3 ⫺ 7838
│││  ││✔ {1} A4 ⫹ 13624
│││  │││✔ {1} A25 ⫺₇₀ 14397
│││  ││││✔ Self-Blocking Bricks : 5/7 (conf: 0.7142857142857143)
│││  ││││✘ {1} A3 ⫹ 13357
│││  ││││ ✔ Gravel : 6/6 (conf: 1.0)
│││  ││││ ✘ Asphalt : 4/4 (conf: 1.0)
│││  │││✘ Gravel : 19/19 (conf: 1.0)
│││  ││✘ Self-Blocking Bricks : 10/10 (conf: 1.0)
│││  │✘ {1} A30 ⫹₇₀ 17875
│││  │ ✔ Self-Blocking Bricks : 26/27 (conf: 0.9629629629629629)
│││  │ ✘ Gravel : 5/5 (conf: 1.0)
│││  ✘ Gravel : 31/32 (conf: 0.96875)
││✘ Painted metal sheets : 80/80 (conf: 1.0)
│✘ {1} A68 ⫺₇₀ 13129
│ ✔ {1} A17 ⫹₈₀ 12534
│ │✔ {1} A9 ⫹₈₀ 11563
│ ││✔ Gravel : 12/12 (conf: 1.0)
│ ││✘ Asphalt : 6/6 (conf: 1.0)
│ │✘ {1} A2 ⫹₈₀ 15219
│ │ ✔ Bitumen : 76/77 (conf: 0.987012987012987)
│ │ ✘ Asphalt : 4/7 (conf: 0.5714285714285714)
│ ✘ Asphalt : 63/65 (conf: 0.9692307692307692)
✘ {1} A81 ⫺ 15923
 ✔ {1} ⟨EC⟩ (A66 ⫹ 5886)
 │✔ {1} ⟨DC⟩ (A71 ⫹ 12584)
 ││✔ Trees : 72/74 (conf: 0.972972972972973)
 ││✘ {1} A40 ⫺ 6599
 ││ ✔ Trees : 8/8 (conf: 1.0)
 ││ ✘ Meadows : 19/19 (conf: 1.0)
 │✘ {1} ⟨EC⟩ (A33 ⫺ 12514)
 │ ✔ Bare Soil : 18/19 (conf: 0.9473684210526315)
 │ ✘ {1} ⟨N̅T̅P̅P̅⟩ (A101 ⫹₆₀ 25118)
 │  ✔ {1} A83 ⫹₆₀ 20283
 │  │✔ {1} A5 ⫺₇₀ 4934
 │  ││✔ Meadows : 15/15 (conf: 1.0)
 │  ││✘ {1} A1 ⫺₈₀ 4845
 │  ││ ✔ Bare Soil : 2/4 (conf: 0.5)
 │  ││ ✘ Bare Soil : 6/6 (conf: 1.0)
 │  │✘ {1} A3 ⫺ 1714
 │  │ ✔ Bare Soil : 24/24 (conf: 1.0)
 │  │ ✘ Meadows : 3/5 (conf: 0.6)
 │  ✘ Meadows : 34/35 (conf: 0.9714285714285714)
 ✘ Shadows : 80/81 (conf: 0.9876543209876543)
● [ 22/07/2021 01:37:17 ] Saving tree to file ./gandalf/trees/tree_b60484b2e113053d66dc4ddb5ff2ce8492d4428ea6b12c4e9024d20756557230.jld...
Test tree:
Decision Tree
Leaves: 29
Tot nodes: 57
Height: 11
Modal height:  4
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A16 ⫺₇₀ 7689)
✔ {1} A103 ⫺₆₀ 15873
│✔ {1} A1 ⫹₇₀ 22076
││✔ {1} A94 ⫺₆₀ 21898
│││✔ {1} A92 ⫹ 23860
││││✔ Meadows : 0/0 (conf: NaN)
││││✘ Bare Soil : 5/8 (conf: 0.625)
│││✘ {1} A16 ⫺₆₀ 14853
│││ ✔ {1} A1 ⫹₇₀ 15735
│││ │✔ Self-Blocking Bricks : 7/8 (conf: 0.875)
│││ │✘ Gravel : 0/3 (conf: 0.0)
│││ ✘ {1} A4 ⫹₇₀ 13803
│││  ✔ {1} A13 ⫹₇₀ 13822
│││  │✔ {1} A3 ⫺ 7838
│││  ││✔ {1} A4 ⫹ 13624
│││  │││✔ {1} A25 ⫺₇₀ 14397
│││  ││││✔ Self-Blocking Bricks : 1/2 (conf: 0.5)
│││  ││││✘ {1} A3 ⫹ 13357
│││  ││││ ✔ Gravel : 1/1 (conf: 1.0)
│││  ││││ ✘ Asphalt : 0/3 (conf: 0.0)
│││  │││✘ Gravel : 6/8 (conf: 0.75)
│││  ││✘ Self-Blocking Bricks : 2/3 (conf: 0.6666666666666666)
│││  │✘ {1} A30 ⫹₇₀ 17875
│││  │ ✔ Self-Blocking Bricks : 3/5 (conf: 0.6)
│││  │ ✘ Gravel : 1/1 (conf: 1.0)
│││  ✘ Gravel : 2/4 (conf: 0.5)
││✘ Painted metal sheets : 19/19 (conf: 1.0)
│✘ {1} A68 ⫺₇₀ 13129
│ ✔ {1} A17 ⫹₈₀ 12534
│ │✔ {1} A9 ⫹₈₀ 11563
│ ││✔ Gravel : 4/5 (conf: 0.8)
│ ││✘ Asphalt : 0/0 (conf: NaN)
│ │✘ {1} A2 ⫹₈₀ 15219
│ │ ✔ Bitumen : 18/22 (conf: 0.8181818181818182)
│ │ ✘ Asphalt : 0/0 (conf: NaN)
│ ✘ Asphalt : 15/16 (conf: 0.9375)
✘ {1} A81 ⫺ 15923
 ✔ {1} ⟨EC⟩ (A66 ⫹ 5886)
 │✔ {1} ⟨DC⟩ (A71 ⫹ 12584)
 ││✔ Trees : 19/21 (conf: 0.9047619047619048)
 ││✘ {1} A40 ⫺ 6599
 ││ ✔ Trees : 0/1 (conf: 0.0)
 ││ ✘ Meadows : 4/5 (conf: 0.8)
 │✘ {1} ⟨EC⟩ (A33 ⫺ 12514)
 │ ✔ Bare Soil : 4/4 (conf: 1.0)
 │ ✘ {1} ⟨N̅T̅P̅P̅⟩ (A101 ⫹₆₀ 25118)
 │  ✔ {1} A83 ⫹₆₀ 20283
 │  │✔ {1} A5 ⫺₇₀ 4934
 │  ││✔ Meadows : 4/7 (conf: 0.5714285714285714)
 │  ││✘ {1} A1 ⫺₈₀ 4845
 │  ││ ✔ Bare Soil : 1/2 (conf: 0.5)
 │  ││ ✘ Bare Soil : 0/0 (conf: NaN)
 │  │✘ {1} A3 ⫺ 1714
 │  │ ✔ Bare Soil : 3/3 (conf: 1.0)
 │  │ ✘ Meadows : 0/2 (conf: 0.0)
 │  ✘ Meadows : 5/6 (conf: 0.8333333333333334)
 ✘ Shadows : 19/21 (conf: 0.9047619047619048)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Pavia	5	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	79.44%	75.0%	65.0%	90.0%	70.0%	65.0%	95.0%	65.0%	95.0%	95.0%	78.95%	76.47%	81.82%	63.64%	65.0%	100.0%	72.22%	90.48%	86.36%	||	76.88%	[76.92, 70.27, 85.71, 66.67, 65.0, 97.44, 68.42, 92.68, 90.48]%	|||	79.44%	97.43%	79.44%	97.44%	79.29%	
  accuracy: 79.44% kappa: 76.88% 
 15  0  4  0  0  0  0  1  0	75.0%		Asphalt
  0 13  0  0  6  0  1  0  0	65.0%		Bare Soil
  0  0 18  1  0  0  0  1  0	90.0%		Bitumen
  2  0  0 14  0  0  4  0  0	70.0%		Gravel
  0  4  0  0 13  0  0  0  3	65.0%		Meadows
  0  0  0  1  0 19  0  0  0	95.0%		Painted metal sheets
  1  0  0  6  0  0 13  0  0	65.0%		Self-Blocking Bricks
  1  0  0  0  0  0  0 19  0	95.0%		Shadows
  0  0  0  0  1  0  0  0 19	95.0%		Trees

overall_acc:	0.7944444444444444
κ =		0.76875
sensitivities:	[0.75, 0.65, 0.9, 0.7, 0.65, 0.95, 0.65, 0.95, 0.95]
specificities:	[0.975, 0.975, 0.975, 0.95, 0.95625, 1.0, 0.96875, 0.9875, 0.98125]
PPVs:		[0.7894736842105263, 0.7647058823529411, 0.8181818181818182, 0.6363636363636364, 0.65, 1.0, 0.7222222222222222, 0.9047619047619048, 0.8636363636363636]
NPVs:		[0.968944099378882, 0.9570552147239264, 0.9873417721518988, 0.9620253164556962, 0.95625, 0.9937888198757764, 0.9567901234567902, 0.9937106918238994, 0.9936708860759493]
F1s:		[0.7692307692307693, 0.7027027027027027, 0.8571428571428571, 0.6666666666666666, 0.65, 0.9743589743589743, 0.6842105263157895, 0.926829268292683, 0.9047619047619048]
accuracies:	[0.95, 0.9388888888888889, 0.9666666666666667, 0.9222222222222223, 0.9222222222222223, 0.9944444444444445, 0.9333333333333333, 0.9833333333333333, 0.9777777777777777]
mean_accuracy:	0.9543209876543209
Dataset_slice = (900) -> [68, 113, 288, 329, 406, 554, 655, 710, 862, 53, 120, 291, 341, 461, 505, 698, 752, 882, 72, 123, 234, 372, 472, 560, 663, 709, 872, 28, 128, 298, 379, 479, 553, 632, 745, 818, 84, 172, 287, 311, 466, 538, 673, 773, 871, 96, 182, 229, 309, 491, 516, 668, 708, 899, 91, 200, 222, 382, 418, 508, 627, 753, 877, 42, 156, 226, 342, 429, 562, 694, 750, 801, 33, 167, 204, 385, 498, 502, 635, 701, 823, 4, 158, 259, 316, 486, 511, 631, 765, 806, 63, 102, 220, 354, 496, 551, 700, 717, 851, 21, 101, 266, 327, 485, 570, 662, 742, 859, 79, 179, 270, 393, 404, 537, 693, 725, 900, 15, 151, 214, 332, 454, 532, 612, 732, 838, 22, 115, 217, 375, 468, 578, 615, 748, 805, 51, 118, 235, 378, 469, 525, 681, 784, 810, 32, 153, 232, 352, 470, 506, 646, 729, 893, 70, 160, 244, 373, 464, 595, 640, 743, 873, 66, 138, 250, 380, 437, 514, 609, 751, 830, 99, 176, 277, 338, 417, 547, 664, 798, 814, 40, 168, 258, 305, 482, 577, 622, 779, 844, 64, 196, 240, 363, 477, 521, 613, 724, 811, 19, 150, 282, 347, 401, 529, 671, 723, 876, 73, 140, 201, 337, 489, 550, 611, 707, 822, 18, 186, 215, 304, 492, 581, 624, 711, 847, 80, 106, 289, 353, 425, 585, 676, 799, 809, 60, 170, 223, 330, 416, 515, 606, 781, 807, 3, 144, 290, 392, 435, 530, 660, 769, 896, 87, 124, 286, 384, 483, 534, 638, 746, 835, 43, 131, 284, 346, 420, 552, 621, 737, 868, 9, 143, 253, 361, 421, 531, 661, 764, 804, 20, 162, 261, 308, 438, 513, 658, 712, 870, 1, 110, 254, 343, 484, 543, 601, 758, 808, 62, 174, 252, 349, 443, 567, 649, 714, 834, 45, 135, 205, 339, 436, 510, 683, 791, 856, 30, 134, 238, 367, 473, 539, 628, 728, 890, 76, 148, 275, 325, 474, 544, 618, 722, 866, 37, 173, 280, 359, 407, 557, 691, 747, 803, 38, 137, 297, 377, 427, 535, 678, 793, 812, 23, 166, 233, 399, 453, 523, 656, 726, 855, 57, 132, 260, 365, 442, 526, 680, 727, 865, 75, 108, 264, 333, 451, 563, 636, 738, 854, 35, 145, 202, 312, 411, 573, 686, 749, 869, 55, 159, 269, 340, 460, 566, 688, 718, 864, 50, 164, 225, 344, 500, 579, 645, 731, 821, 95, 103, 300, 395, 452, 527, 641, 713, 842, 61, 155, 212, 386, 471, 600, 603, 736, 816, 82, 105, 228, 387, 446, 518, 659, 716, 817, 12, 161, 216, 383, 493, 575, 651, 721, 853, 74, 112, 206, 381, 444, 509, 654, 794, 819, 94, 180, 230, 390, 423, 504, 604, 740, 813, 49, 109, 293, 336, 409, 555, 633, 797, 825, 6, 184, 221, 324, 456, 549, 684, 756, 858, 24, 187, 241, 345, 495, 546, 625, 766, 826, 90, 114, 265, 364, 449, 558, 620, 786, 860, 93, 121, 251, 351, 412, 556, 695, 788, 874, 14, 177, 272, 358, 467, 587, 677, 703, 839, 47, 169, 239, 400, 431, 533, 643, 792, 846, 89, 194, 263, 391, 445, 528, 642, 777, 892, 81, 147, 211, 369, 403, 522, 607, 734, 848, 39, 127, 242, 397, 405, 571, 674, 780, 887, 11, 195, 208, 334, 459, 569, 614, 770, 827, 58, 192, 207, 319, 490, 599, 644, 787, 880, 92, 199, 209, 388, 487, 572, 667, 772, 867, 52, 104, 203, 396, 439, 576, 637, 795, 881, 59, 188, 227, 348, 441, 540, 657, 774, 841, 48, 193, 237, 315, 402, 542, 610, 739, 802, 7, 122, 283, 317, 457, 598, 608, 735, 857, 54, 141, 246, 303, 488, 561, 616, 757, 878, 17, 126, 285, 389, 478, 512, 687, 767, 824, 56, 171, 248, 398, 434, 517, 690, 800, 879, 97, 133, 271, 318, 481, 541, 679, 715, 875, 29, 189, 245, 322, 440, 589, 669, 705, 843, 34, 163, 296, 356, 450, 596, 692, 762, 886, 77, 185, 292, 328, 414, 584, 630, 754, 833, 46, 107, 236, 326, 419, 565, 619, 730, 852, 71, 116, 257, 394, 465, 507, 648, 776, 820, 31, 183, 247, 366, 494, 594, 602, 720, 891, 26, 198, 279, 357, 410, 564, 634, 778, 888, 25, 190, 224, 355, 455, 524, 653, 790, 863, 65, 178, 231, 313, 499, 536, 672, 719, 845, 83, 146, 219, 350, 480, 591, 665, 706, 832, 2, 152, 267, 320, 415, 574, 605, 704, 895, 8, 154, 295, 376, 408, 586, 647, 771, 898, 27, 157, 276, 321, 463, 592, 699, 768, 850, 85, 181, 268, 362, 458, 588, 689, 783, 829, 86, 125, 278, 331, 424, 580, 682, 782, 849, 36, 111, 243, 307, 432, 582, 685, 702, 884, 78, 117, 299, 306, 413, 548, 626, 789, 828, 44, 197, 210, 335, 497, 519, 666, 755, 815, 10, 175, 273, 314, 476, 501, 629, 785, 840, 98, 191, 256, 302, 428, 597, 650, 760, 889, 69, 139, 274, 374, 422, 520, 652, 744, 897, 67, 165, 281, 360, 426, 559, 639, 759, 831, 16, 149, 249, 310, 462, 590, 696, 775, 894, 13, 129, 255, 368, 447, 583, 670, 741, 861, 5, 136, 213, 370, 448, 593, 617, 763, 883, 41, 142, 218, 301, 433, 545, 697, 761, 836, 88, 130, 262, 323, 475, 568, 623, 796, 885, 100, 119, 294, 371, 430, 503, 675, 733, 837]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2877.69 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	2673.39 MBs	(shape (3, 4, 3, 4, 720, 1030, 7), 720863010 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 01:37:24 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (465+255=720 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A103 ⫹₆₀ 16329), purity -1.6356952290477027
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+175=255 samples) on frame 1 with decision: {1} A19 ⫺₈₀ 4934, purity -0.6648986693192211
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (241+224=465 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A36 ⫹₆₀ 14605), purity -1.2288350273154987
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (66+109=175 samples) on frame 1 with decision: {1} A69 ⫺₇₀ 13178, purity -0.5677386557530301
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (98+126=224 samples) on frame 1 with decision: {1} A64 ⫺ 4231, purity -0.6214718354200832
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (161+80=241 samples) on frame 1 with decision: {1} ⟨EC⟩ (A1 ⫺ 24880), purity -0.6978153276424344
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+17=98 samples) on frame 1 with decision: {1} A73 ⫺ 17568, purity -0.19376362910181372
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+93=109 samples) on frame 1 with decision: {1} ⟨NTPP⟩ (A14 ⫺ 11018), purity -0.5441344056450769
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (90+36=126 samples) on frame 1 with decision: {1} A99 ⫺ 24514, purity -0.5133527198976331
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (144+17=161 samples) on frame 1 with decision: {1} A94 ⫺ 25108, purity -0.7073610756970684
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+12=16 samples) on frame 1 with decision: {1} A2 ⫹₈₀ 14090, purity -0.17328679513998632
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+13=17 samples) on frame 1 with decision: {1} A1 ⫹ 11038, purity -0.1630934542493989
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (61+29=90 samples) on frame 1 with decision: {1} A83 ⫹ 21967, purity -0.4759799713533691
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+83=93 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A102 ⫹₈₀ 16379), purity -0.3039818582699807
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (116+28=144 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A13 ⫺₆₀ 14675), purity -0.6690875767606546
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A29 ⫺ 13862, purity 1.3322676295501878e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+16=29 samples) on frame 1 with decision: {1} A85 ⫺ 18390, purity -0.3849528230717838
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (57+4=61 samples) on frame 1 with decision: {1} A4 ⫹₇₀ 4389, purity -0.19267126042777416
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (90+26=116 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A1 ⫺₆₀ 12703), purity -0.6553775199328397
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+8=13 samples) on frame 1 with decision: {1} A83 ⫺₇₀ 17162, purity -0.19246247059161073
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+12=90 samples) on frame 1 with decision: {1} ⟨EC⟩ (A75 ⫹ 15963), purity -0.6711391454473469
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (35+43=78 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A14 ⫹₈₀ 14278), purity -0.5218642694622161
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+4=12 samples) on frame 1 with decision: {1} A3 ⫺ 11355, purity -0.18744504820626942
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (30+5=35 samples) on frame 1 with decision: {1} ⟨EC⟩ (A25 ⫺ 18212), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+21=43 samples) on frame 1 with decision: {1} A35 ⫹₈₀ 17716, purity -0.3245371444593768
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+12=21 samples) on frame 1 with decision: {1} A82 ⫺₆₀ 17944, purity -0.1494994696470138
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A1 ⫺ 7332, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
463.488378 seconds (5.71 G allocations: 128.440 GiB, 14.46% gc time, 0.01% compilation time)
Train tree:
Decision Tree
Leaves: 28
Tot nodes: 55
Height: 11
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A103 ⫹₆₀ 16329)
✔ {1} A19 ⫺₈₀ 4934
│✔ {1} A69 ⫺₇₀ 13178
││✔ {1} ⟨NTPP⟩ (A14 ⫺ 11018)
│││✔ {1} ⟨N̅T̅P̅P̅⟩ (A102 ⫹₈₀ 16379)
││││✔ Bitumen : 77/83 (conf: 0.927710843373494)
││││✘ {1} A29 ⫺ 13862
││││ ✔ Gravel : 6/6 (conf: 1.0)
││││ ✘ Asphalt : 4/4 (conf: 1.0)
│││✘ {1} A2 ⫹₈₀ 14090
│││ ✔ Gravel : 12/12 (conf: 1.0)
│││ ✘ Gravel : 2/4 (conf: 0.5)
││✘ Asphalt : 63/66 (conf: 0.9545454545454546)
│✘ Shadows : 80/80 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A36 ⫹₆₀ 14605)
 ✔ {1} A64 ⫺ 4231
 │✔ {1} A99 ⫺ 24514
 ││✔ Meadows : 35/36 (conf: 0.9722222222222222)
 ││✘ {1} A83 ⫹ 21967
 ││ ✔ {1} A85 ⫺ 18390
 ││ │✔ Meadows : 16/16 (conf: 1.0)
 ││ │✘ {1} A83 ⫺₇₀ 17162
 ││ │ ✔ Bare Soil : 8/8 (conf: 1.0)
 ││ │ ✘ Meadows : 4/5 (conf: 0.8)
 ││ ✘ {1} A4 ⫹₇₀ 4389
 ││  ✔ Meadows : 4/4 (conf: 1.0)
 ││  ✘ Bare Soil : 54/57 (conf: 0.9473684210526315)
 │✘ {1} A73 ⫺ 17568
 │ ✔ {1} A1 ⫹ 11038
 │ │✔ Meadows : 13/13 (conf: 1.0)
 │ │✘ Trees : 2/4 (conf: 0.5)
 │ ✘ Trees : 78/81 (conf: 0.9629629629629629)
 ✘ {1} ⟨EC⟩ (A1 ⫺ 24880)
  ✔ Painted metal sheets : 80/80 (conf: 1.0)
  ✘ {1} A94 ⫺ 25108
   ✔ Bare Soil : 17/17 (conf: 1.0)
   ✘ {1} ⟨N̅T̅P̅P̅⟩ (A13 ⫺₆₀ 14675)
    ✔ Self-Blocking Bricks : 27/28 (conf: 0.9642857142857143)
    ✘ {1} ⟨N̅T̅P̅P̅⟩ (A1 ⫺₆₀ 12703)
     ✔ Gravel : 25/26 (conf: 0.9615384615384616)
     ✘ {1} ⟨EC⟩ (A75 ⫹ 15963)
      ✔ {1} A3 ⫺ 11355
      │✔ Asphalt : 3/4 (conf: 0.75)
      │✘ Self-Blocking Bricks : 8/8 (conf: 1.0)
      ✘ {1} ⟨N̅T̅P̅P̅⟩ (A14 ⫹₈₀ 14278)
       ✔ {1} A35 ⫹₈₀ 17716
       │✔ {1} A82 ⫺₆₀ 17944
       ││✔ Self-Blocking Bricks : 12/12 (conf: 1.0)
       ││✘ {1} A1 ⫺ 7332
       ││ ✔ Gravel : 3/4 (conf: 0.75)
       ││ ✘ Gravel : 5/5 (conf: 1.0)
       │✘ Gravel : 22/22 (conf: 1.0)
       ✘ {1} ⟨EC⟩ (A25 ⫺ 18212)
        ✔ Gravel : 5/5 (conf: 1.0)
        ✘ Self-Blocking Bricks : 30/30 (conf: 1.0)
● [ 22/07/2021 01:45:07 ] Saving tree to file ./gandalf/trees/tree_4c1e02934e5cc94844c26fd3b8546708f1d0c18291fd69032ca3f7359801a725.jld...
Test tree:
Decision Tree
Leaves: 28
Tot nodes: 55
Height: 11
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A103 ⫹₆₀ 16329)
✔ {1} A19 ⫺₈₀ 4934
│✔ {1} A69 ⫺₇₀ 13178
││✔ {1} ⟨NTPP⟩ (A14 ⫺ 11018)
│││✔ {1} ⟨N̅T̅P̅P̅⟩ (A102 ⫹₈₀ 16379)
││││✔ Bitumen : 17/21 (conf: 0.8095238095238095)
││││✘ {1} A29 ⫺ 13862
││││ ✔ Gravel : 1/3 (conf: 0.3333333333333333)
││││ ✘ Asphalt : 0/1 (conf: 0.0)
│││✘ {1} A2 ⫹₈₀ 14090
│││ ✔ Gravel : 3/4 (conf: 0.75)
│││ ✘ Gravel : 0/0 (conf: NaN)
││✘ Asphalt : 15/15 (conf: 1.0)
│✘ Shadows : 20/20 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A36 ⫹₆₀ 14605)
 ✔ {1} A64 ⫺ 4231
 │✔ {1} A99 ⫺ 24514
 ││✔ Meadows : 5/8 (conf: 0.625)
 ││✘ {1} A83 ⫹ 21967
 ││ ✔ {1} A85 ⫺ 18390
 ││ │✔ Meadows : 7/7 (conf: 1.0)
 ││ │✘ {1} A83 ⫺₇₀ 17162
 ││ │ ✔ Bare Soil : 6/6 (conf: 1.0)
 ││ │ ✘ Meadows : 0/1 (conf: 0.0)
 ││ ✘ {1} A4 ⫹₇₀ 4389
 ││  ✔ Meadows : 0/0 (conf: NaN)
 ││  ✘ Bare Soil : 6/13 (conf: 0.46153846153846156)
 │✘ {1} A73 ⫺ 17568
 │ ✔ {1} A1 ⫹ 11038
 │ │✔ Meadows : 1/3 (conf: 0.3333333333333333)
 │ │✘ Trees : 1/2 (conf: 0.5)
 │ ✘ Trees : 16/17 (conf: 0.9411764705882353)
 ✘ {1} ⟨EC⟩ (A1 ⫺ 24880)
  ✔ Painted metal sheets : 19/20 (conf: 0.95)
  ✘ {1} A94 ⫺ 25108
   ✔ Bare Soil : 2/2 (conf: 1.0)
   ✘ {1} ⟨N̅T̅P̅P̅⟩ (A13 ⫺₆₀ 14675)
    ✔ Self-Blocking Bricks : 6/7 (conf: 0.8571428571428571)
    ✘ {1} ⟨N̅T̅P̅P̅⟩ (A1 ⫺₆₀ 12703)
     ✔ Gravel : 6/6 (conf: 1.0)
     ✘ {1} ⟨EC⟩ (A75 ⫹ 15963)
      ✔ {1} A3 ⫺ 11355
      │✔ Asphalt : 0/1 (conf: 0.0)
      │✘ Self-Blocking Bricks : 2/2 (conf: 1.0)
      ✘ {1} ⟨N̅T̅P̅P̅⟩ (A14 ⫹₈₀ 14278)
       ✔ {1} A35 ⫹₈₀ 17716
       │✔ {1} A82 ⫺₆₀ 17944
       ││✔ Self-Blocking Bricks : 0/2 (conf: 0.0)
       ││✘ {1} A1 ⫺ 7332
       ││ ✔ Gravel : 0/1 (conf: 0.0)
       ││ ✘ Gravel : 2/2 (conf: 1.0)
       │✘ Gravel : 4/4 (conf: 1.0)
       ✘ {1} ⟨EC⟩ (A25 ⫺ 18212)
        ✔ Gravel : 0/2 (conf: 0.0)
        ✘ Self-Blocking Bricks : 7/10 (conf: 0.7)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Pavia	6	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	81.11%	75.0%	70.0%	85.0%	80.0%	65.0%	95.0%	75.0%	100.0%	85.0%	88.24%	66.67%	80.95%	72.73%	68.42%	95.0%	71.43%	100.0%	89.47%	||	78.75%	[81.08, 68.29, 82.93, 76.19, 66.67, 95.0, 73.17, 100.0, 87.18]%	|||	81.11%	97.64%	81.43%	97.64%	81.17%	
  accuracy: 81.11% kappa: 78.75% 
 15  1  3  0  0  0  1  0  0	75.0%		Asphalt
  0 14  0  0  4  1  1  0  0	70.0%		Bare Soil
  1  0 17  2  0  0  0  0  0	85.0%		Bitumen
  0  0  1 16  0  0  3  0  0	80.0%		Gravel
  0  5  0  0 13  0  0  0  2	65.0%		Meadows
  0  0  0  0  0 19  1  0  0	95.0%		Painted metal sheets
  1  0  0  4  0  0 15  0  0	75.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  1  0  0  2  0  0  0 17	85.0%		Trees

overall_acc:	0.8111111111111111
κ =		0.7875
sensitivities:	[0.75, 0.7, 0.85, 0.8, 0.65, 0.95, 0.75, 1.0, 0.85]
specificities:	[0.9875, 0.95625, 0.975, 0.9625, 0.9625, 0.99375, 0.9625, 1.0, 0.9875]
PPVs:		[0.8823529411764706, 0.6666666666666666, 0.8095238095238095, 0.7272727272727273, 0.6842105263157895, 0.95, 0.7142857142857143, 1.0, 0.8947368421052632]
NPVs:		[0.9693251533742331, 0.9622641509433962, 0.9811320754716981, 0.9746835443037974, 0.9565217391304348, 0.99375, 0.9685534591194969, 1.0, 0.9813664596273292]
F1s:		[0.8108108108108109, 0.6829268292682927, 0.8292682926829268, 0.7619047619047619, 0.6666666666666666, 0.95, 0.7317073170731707, 1.0, 0.8717948717948718]
accuracies:	[0.9611111111111111, 0.9277777777777778, 0.9611111111111111, 0.9444444444444444, 0.9277777777777778, 0.9888888888888889, 0.9388888888888889, 1.0, 0.9722222222222222]
mean_accuracy:	0.9580246913580246
Dataset_slice = (900) -> [20, 148, 247, 348, 409, 562, 685, 736, 873, 36, 113, 203, 353, 426, 567, 608, 720, 812, 75, 145, 228, 390, 401, 547, 663, 735, 807, 9, 112, 249, 319, 421, 510, 661, 792, 865, 92, 159, 288, 325, 482, 513, 648, 741, 803, 88, 121, 212, 365, 407, 588, 626, 748, 885, 28, 186, 224, 360, 406, 551, 662, 734, 857, 79, 198, 274, 367, 408, 523, 633, 708, 826, 8, 118, 297, 387, 439, 502, 687, 737, 890, 73, 122, 204, 330, 479, 565, 683, 789, 836, 83, 194, 243, 374, 472, 552, 632, 775, 856, 40, 185, 275, 366, 446, 594, 700, 784, 821, 61, 195, 273, 356, 473, 528, 620, 745, 810, 70, 136, 202, 343, 455, 558, 673, 783, 830, 51, 155, 282, 397, 450, 533, 647, 777, 892, 48, 161, 245, 331, 499, 518, 676, 728, 872, 50, 130, 281, 361, 425, 537, 671, 701, 852, 13, 103, 293, 378, 444, 583, 627, 788, 815, 27, 187, 240, 372, 415, 579, 606, 722, 823, 35, 125, 217, 391, 440, 535, 609, 706, 867, 69, 120, 236, 354, 466, 524, 628, 730, 868, 45, 157, 253, 309, 458, 517, 610, 791, 811, 97, 200, 277, 334, 485, 573, 617, 733, 900, 68, 197, 294, 394, 476, 543, 646, 727, 833, 3, 156, 264, 335, 423, 548, 640, 757, 831, 85, 102, 260, 381, 437, 597, 642, 723, 881, 94, 191, 234, 313, 416, 509, 653, 781, 893, 7, 140, 238, 399, 434, 566, 645, 763, 848, 19, 119, 226, 369, 462, 598, 680, 709, 835, 87, 167, 287, 318, 478, 563, 604, 755, 883, 1, 184, 262, 326, 483, 544, 636, 715, 820, 16, 163, 235, 306, 412, 532, 615, 766, 814, 25, 123, 284, 373, 414, 526, 691, 786, 859, 31, 196, 270, 398, 449, 557, 693, 751, 825, 64, 129, 211, 338, 500, 534, 619, 762, 828, 81, 146, 206, 388, 447, 515, 681, 796, 889, 57, 138, 246, 358, 420, 555, 605, 710, 824, 23, 115, 209, 322, 452, 504, 694, 761, 888, 90, 199, 232, 344, 492, 572, 614, 773, 874, 42, 164, 244, 310, 465, 568, 695, 760, 805, 26, 181, 248, 347, 428, 527, 650, 753, 891, 30, 128, 261, 345, 431, 595, 670, 785, 875, 91, 153, 227, 332, 471, 520, 689, 759, 866, 17, 134, 207, 385, 494, 577, 607, 747, 895, 59, 141, 229, 376, 457, 511, 675, 731, 858, 96, 150, 252, 302, 441, 507, 643, 705, 827, 2, 126, 300, 350, 445, 584, 602, 764, 846, 52, 131, 299, 357, 448, 550, 677, 704, 860, 24, 189, 223, 396, 489, 560, 659, 717, 896, 15, 193, 237, 351, 470, 576, 644, 770, 838, 86, 142, 205, 375, 477, 549, 624, 732, 851, 46, 106, 266, 327, 461, 581, 638, 726, 882, 67, 124, 286, 362, 495, 553, 667, 743, 840, 71, 174, 233, 389, 433, 592, 630, 765, 849, 66, 110, 213, 307, 419, 600, 634, 738, 845, 18, 114, 201, 364, 480, 546, 688, 767, 817, 58, 151, 290, 363, 411, 508, 655, 768, 899, 39, 108, 276, 340, 463, 599, 629, 718, 806, 34, 116, 256, 324, 464, 587, 699, 800, 841, 80, 162, 258, 314, 459, 593, 658, 707, 887, 82, 158, 231, 305, 493, 596, 652, 795, 870, 6, 171, 285, 352, 498, 539, 674, 794, 854, 53, 182, 272, 336, 403, 569, 668, 721, 864, 60, 105, 268, 386, 438, 582, 613, 714, 898, 93, 179, 271, 301, 443, 556, 612, 756, 832, 44, 170, 251, 329, 413, 540, 690, 713, 822, 32, 180, 289, 380, 424, 554, 697, 746, 837, 49, 111, 225, 337, 456, 503, 625, 787, 804, 43, 192, 219, 393, 475, 505, 603, 776, 842, 100, 152, 220, 346, 496, 516, 622, 750, 801, 41, 190, 230, 321, 469, 578, 682, 797, 884, 5, 178, 255, 368, 427, 525, 657, 782, 829, 54, 132, 280, 349, 410, 531, 635, 703, 802, 65, 154, 210, 384, 429, 521, 639, 754, 894, 72, 144, 296, 392, 490, 506, 684, 716, 816, 76, 147, 241, 341, 432, 536, 696, 719, 839, 98, 101, 216, 342, 484, 585, 665, 779, 897, 11, 149, 257, 333, 497, 541, 649, 780, 844, 78, 177, 218, 303, 481, 501, 631, 712, 834, 21, 117, 215, 315, 436, 571, 651, 790, 886, 62, 173, 214, 355, 488, 529, 686, 711, 808, 14, 139, 222, 339, 435, 586, 669, 702, 861, 22, 143, 208, 317, 442, 522, 660, 752, 880, 12, 176, 298, 328, 418, 512, 623, 725, 809, 37, 168, 269, 370, 453, 589, 641, 740, 847, 95, 135, 259, 323, 417, 574, 664, 749, 878, 74, 107, 254, 311, 404, 514, 698, 798, 818, 33, 183, 278, 304, 491, 591, 678, 799, 879, 99, 172, 239, 395, 402, 545, 654, 769, 853, 63, 127, 250, 316, 451, 519, 692, 724, 877, 29, 160, 292, 371, 474, 530, 672, 744, 813, 56, 109, 242, 312, 460, 542, 621, 793, 871, 10, 169, 279, 359, 405, 570, 601, 774, 876, 47, 137, 267, 377, 467, 559, 611, 739, 869, 4, 104, 291, 400, 422, 580, 616, 758, 863, 38, 188, 283, 320, 430, 538, 618, 778, 855, 84, 165, 221, 308, 454, 590, 656, 771, 850, 89, 175, 263, 382, 486, 564, 637, 729, 843, 55, 133, 265, 383, 487, 575, 666, 742, 819, 77, 166, 295, 379, 468, 561, 679, 772, 862]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2877.69 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	2673.39 MBs	(shape (3, 4, 3, 4, 720, 1030, 7), 720315050 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 01:45:14 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (460+260=720 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A103 ⫹₈₀ 16191), purity -1.6275935419822651
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (237+223=460 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A36 ⫹₆₀ 14496), purity -1.2098894818365102
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (180+80=260 samples) on frame 1 with decision: {1} A35 ⫹₇₀ 8313, purity -0.6830027612970125
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (93+130=223 samples) on frame 1 with decision: {1} A64 ⫺ 4102, purity -0.572524061613035
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (140+97=237 samples) on frame 1 with decision: {1} A39 ⫺ 21630, purity -0.6677257651847425
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (113+67=180 samples) on frame 1 with decision: {1} ⟨PO⟩ (A74 ⫹₆₀ 12673), purity -0.5634957047985463
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+15=93 samples) on frame 1 with decision: {1} A72 ⫺ 15487, purity -0.19354825623848018
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (93+47=140 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A17 ⫺₇₀ 14536), purity -0.6414012798364582
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (99+31=130 samples) on frame 1 with decision: {1} A100 ⫺₈₀ 25118, purity -0.5372942493220559
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+80=97 samples) on frame 1 with decision: {1} ⟨EC⟩ (A1 ⫺ 24464), purity -0.03920832260947605
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+85=113 samples) on frame 1 with decision: {1} A17 ⫺₆₀ 12435, purity -0.5554512304787704
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+4=15 samples) on frame 1 with decision: {1} A3 ⫺ 2893, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+12=28 samples) on frame 1 with decision: {1} ⟨TPP⟩ (A15 ⫺ 11950), purity -0.4867206120470121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (54+45=99 samples) on frame 1 with decision: {1} A46 ⫹ 11375, purity -0.5246355086540797
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (54+39=93 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A1 ⫺₇₀ 13040), purity -0.5872085811279285
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+79=85 samples) on frame 1 with decision: {1} A85 ⫹₆₀ 16587, purity -0.21269335251373106
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+18=45 samples) on frame 1 with decision: {1} A67 ⫺₈₀ 10236, purity -0.40554061834440686
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+49=54 samples) on frame 1 with decision: {1} A2 ⫹₈₀ 10632, purity -0.20899728709107382
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (43+11=54 samples) on frame 1 with decision: {1} ⟨EC⟩ (A41 ⫺ 19579), purity -0.5307806064185893
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+5=12 samples) on frame 1 with decision: {1} A15 ⫹ 11999, purity -0.3959460580138477
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+35=39 samples) on frame 1 with decision: {1} ⟨TPP⟩ (A33 ⫺ 16587), purity -0.22307198457793995
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+14=27 samples) on frame 1 with decision: {1} ⟨NTPP⟩ (A15 ⫺ 4320), purity -0.2067110846332596
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+24=43 samples) on frame 1 with decision: {1} ⟨EC⟩ (A97 ⫺ 19530), purity -0.30566205763246346
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A6 ⫹ 12851, purity -0.3780802803054247
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+4=13 samples) on frame 1 with decision: {1} A2 ⫹₆₀ 5321, purity -0.21327605555690624
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+9=19 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A17 ⫺₇₀ 13971), purity -0.4286059525246933
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A6 ⫺ 12386, purity -0.277258872223978
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A1 ⫺ 11266, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
3703.584290 seconds (19.02 G allocations: 1.274 TiB, 28.66% gc time, 0.23% compilation time)
Train tree:
Decision Tree
Leaves: 29
Tot nodes: 57
Height: 9
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A103 ⫹₈₀ 16191)
✔ {1} A35 ⫹₇₀ 8313
│✔ Shadows : 80/80 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A74 ⫹₆₀ 12673)
│ ✔ Asphalt : 65/67 (conf: 0.9701492537313433)
│ ✘ {1} A17 ⫺₆₀ 12435
│  ✔ {1} A85 ⫹₆₀ 16587
│  │✔ Bitumen : 75/79 (conf: 0.9493670886075949)
│  │✘ Gravel : 6/6 (conf: 1.0)
│  ✘ {1} ⟨TPP⟩ (A15 ⫺ 11950)
│   ✔ {1} A15 ⫹ 11999
│   │✔ Bitumen : 3/5 (conf: 0.6)
│   │✘ Asphalt : 7/7 (conf: 1.0)
│   ✘ Gravel : 15/16 (conf: 0.9375)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A36 ⫹₆₀ 14496)
 ✔ {1} A64 ⫺ 4102
 │✔ {1} A100 ⫺₈₀ 25118
 ││✔ Meadows : 30/31 (conf: 0.967741935483871)
 ││✘ {1} A46 ⫹ 11375
 ││ ✔ {1} A67 ⫺₈₀ 10236
 ││ │✔ Meadows : 18/18 (conf: 1.0)
 ││ │✘ {1} ⟨NTPP⟩ (A15 ⫺ 4320)
 ││ │ ✔ Bare Soil : 14/14 (conf: 1.0)
 ││ │ ✘ {1} A2 ⫹₆₀ 5321
 ││ │  ✔ Bare Soil : 2/4 (conf: 0.5)
 ││ │  ✘ Meadows : 9/9 (conf: 1.0)
 ││ ✘ {1} A2 ⫹₈₀ 10632
 ││  ✔ Bare Soil : 46/49 (conf: 0.9387755102040817)
 ││  ✘ Meadows : 5/5 (conf: 1.0)
 │✘ {1} A72 ⫺ 15487
 │ ✔ {1} A3 ⫺ 2893
 │ │✔ Trees : 4/4 (conf: 1.0)
 │ │✘ Meadows : 11/11 (conf: 1.0)
 │ ✘ Trees : 76/78 (conf: 0.9743589743589743)
 ✘ {1} A39 ⫺ 21630
  ✔ {1} ⟨EC⟩ (A1 ⫺ 24464)
  │✔ Painted metal sheets : 80/80 (conf: 1.0)
  │✘ Bare Soil : 16/17 (conf: 0.9411764705882353)
  ✘ {1} ⟨N̅T̅P̅P̅⟩ (A17 ⫺₇₀ 14536)
   ✔ Self-Blocking Bricks : 43/47 (conf: 0.9148936170212766)
   ✘ {1} ⟨T̅P̅P̅⟩ (A1 ⫺₇₀ 13040)
    ✔ {1} ⟨TPP⟩ (A33 ⫺ 16587)
    │✔ Gravel : 34/35 (conf: 0.9714285714285714)
    │✘ Asphalt : 2/4 (conf: 0.5)
    ✘ {1} ⟨EC⟩ (A41 ⫺ 19579)
     ✔ {1} A6 ⫹ 12851
     │✔ Gravel : 7/7 (conf: 1.0)
     │✘ Gravel : 2/4 (conf: 0.5)
     ✘ {1} ⟨EC⟩ (A97 ⫺ 19530)
      ✔ Self-Blocking Bricks : 24/24 (conf: 1.0)
      ✘ {1} ⟨T̅P̅P̅⟩ (A17 ⫺₇₀ 13971)
       ✔ {1} A1 ⫺ 11266
       │✔ Self-Blocking Bricks : 3/4 (conf: 0.75)
       │✘ Self-Blocking Bricks : 5/5 (conf: 1.0)
       ✘ {1} A6 ⫺ 12386
        ✔ Gravel : 6/6 (conf: 1.0)
        ✘ Self-Blocking Bricks : 2/4 (conf: 0.5)
● [ 22/07/2021 02:46:57 ] Saving tree to file ./gandalf/trees/tree_ad9eb4236a057f998d37d78f250da9899e5a96ff4b7ee5876426ad29ef2514c4.jld...
Test tree:
Decision Tree
Leaves: 29
Tot nodes: 57
Height: 9
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A103 ⫹₈₀ 16191)
✔ {1} A35 ⫹₇₀ 8313
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A74 ⫹₆₀ 12673)
│ ✔ Asphalt : 12/13 (conf: 0.9230769230769231)
│ ✘ {1} A17 ⫺₆₀ 12435
│  ✔ {1} A85 ⫹₆₀ 16587
│  │✔ Bitumen : 20/21 (conf: 0.9523809523809523)
│  │✘ Gravel : 1/1 (conf: 1.0)
│  ✘ {1} ⟨TPP⟩ (A15 ⫺ 11950)
│   ✔ {1} A15 ⫹ 11999
│   │✔ Bitumen : 0/1 (conf: 0.0)
│   │✘ Asphalt : 1/1 (conf: 1.0)
│   ✘ Gravel : 2/2 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A36 ⫹₆₀ 14496)
 ✔ {1} A64 ⫺ 4102
 │✔ {1} A100 ⫺₈₀ 25118
 ││✔ Meadows : 8/11 (conf: 0.7272727272727273)
 ││✘ {1} A46 ⫹ 11375
 ││ ✔ {1} A67 ⫺₈₀ 10236
 ││ │✔ Meadows : 3/4 (conf: 0.75)
 ││ │✘ {1} ⟨NTPP⟩ (A15 ⫺ 4320)
 ││ │ ✔ Bare Soil : 5/5 (conf: 1.0)
 ││ │ ✘ {1} A2 ⫹₆₀ 5321
 ││ │  ✔ Bare Soil : 0/0 (conf: NaN)
 ││ │  ✘ Meadows : 1/4 (conf: 0.25)
 ││ ✘ {1} A2 ⫹₈₀ 10632
 ││  ✔ Bare Soil : 6/7 (conf: 0.8571428571428571)
 ││  ✘ Meadows : 0/1 (conf: 0.0)
 │✘ {1} A72 ⫺ 15487
 │ ✔ {1} A3 ⫺ 2893
 │ │✔ Trees : 0/0 (conf: NaN)
 │ │✘ Meadows : 3/5 (conf: 0.6)
 │ ✘ Trees : 15/19 (conf: 0.7894736842105263)
 ✘ {1} A39 ⫺ 21630
  ✔ {1} ⟨EC⟩ (A1 ⫺ 24464)
  │✔ Painted metal sheets : 20/21 (conf: 0.9523809523809523)
  │✘ Bare Soil : 2/5 (conf: 0.4)
  ✘ {1} ⟨N̅T̅P̅P̅⟩ (A17 ⫺₇₀ 14536)
   ✔ Self-Blocking Bricks : 9/11 (conf: 0.8181818181818182)
   ✘ {1} ⟨T̅P̅P̅⟩ (A1 ⫺₇₀ 13040)
    ✔ {1} ⟨TPP⟩ (A33 ⫺ 16587)
    │✔ Gravel : 8/15 (conf: 0.5333333333333333)
    │✘ Asphalt : 1/1 (conf: 1.0)
    ✘ {1} ⟨EC⟩ (A41 ⫺ 19579)
     ✔ {1} A6 ⫹ 12851
     │✔ Gravel : 1/1 (conf: 1.0)
     │✘ Gravel : 1/2 (conf: 0.5)
     ✘ {1} ⟨EC⟩ (A97 ⫺ 19530)
      ✔ Self-Blocking Bricks : 1/4 (conf: 0.25)
      ✘ {1} ⟨T̅P̅P̅⟩ (A17 ⫺₇₀ 13971)
       ✔ {1} A1 ⫺ 11266
       │✔ Self-Blocking Bricks : 1/1 (conf: 1.0)
       │✘ Self-Blocking Bricks : 1/1 (conf: 1.0)
       ✘ {1} A6 ⫺ 12386
        ✔ Gravel : 1/1 (conf: 1.0)
        ✘ Self-Blocking Bricks : 2/2 (conf: 1.0)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Pavia	7	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	80.56%	70.0%	65.0%	100.0%	70.0%	75.0%	100.0%	70.0%	100.0%	75.0%	93.33%	76.47%	90.91%	63.64%	60.0%	95.24%	73.68%	100.0%	78.95%	||	78.12%	[80.0, 70.27, 95.24, 66.67, 66.67, 97.56, 71.79, 100.0, 76.92]%	|||	80.56%	97.57%	81.36%	97.58%	80.57%	
  accuracy: 80.56% kappa: 78.12% 
 14  0  2  2  1  0  1  0  0	70.0%		Asphalt
  0 13  0  0  5  1  1  0  0	65.0%		Bare Soil
  0  0 20  0  0  0  0  0  0	100.0%		Bitumen
  1  2  0 14  0  0  3  0  0	70.0%		Gravel
  0  1  0  0 15  0  0  0  4	75.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  1  0  5  0  0 14  0  0	70.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  1  4  0  0  0 15	75.0%		Trees

overall_acc:	0.8055555555555556
κ =		0.78125
sensitivities:	[0.7, 0.65, 1.0, 0.7, 0.75, 1.0, 0.7, 1.0, 0.75]
specificities:	[0.99375, 0.975, 0.9875, 0.95, 0.9375, 0.99375, 0.96875, 1.0, 0.975]
PPVs:		[0.9333333333333333, 0.7647058823529411, 0.9090909090909091, 0.6363636363636364, 0.6, 0.9523809523809523, 0.7368421052631579, 1.0, 0.7894736842105263]
NPVs:		[0.9636363636363636, 0.9570552147239264, 1.0, 0.9620253164556962, 0.967741935483871, 1.0, 0.9627329192546584, 1.0, 0.968944099378882]
F1s:		[0.8, 0.7027027027027027, 0.9523809523809523, 0.6666666666666666, 0.6666666666666666, 0.975609756097561, 0.717948717948718, 1.0, 0.7692307692307693]
accuracies:	[0.9611111111111111, 0.9388888888888889, 0.9888888888888889, 0.9222222222222223, 0.9166666666666666, 0.9944444444444445, 0.9388888888888889, 1.0, 0.95]
mean_accuracy:	0.95679012345679
Dataset_slice = (900) -> [14, 145, 209, 319, 413, 525, 605, 718, 878, 59, 126, 201, 393, 450, 561, 606, 736, 841, 55, 102, 207, 312, 445, 527, 660, 764, 888, 87, 121, 255, 362, 475, 501, 637, 796, 884, 44, 116, 271, 308, 421, 555, 635, 715, 875, 11, 131, 219, 380, 474, 532, 648, 743, 873, 60, 110, 268, 310, 440, 528, 674, 739, 876, 6, 101, 211, 304, 437, 518, 694, 795, 857, 83, 167, 283, 357, 414, 597, 655, 701, 854, 46, 162, 229, 318, 456, 585, 678, 770, 861, 20, 123, 288, 395, 424, 584, 666, 774, 882, 74, 140, 291, 373, 481, 551, 623, 763, 829, 32, 165, 281, 315, 434, 589, 634, 732, 820, 22, 135, 220, 398, 486, 544, 691, 780, 858, 40, 152, 286, 316, 451, 593, 610, 719, 855, 24, 103, 221, 350, 429, 515, 686, 709, 851, 18, 137, 230, 355, 438, 543, 665, 772, 848, 89, 125, 262, 390, 443, 595, 681, 710, 825, 62, 124, 264, 383, 406, 529, 653, 703, 818, 12, 172, 276, 377, 411, 517, 700, 741, 822, 31, 163, 204, 369, 471, 503, 687, 707, 839, 58, 168, 208, 302, 407, 547, 614, 742, 899, 30, 129, 224, 325, 415, 505, 642, 735, 801, 79, 104, 235, 326, 495, 519, 668, 753, 852, 99, 197, 213, 343, 464, 581, 676, 773, 897, 48, 173, 284, 388, 410, 568, 679, 760, 898, 67, 149, 275, 391, 455, 548, 695, 798, 842, 10, 198, 289, 360, 485, 554, 697, 766, 831, 5, 182, 244, 397, 487, 599, 698, 747, 844, 93, 164, 257, 384, 457, 530, 611, 756, 869, 64, 187, 246, 354, 458, 583, 659, 761, 837, 70, 134, 242, 371, 422, 577, 612, 784, 846, 41, 133, 256, 351, 473, 512, 630, 726, 865, 82, 158, 299, 322, 404, 507, 693, 724, 802, 84, 120, 290, 314, 423, 522, 661, 757, 867, 51, 199, 261, 359, 412, 523, 646, 771, 812, 81, 175, 206, 340, 472, 539, 609, 711, 824, 94, 181, 300, 303, 426, 514, 654, 729, 891, 23, 179, 266, 321, 459, 572, 669, 779, 856, 100, 176, 270, 376, 432, 560, 601, 751, 874, 90, 109, 278, 346, 418, 510, 602, 792, 823, 68, 186, 274, 379, 467, 556, 645, 762, 894, 43, 117, 265, 382, 480, 570, 617, 708, 879, 1, 178, 280, 344, 425, 504, 650, 794, 819, 95, 132, 277, 332, 491, 524, 683, 787, 828, 19, 113, 282, 378, 476, 579, 608, 720, 887, 98, 112, 292, 348, 462, 563, 640, 767, 849, 50, 106, 285, 352, 444, 550, 656, 791, 886, 33, 170, 295, 386, 493, 537, 643, 777, 850, 27, 136, 241, 337, 408, 564, 624, 783, 859, 63, 148, 279, 324, 427, 511, 696, 744, 893, 54, 119, 216, 372, 401, 575, 633, 740, 838, 86, 193, 254, 306, 428, 567, 652, 721, 805, 17, 188, 293, 399, 496, 508, 671, 758, 895, 91, 142, 273, 328, 494, 574, 641, 785, 835, 97, 189, 297, 320, 430, 531, 647, 790, 883, 57, 155, 263, 301, 492, 557, 690, 733, 847, 61, 196, 294, 347, 405, 594, 677, 745, 890, 75, 141, 205, 349, 436, 590, 675, 789, 814, 71, 183, 203, 341, 409, 562, 639, 716, 868, 92, 180, 258, 394, 441, 520, 616, 759, 881, 65, 177, 249, 309, 449, 598, 644, 722, 840, 37, 166, 272, 356, 498, 582, 657, 737, 815, 29, 195, 234, 331, 469, 513, 628, 778, 853, 21, 127, 218, 313, 435, 541, 670, 752, 804, 69, 184, 267, 368, 500, 534, 604, 793, 862, 3, 185, 298, 334, 488, 588, 673, 754, 872, 77, 139, 225, 327, 403, 516, 663, 788, 836, 56, 107, 260, 396, 490, 558, 619, 705, 811, 72, 200, 217, 342, 416, 580, 607, 768, 870, 8, 111, 227, 366, 465, 571, 620, 786, 821, 2, 190, 237, 374, 419, 596, 638, 755, 808, 73, 130, 233, 363, 482, 538, 667, 746, 863, 36, 159, 238, 307, 448, 578, 682, 765, 816, 45, 146, 250, 375, 463, 587, 621, 706, 866, 52, 153, 212, 335, 460, 566, 662, 717, 845, 53, 156, 287, 311, 478, 552, 629, 799, 860, 34, 143, 222, 389, 453, 526, 689, 769, 832, 28, 169, 259, 323, 452, 569, 699, 782, 826, 39, 128, 243, 365, 454, 533, 632, 712, 896, 76, 115, 231, 364, 461, 546, 692, 748, 803, 85, 105, 228, 400, 499, 559, 625, 775, 809, 66, 171, 240, 305, 402, 573, 631, 704, 833, 88, 108, 248, 387, 497, 521, 651, 727, 806, 15, 174, 247, 370, 417, 549, 626, 738, 813, 38, 154, 253, 339, 446, 586, 627, 702, 900, 9, 114, 202, 367, 489, 535, 688, 797, 810, 80, 192, 251, 353, 442, 540, 615, 728, 843, 25, 160, 223, 392, 447, 565, 636, 723, 880, 26, 191, 215, 329, 483, 591, 672, 749, 892, 7, 151, 252, 381, 484, 576, 603, 734, 871, 96, 194, 210, 338, 477, 536, 684, 781, 864, 16, 144, 296, 317, 466, 545, 649, 776, 817, 13, 147, 269, 333, 431, 553, 618, 730, 885, 47, 150, 236, 336, 470, 600, 613, 714, 830, 49, 157, 214, 385, 468, 509, 680, 725, 834, 35, 118, 239, 358, 479, 542, 622, 750, 889, 78, 122, 232, 345, 420, 502, 658, 800, 827, 42, 161, 245, 361, 433, 506, 664, 713, 877, 4, 138, 226, 330, 439, 592, 685, 731, 807]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2877.69 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	2673.39 MBs	(shape (3, 4, 3, 4, 720, 1030, 7), 699593510 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 02:47:05 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (255+465=720 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A95 ⫺₆₀ 16339), purity -1.6360006913944365
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (174+81=255 samples) on frame 1 with decision: {1} ⟨EC⟩ (A56 ⫹ 5678), purity -0.6719188883924805
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (241+224=465 samples) on frame 1 with decision: {1} A36 ⫹₆₀ 14496, purity -1.2155151778753113
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (69+105=174 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A46 ⫺₇₀ 12851), purity -0.5281719079781758
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (95+129=224 samples) on frame 1 with decision: {1} A58 ⫺ 4389, purity -0.584140764267982
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+162=241 samples) on frame 1 with decision: {1} A1 ⫹₇₀ 22076, purity -0.6964296541934603
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+88=105 samples) on frame 1 with decision: {1} ⟨NTPP⟩ (A16 ⫺ 11950), purity -0.44395561897679325
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (67+28=95 samples) on frame 1 with decision: {1} A72 ⫺ 14001, purity -0.2590033008539909
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+145=162 samples) on frame 1 with decision: {1} A81 ⫹₈₀ 24098, purity -0.7141314841443943
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (96+33=129 samples) on frame 1 with decision: {1} A100 ⫺₈₀ 25158, purity -0.5136154242531351
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+13=17 samples) on frame 1 with decision: {1} A1 ⫺ 6500, purity -0.1630934542493989
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+13=28 samples) on frame 1 with decision: {1} A4 ⫹₇₀ 4657, purity -0.131212514354269
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (57+39=96 samples) on frame 1 with decision: {1} A39 ⫹ 9809, purity -0.5507526222198479
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+66=88 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A17 ⫺₇₀ 12376), purity -0.2740977786828602
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (117+28=145 samples) on frame 1 with decision: {1} A13 ⫺₆₀ 14704, purity -0.6381483328710571
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+11=22 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A3 ⫹₈₀ 10295), purity -0.15231804867461896
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+52=57 samples) on frame 1 with decision: {1} A2 ⫹₈₀ 10632, purity -0.2887815179594908
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (25+14=39 samples) on frame 1 with decision: {1} A5 ⫺₇₀ 4934, purity -0.4188578171754499
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (71+46=117 samples) on frame 1 with decision: {1} A1 ⫺₆₀ 11851, purity -0.6369916170856362
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A4 ⫺ 11296, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (20+5=25 samples) on frame 1 with decision: {1} A4 ⫹₇₀ 4528, purity -0.4003219388305503
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+33=52 samples) on frame 1 with decision: {1} ⟨TPP⟩ (A102 ⫹ 22809), purity -0.21058362360342778
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+63=71 samples) on frame 1 with decision: {1} A65 ⫹₈₀ 20768, purity -0.5173993897917255
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+41=46 samples) on frame 1 with decision: {1} A33 ⫺₇₀ 15061, purity -0.35809506212189285
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+8=19 samples) on frame 1 with decision: {1} A1 ⫹ 10790, purity -0.27855294238230816
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+6=20 samples) on frame 1 with decision: {1} A4 ⫺₇₀ 4439, purity -0.19095425048844383
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+36=41 samples) on frame 1 with decision: {1} ⟨TPP⟩ (A1 ⫺ 15428), purity -0.19352580408138464
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+35=63 samples) on frame 1 with decision: {1} A19 ⫹₇₀ 14902, purity -0.38485497874671176
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A1 ⫺ 5143, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+23=35 samples) on frame 1 with decision: {1} A30 ⫺₈₀ 14060, purity -0.3771766657727555
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+11=23 samples) on frame 1 with decision: {1} A35 ⫹₈₀ 17766, purity -0.329526157532315
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+6=11 samples) on frame 1 with decision: {1} ⟨NTPP⟩ (A4 ⫺ 11979), purity 1.2111523905001707e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
404.027089 seconds (5.21 G allocations: 100.040 GiB, 11.49% gc time, 0.01% compilation time)
Train tree:
Decision Tree
Leaves: 33
Tot nodes: 65
Height: 11
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A95 ⫺₆₀ 16339)
✔ {1} A36 ⫹₆₀ 14496
│✔ {1} A58 ⫺ 4389
││✔ {1} A100 ⫺₈₀ 25158
│││✔ Meadows : 32/33 (conf: 0.9696969696969697)
│││✘ {1} A39 ⫹ 9809
│││ ✔ {1} A5 ⫺₇₀ 4934
│││ │✔ Meadows : 14/14 (conf: 1.0)
│││ │✘ {1} A4 ⫹₇₀ 4528
│││ │ ✔ Meadows : 5/5 (conf: 1.0)
│││ │ ✘ {1} A4 ⫺₇₀ 4439
│││ │  ✔ Meadows : 4/6 (conf: 0.6666666666666666)
│││ │  ✘ Bare Soil : 14/14 (conf: 1.0)
│││ ✘ {1} A2 ⫹₈₀ 10632
│││  ✔ {1} ⟨TPP⟩ (A102 ⫹ 22809)
│││  │✔ Bare Soil : 33/33 (conf: 1.0)
│││  │✘ {1} A1 ⫹ 10790
│││  │ ✔ {1} A1 ⫺ 5143
│││  │ │✔ Meadows : 4/4 (conf: 1.0)
│││  │ │✘ Bare Soil : 3/4 (conf: 0.75)
│││  │ ✘ Bare Soil : 11/11 (conf: 1.0)
│││  ✘ Meadows : 5/5 (conf: 1.0)
││✘ {1} A72 ⫺ 14001
││ ✔ {1} A4 ⫹₇₀ 4657
││ │✔ Meadows : 13/13 (conf: 1.0)
││ │✘ Trees : 14/15 (conf: 0.9333333333333333)
││ ✘ Trees : 66/67 (conf: 0.9850746268656716)
│✘ {1} A1 ⫹₇₀ 22076
│ ✔ {1} A81 ⫹₈₀ 24098
│ │✔ {1} A13 ⫺₆₀ 14704
│ ││✔ Self-Blocking Bricks : 28/28 (conf: 1.0)
│ ││✘ {1} A1 ⫺₆₀ 11851
│ ││ ✔ {1} A33 ⫺₇₀ 15061
│ ││ │✔ {1} ⟨TPP⟩ (A1 ⫺ 15428)
│ ││ ││✔ Gravel : 35/36 (conf: 0.9722222222222222)
│ ││ ││✘ Self-Blocking Bricks : 3/5 (conf: 0.6)
│ ││ │✘ Asphalt : 3/5 (conf: 0.6)
│ ││ ✘ {1} A65 ⫹₈₀ 20768
│ ││  ✔ {1} A19 ⫹₇₀ 14902
│ ││  │✔ {1} A30 ⫺₈₀ 14060
│ ││  ││✔ {1} A35 ⫹₈₀ 17766
│ ││  │││✔ {1} ⟨NTPP⟩ (A4 ⫺ 11979)
│ ││  ││││✔ Self-Blocking Bricks : 6/6 (conf: 1.0)
│ ││  ││││✘ Gravel : 5/5 (conf: 1.0)
│ ││  │││✘ Gravel : 12/12 (conf: 1.0)
│ ││  ││✘ Self-Blocking Bricks : 12/12 (conf: 1.0)
│ ││  │✘ Self-Blocking Bricks : 28/28 (conf: 1.0)
│ ││  ✘ Gravel : 8/8 (conf: 1.0)
│ │✘ Bare Soil : 16/17 (conf: 0.9411764705882353)
│ ✘ Painted metal sheets : 79/79 (conf: 1.0)
✘ {1} ⟨EC⟩ (A56 ⫹ 5678)
 ✔ Shadows : 80/81 (conf: 0.9876543209876543)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A46 ⫺₇₀ 12851)
  ✔ {1} ⟨NTPP⟩ (A16 ⫺ 11950)
  │✔ {1} ⟨N̅T̅P̅P̅⟩ (A17 ⫺₇₀ 12376)
  ││✔ Bitumen : 64/66 (conf: 0.9696969696969697)
  ││✘ {1} ⟨T̅P̅P̅⟩ (A3 ⫹₈₀ 10295)
  ││ ✔ Bitumen : 11/11 (conf: 1.0)
  ││ ✘ {1} A4 ⫺ 11296
  ││  ✔ Asphalt : 7/7 (conf: 1.0)
  ││  ✘ Asphalt : 3/4 (conf: 0.75)
  │✘ {1} A1 ⫺ 6500
  │ ✔ Gravel : 13/13 (conf: 1.0)
  │ ✘ Bitumen : 2/4 (conf: 0.5)
  ✘ Asphalt : 66/69 (conf: 0.9565217391304348)
● [ 22/07/2021 02:53:49 ] Saving tree to file ./gandalf/trees/tree_c2c1cef0ac285e506ba7a3f0041e926f03c608ebbeb0e907f5a07b6e55beb250.jld...
Test tree:
Decision Tree
Leaves: 33
Tot nodes: 65
Height: 11
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A95 ⫺₆₀ 16339)
✔ {1} A36 ⫹₆₀ 14496
│✔ {1} A58 ⫺ 4389
││✔ {1} A100 ⫺₈₀ 25158
│││✔ Meadows : 4/5 (conf: 0.8)
│││✘ {1} A39 ⫹ 9809
│││ ✔ {1} A5 ⫺₇₀ 4934
│││ │✔ Meadows : 5/5 (conf: 1.0)
│││ │✘ {1} A4 ⫹₇₀ 4528
│││ │ ✔ Meadows : 1/1 (conf: 1.0)
│││ │ ✘ {1} A4 ⫺₇₀ 4439
│││ │  ✔ Meadows : 0/0 (conf: NaN)
│││ │  ✘ Bare Soil : 2/2 (conf: 1.0)
│││ ✘ {1} A2 ⫹₈₀ 10632
│││  ✔ {1} ⟨TPP⟩ (A102 ⫹ 22809)
│││  │✔ Bare Soil : 11/12 (conf: 0.9166666666666666)
│││  │✘ {1} A1 ⫹ 10790
│││  │ ✔ {1} A1 ⫺ 5143
│││  │ │✔ Meadows : 0/0 (conf: NaN)
│││  │ │✘ Bare Soil : 1/1 (conf: 1.0)
│││  │ ✘ Bare Soil : 1/3 (conf: 0.3333333333333333)
│││  ✘ Meadows : 0/0 (conf: NaN)
││✘ {1} A72 ⫺ 14001
││ ✔ {1} A4 ⫹₇₀ 4657
││ │✔ Meadows : 3/3 (conf: 1.0)
││ │✘ Trees : 3/6 (conf: 0.5)
││ ✘ Trees : 15/16 (conf: 0.9375)
│✘ {1} A1 ⫹₇₀ 22076
│ ✔ {1} A81 ⫹₈₀ 24098
│ │✔ {1} A13 ⫺₆₀ 14704
│ ││✔ Self-Blocking Bricks : 4/5 (conf: 0.8)
│ ││✘ {1} A1 ⫺₆₀ 11851
│ ││ ✔ {1} A33 ⫺₇₀ 15061
│ ││ │✔ {1} ⟨TPP⟩ (A1 ⫺ 15428)
│ ││ ││✔ Gravel : 8/10 (conf: 0.8)
│ ││ ││✘ Self-Blocking Bricks : 2/2 (conf: 1.0)
│ ││ │✘ Asphalt : 0/0 (conf: NaN)
│ ││ ✘ {1} A65 ⫹₈₀ 20768
│ ││  ✔ {1} A19 ⫹₇₀ 14902
│ ││  │✔ {1} A30 ⫺₈₀ 14060
│ ││  ││✔ {1} A35 ⫹₈₀ 17766
│ ││  │││✔ {1} ⟨NTPP⟩ (A4 ⫺ 11979)
│ ││  ││││✔ Self-Blocking Bricks : 1/3 (conf: 0.3333333333333333)
│ ││  ││││✘ Gravel : 0/2 (conf: 0.0)
│ ││  │││✘ Gravel : 2/3 (conf: 0.6666666666666666)
│ ││  ││✘ Self-Blocking Bricks : 2/2 (conf: 1.0)
│ ││  │✘ Self-Blocking Bricks : 4/4 (conf: 1.0)
│ ││  ✘ Gravel : 3/4 (conf: 0.75)
│ │✘ Bare Soil : 5/7 (conf: 0.7142857142857143)
│ ✘ Painted metal sheets : 19/19 (conf: 1.0)
✘ {1} ⟨EC⟩ (A56 ⫹ 5678)
 ✔ Shadows : 20/20 (conf: 1.0)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A46 ⫺₇₀ 12851)
  ✔ {1} ⟨NTPP⟩ (A16 ⫺ 11950)
  │✔ {1} ⟨N̅T̅P̅P̅⟩ (A17 ⫺₇₀ 12376)
  ││✔ Bitumen : 15/17 (conf: 0.8823529411764706)
  ││✘ {1} ⟨T̅P̅P̅⟩ (A3 ⫹₈₀ 10295)
  ││ ✔ Bitumen : 2/3 (conf: 0.6666666666666666)
  ││ ✘ {1} A4 ⫺ 11296
  ││  ✔ Asphalt : 1/2 (conf: 0.5)
  ││  ✘ Asphalt : 0/0 (conf: NaN)
  │✘ {1} A1 ⫺ 6500
  │ ✔ Gravel : 2/2 (conf: 1.0)
  │ ✘ Bitumen : 0/1 (conf: 0.0)
  ✘ Asphalt : 16/20 (conf: 0.8)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Pavia	8	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	84.44%	85.0%	100.0%	85.0%	75.0%	65.0%	95.0%	65.0%	100.0%	90.0%	77.27%	80.0%	80.95%	71.43%	92.86%	100.0%	81.25%	100.0%	81.82%	||	82.5%	[80.95, 88.89, 82.93, 73.17, 76.47, 97.44, 72.22, 100.0, 85.71]%	|||	84.44%	98.06%	85.06%	98.08%	84.2%	
  accuracy: 84.44% kappa: 82.5% 
 17  0  2  0  0  0  1  0  0	85.0%		Asphalt
  0 20  0  0  0  0  0  0  0	100.0%		Bare Soil
  3  0 17  0  0  0  0  0  0	85.0%		Bitumen
  2  0  2 15  0  0  1  0  0	75.0%		Gravel
  0  3  0  0 13  0  0  0  4	65.0%		Meadows
  0  0  0  0  0 19  1  0  0	95.0%		Painted metal sheets
  0  1  0  6  0  0 13  0  0	65.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  1  0  0  1  0  0  0 18	90.0%		Trees

overall_acc:	0.8444444444444444
κ =		0.8250000000000001
sensitivities:	[0.85, 1.0, 0.85, 0.75, 0.65, 0.95, 0.65, 1.0, 0.9]
specificities:	[0.96875, 0.96875, 0.975, 0.9625, 0.99375, 1.0, 0.98125, 1.0, 0.975]
PPVs:		[0.7727272727272727, 0.8, 0.8095238095238095, 0.7142857142857143, 0.9285714285714286, 1.0, 0.8125, 1.0, 0.8181818181818182]
NPVs:		[0.9810126582278481, 1.0, 0.9811320754716981, 0.9685534591194969, 0.9578313253012049, 0.9937888198757764, 0.9573170731707317, 1.0, 0.9873417721518988]
F1s:		[0.8095238095238095, 0.8888888888888888, 0.8292682926829268, 0.7317073170731707, 0.7647058823529411, 0.9743589743589743, 0.7222222222222222, 1.0, 0.8571428571428571]
accuracies:	[0.9555555555555556, 0.9722222222222222, 0.9611111111111111, 0.9388888888888889, 0.9555555555555556, 0.9944444444444445, 0.9444444444444444, 1.0, 0.9666666666666667]
mean_accuracy:	0.965432098765432
Dataset_slice = (900) -> [70, 177, 261, 314, 419, 581, 639, 713, 846, 28, 119, 212, 327, 454, 562, 671, 731, 805, 31, 139, 280, 374, 459, 507, 684, 793, 820, 19, 178, 249, 324, 453, 509, 643, 732, 831, 5, 145, 248, 337, 422, 598, 659, 780, 874, 75, 174, 287, 378, 420, 519, 670, 791, 844, 12, 144, 202, 385, 465, 588, 689, 721, 897, 26, 108, 298, 344, 403, 544, 641, 785, 801, 67, 162, 228, 360, 498, 513, 628, 725, 881, 14, 125, 236, 322, 482, 571, 638, 706, 857, 50, 105, 214, 320, 440, 559, 627, 737, 841, 25, 148, 229, 376, 423, 535, 679, 712, 826, 11, 196, 219, 397, 434, 552, 633, 714, 893, 51, 170, 257, 399, 417, 534, 607, 764, 888, 6, 199, 207, 301, 427, 583, 696, 781, 812, 4, 127, 273, 338, 450, 590, 602, 738, 827, 63, 141, 270, 302, 486, 586, 654, 716, 814, 62, 118, 276, 392, 435, 511, 680, 703, 829, 54, 194, 216, 336, 437, 569, 669, 701, 880, 73, 190, 251, 349, 411, 582, 631, 724, 885, 16, 168, 238, 312, 449, 597, 657, 787, 860, 76, 133, 292, 308, 436, 560, 606, 704, 843, 94, 191, 234, 307, 469, 566, 656, 752, 808, 21, 172, 253, 370, 461, 556, 667, 789, 863, 96, 176, 295, 388, 401, 578, 687, 794, 832, 97, 132, 275, 382, 475, 555, 624, 796, 878, 60, 173, 217, 325, 470, 514, 683, 763, 894, 9, 109, 272, 398, 402, 510, 619, 735, 869, 40, 154, 250, 303, 443, 524, 652, 799, 851, 72, 113, 240, 368, 431, 501, 663, 756, 899, 99, 156, 279, 381, 497, 540, 664, 759, 806, 44, 167, 220, 335, 489, 523, 661, 710, 866, 91, 104, 245, 357, 416, 533, 608, 777, 872, 92, 116, 297, 355, 412, 553, 647, 779, 855, 71, 166, 246, 351, 426, 536, 646, 745, 853, 13, 192, 203, 394, 410, 529, 697, 798, 828, 98, 129, 206, 331, 414, 537, 640, 743, 858, 79, 122, 281, 346, 448, 504, 682, 723, 879, 18, 137, 224, 371, 442, 549, 666, 782, 816, 48, 101, 289, 362, 487, 589, 695, 746, 835, 56, 175, 285, 350, 456, 516, 677, 775, 833, 22, 103, 242, 356, 408, 502, 693, 741, 882, 35, 124, 293, 361, 428, 577, 698, 707, 883, 81, 189, 262, 364, 460, 547, 691, 773, 807, 84, 187, 230, 342, 478, 557, 681, 795, 849, 37, 181, 208, 310, 418, 521, 673, 772, 867, 87, 120, 299, 359, 458, 530, 630, 768, 822, 77, 117, 237, 354, 462, 538, 668, 771, 854, 34, 115, 231, 379, 429, 525, 637, 727, 815, 65, 155, 205, 316, 495, 550, 690, 733, 875, 7, 121, 252, 319, 488, 508, 625, 748, 802, 41, 123, 264, 358, 499, 503, 672, 790, 852, 3, 182, 201, 353, 452, 531, 623, 786, 837, 59, 193, 290, 345, 439, 558, 653, 758, 850, 55, 186, 296, 372, 457, 546, 636, 766, 877, 43, 126, 241, 377, 463, 554, 699, 709, 809, 29, 161, 263, 395, 405, 551, 605, 749, 870, 8, 159, 221, 333, 471, 543, 658, 715, 817, 86, 158, 227, 347, 413, 592, 662, 722, 810, 46, 157, 274, 304, 424, 561, 613, 719, 896, 64, 112, 204, 332, 445, 585, 610, 753, 886, 78, 195, 211, 391, 430, 545, 676, 757, 868, 85, 198, 209, 340, 493, 575, 655, 740, 803, 15, 152, 282, 317, 433, 600, 688, 755, 818, 1, 149, 258, 400, 477, 595, 604, 765, 821, 42, 128, 254, 309, 464, 584, 615, 761, 813, 100, 130, 271, 326, 500, 573, 603, 744, 871, 30, 197, 267, 323, 425, 594, 635, 797, 864, 10, 140, 283, 393, 468, 542, 674, 788, 840, 89, 134, 218, 389, 441, 596, 634, 767, 839, 88, 114, 278, 318, 446, 532, 617, 728, 873, 49, 179, 277, 365, 467, 528, 620, 754, 865, 17, 160, 247, 383, 481, 568, 618, 792, 892, 23, 183, 223, 339, 479, 587, 629, 750, 898, 27, 142, 286, 311, 415, 570, 692, 776, 823, 20, 150, 259, 305, 421, 522, 651, 736, 884, 68, 171, 288, 329, 407, 526, 694, 729, 834, 69, 169, 243, 352, 494, 567, 644, 747, 804, 24, 106, 284, 384, 491, 520, 675, 730, 811, 74, 110, 235, 390, 473, 579, 650, 717, 887, 36, 163, 256, 373, 406, 515, 611, 720, 830, 57, 185, 266, 343, 480, 548, 601, 705, 856, 53, 180, 239, 306, 476, 527, 614, 734, 819, 95, 200, 255, 369, 404, 541, 626, 708, 842, 61, 107, 226, 348, 409, 518, 660, 702, 889, 66, 135, 265, 380, 484, 512, 649, 762, 890, 52, 111, 233, 328, 472, 565, 700, 800, 900, 58, 147, 210, 315, 447, 506, 642, 778, 862, 47, 153, 232, 367, 474, 517, 678, 742, 845, 83, 143, 268, 341, 432, 574, 632, 784, 891, 39, 146, 215, 313, 490, 572, 616, 739, 861, 93, 165, 244, 330, 466, 591, 612, 774, 838, 90, 138, 225, 363, 451, 539, 686, 718, 847, 33, 184, 291, 396, 455, 593, 648, 783, 825, 2, 151, 300, 334, 496, 505, 665, 770, 848, 38, 102, 260, 366, 492, 576, 622, 769, 859, 80, 131, 269, 375, 483, 580, 609, 751, 895, 82, 136, 222, 386, 485, 563, 645, 760, 836, 45, 188, 213, 321, 444, 599, 685, 726, 876, 32, 164, 294, 387, 438, 564, 621, 711, 824]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2877.69 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	2673.39 MBs	(shape (3, 4, 3, 4, 720, 1030, 7), 698634580 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 02:53:56 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (294+426=720 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A7 ⫺₆₀ 7897), purity -1.628255359349706
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+216=294 samples) on frame 1 with decision: {1} A72 ⫺ 4697, purity -0.803465244365424
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (169+257=426 samples) on frame 1 with decision: {1} A103 ⫺₆₀ 15873, purity -1.2664150040256257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (69+100=169 samples) on frame 1 with decision: {1} A68 ⫺₇₀ 13129, purity -0.5500757120966493
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+177=257 samples) on frame 1 with decision: {1} A1 ⫹ 23216, purity -0.8439556940955705
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (116+100=216 samples) on frame 1 with decision: {1} ⟨EC⟩ (A66 ⫹ 5886), purity -0.6149064255750459
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+63=69 samples) on frame 1 with decision: {1} A19 ⫺ 6877, purity -0.08794819693107407
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (88+12=100 samples) on frame 1 with decision: {1} A14 ⫹₈₀ 11167, purity -0.38493057811538933
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (88+28=116 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A100 ⫺₈₀ 25118), purity -0.5049040472429492
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (151+26=177 samples) on frame 1 with decision: {1} A94 ⫺₆₀ 21918, purity -0.867857734571031
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (31+69=100 samples) on frame 1 with decision: {1} ⟨DC⟩ (A70 ⫹ 10087), purity -0.18675648169130604
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+61=88 samples) on frame 1 with decision: {1} A20 ⫺₈₀ 12366, purity -0.2498862996000189
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+9=31 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A32 ⫺₆₀ 8234), purity 3.1516008440972187e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (42+46=88 samples) on frame 1 with decision: {1} ⟨EC⟩ (A19 ⫺ 7283), purity -0.4519568499442125
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (115+36=151 samples) on frame 1 with decision: {1} A16 ⫺₆₀ 14912, purity -0.7059434217343306
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (20+6=26 samples) on frame 1 with decision: {1} A73 ⫹₆₀ 20134, purity -0.4502707245660664
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+4=20 samples) on frame 1 with decision: {1} A3 ⫺₈₀ 10949, purity -0.20794415416798356
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+14=27 samples) on frame 1 with decision: {1} A2 ⫺₆₀ 9750, purity -0.3401355649152463
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (26+16=42 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A67 ⫺₇₀ 11117), purity -0.382102047928307
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (52+63=115 samples) on frame 1 with decision: {1} A1 ⫹₆₀ 13168, purity -0.668632584079903
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+10=14 samples) on frame 1 with decision: {1} A7 ⫺ 9235, purity -0.29706307738283366
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+21=26 samples) on frame 1 with decision: {1} A63 ⫺ 6302, purity -0.331247795540638
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (44+8=52 samples) on frame 1 with decision: {1} A36 ⫹₈₀ 17082, purity -0.2517404823903782
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+54=63 samples) on frame 1 with decision: {1} A65 ⫹ 20937, purity -0.6362986982224035
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A5 ⫹₈₀ 13139, purity -0.34657359027997264
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+15=21 samples) on frame 1 with decision: {1} ⟨EC⟩ (A7 ⫺ 5509), purity -0.19804205158855576
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+36=54 samples) on frame 1 with decision: {1} A96 ⫺₆₀ 17934, purity -0.5155360899253212
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+10=18 samples) on frame 1 with decision: {1} A75 ⫺ 15982, purity -0.5807154524479321
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A2 ⫺ 7501, purity -0.5198603854199589
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A1 ⫺ 7877, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
444.757195 seconds (5.58 G allocations: 119.117 GiB, 12.70% gc time, 0.01% compilation time)
Train tree:
Decision Tree
Leaves: 31
Tot nodes: 61
Height: 10
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A7 ⫺₆₀ 7897)
✔ {1} A103 ⫺₆₀ 15873
│✔ {1} A1 ⫹ 23216
││✔ {1} A94 ⫺₆₀ 21918
│││✔ {1} A73 ⫹₆₀ 20134
││││✔ Meadows : 4/6 (conf: 0.6666666666666666)
││││✘ {1} A3 ⫺₈₀ 10949
││││ ✔ Bare Soil : 2/4 (conf: 0.5)
││││ ✘ Bare Soil : 16/16 (conf: 1.0)
│││✘ {1} A16 ⫺₆₀ 14912
│││ ✔ Self-Blocking Bricks : 34/36 (conf: 0.9444444444444444)
│││ ✘ {1} A1 ⫹₆₀ 13168
│││  ✔ {1} A65 ⫹ 20937
│││  │✔ {1} A96 ⫺₆₀ 17934
│││  ││✔ Self-Blocking Bricks : 34/36 (conf: 0.9444444444444444)
│││  ││✘ {1} A75 ⫺ 15982
│││  ││ ✔ {1} A1 ⫺ 7877
│││  ││ │✔ Gravel : 3/4 (conf: 0.75)
│││  ││ │✘ Gravel : 6/6 (conf: 1.0)
│││  ││ ✘ {1} A2 ⫺ 7501
│││  ││  ✔ Asphalt : 2/4 (conf: 0.5)
│││  ││  ✘ Self-Blocking Bricks : 4/4 (conf: 1.0)
│││  │✘ Gravel : 9/9 (conf: 1.0)
│││  ✘ {1} A36 ⫹₈₀ 17082
│││   ✔ {1} A5 ⫹₈₀ 13139
│││   │✔ Gravel : 2/4 (conf: 0.5)
│││   │✘ Self-Blocking Bricks : 4/4 (conf: 1.0)
│││   ✘ Gravel : 43/44 (conf: 0.9772727272727273)
││✘ Painted metal sheets : 80/80 (conf: 1.0)
│✘ {1} A68 ⫺₇₀ 13129
│ ✔ {1} A14 ⫹₈₀ 11167
│ │✔ Gravel : 12/12 (conf: 1.0)
│ │✘ {1} A20 ⫺₈₀ 12366
│ │ ✔ Bitumen : 61/61 (conf: 1.0)
│ │ ✘ {1} A2 ⫺₆₀ 9750
│ │  ✔ {1} A7 ⫺ 9235
│ │  │✔ Asphalt : 10/10 (conf: 1.0)
│ │  │✘ Bitumen : 2/4 (conf: 0.5)
│ │  ✘ Bitumen : 13/13 (conf: 1.0)
│ ✘ {1} A19 ⫺ 6877
│  ✔ Asphalt : 63/63 (conf: 1.0)
│  ✘ Bitumen : 3/6 (conf: 0.5)
✘ {1} A72 ⫺ 4697
 ✔ {1} ⟨EC⟩ (A66 ⫹ 5886)
 │✔ {1} ⟨DC⟩ (A70 ⫹ 10087)
 ││✔ Trees : 69/69 (conf: 1.0)
 ││✘ {1} ⟨T̅P̅P̅⟩ (A32 ⫺₆₀ 8234)
 ││ ✔ Trees : 9/9 (conf: 1.0)
 ││ ✘ Meadows : 22/22 (conf: 1.0)
 │✘ {1} ⟨N̅T̅P̅P̅⟩ (A100 ⫺₈₀ 25118)
 │ ✔ Meadows : 27/28 (conf: 0.9642857142857143)
 │ ✘ {1} ⟨EC⟩ (A19 ⫺ 7283)
 │  ✔ Bare Soil : 43/46 (conf: 0.9347826086956522)
 │  ✘ {1} ⟨T̅P̅P̅⟩ (A67 ⫺₇₀ 11117)
 │   ✔ Meadows : 16/16 (conf: 1.0)
 │   ✘ {1} A63 ⫺ 6302
 │    ✔ {1} ⟨EC⟩ (A7 ⫺ 5509)
 │    │✔ Bare Soil : 15/15 (conf: 1.0)
 │    │✘ Bare Soil : 3/6 (conf: 0.5)
 │    ✘ Meadows : 5/5 (conf: 1.0)
 ✘ Shadows : 78/78 (conf: 1.0)
● [ 22/07/2021 03:01:20 ] Saving tree to file ./gandalf/trees/tree_95c47bbd1d479460e5071e1df878301d9306a8fde383cd385e5cb673a611c65d.jld...
Test tree:
Decision Tree
Leaves: 31
Tot nodes: 61
Height: 10
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A7 ⫺₆₀ 7897)
✔ {1} A103 ⫺₆₀ 15873
│✔ {1} A1 ⫹ 23216
││✔ {1} A94 ⫺₆₀ 21918
│││✔ {1} A73 ⫹₆₀ 20134
││││✔ Meadows : 0/0 (conf: NaN)
││││✘ {1} A3 ⫺₈₀ 10949
││││ ✔ Bare Soil : 2/2 (conf: 1.0)
││││ ✘ Bare Soil : 2/3 (conf: 0.6666666666666666)
│││✘ {1} A16 ⫺₆₀ 14912
│││ ✔ Self-Blocking Bricks : 9/10 (conf: 0.9)
│││ ✘ {1} A1 ⫹₆₀ 13168
│││  ✔ {1} A65 ⫹ 20937
│││  │✔ {1} A96 ⫺₆₀ 17934
│││  ││✔ Self-Blocking Bricks : 3/5 (conf: 0.6)
│││  ││✘ {1} A75 ⫺ 15982
│││  ││ ✔ {1} A1 ⫺ 7877
│││  ││ │✔ Gravel : 1/2 (conf: 0.5)
│││  ││ │✘ Gravel : 1/3 (conf: 0.3333333333333333)
│││  ││ ✘ {1} A2 ⫺ 7501
│││  ││  ✔ Asphalt : 0/1 (conf: 0.0)
│││  ││  ✘ Self-Blocking Bricks : 0/1 (conf: 0.0)
│││  │✘ Gravel : 3/4 (conf: 0.75)
│││  ✘ {1} A36 ⫹₈₀ 17082
│││   ✔ {1} A5 ⫹₈₀ 13139
│││   │✔ Gravel : 0/0 (conf: NaN)
│││   │✘ Self-Blocking Bricks : 0/2 (conf: 0.0)
│││   ✘ Gravel : 5/7 (conf: 0.7142857142857143)
││✘ Painted metal sheets : 20/21 (conf: 0.9523809523809523)
│✘ {1} A68 ⫺₇₀ 13129
│ ✔ {1} A14 ⫹₈₀ 11167
│ │✔ Gravel : 4/4 (conf: 1.0)
│ │✘ {1} A20 ⫺₈₀ 12366
│ │ ✔ Bitumen : 15/18 (conf: 0.8333333333333334)
│ │ ✘ {1} A2 ⫺₆₀ 9750
│ │  ✔ {1} A7 ⫺ 9235
│ │  │✔ Asphalt : 1/2 (conf: 0.5)
│ │  │✘ Bitumen : 1/1 (conf: 1.0)
│ │  ✘ Bitumen : 4/5 (conf: 0.8)
│ ✘ {1} A19 ⫺ 6877
│  ✔ Asphalt : 12/12 (conf: 1.0)
│  ✘ Bitumen : 0/2 (conf: 0.0)
✘ {1} A72 ⫺ 4697
 ✔ {1} ⟨EC⟩ (A66 ⫹ 5886)
 │✔ {1} ⟨DC⟩ (A70 ⫹ 10087)
 ││✔ Trees : 14/15 (conf: 0.9333333333333333)
 ││✘ {1} ⟨T̅P̅P̅⟩ (A32 ⫺₆₀ 8234)
 ││ ✔ Trees : 3/5 (conf: 0.6)
 ││ ✘ Meadows : 3/5 (conf: 0.6)
 │✘ {1} ⟨N̅T̅P̅P̅⟩ (A100 ⫺₈₀ 25118)
 │ ✔ Meadows : 6/6 (conf: 1.0)
 │ ✘ {1} ⟨EC⟩ (A19 ⫺ 7283)
 │  ✔ Bare Soil : 10/13 (conf: 0.7692307692307693)
 │  ✘ {1} ⟨T̅P̅P̅⟩ (A67 ⫺₇₀ 11117)
 │   ✔ Meadows : 4/5 (conf: 0.8)
 │   ✘ {1} A63 ⫺ 6302
 │    ✔ {1} ⟨EC⟩ (A7 ⫺ 5509)
 │    │✔ Bare Soil : 4/5 (conf: 0.8)
 │    │✘ Bare Soil : 0/1 (conf: 0.0)
 │    ✘ Meadows : 0/0 (conf: NaN)
 ✘ Shadows : 20/20 (conf: 1.0)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Pavia	9	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	81.67%	65.0%	90.0%	100.0%	70.0%	65.0%	100.0%	60.0%	100.0%	85.0%	86.67%	75.0%	76.92%	70.0%	81.25%	95.24%	66.67%	100.0%	85.0%	||	79.38%	[74.29, 81.82, 86.96, 70.0, 72.22, 97.56, 63.16, 100.0, 85.0]%	|||	81.67%	97.71%	81.86%	97.74%	81.22%	
  accuracy: 81.67% kappa: 79.38% 
 13  1  6  0  0  0  0  0  0	65.0%		Asphalt
  0 18  0  0  1  1  0  0  0	90.0%		Bare Soil
  0  0 20  0  0  0  0  0  0	100.0%		Bitumen
  1  0  0 14  0  0  5  0  0	70.0%		Gravel
  0  3  0  0 13  0  1  0  3	65.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  1  1  0  6  0  0 12  0  0	60.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  1  0  0  2  0  0  0 17	85.0%		Trees

overall_acc:	0.8166666666666667
κ =		0.79375
sensitivities:	[0.65, 0.9, 1.0, 0.7, 0.65, 1.0, 0.6, 1.0, 0.85]
specificities:	[0.9875, 0.9625, 0.9625, 0.9625, 0.98125, 0.99375, 0.9625, 1.0, 0.98125]
PPVs:		[0.8666666666666667, 0.75, 0.7692307692307693, 0.7, 0.8125, 0.9523809523809523, 0.6666666666666666, 1.0, 0.85]
NPVs:		[0.9575757575757575, 0.9871794871794872, 1.0, 0.9625, 0.9573170731707317, 1.0, 0.9506172839506173, 1.0, 0.98125]
F1s:		[0.7428571428571429, 0.8181818181818182, 0.8695652173913043, 0.7, 0.7222222222222222, 0.975609756097561, 0.631578947368421, 1.0, 0.85]
accuracies:	[0.95, 0.9555555555555556, 0.9666666666666667, 0.9333333333333333, 0.9444444444444444, 0.9944444444444445, 0.9222222222222223, 1.0, 0.9666666666666667]
mean_accuracy:	0.9592592592592593
Dataset_slice = (900) -> [21, 173, 279, 381, 499, 569, 691, 744, 847, 64, 138, 231, 310, 469, 582, 680, 764, 808, 10, 149, 269, 301, 481, 525, 602, 729, 862, 84, 168, 271, 334, 458, 600, 640, 775, 883, 13, 194, 289, 400, 497, 548, 626, 769, 896, 73, 107, 225, 375, 444, 512, 628, 755, 891, 20, 174, 213, 347, 441, 545, 677, 706, 849, 60, 159, 210, 398, 448, 505, 611, 742, 854, 22, 196, 237, 354, 492, 558, 667, 779, 832, 27, 187, 300, 345, 461, 572, 696, 704, 877, 3, 110, 264, 394, 498, 583, 655, 772, 813, 48, 125, 238, 341, 464, 565, 688, 721, 814, 24, 171, 293, 356, 470, 502, 631, 757, 836, 1, 123, 260, 339, 417, 519, 685, 712, 838, 95, 165, 224, 315, 422, 550, 652, 762, 880, 30, 190, 294, 327, 484, 589, 684, 713, 829, 29, 188, 211, 359, 429, 586, 645, 733, 889, 65, 176, 232, 305, 500, 559, 698, 780, 885, 85, 157, 282, 357, 472, 516, 647, 800, 898, 4, 179, 202, 362, 436, 585, 681, 752, 801, 50, 169, 261, 371, 460, 594, 694, 796, 815, 8, 131, 256, 343, 439, 590, 610, 785, 843, 89, 192, 240, 382, 447, 557, 606, 756, 804, 68, 144, 221, 342, 438, 560, 683, 751, 876, 23, 134, 277, 335, 419, 587, 635, 748, 895, 56, 116, 278, 364, 459, 581, 644, 797, 865, 70, 121, 292, 307, 440, 520, 633, 793, 866, 71, 155, 247, 324, 425, 508, 608, 724, 818, 62, 133, 204, 374, 405, 551, 604, 740, 824, 31, 129, 299, 368, 479, 501, 636, 741, 807, 49, 162, 227, 308, 401, 579, 692, 754, 855, 15, 119, 249, 361, 467, 546, 630, 795, 846, 77, 115, 265, 388, 426, 598, 646, 716, 894, 61, 126, 242, 396, 463, 517, 622, 735, 857, 52, 189, 275, 372, 491, 521, 660, 709, 872, 11, 195, 234, 365, 468, 544, 661, 777, 890, 75, 154, 222, 316, 480, 555, 675, 701, 856, 67, 105, 226, 393, 466, 593, 659, 731, 881, 81, 178, 267, 379, 477, 596, 656, 746, 886, 44, 153, 266, 366, 476, 542, 662, 720, 828, 38, 127, 245, 352, 452, 518, 648, 728, 848, 17, 147, 219, 340, 427, 515, 624, 771, 850, 96, 193, 229, 344, 457, 578, 663, 732, 817, 35, 128, 262, 325, 431, 543, 699, 737, 822, 36, 113, 230, 392, 414, 554, 620, 719, 812, 40, 139, 281, 314, 435, 561, 674, 749, 806, 93, 135, 268, 380, 430, 562, 682, 767, 863, 55, 132, 285, 312, 421, 528, 668, 776, 845, 90, 199, 212, 326, 486, 511, 616, 723, 816, 72, 151, 208, 331, 434, 536, 638, 781, 874, 19, 166, 283, 322, 403, 599, 625, 705, 864, 87, 180, 244, 351, 462, 513, 651, 794, 893, 74, 140, 254, 333, 490, 524, 621, 790, 830, 39, 141, 241, 391, 412, 580, 637, 798, 844, 18, 142, 207, 350, 485, 591, 687, 707, 882, 25, 148, 246, 383, 410, 573, 697, 789, 823, 2, 175, 239, 337, 495, 523, 673, 708, 873, 91, 197, 209, 378, 478, 529, 676, 773, 887, 83, 114, 274, 373, 474, 553, 650, 788, 834, 99, 182, 255, 360, 489, 533, 666, 787, 851, 43, 106, 258, 304, 454, 509, 623, 792, 803, 53, 170, 218, 353, 404, 503, 671, 727, 811, 6, 101, 235, 399, 445, 597, 612, 718, 871, 28, 145, 263, 309, 442, 510, 603, 739, 859, 79, 146, 257, 328, 456, 556, 601, 702, 861, 42, 200, 273, 319, 496, 574, 617, 791, 853, 66, 158, 206, 389, 493, 541, 695, 761, 884, 92, 143, 201, 397, 443, 568, 653, 738, 831, 76, 161, 290, 318, 424, 527, 693, 747, 820, 7, 102, 297, 311, 413, 547, 665, 715, 821, 14, 150, 216, 336, 415, 507, 669, 783, 840, 5, 137, 284, 348, 406, 564, 700, 760, 825, 57, 130, 296, 346, 402, 532, 686, 758, 842, 88, 177, 295, 384, 450, 506, 639, 736, 809, 86, 104, 203, 367, 423, 595, 609, 786, 868, 63, 191, 217, 349, 451, 514, 641, 717, 867, 16, 183, 250, 302, 420, 538, 658, 714, 888, 32, 185, 236, 355, 446, 537, 679, 766, 899, 100, 118, 287, 306, 473, 534, 654, 734, 860, 80, 136, 252, 330, 418, 530, 607, 759, 878, 33, 112, 286, 376, 407, 504, 618, 753, 805, 69, 117, 233, 370, 471, 571, 690, 782, 858, 37, 111, 223, 303, 433, 577, 678, 725, 841, 26, 164, 276, 317, 449, 588, 627, 743, 819, 59, 167, 251, 323, 408, 575, 615, 711, 879, 41, 160, 280, 358, 483, 567, 672, 765, 839, 12, 172, 228, 321, 455, 566, 657, 768, 897, 9, 108, 272, 386, 437, 584, 649, 722, 826, 47, 156, 253, 369, 482, 531, 643, 774, 900, 46, 103, 259, 313, 428, 576, 619, 745, 810, 51, 198, 220, 332, 487, 563, 664, 778, 833, 45, 181, 215, 329, 409, 526, 605, 784, 802, 98, 152, 291, 320, 453, 592, 629, 799, 827, 94, 184, 288, 363, 488, 535, 689, 726, 869, 34, 122, 205, 338, 411, 522, 614, 770, 875, 54, 163, 214, 385, 416, 570, 613, 763, 837, 78, 109, 298, 377, 494, 539, 642, 703, 870, 58, 124, 270, 387, 432, 549, 632, 750, 835, 97, 186, 248, 390, 475, 552, 670, 710, 892, 82, 120, 243, 395, 465, 540, 634, 730, 852]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2877.69 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	2673.39 MBs	(shape (3, 4, 3, 4, 720, 1030, 7), 699478150 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 03:01:27 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (427+293=720 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A10 ⫹₆₀ 8402), purity -1.6378782835840058
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (213+80=293 samples) on frame 1 with decision: {1} A73 ⫹ 12039, purity -0.81240754605729
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (168+259=427 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A103 ⫺₆₀ 15873), purity -1.274879679590644
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (104+64=168 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A17 ⫺₇₀ 12376), purity -0.5574757244569791
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (93+120=213 samples) on frame 1 with decision: {1} A63 ⫺ 4062, purity -0.583405507193075
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+179=259 samples) on frame 1 with decision: {1} A3 ⫹₇₀ 22443, purity -0.865125083171042
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+15=93 samples) on frame 1 with decision: {1} A73 ⫺ 17568, purity -0.21743956401756298
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (64+40=104 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A85 ⫺₇₀ 13495), purity -0.5878047979964662
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (89+31=120 samples) on frame 1 with decision: {1} A100 ⫺₈₀ 25158, purity -0.5107974012919431
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (151+28=179 samples) on frame 1 with decision: {1} A94 ⫺₆₀ 21898, purity -0.8470299406161546
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+11=15 samples) on frame 1 with decision: {1} A2 ⫹₈₀ 7322, purity -0.14995603856501555
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+12=40 samples) on frame 1 with decision: {1} A14 ⫹₈₀ 11167, purity -0.6306687157446464
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (54+35=89 samples) on frame 1 with decision: {1} A42 ⫹ 9760, purity -0.4868400626855493
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (110+41=151 samples) on frame 1 with decision: {1} A16 ⫺₆₀ 14853, purity -0.7029797176574322
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+7=28 samples) on frame 1 with decision: {1} A64 ⫹ 18985, purity -0.29315045861460254
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (37+4=41 samples) on frame 1 with decision: {1} A1 ⫺₆₀ 14754, purity -0.10143617276487003
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (43+11=54 samples) on frame 1 with decision: {1} A90 ⫺₇₀ 24593, purity -0.2283070857437951
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+16=28 samples) on frame 1 with decision: {1} A1 ⫹ 14744, purity -0.46885626961528004
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+24=35 samples) on frame 1 with decision: {1} ⟨NTPP⟩ (A70 ⫺ 11811), purity -0.2924303046911273
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (46+64=110 samples) on frame 1 with decision: {1} A1 ⫹₆₀ 13168, purity -0.6643573007041588
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+4=11 samples) on frame 1 with decision: {1} A1 ⫹₈₀ 8511, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+6=11 samples) on frame 1 with decision: {1} A5 ⫹ 8462, purity 1.2111523905001707e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+4=12 samples) on frame 1 with decision: {1} A1 ⫺ 9453, purity -0.23104906018664842
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+4=16 samples) on frame 1 with decision: {1} A3 ⫺₇₀ 10117, purity -0.14058378615470207
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+37=46 samples) on frame 1 with decision: {1} A44 ⫺₈₀ 16230, purity -0.20755896792222156
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+53=64 samples) on frame 1 with decision: {1} A65 ⫹ 21006, purity -0.6216160133953795
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+32=53 samples) on frame 1 with decision: {1} A95 ⫺₇₀ 17984, purity -0.5157969644951804
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A1 ⫹ 15982, purity -0.373895370560698
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+11=21 samples) on frame 1 with decision: {1} A2 ⫺₆₀ 11296, purity -0.7796765157931846
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A2 ⫺ 7867, purity -0.41588830833596707
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+4=11 samples) on frame 1 with decision: {1} A1 ⫹₇₀ 13020, purity -0.3780802803054247
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
402.664724 seconds (5.23 G allocations: 102.497 GiB, 10.84% gc time)
Train tree:
Decision Tree
Leaves: 32
Tot nodes: 63
Height: 10
Modal height:  4
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A10 ⫹₆₀ 8402)
✔ {1} A73 ⫹ 12039
│✔ Shadows : 79/80 (conf: 0.9875)
│✘ {1} A63 ⫺ 4062
│ ✔ {1} A100 ⫺₈₀ 25158
│ │✔ Meadows : 30/31 (conf: 0.967741935483871)
│ │✘ {1} A42 ⫹ 9760
│ │ ✔ {1} ⟨NTPP⟩ (A70 ⫺ 11811)
│ │ │✔ Meadows : 22/24 (conf: 0.9166666666666666)
│ │ │✘ {1} A1 ⫹₈₀ 8511
│ │ │ ✔ Bare Soil : 3/4 (conf: 0.75)
│ │ │ ✘ Bare Soil : 7/7 (conf: 1.0)
│ │ ✘ {1} A90 ⫺₇₀ 24593
│ │  ✔ {1} A5 ⫹ 8462
│ │  │✔ Meadows : 6/6 (conf: 1.0)
│ │  │✘ Bare Soil : 5/5 (conf: 1.0)
│ │  ✘ Bare Soil : 42/43 (conf: 0.9767441860465116)
│ ✘ {1} A73 ⫺ 17568
│  ✔ {1} A2 ⫹₈₀ 7322
│  │✔ Meadows : 11/11 (conf: 1.0)
│  │✘ Trees : 3/4 (conf: 0.75)
│  ✘ Trees : 75/78 (conf: 0.9615384615384616)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A103 ⫺₆₀ 15873)
 ✔ {1} A3 ⫹₇₀ 22443
 │✔ {1} A94 ⫺₆₀ 21898
 ││✔ {1} A64 ⫹ 18985
 │││✔ Meadows : 5/7 (conf: 0.7142857142857143)
 │││✘ Bare Soil : 20/21 (conf: 0.9523809523809523)
 ││✘ {1} A16 ⫺₆₀ 14853
 ││ ✔ {1} A1 ⫺₆₀ 14754
 ││ │✔ Gravel : 2/4 (conf: 0.5)
 ││ │✘ Self-Blocking Bricks : 37/37 (conf: 1.0)
 ││ ✘ {1} A1 ⫹₆₀ 13168
 ││  ✔ {1} A65 ⫹ 21006
 ││  │✔ {1} A95 ⫺₇₀ 17984
 ││  ││✔ Self-Blocking Bricks : 31/32 (conf: 0.96875)
 ││  ││✘ {1} A2 ⫺₆₀ 11296
 ││  ││ ✔ {1} A1 ⫹₇₀ 13020
 ││  ││ │✔ Asphalt : 2/4 (conf: 0.5)
 ││  ││ │✘ Gravel : 7/7 (conf: 1.0)
 ││  ││ ✘ {1} A2 ⫺ 7867
 ││  ││  ✔ Gravel : 2/4 (conf: 0.5)
 ││  ││  ✘ Self-Blocking Bricks : 6/6 (conf: 1.0)
 ││  │✘ Gravel : 11/11 (conf: 1.0)
 ││  ✘ {1} A44 ⫺₈₀ 16230
 ││   ✔ Gravel : 37/37 (conf: 1.0)
 ││   ✘ {1} A1 ⫹ 15982
 ││    ✔ Self-Blocking Bricks : 3/5 (conf: 0.6)
 ││    ✘ Gravel : 4/4 (conf: 1.0)
 │✘ Painted metal sheets : 80/80 (conf: 1.0)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A17 ⫺₇₀ 12376)
  ✔ Bitumen : 63/64 (conf: 0.984375)
  ✘ {1} ⟨N̅T̅P̅P̅⟩ (A85 ⫺₇₀ 13495)
   ✔ {1} A14 ⫹₈₀ 11167
   │✔ Gravel : 12/12 (conf: 1.0)
   │✘ {1} A1 ⫹ 14744
   │ ✔ {1} A3 ⫺₇₀ 10117
   │ │✔ Asphalt : 3/4 (conf: 0.75)
   │ │✘ Bitumen : 12/12 (conf: 1.0)
   │ ✘ {1} A1 ⫺ 9453
   │  ✔ Gravel : 2/4 (conf: 0.5)
   │  ✘ Asphalt : 8/8 (conf: 1.0)
   ✘ Asphalt : 60/64 (conf: 0.9375)
● [ 22/07/2021 03:08:10 ] Saving tree to file ./gandalf/trees/tree_0d8390ab072ab9c2f32bc1b526d7ad8bab6fdd4b5c8ef661674789ce4fedf43e.jld...
Test tree:
Decision Tree
Leaves: 32
Tot nodes: 63
Height: 10
Modal height:  4
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A10 ⫹₆₀ 8402)
✔ {1} A73 ⫹ 12039
│✔ Shadows : 19/20 (conf: 0.95)
│✘ {1} A63 ⫺ 4062
│ ✔ {1} A100 ⫺₈₀ 25158
│ │✔ Meadows : 5/6 (conf: 0.8333333333333334)
│ │✘ {1} A42 ⫹ 9760
│ │ ✔ {1} ⟨NTPP⟩ (A70 ⫺ 11811)
│ │ │✔ Meadows : 4/7 (conf: 0.5714285714285714)
│ │ │✘ {1} A1 ⫹₈₀ 8511
│ │ │ ✔ Bare Soil : 0/0 (conf: NaN)
│ │ │ ✘ Bare Soil : 1/1 (conf: 1.0)
│ │ ✘ {1} A90 ⫺₇₀ 24593
│ │  ✔ {1} A5 ⫹ 8462
│ │  │✔ Meadows : 1/4 (conf: 0.25)
│ │  │✘ Bare Soil : 2/2 (conf: 1.0)
│ │  ✘ Bare Soil : 7/9 (conf: 0.7777777777777778)
│ ✘ {1} A73 ⫺ 17568
│  ✔ {1} A2 ⫹₈₀ 7322
│  │✔ Meadows : 4/4 (conf: 1.0)
│  │✘ Trees : 1/2 (conf: 0.5)
│  ✘ Trees : 17/20 (conf: 0.85)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A103 ⫺₆₀ 15873)
 ✔ {1} A3 ⫹₇₀ 22443
 │✔ {1} A94 ⫺₆₀ 21898
 ││✔ {1} A64 ⫹ 18985
 │││✔ Meadows : 0/1 (conf: 0.0)
 │││✘ Bare Soil : 3/5 (conf: 0.6)
 ││✘ {1} A16 ⫺₆₀ 14853
 ││ ✔ {1} A1 ⫺₆₀ 14754
 ││ │✔ Gravel : 0/0 (conf: NaN)
 ││ │✘ Self-Blocking Bricks : 7/8 (conf: 0.875)
 ││ ✘ {1} A1 ⫹₆₀ 13168
 ││  ✔ {1} A65 ⫹ 21006
 ││  │✔ {1} A95 ⫺₇₀ 17984
 ││  ││✔ Self-Blocking Bricks : 6/8 (conf: 0.75)
 ││  ││✘ {1} A2 ⫺₆₀ 11296
 ││  ││ ✔ {1} A1 ⫹₇₀ 13020
 ││  ││ │✔ Asphalt : 0/0 (conf: NaN)
 ││  ││ │✘ Gravel : 0/1 (conf: 0.0)
 ││  ││ ✘ {1} A2 ⫺ 7867
 ││  ││  ✔ Gravel : 1/1 (conf: 1.0)
 ││  ││  ✘ Self-Blocking Bricks : 2/3 (conf: 0.6666666666666666)
 ││  │✘ Gravel : 1/1 (conf: 1.0)
 ││  ✘ {1} A44 ⫺₈₀ 16230
 ││   ✔ Gravel : 8/11 (conf: 0.7272727272727273)
 ││   ✘ {1} A1 ⫹ 15982
 ││    ✔ Self-Blocking Bricks : 0/0 (conf: NaN)
 ││    ✘ Gravel : 2/2 (conf: 1.0)
 │✘ Painted metal sheets : 20/20 (conf: 1.0)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A17 ⫺₇₀ 12376)
  ✔ Bitumen : 15/15 (conf: 1.0)
  ✘ {1} ⟨N̅T̅P̅P̅⟩ (A85 ⫺₇₀ 13495)
   ✔ {1} A14 ⫹₈₀ 11167
   │✔ Gravel : 4/4 (conf: 1.0)
   │✘ {1} A1 ⫹ 14744
   │ ✔ {1} A3 ⫺₇₀ 10117
   │ │✔ Asphalt : 0/0 (conf: NaN)
   │ │✘ Bitumen : 5/5 (conf: 1.0)
   │ ✘ {1} A1 ⫺ 9453
   │  ✔ Gravel : 0/0 (conf: NaN)
   │  ✘ Asphalt : 1/1 (conf: 1.0)
   ✘ Asphalt : 18/19 (conf: 0.9473684210526315)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Pavia	10	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	85.56%	95.0%	65.0%	100.0%	80.0%	70.0%	100.0%	75.0%	95.0%	90.0%	95.0%	76.47%	100.0%	80.0%	63.64%	100.0%	78.95%	95.0%	81.82%	||	83.75%	[95.0, 70.27, 100.0, 80.0, 66.67, 100.0, 76.92, 95.0, 85.71]%	|||	85.56%	98.19%	85.65%	98.2%	85.51%	
  accuracy: 85.56% kappa: 83.75% 
 19  0  0  0  0  0  0  1  0	95.0%		Asphalt
  0 13  0  0  7  0  0  0  0	65.0%		Bare Soil
  0  0 20  0  0  0  0  0  0	100.0%		Bitumen
  0  0  0 16  0  0  4  0  0	80.0%		Gravel
  0  2  0  0 14  0  0  0  4	70.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  1  0  4  0  0 15  0  0	75.0%		Self-Blocking Bricks
  1  0  0  0  0  0  0 19  0	95.0%		Shadows
  0  1  0  0  1  0  0  0 18	90.0%		Trees

overall_acc:	0.8555555555555555
κ =		0.8375
sensitivities:	[0.95, 0.65, 1.0, 0.8, 0.7, 1.0, 0.75, 0.95, 0.9]
specificities:	[0.99375, 0.975, 1.0, 0.975, 0.95, 1.0, 0.975, 0.99375, 0.975]
PPVs:		[0.95, 0.7647058823529411, 1.0, 0.8, 0.6363636363636364, 1.0, 0.7894736842105263, 0.95, 0.8181818181818182]
NPVs:		[0.99375, 0.9570552147239264, 1.0, 0.975, 0.9620253164556962, 1.0, 0.968944099378882, 0.99375, 0.9873417721518988]
F1s:		[0.95, 0.7027027027027027, 1.0, 0.8, 0.6666666666666666, 1.0, 0.7692307692307693, 0.95, 0.8571428571428571]
accuracies:	[0.9888888888888889, 0.9388888888888889, 1.0, 0.9555555555555556, 0.9222222222222223, 1.0, 0.95, 0.9888888888888889, 0.9666666666666667]
mean_accuracy:	0.9679012345679013
Iteration "((3,7),false,"o_RCC5","TestOpAll"),100,-1,Pavia"...
● [ 22/07/2021 03:08:10 ] Loading dataset from file ./gandalf/cache/dataset_af12187cc6a4fcfe36e5cad8318e57a626cd56b4bfeb76a509e281e14d6ada81.jld...
Dataseeds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

executing run '((3,7),false,"o_RCC5","TestOpAll"),100,-1,Pavia'...
dataset type = Tuple{Array{Int64, 4}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (test_operators = TestOperator[⫺, ⫹, ⫺₉₀, ⫹₉₀, ⫺₈₀, ⫹₈₀, ⫺₇₀, ⫹₇₀, ⫺₆₀, ⫹₆₀], ontology = Ontology{DecisionTree.ModalLogic.Interval2D}(RCC5))
dataset_slices    = (10 dataset_slices)

Frame 1/1
  0.002736 seconds (11.36 k allocations: 1.070 MiB)
Frame 1/1
┌ LogLevel(-500): OntologicalDataset -> FeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:11
┌ LogLevel(-500): Instance 1/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 723/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 542/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 361/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 180/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): FeatModalDataset -> StumpFeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:388
┌ LogLevel(-500): Instance 1/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 723/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 180/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 542/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 361/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
106.786201 seconds (1.16 G allocations: 65.874 GiB, 67.54% gc time, 0.09% compilation time)
Dataset_slice = (900) -> [10, 122, 267, 386, 478, 583, 633, 707, 810, 3, 166, 252, 331, 497, 503, 670, 754, 819, 27, 190, 228, 353, 403, 521, 606, 735, 887, 63, 130, 246, 366, 462, 566, 687, 712, 872, 50, 195, 235, 350, 474, 501, 671, 769, 829, 57, 186, 201, 397, 447, 511, 660, 778, 843, 36, 116, 254, 326, 457, 542, 622, 766, 867, 21, 123, 248, 340, 469, 593, 666, 720, 868, 75, 157, 258, 336, 417, 509, 634, 704, 854, 78, 183, 238, 394, 408, 596, 624, 759, 862, 35, 154, 264, 376, 477, 599, 697, 748, 865, 66, 191, 274, 307, 448, 548, 602, 787, 823, 20, 167, 215, 392, 467, 549, 650, 795, 875, 67, 188, 239, 310, 434, 568, 682, 775, 890, 25, 141, 231, 330, 490, 594, 678, 732, 871, 24, 117, 270, 400, 492, 592, 668, 750, 816, 82, 194, 226, 387, 455, 560, 690, 793, 825, 74, 197, 289, 378, 441, 565, 683, 788, 896, 69, 105, 227, 341, 461, 539, 636, 705, 822, 81, 187, 300, 388, 427, 585, 646, 776, 811, 28, 159, 210, 342, 405, 531, 675, 710, 856, 15, 179, 244, 323, 420, 554, 618, 714, 830, 59, 163, 223, 332, 416, 558, 661, 740, 878, 29, 124, 268, 351, 459, 564, 601, 786, 820, 18, 153, 232, 329, 500, 582, 673, 767, 847, 31, 162, 220, 319, 418, 535, 685, 791, 821, 43, 177, 288, 346, 465, 576, 681, 770, 876, 40, 155, 249, 325, 470, 575, 625, 784, 860, 12, 149, 205, 327, 496, 578, 651, 718, 848, 83, 192, 275, 305, 464, 597, 665, 774, 836, 100, 145, 247, 398, 415, 508, 688, 746, 888, 94, 178, 261, 322, 488, 519, 607, 717, 824, 16, 110, 291, 347, 485, 551, 680, 722, 849, 51, 119, 204, 337, 466, 590, 612, 796, 894, 73, 148, 297, 362, 449, 522, 611, 749, 885, 19, 103, 292, 358, 425, 533, 623, 800, 801, 8, 142, 213, 382, 499, 530, 684, 785, 846, 11, 134, 207, 345, 472, 598, 628, 761, 827, 95, 136, 296, 357, 407, 515, 652, 701, 881, 58, 169, 284, 339, 458, 595, 632, 709, 899, 72, 101, 241, 321, 491, 581, 603, 777, 898, 13, 127, 230, 349, 432, 550, 620, 723, 863, 53, 172, 240, 301, 435, 555, 657, 757, 813, 22, 200, 285, 335, 483, 532, 663, 744, 859, 71, 176, 260, 379, 437, 517, 643, 782, 869, 87, 139, 202, 399, 439, 514, 672, 702, 855, 33, 160, 299, 389, 451, 544, 674, 727, 828, 61, 168, 208, 343, 480, 540, 617, 781, 808, 90, 180, 233, 309, 428, 586, 629, 772, 897, 55, 175, 216, 348, 476, 518, 613, 731, 886, 60, 137, 290, 383, 443, 573, 637, 711, 900, 96, 198, 211, 308, 456, 552, 610, 706, 852, 68, 144, 214, 317, 431, 563, 692, 733, 806, 77, 189, 203, 315, 471, 507, 669, 789, 832, 9, 135, 279, 361, 473, 536, 621, 743, 858, 42, 147, 221, 352, 481, 553, 698, 762, 834, 64, 115, 287, 391, 423, 528, 604, 763, 835, 85, 196, 256, 390, 453, 516, 614, 752, 818, 54, 182, 280, 359, 442, 588, 689, 783, 837, 2, 140, 245, 320, 429, 541, 609, 726, 805, 23, 170, 272, 313, 402, 559, 656, 764, 839, 91, 104, 269, 324, 413, 538, 642, 737, 833, 65, 181, 257, 344, 414, 505, 619, 758, 857, 48, 132, 224, 367, 487, 523, 638, 742, 826, 70, 173, 271, 303, 444, 589, 658, 779, 804, 80, 118, 276, 338, 460, 570, 644, 794, 895, 49, 171, 265, 333, 454, 577, 677, 773, 817, 7, 120, 281, 360, 438, 572, 694, 768, 807, 88, 193, 218, 372, 482, 584, 635, 753, 873, 45, 121, 229, 381, 475, 510, 676, 771, 866, 14, 174, 236, 364, 450, 534, 645, 741, 844, 97, 128, 283, 304, 436, 562, 695, 751, 841, 26, 111, 243, 311, 463, 561, 653, 729, 883, 52, 112, 294, 302, 412, 506, 654, 797, 851, 4, 158, 234, 384, 410, 569, 648, 721, 861, 32, 150, 253, 371, 409, 512, 616, 780, 870, 34, 146, 277, 374, 493, 579, 699, 765, 893, 99, 125, 266, 380, 430, 504, 631, 798, 802, 93, 102, 206, 363, 422, 587, 659, 792, 842, 56, 152, 286, 375, 445, 513, 630, 715, 882, 46, 113, 250, 306, 498, 524, 627, 730, 812, 47, 185, 263, 373, 404, 525, 679, 716, 850, 84, 108, 242, 385, 419, 600, 691, 760, 877, 79, 129, 217, 318, 486, 546, 655, 734, 840, 39, 156, 282, 365, 494, 591, 640, 799, 815, 17, 114, 251, 312, 468, 574, 615, 756, 838, 38, 143, 225, 369, 452, 556, 700, 790, 880, 5, 151, 212, 368, 426, 502, 649, 736, 809, 44, 138, 278, 355, 433, 526, 641, 724, 831, 98, 126, 237, 395, 489, 529, 693, 713, 889, 86, 109, 273, 334, 421, 537, 608, 755, 853, 92, 199, 262, 354, 479, 527, 647, 725, 803, 41, 184, 209, 328, 446, 547, 605, 719, 814, 89, 107, 259, 370, 411, 567, 664, 703, 891, 6, 131, 222, 377, 495, 545, 639, 708, 845, 1, 106, 295, 314, 401, 557, 667, 747, 864, 76, 161, 255, 396, 406, 520, 686, 738, 879, 37, 164, 298, 393, 484, 543, 696, 739, 884, 30, 133, 219, 356, 440, 580, 626, 745, 874, 62, 165, 293, 316, 424, 571, 662, 728, 892]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	1731.95 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1527.65 MBs	(shape (3, 4, 3, 4, 720, 1030, 4), 427161600 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 03:10:03 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (466+254=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A103 ⫹₇₀ 15725), purity -1.6343961317464302
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (220+246=466 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A36 ⫺₇₀ 14645), purity -1.232559919300089
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+172=254 samples) on frame 1 with decision: {1} A44 ⫺ 9037, purity -0.6712677017342319
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (126+94=220 samples) on frame 1 with decision: {1} ⟨DR⟩ (A64 ⫹ 4142), purity -0.60744659168771
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (106+66=172 samples) on frame 1 with decision: {1} ⟨PO⟩ (A66 ⫹₆₀ 12614), purity -0.5203404773730408
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (167+79=246 samples) on frame 1 with decision: {1} A1 ⫺₈₀ 19312, purity -0.710422098486116
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (106+20=126 samples) on frame 1 with decision: {1} ⟨DR⟩ (A32 ⫺ 13703), purity -0.5928827108309802
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+92=106 samples) on frame 1 with decision: {1} ⟨PP⟩ (A14 ⫺ 11662), purity -0.4041218769785246
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (20+147=167 samples) on frame 1 with decision: {1} A81 ⫹ 24008, purity -0.6800425465960501
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (25+69=94 samples) on frame 1 with decision: {1} ⟨DR⟩ (A73 ⫹ 16924), purity -0.17899246463012128
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+11=25 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A19 ⫺₆₀ 4102), purity -0.1340398828336647
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (35+71=106 samples) on frame 1 with decision: {1} ⟨DR⟩ (A99 ⫹ 24286), purity -0.4562065574074729
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (108+39=147 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A16 ⫺ 15002), purity -0.6302656182713784
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+12=92 samples) on frame 1 with decision: {1} ⟨DR⟩ (A99 ⫺ 16884), purity -0.31077003581010576
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (75+33=108 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A2 ⫹₈₀ 11821), purity -0.6146412476215064
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+8=12 samples) on frame 1 with decision: {1} A1 ⫺ 12564, purity -0.43862515571056054
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A1 ⫺₈₀ 5509, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (29+42=71 samples) on frame 1 with decision: {1} ⟨DR⟩ (A36 ⫺ 9027), purity -0.547935616724772
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A1 ⫺ 17419, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+18=29 samples) on frame 1 with decision: {1} A69 ⫺ 11910, purity -0.22225788970134694
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (31+44=75 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A12 ⫺₈₀ 13178), purity -0.5159631765305435
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+19=33 samples) on frame 1 with decision: {1} ⟨PO⟩ (A16 ⫺₇₀ 13604), purity -0.28971858987292726
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+37=42 samples) on frame 1 with decision: {1} A5 ⫹ 6906, purity -0.30176275702292593
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+8=14 samples) on frame 1 with decision: {1} ⟨PO⟩ (A21 ⫹₆₀ 12643), purity 9.516197353929913e-17
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A11 ⫺ 4855, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+16=44 samples) on frame 1 with decision: {1} ⟨PP⟩ (A10 ⫺ 15160), purity -0.4345778848093911
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (25+6=31 samples) on frame 1 with decision: {1} ⟨PO⟩ (A42 ⫹ 15655), purity -0.13415751881805388
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+27=37 samples) on frame 1 with decision: {1} ⟨DR⟩ (A103 ⫹ 22017), purity -0.18189504513763657
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} ⟨DR⟩ (A76 ⫹ 19579), purity 1.3322676295501878e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+19=28 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A1 ⫺ 8284), purity -0.44657463440425593
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+10=19 samples) on frame 1 with decision: {1} A101 ⫺ 18222, purity -0.32150752739731253
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A2 ⫺ 10414, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
15906.595061 seconds (50.23 G allocations: 5.147 TiB, 29.71% gc time, 0.03% compilation time)
Train tree:
Decision Tree
Leaves: 33
Tot nodes: 65
Height: 11
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₇₀ 15725)
✔ {1} A44 ⫺ 9037
│✔ {1} ⟨PO⟩ (A66 ⫹₆₀ 12614)
││✔ Asphalt : 64/66 (conf: 0.9696969696969697)
││✘ {1} ⟨PP⟩ (A14 ⫺ 11662)
││ ✔ {1} ⟨DR⟩ (A99 ⫺ 16884)
││ │✔ {1} A1 ⫺ 12564
││ ││✔ {1} A1 ⫺ 17419
││ │││✔ Asphalt : 3/4 (conf: 0.75)
││ │││✘ Asphalt : 4/4 (conf: 1.0)
││ ││✘ Bitumen : 3/4 (conf: 0.75)
││ │✘ Bitumen : 75/80 (conf: 0.9375)
││ ✘ Gravel : 14/14 (conf: 1.0)
│✘ Shadows : 80/82 (conf: 0.975609756097561)
✘ {1} ⟨P̅P̅⟩ (A36 ⫺₇₀ 14645)
 ✔ {1} A1 ⫺₈₀ 19312
 │✔ Painted metal sheets : 79/79 (conf: 1.0)
 │✘ {1} A81 ⫹ 24008
 │ ✔ {1} ⟨P̅P̅⟩ (A16 ⫺ 15002)
 │ │✔ Self-Blocking Bricks : 37/39 (conf: 0.9487179487179487)
 │ │✘ {1} ⟨P̅P̅⟩ (A2 ⫹₈₀ 11821)
 │ │ ✔ {1} ⟨PO⟩ (A16 ⫺₇₀ 13604)
 │ │ │✔ Self-Blocking Bricks : 19/19 (conf: 1.0)
 │ │ │✘ {1} ⟨PO⟩ (A21 ⫹₆₀ 12643)
 │ │ │ ✔ Self-Blocking Bricks : 8/8 (conf: 1.0)
 │ │ │ ✘ Gravel : 6/6 (conf: 1.0)
 │ │ ✘ {1} ⟨P̅P̅⟩ (A12 ⫺₈₀ 13178)
 │ │  ✔ {1} ⟨PP⟩ (A10 ⫺ 15160)
 │ │  │✔ Gravel : 16/16 (conf: 1.0)
 │ │  │✘ {1} ⟨P̅P̅⟩ (A1 ⫺ 8284)
 │ │  │ ✔ {1} A101 ⫺ 18222
 │ │  │ │✔ {1} A2 ⫺ 10414
 │ │  │ ││✔ Self-Blocking Bricks : 6/6 (conf: 1.0)
 │ │  │ ││✘ Gravel : 3/4 (conf: 0.75)
 │ │  │ │✘ Gravel : 9/9 (conf: 1.0)
 │ │  │ ✘ Self-Blocking Bricks : 9/9 (conf: 1.0)
 │ │  ✘ {1} ⟨PO⟩ (A42 ⫹ 15655)
 │ │   ✔ Gravel : 3/6 (conf: 0.5)
 │ │   ✘ Gravel : 25/25 (conf: 1.0)
 │ ✘ Bare Soil : 20/20 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A64 ⫹ 4142)
  ✔ {1} ⟨DR⟩ (A73 ⫹ 16924)
  │✔ Trees : 69/69 (conf: 1.0)
  │✘ {1} ⟨P̅P̅⟩ (A19 ⫺₆₀ 4102)
  │ ✔ {1} A1 ⫺₈₀ 5509
  │ │✔ Trees : 7/7 (conf: 1.0)
  │ │✘ Trees : 3/4 (conf: 0.75)
  │ ✘ Meadows : 14/14 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A32 ⫺ 13703)
   ✔ Bare Soil : 19/20 (conf: 0.95)
   ✘ {1} ⟨DR⟩ (A99 ⫹ 24286)
    ✔ {1} ⟨DR⟩ (A36 ⫺ 9027)
    │✔ {1} A5 ⫹ 6906
    ││✔ {1} ⟨DR⟩ (A103 ⫹ 22017)
    │││✔ Bare Soil : 27/27 (conf: 1.0)
    │││✘ {1} ⟨DR⟩ (A76 ⫹ 19579)
    │││ ✔ Meadows : 4/4 (conf: 1.0)
    │││ ✘ Bare Soil : 6/6 (conf: 1.0)
    ││✘ Meadows : 5/5 (conf: 1.0)
    │✘ {1} A69 ⫺ 11910
    │ ✔ Meadows : 18/18 (conf: 1.0)
    │ ✘ {1} A11 ⫺ 4855
    │  ✔ Bare Soil : 7/7 (conf: 1.0)
    │  ✘ Meadows : 3/4 (conf: 0.75)
    ✘ Meadows : 35/35 (conf: 1.0)
● [ 22/07/2021 07:35:09 ] Saving tree to file ./gandalf/trees/tree_883565917575b76dc10bffeb2a46639a9acb0bb067e3a36f36e4550e3273e5c1.jld...
Test tree:
Decision Tree
Leaves: 33
Tot nodes: 65
Height: 11
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₇₀ 15725)
✔ {1} A44 ⫺ 9037
│✔ {1} ⟨PO⟩ (A66 ⫹₆₀ 12614)
││✔ Asphalt : 13/14 (conf: 0.9285714285714286)
││✘ {1} ⟨PP⟩ (A14 ⫺ 11662)
││ ✔ {1} ⟨DR⟩ (A99 ⫺ 16884)
││ │✔ {1} A1 ⫺ 12564
││ ││✔ {1} A1 ⫺ 17419
││ │││✔ Asphalt : 0/0 (conf: NaN)
││ │││✘ Asphalt : 1/1 (conf: 1.0)
││ ││✘ Bitumen : 0/1 (conf: 0.0)
││ │✘ Bitumen : 17/20 (conf: 0.85)
││ ✘ Gravel : 3/3 (conf: 1.0)
│✘ Shadows : 20/21 (conf: 0.9523809523809523)
✘ {1} ⟨P̅P̅⟩ (A36 ⫺₇₀ 14645)
 ✔ {1} A1 ⫺₈₀ 19312
 │✔ Painted metal sheets : 19/20 (conf: 0.95)
 │✘ {1} A81 ⫹ 24008
 │ ✔ {1} ⟨P̅P̅⟩ (A16 ⫺ 15002)
 │ │✔ Self-Blocking Bricks : 8/12 (conf: 0.6666666666666666)
 │ │✘ {1} ⟨P̅P̅⟩ (A2 ⫹₈₀ 11821)
 │ │ ✔ {1} ⟨PO⟩ (A16 ⫺₇₀ 13604)
 │ │ │✔ Self-Blocking Bricks : 5/8 (conf: 0.625)
 │ │ │✘ {1} ⟨PO⟩ (A21 ⫹₆₀ 12643)
 │ │ │ ✔ Self-Blocking Bricks : 1/1 (conf: 1.0)
 │ │ │ ✘ Gravel : 0/0 (conf: NaN)
 │ │ ✘ {1} ⟨P̅P̅⟩ (A12 ⫺₈₀ 13178)
 │ │  ✔ {1} ⟨PP⟩ (A10 ⫺ 15160)
 │ │  │✔ Gravel : 2/3 (conf: 0.6666666666666666)
 │ │  │✘ {1} ⟨P̅P̅⟩ (A1 ⫺ 8284)
 │ │  │ ✔ {1} A101 ⫺ 18222
 │ │  │ │✔ {1} A2 ⫺ 10414
 │ │  │ ││✔ Self-Blocking Bricks : 1/1 (conf: 1.0)
 │ │  │ ││✘ Gravel : 1/2 (conf: 0.5)
 │ │  │ │✘ Gravel : 2/4 (conf: 0.5)
 │ │  │ ✘ Self-Blocking Bricks : 0/2 (conf: 0.0)
 │ │  ✘ {1} ⟨PO⟩ (A42 ⫹ 15655)
 │ │   ✔ Gravel : 0/2 (conf: 0.0)
 │ │   ✘ Gravel : 4/5 (conf: 0.8)
 │ ✘ Bare Soil : 2/3 (conf: 0.6666666666666666)
 ✘ {1} ⟨DR⟩ (A64 ⫹ 4142)
  ✔ {1} ⟨DR⟩ (A73 ⫹ 16924)
  │✔ Trees : 16/18 (conf: 0.8888888888888888)
  │✘ {1} ⟨P̅P̅⟩ (A19 ⫺₆₀ 4102)
  │ ✔ {1} A1 ⫺₈₀ 5509
  │ │✔ Trees : 0/0 (conf: NaN)
  │ │✘ Trees : 0/0 (conf: NaN)
  │ ✘ Meadows : 4/7 (conf: 0.5714285714285714)
  ✘ {1} ⟨DR⟩ (A32 ⫺ 13703)
   ✔ Bare Soil : 3/4 (conf: 0.75)
   ✘ {1} ⟨DR⟩ (A99 ⫹ 24286)
    ✔ {1} ⟨DR⟩ (A36 ⫺ 9027)
    │✔ {1} A5 ⫹ 6906
    ││✔ {1} ⟨DR⟩ (A103 ⫹ 22017)
    │││✔ Bare Soil : 8/9 (conf: 0.8888888888888888)
    │││✘ {1} ⟨DR⟩ (A76 ⫹ 19579)
    │││ ✔ Meadows : 0/1 (conf: 0.0)
    │││ ✘ Bare Soil : 3/4 (conf: 0.75)
    ││✘ Meadows : 1/2 (conf: 0.5)
    │✘ {1} A69 ⫺ 11910
    │ ✔ Meadows : 2/3 (conf: 0.6666666666666666)
    │ ✘ {1} A11 ⫺ 4855
    │  ✔ Bare Soil : 0/0 (conf: NaN)
    │  ✘ Meadows : 0/0 (conf: NaN)
    ✘ Meadows : 8/9 (conf: 0.8888888888888888)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Pavia	1	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	80.0%	70.0%	80.0%	85.0%	60.0%	75.0%	95.0%	75.0%	100.0%	80.0%	93.33%	80.0%	80.95%	63.16%	68.18%	95.0%	62.5%	95.24%	88.89%	||	77.5%	[80.0, 80.0, 82.93, 61.54, 71.43, 95.0, 68.18, 97.56, 84.21]%	|||	80.0%	97.5%	80.81%	97.5%	80.09%	
  accuracy: 80.0% kappa: 77.5% 
 14  0  3  2  0  0  0  1  0	70.0%		Asphalt
  0 16  0  0  3  1  0  0  0	80.0%		Bare Soil
  1  0 17  0  0  0  2  0  0	85.0%		Bitumen
  0  1  1 12  0  0  6  0  0	60.0%		Gravel
  0  3  0  0 15  0  0  0  2	75.0%		Meadows
  0  0  0  0  0 19  1  0  0	95.0%		Painted metal sheets
  0  0  0  5  0  0 15  0  0	75.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  4  0  0  0 16	80.0%		Trees

overall_acc:	0.8
κ =		0.775
sensitivities:	[0.7, 0.8, 0.85, 0.6, 0.75, 0.95, 0.75, 1.0, 0.8]
specificities:	[0.99375, 0.975, 0.975, 0.95625, 0.95625, 0.99375, 0.94375, 0.99375, 0.9875]
PPVs:		[0.9333333333333333, 0.8, 0.8095238095238095, 0.631578947368421, 0.6818181818181818, 0.95, 0.625, 0.9523809523809523, 0.8888888888888888]
NPVs:		[0.9636363636363636, 0.975, 0.9811320754716981, 0.9503105590062112, 0.9683544303797469, 0.99375, 0.967948717948718, 1.0, 0.9753086419753086]
F1s:		[0.8, 0.8, 0.8292682926829268, 0.6153846153846154, 0.7142857142857143, 0.95, 0.6818181818181818, 0.975609756097561, 0.8421052631578947]
accuracies:	[0.9611111111111111, 0.9555555555555556, 0.9611111111111111, 0.9166666666666666, 0.9333333333333333, 0.9888888888888889, 0.9222222222222223, 0.9944444444444445, 0.9666666666666667]
mean_accuracy:	0.9555555555555555
Dataset_slice = (900) -> [19, 131, 215, 348, 496, 545, 639, 707, 847, 50, 123, 292, 322, 459, 579, 650, 796, 817, 6, 121, 285, 331, 464, 513, 654, 769, 869, 53, 110, 205, 315, 435, 505, 680, 790, 891, 51, 109, 209, 311, 473, 521, 694, 780, 806, 80, 124, 226, 364, 462, 528, 612, 795, 802, 76, 158, 287, 370, 471, 541, 626, 745, 853, 54, 114, 245, 399, 458, 519, 633, 713, 855, 24, 151, 225, 332, 409, 527, 630, 735, 837, 38, 128, 231, 316, 429, 518, 664, 734, 820, 86, 191, 265, 391, 487, 566, 666, 747, 823, 56, 141, 221, 356, 402, 555, 615, 758, 873, 28, 200, 232, 346, 467, 520, 646, 715, 825, 100, 140, 259, 325, 420, 595, 602, 753, 838, 21, 171, 206, 379, 454, 589, 644, 789, 842, 46, 184, 222, 395, 468, 560, 659, 725, 859, 74, 146, 214, 343, 418, 540, 698, 775, 826, 79, 143, 237, 320, 448, 558, 641, 732, 815, 98, 188, 201, 390, 442, 600, 691, 736, 899, 83, 186, 235, 338, 484, 503, 604, 702, 892, 10, 119, 286, 398, 422, 547, 687, 712, 818, 52, 167, 293, 396, 449, 544, 672, 711, 894, 42, 176, 202, 326, 476, 509, 619, 727, 821, 62, 154, 269, 304, 461, 561, 608, 720, 868, 45, 144, 278, 334, 417, 597, 670, 762, 878, 33, 163, 250, 333, 474, 534, 658, 717, 877, 90, 134, 256, 388, 431, 549, 631, 768, 890, 77, 172, 271, 367, 450, 584, 673, 729, 871, 75, 189, 233, 387, 405, 573, 656, 756, 870, 47, 182, 247, 312, 432, 501, 651, 787, 884, 37, 137, 299, 340, 440, 568, 649, 774, 897, 59, 125, 273, 345, 411, 506, 605, 766, 887, 78, 149, 229, 305, 480, 529, 662, 794, 813, 82, 102, 243, 374, 407, 533, 647, 786, 885, 34, 104, 253, 329, 427, 585, 616, 792, 808, 67, 108, 224, 335, 408, 526, 613, 785, 811, 44, 198, 261, 357, 452, 569, 653, 741, 860, 89, 180, 279, 363, 414, 580, 634, 708, 846, 68, 105, 267, 306, 413, 557, 618, 743, 832, 85, 166, 274, 365, 447, 542, 700, 760, 814, 26, 145, 220, 369, 404, 578, 628, 746, 841, 39, 142, 227, 376, 428, 590, 606, 750, 900, 99, 193, 264, 321, 483, 512, 665, 777, 845, 20, 147, 272, 381, 481, 572, 648, 754, 812, 9, 130, 204, 301, 424, 565, 693, 783, 819, 7, 156, 257, 344, 438, 570, 622, 731, 840, 12, 199, 230, 336, 466, 571, 669, 718, 805, 41, 132, 289, 337, 415, 593, 638, 776, 810, 16, 170, 262, 373, 444, 543, 635, 703, 801, 58, 196, 210, 347, 433, 551, 627, 752, 861, 31, 107, 260, 383, 477, 535, 632, 740, 822, 92, 164, 254, 355, 463, 502, 620, 791, 831, 97, 174, 298, 397, 478, 508, 686, 751, 809, 88, 106, 219, 317, 446, 531, 617, 749, 850, 27, 115, 248, 360, 470, 515, 677, 701, 844, 32, 153, 291, 330, 489, 582, 689, 799, 864, 63, 185, 251, 362, 500, 524, 671, 716, 874, 22, 160, 207, 352, 401, 577, 697, 764, 839, 55, 152, 283, 353, 485, 525, 674, 757, 830, 96, 169, 280, 389, 403, 586, 601, 719, 872, 70, 173, 255, 366, 493, 550, 690, 730, 862, 43, 127, 300, 339, 451, 507, 692, 797, 816, 72, 155, 236, 400, 492, 539, 603, 767, 851, 84, 168, 203, 324, 455, 564, 642, 798, 879, 69, 187, 239, 378, 419, 546, 609, 748, 881, 4, 139, 268, 368, 498, 598, 699, 781, 896, 15, 111, 241, 319, 479, 536, 667, 726, 804, 93, 175, 294, 302, 439, 548, 684, 765, 866, 17, 122, 297, 307, 421, 538, 652, 782, 848, 48, 190, 295, 318, 456, 594, 679, 788, 898, 57, 138, 208, 354, 488, 563, 621, 763, 835, 49, 183, 281, 385, 469, 517, 668, 724, 824, 66, 195, 258, 372, 472, 583, 695, 784, 865, 61, 118, 266, 351, 425, 599, 645, 733, 854, 94, 116, 277, 349, 475, 537, 683, 771, 803, 8, 135, 213, 375, 457, 504, 663, 759, 829, 29, 197, 263, 394, 441, 588, 682, 737, 883, 91, 117, 290, 342, 494, 567, 655, 755, 888, 64, 113, 284, 380, 445, 514, 675, 761, 827, 30, 181, 282, 303, 486, 581, 610, 742, 882, 40, 179, 296, 350, 430, 552, 678, 704, 807, 5, 157, 223, 384, 453, 522, 625, 706, 856, 18, 161, 270, 314, 499, 576, 623, 723, 857, 87, 177, 275, 308, 443, 554, 624, 800, 875, 73, 129, 242, 382, 490, 574, 640, 705, 889, 60, 136, 212, 358, 416, 523, 676, 710, 876, 71, 148, 238, 393, 434, 511, 685, 778, 834, 81, 150, 228, 371, 437, 510, 643, 728, 893, 23, 178, 276, 328, 497, 556, 657, 709, 833, 95, 101, 252, 392, 410, 591, 661, 773, 867, 3, 165, 246, 323, 460, 530, 614, 779, 863, 36, 133, 217, 361, 423, 559, 637, 772, 858, 35, 126, 218, 386, 491, 562, 688, 793, 886, 2, 103, 216, 359, 436, 532, 607, 714, 836, 13, 162, 240, 309, 412, 553, 660, 722, 852, 14, 192, 288, 341, 406, 587, 611, 744, 828, 25, 159, 249, 310, 465, 592, 696, 721, 880, 11, 112, 211, 377, 495, 575, 681, 739, 895, 65, 120, 234, 313, 482, 596, 629, 770, 849, 1, 194, 244, 327, 426, 516, 636, 738, 843]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	1731.95 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1527.65 MBs	(shape (3, 4, 3, 4, 720, 1030, 4), 388149320 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 07:35:17 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (458+262=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A103 ⫹₆₀ 16082), purity -1.6287129295076375
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (219+239=458 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A14 ⫺₇₀ 10394), purity -1.2205763187587368
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (181+81=262 samples) on frame 1 with decision: {1} A35 ⫹₇₀ 8313, purity -0.7015817831740556
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (118+101=219 samples) on frame 1 with decision: {1} ⟨DR⟩ (A66 ⫹ 5886), purity -0.6205985135096606
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (119+62=181 samples) on frame 1 with decision: {1} A68 ⫹₆₀ 13109, purity -0.5987146280567675
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (143+96=239 samples) on frame 1 with decision: {1} A39 ⫺₇₀ 22195, purity -0.6997593050658073
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (35+83=118 samples) on frame 1 with decision: {1} ⟨DR⟩ (A99 ⫹ 24286), purity -0.5426927081406789
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (26+93=119 samples) on frame 1 with decision: {1} A14 ⫺₇₀ 11960, purity -0.5856963965747404
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (139+4=143 samples) on frame 1 with decision: {1} A75 ⫺₇₀ 23671, purity -0.7394326565177736
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+80=96 samples) on frame 1 with decision: {1} A4 ⫺₆₀ 23840, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (31+70=101 samples) on frame 1 with decision: {1} ⟨DR⟩ (A70 ⫹ 10196), purity -0.28291712720066475
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (31+4=35 samples) on frame 1 with decision: {1} ⟨DR⟩ (A7 ⫺ 8898), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+20=26 samples) on frame 1 with decision: {1} A102 ⫺₈₀ 14615, purity -0.35403948927026146
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+88=93 samples) on frame 1 with decision: {1} A85 ⫹₆₀ 16587, purity -0.33501613185326407
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+9=31 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A26 ⫺₆₀ 7213), purity -0.1312246058610024
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (101+38=139 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A16 ⫺ 15002), purity -0.6163201919692141
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (30+53=83 samples) on frame 1 with decision: {1} ⟨DR⟩ (A53 ⫺ 10741), purity -0.4555831611007924
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (59+29=88 samples) on frame 1 with decision: {1} ⟨PO⟩ (A17 ⫹₇₀ 12227), purity -0.2122884947216469
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+16=20 samples) on frame 1 with decision: {1} A4 ⫹₇₀ 11613, purity -0.13862943611198905
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (63+38=101 samples) on frame 1 with decision: {1} A2 ⫹₆₀ 11147, purity -0.5804208209717213
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (20+10=30 samples) on frame 1 with decision: {1} ⟨DR⟩ (A70 ⫹ 11306), purity -0.240704486694398
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+49=53 samples) on frame 1 with decision: {1} A6 ⫹ 7739, purity -0.15765967860241611
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (57+6=63 samples) on frame 1 with decision: {1} ⟨PO⟩ (A46 ⫹ 15537), purity -0.4552434532814838
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (29+9=38 samples) on frame 1 with decision: {1} ⟨PO⟩ (A2 ⫺ 12732), purity -0.26522316577250943
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+10=29 samples) on frame 1 with decision: {1} A6 ⫺₇₀ 10384, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A1 ⫺ 10384, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+29=57 samples) on frame 1 with decision: {1} A6 ⫹₇₀ 12861, purity -0.30846253481960295
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A15 ⫺ 13961, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+12=28 samples) on frame 1 with decision: {1} ⟨DR⟩ (A1 ⫹ 8115), purity -0.4063870199586109
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+6=12 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A9 ⫹ 13277), purity -0.3182570841474063
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
4251.342446 seconds (17.98 G allocations: 1.413 TiB, 30.28% gc time, 0.02% compilation time)
Train tree:
Decision Tree
Leaves: 31
Tot nodes: 61
Height: 10
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₆₀ 16082)
✔ {1} A35 ⫹₇₀ 8313
│✔ Shadows : 80/81 (conf: 0.9876543209876543)
│✘ {1} A68 ⫹₆₀ 13109
│ ✔ Asphalt : 61/62 (conf: 0.9838709677419355)
│ ✘ {1} A14 ⫺₇₀ 11960
│  ✔ {1} A85 ⫹₆₀ 16587
│  │✔ {1} ⟨PO⟩ (A17 ⫹₇₀ 12227)
│  ││✔ {1} A6 ⫺₇₀ 10384
│  │││✔ Asphalt : 10/10 (conf: 1.0)
│  │││✘ Bitumen : 19/19 (conf: 1.0)
│  ││✘ Bitumen : 59/59 (conf: 1.0)
│  │✘ Gravel : 5/5 (conf: 1.0)
│  ✘ {1} A102 ⫺₈₀ 14615
│   ✔ {1} A4 ⫹₇₀ 11613
│   │✔ Gravel : 16/16 (conf: 1.0)
│   │✘ Gravel : 2/4 (conf: 0.5)
│   ✘ Asphalt : 5/6 (conf: 0.8333333333333334)
✘ {1} ⟨P̅P̅⟩ (A14 ⫺₇₀ 10394)
 ✔ {1} A39 ⫺₇₀ 22195
 │✔ {1} A4 ⫺₆₀ 23840
 ││✔ Painted metal sheets : 80/80 (conf: 1.0)
 ││✘ Bare Soil : 16/16 (conf: 1.0)
 │✘ {1} A75 ⫺₇₀ 23671
 │ ✔ Bare Soil : 3/4 (conf: 0.75)
 │ ✘ {1} ⟨P̅P̅⟩ (A16 ⫺ 15002)
 │  ✔ Self-Blocking Bricks : 36/38 (conf: 0.9473684210526315)
 │  ✘ {1} A2 ⫹₆₀ 11147
 │   ✔ {1} ⟨PO⟩ (A2 ⫺ 12732)
 │   │✔ {1} A15 ⫺ 13961
 │   ││✔ Self-Blocking Bricks : 3/4 (conf: 0.75)
 │   ││✘ Gravel : 5/5 (conf: 1.0)
 │   │✘ Self-Blocking Bricks : 28/29 (conf: 0.9655172413793104)
 │   ✘ {1} ⟨PO⟩ (A46 ⫹ 15537)
 │    ✔ Self-Blocking Bricks : 4/6 (conf: 0.6666666666666666)
 │    ✘ {1} A6 ⫹₇₀ 12861
 │     ✔ Gravel : 29/29 (conf: 1.0)
 │     ✘ {1} ⟨DR⟩ (A1 ⫹ 8115)
 │      ✔ {1} ⟨P̅P̅⟩ (A9 ⫹ 13277)
 │      │✔ Self-Blocking Bricks : 6/6 (conf: 1.0)
 │      │✘ Gravel : 4/6 (conf: 0.6666666666666666)
 │      ✘ Gravel : 15/16 (conf: 0.9375)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5886)
  ✔ {1} ⟨DR⟩ (A70 ⫹ 10196)
  │✔ Trees : 68/70 (conf: 0.9714285714285714)
  │✘ {1} ⟨P̅P̅⟩ (A26 ⫺₆₀ 7213)
  │ ✔ Trees : 9/9 (conf: 1.0)
  │ ✘ Meadows : 21/22 (conf: 0.9545454545454546)
  ✘ {1} ⟨DR⟩ (A99 ⫹ 24286)
   ✔ {1} ⟨DR⟩ (A53 ⫺ 10741)
   │✔ {1} A6 ⫹ 7739
   ││✔ Bare Soil : 47/49 (conf: 0.9591836734693877)
   ││✘ Meadows : 4/4 (conf: 1.0)
   │✘ {1} ⟨DR⟩ (A70 ⫹ 11306)
   │ ✔ {1} A1 ⫺ 10384
   │ │✔ Bare Soil : 3/4 (conf: 0.75)
   │ │✘ Bare Soil : 6/6 (conf: 1.0)
   │ ✘ Meadows : 19/20 (conf: 0.95)
   ✘ {1} ⟨DR⟩ (A7 ⫺ 8898)
    ✔ Bare Soil : 4/4 (conf: 1.0)
    ✘ Meadows : 31/31 (conf: 1.0)
● [ 22/07/2021 08:46:08 ] Saving tree to file ./gandalf/trees/tree_44eccd13a4b002780255d08679c9a2fda20598d5cf22523f43dc99c4de02d1f4.jld...
Test tree:
Decision Tree
Leaves: 31
Tot nodes: 61
Height: 10
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₆₀ 16082)
✔ {1} A35 ⫹₇₀ 8313
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} A68 ⫹₆₀ 13109
│ ✔ Asphalt : 14/15 (conf: 0.9333333333333333)
│ ✘ {1} A14 ⫺₇₀ 11960
│  ✔ {1} A85 ⫹₆₀ 16587
│  │✔ {1} ⟨PO⟩ (A17 ⫹₇₀ 12227)
│  ││✔ {1} A6 ⫺₇₀ 10384
│  │││✔ Asphalt : 1/3 (conf: 0.3333333333333333)
│  │││✘ Bitumen : 1/1 (conf: 1.0)
│  ││✘ Bitumen : 16/20 (conf: 0.8)
│  │✘ Gravel : 0/0 (conf: NaN)
│  ✘ {1} A102 ⫺₈₀ 14615
│   ✔ {1} A4 ⫹₇₀ 11613
│   │✔ Gravel : 1/1 (conf: 1.0)
│   │✘ Gravel : 0/1 (conf: 0.0)
│   ✘ Asphalt : 0/1 (conf: 0.0)
✘ {1} ⟨P̅P̅⟩ (A14 ⫺₇₀ 10394)
 ✔ {1} A39 ⫺₇₀ 22195
 │✔ {1} A4 ⫺₆₀ 23840
 ││✔ Painted metal sheets : 19/19 (conf: 1.0)
 ││✘ Bare Soil : 0/0 (conf: NaN)
 │✘ {1} A75 ⫺₇₀ 23671
 │ ✔ Bare Soil : 0/1 (conf: 0.0)
 │ ✘ {1} ⟨P̅P̅⟩ (A16 ⫺ 15002)
 │  ✔ Self-Blocking Bricks : 9/10 (conf: 0.9)
 │  ✘ {1} A2 ⫹₆₀ 11147
 │   ✔ {1} ⟨PO⟩ (A2 ⫺ 12732)
 │   │✔ {1} A15 ⫺ 13961
 │   ││✔ Self-Blocking Bricks : 0/1 (conf: 0.0)
 │   ││✘ Gravel : 0/0 (conf: NaN)
 │   │✘ Self-Blocking Bricks : 5/8 (conf: 0.625)
 │   ✘ {1} ⟨PO⟩ (A46 ⫹ 15537)
 │    ✔ Self-Blocking Bricks : 0/1 (conf: 0.0)
 │    ✘ {1} A6 ⫹₇₀ 12861
 │     ✔ Gravel : 6/11 (conf: 0.5454545454545454)
 │     ✘ {1} ⟨DR⟩ (A1 ⫹ 8115)
 │      ✔ {1} ⟨P̅P̅⟩ (A9 ⫹ 13277)
 │      │✔ Self-Blocking Bricks : 0/0 (conf: NaN)
 │      │✘ Gravel : 1/1 (conf: 1.0)
 │      ✘ Gravel : 5/8 (conf: 0.625)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5886)
  ✔ {1} ⟨DR⟩ (A70 ⫹ 10196)
  │✔ Trees : 17/19 (conf: 0.8947368421052632)
  │✘ {1} ⟨P̅P̅⟩ (A26 ⫺₆₀ 7213)
  │ ✔ Trees : 1/1 (conf: 1.0)
  │ ✘ Meadows : 3/3 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A99 ⫹ 24286)
   ✔ {1} ⟨DR⟩ (A53 ⫺ 10741)
   │✔ {1} A6 ⫹ 7739
   ││✔ Bare Soil : 9/9 (conf: 1.0)
   ││✘ Meadows : 1/1 (conf: 1.0)
   │✘ {1} ⟨DR⟩ (A70 ⫹ 11306)
   │ ✔ {1} A1 ⫺ 10384
   │ │✔ Bare Soil : 0/0 (conf: NaN)
   │ │✘ Bare Soil : 2/2 (conf: 1.0)
   │ ✘ Meadows : 6/12 (conf: 0.5)
   ✘ {1} ⟨DR⟩ (A7 ⫺ 8898)
    ✔ Bare Soil : 0/0 (conf: NaN)
    ✘ Meadows : 8/11 (conf: 0.7272727272727273)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Pavia	2	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	80.56%	75.0%	55.0%	85.0%	65.0%	90.0%	95.0%	70.0%	100.0%	90.0%	78.95%	91.67%	80.95%	59.09%	66.67%	100.0%	70.0%	100.0%	90.0%	||	78.12%	[76.92, 68.75, 82.93, 61.9, 76.6, 97.44, 70.0, 100.0, 90.0]%	|||	80.56%	97.57%	81.92%	97.59%	80.5%	
  accuracy: 80.56% kappa: 78.12% 
 15  0  2  3  0  0  0  0  0	75.0%		Asphalt
  0 11  0  0  9  0  0  0  0	55.0%		Bare Soil
  3  0 17  0  0  0  0  0  0	85.0%		Bitumen
  1  0  1 13  0  0  5  0  0	65.0%		Gravel
  0  0  0  0 18  0  0  0  2	90.0%		Meadows
  0  0  1  0  0 19  0  0  0	95.0%		Painted metal sheets
  0  0  0  6  0  0 14  0  0	70.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  1  0  0  0  0  1  0 18	90.0%		Trees

overall_acc:	0.8055555555555556
κ =		0.78125
sensitivities:	[0.75, 0.55, 0.85, 0.65, 0.9, 0.95, 0.7, 1.0, 0.9]
specificities:	[0.975, 0.99375, 0.975, 0.94375, 0.94375, 1.0, 0.9625, 1.0, 0.9875]
PPVs:		[0.7894736842105263, 0.9166666666666666, 0.8095238095238095, 0.5909090909090909, 0.6666666666666666, 1.0, 0.7, 1.0, 0.9]
NPVs:		[0.968944099378882, 0.9464285714285714, 0.9811320754716981, 0.9556962025316456, 0.9869281045751634, 0.9937888198757764, 0.9625, 1.0, 0.9875]
F1s:		[0.7692307692307693, 0.6875, 0.8292682926829268, 0.6190476190476191, 0.7659574468085106, 0.9743589743589743, 0.7, 1.0, 0.9]
accuracies:	[0.95, 0.9444444444444444, 0.9611111111111111, 0.9111111111111111, 0.9388888888888889, 0.9944444444444445, 0.9333333333333333, 1.0, 0.9777777777777777]
mean_accuracy:	0.95679012345679
Dataset_slice = (900) -> [69, 125, 224, 361, 493, 514, 611, 763, 813, 56, 174, 287, 365, 435, 502, 659, 726, 860, 62, 169, 286, 356, 466, 569, 685, 738, 880, 91, 135, 227, 360, 414, 522, 653, 796, 867, 63, 180, 272, 321, 443, 562, 623, 795, 824, 66, 141, 201, 312, 426, 509, 652, 718, 802, 98, 175, 260, 368, 409, 518, 684, 749, 859, 32, 187, 210, 383, 490, 549, 636, 725, 854, 41, 185, 278, 364, 500, 551, 617, 750, 833, 100, 165, 256, 334, 417, 567, 681, 703, 830, 48, 101, 289, 351, 477, 597, 674, 791, 865, 95, 137, 246, 338, 464, 563, 682, 733, 853, 38, 149, 277, 328, 480, 578, 610, 770, 866, 57, 146, 293, 341, 412, 552, 648, 772, 851, 14, 176, 298, 390, 442, 594, 666, 727, 846, 22, 126, 218, 309, 441, 582, 655, 769, 808, 1, 120, 266, 344, 405, 592, 619, 793, 884, 93, 168, 254, 381, 419, 556, 697, 730, 826, 37, 123, 225, 313, 453, 533, 688, 728, 823, 54, 138, 204, 315, 437, 568, 643, 768, 875, 49, 156, 203, 335, 402, 507, 698, 706, 856, 58, 164, 257, 343, 440, 577, 612, 731, 845, 15, 155, 234, 394, 489, 542, 640, 775, 816, 60, 186, 285, 306, 423, 583, 637, 709, 810, 71, 107, 291, 348, 459, 513, 650, 777, 818, 85, 160, 283, 353, 496, 547, 687, 754, 861, 77, 178, 247, 316, 469, 544, 606, 741, 838, 25, 189, 237, 387, 495, 599, 692, 797, 828, 45, 182, 292, 373, 482, 584, 634, 788, 888, 39, 117, 250, 392, 456, 520, 660, 761, 894, 83, 162, 274, 346, 421, 576, 677, 739, 827, 44, 194, 231, 366, 448, 527, 691, 762, 897, 35, 112, 219, 333, 497, 560, 646, 740, 850, 28, 106, 236, 311, 468, 600, 662, 702, 852, 51, 119, 261, 310, 431, 516, 647, 737, 849, 96, 114, 273, 347, 465, 536, 670, 720, 863, 78, 163, 251, 352, 404, 538, 608, 779, 809, 2, 129, 213, 359, 403, 591, 624, 715, 848, 26, 183, 288, 308, 454, 598, 663, 701, 892, 19, 113, 282, 400, 401, 540, 625, 756, 882, 5, 111, 252, 302, 473, 566, 671, 743, 868, 10, 108, 211, 393, 427, 581, 621, 707, 893, 55, 152, 235, 342, 470, 541, 695, 717, 811, 65, 148, 276, 327, 428, 511, 673, 705, 855, 99, 136, 233, 304, 472, 546, 632, 708, 891, 6, 184, 230, 332, 413, 517, 633, 800, 812, 23, 131, 244, 330, 452, 515, 616, 766, 878, 7, 199, 240, 322, 422, 529, 627, 721, 819, 74, 142, 214, 319, 467, 505, 607, 746, 887, 86, 128, 264, 399, 494, 559, 602, 716, 847, 75, 200, 212, 389, 449, 573, 700, 755, 840, 42, 122, 300, 388, 418, 561, 622, 748, 843, 9, 150, 259, 339, 491, 510, 639, 759, 889, 11, 170, 296, 382, 484, 554, 630, 764, 805, 80, 140, 208, 374, 457, 596, 690, 751, 831, 73, 130, 239, 354, 458, 595, 631, 757, 806, 16, 134, 294, 370, 475, 519, 686, 790, 862, 31, 177, 202, 336, 432, 580, 613, 745, 872, 89, 151, 275, 317, 438, 572, 699, 712, 834, 13, 104, 243, 391, 479, 504, 680, 742, 890, 72, 144, 262, 375, 436, 548, 672, 781, 877, 84, 173, 258, 320, 451, 575, 693, 799, 836, 64, 109, 221, 350, 474, 555, 669, 744, 801, 97, 102, 228, 325, 408, 508, 683, 735, 898, 61, 118, 248, 378, 487, 553, 651, 794, 815, 59, 172, 279, 395, 434, 545, 696, 776, 817, 40, 132, 241, 358, 406, 574, 667, 753, 803, 43, 171, 217, 380, 425, 526, 679, 734, 820, 20, 124, 215, 385, 486, 501, 678, 722, 807, 30, 105, 269, 355, 445, 558, 614, 786, 825, 53, 195, 280, 369, 463, 550, 668, 771, 839, 12, 157, 297, 377, 439, 565, 644, 719, 857, 50, 159, 238, 345, 499, 589, 676, 704, 873, 34, 193, 284, 398, 424, 579, 661, 732, 870, 81, 115, 253, 397, 416, 570, 664, 724, 844, 67, 166, 222, 372, 450, 585, 649, 774, 804, 24, 127, 281, 371, 481, 524, 615, 729, 841, 4, 145, 263, 384, 492, 539, 641, 783, 871, 68, 154, 265, 324, 410, 503, 605, 765, 885, 90, 139, 255, 349, 462, 534, 665, 758, 821, 3, 143, 249, 357, 455, 506, 654, 711, 837, 52, 181, 220, 305, 420, 523, 628, 780, 883, 94, 188, 229, 329, 483, 543, 642, 785, 822, 29, 153, 270, 303, 446, 535, 626, 767, 832, 36, 179, 226, 307, 433, 564, 694, 747, 829, 82, 158, 209, 314, 478, 530, 620, 773, 900, 27, 190, 245, 318, 485, 521, 609, 760, 895, 70, 197, 206, 376, 476, 537, 657, 714, 899, 92, 196, 271, 363, 415, 532, 656, 723, 835, 76, 191, 295, 331, 447, 571, 601, 782, 858, 21, 110, 268, 337, 498, 557, 638, 792, 842, 17, 167, 242, 396, 407, 588, 629, 713, 881, 46, 192, 290, 301, 429, 531, 635, 784, 864, 18, 161, 216, 362, 430, 525, 689, 736, 814, 87, 103, 267, 379, 471, 590, 675, 789, 879, 8, 147, 232, 323, 411, 593, 604, 752, 874, 47, 198, 223, 326, 444, 586, 645, 798, 869, 33, 133, 207, 386, 488, 512, 658, 787, 896, 88, 121, 299, 340, 460, 528, 618, 778, 886, 79, 116, 205, 367, 461, 587, 603, 710, 876]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	1731.95 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1527.65 MBs	(shape (3, 4, 3, 4, 720, 1030, 4), 377548560 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 08:46:14 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (461+259=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A103 ⫹₆₀ 16082), purity -1.6449179993797542
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (221+240=461 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A36 ⫺₇₀ 14645), purity -1.234472360140964
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+177=259 samples) on frame 1 with decision: {1} A44 ⫺ 8502, purity -0.7078552677199323
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (120+101=221 samples) on frame 1 with decision: {1} ⟨DR⟩ (A66 ⫹ 5886), purity -0.6387686275555241
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (114+63=177 samples) on frame 1 with decision: {1} ⟨PO⟩ (A74 ⫹₆₀ 12673), purity -0.5592860161307526
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (161+79=240 samples) on frame 1 with decision: {1} A4 ⫺₆₀ 23840, purity -0.7106198305343908
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+92=120 samples) on frame 1 with decision: {1} ⟨DR⟩ (A100 ⫹ 24623), purity -0.5977601078642524
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (33+81=114 samples) on frame 1 with decision: {1} A18 ⫺₇₀ 12564, purity -0.5341541027633945
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+142=161 samples) on frame 1 with decision: {1} A81 ⫹₈₀ 24008, purity -0.6963629773248237
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+63=101 samples) on frame 1 with decision: {1} ⟨PO⟩ (A70 ⫹₆₀ 10136), purity -0.3095428902804551
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+28=33 samples) on frame 1 with decision: {1} ⟨DR⟩ (A35 ⫺ 13644), purity -0.5530055670555843
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (24+14=38 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A32 ⫺₆₀ 8373), purity -0.23796010184617084
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+75=81 samples) on frame 1 with decision: {1} A2 ⫹₆₀ 12901, purity -0.11690956421573184
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (55+87=142 samples) on frame 1 with decision: {1} ⟨PO⟩ (A13 ⫹₆₀ 13525), purity -0.6677027088214263
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (43+49=92 samples) on frame 1 with decision: {1} A39 ⫺ 9899, purity -0.535902066383661
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+43=49 samples) on frame 1 with decision: {1} A5 ⫹ 7481, purity -0.05517076026934382
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+43=55 samples) on frame 1 with decision: {1} ⟨PO⟩ (A1 ⫹ 12296), purity -0.2345418217967273
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+5=24 samples) on frame 1 with decision: {1} ⟨DR⟩ (A71 ⫺ 16547), purity -0.14021076396026175
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+16=28 samples) on frame 1 with decision: {1} A18 ⫹ 11494, purity -0.1930976609427018
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (62+25=87 samples) on frame 1 with decision: {1} A47 ⫹ 16191, purity -0.5385157278680532
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+24=43 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A18 ⫹ 4994), purity -0.35526372183896554
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+4=12 samples) on frame 1 with decision: {1} A1 ⫺ 16894, purity -0.23104906018664842
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+20=25 samples) on frame 1 with decision: {1} ⟨DR⟩ (A2 ⫹ 9562), purity -0.2588926793843358
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+7=12 samples) on frame 1 with decision: {1} A13 ⫹₇₀ 14922, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+12=24 samples) on frame 1 with decision: {1} ⟨PO⟩ (A15 ⫺₆₀ 5004), purity -0.3182570841474065
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (32+30=62 samples) on frame 1 with decision: {1} A36 ⫺₇₀ 17528, purity -0.34862688126498237
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+4=12 samples) on frame 1 with decision: {1} A9 ⫹ 3607, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+20=32 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A1 ⫺₆₀ 13099), purity -0.3107403520157156
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+16=20 samples) on frame 1 with decision: {1} A6 ⫹₇₀ 13763, purity -0.13862943611198905
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
2237.816068 seconds (12.29 G allocations: 808.711 GiB, 32.31% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 9
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₆₀ 16082)
✔ {1} A44 ⫺ 8502
│✔ {1} ⟨PO⟩ (A74 ⫹₆₀ 12673)
││✔ Asphalt : 62/63 (conf: 0.9841269841269841)
││✘ {1} A18 ⫺₇₀ 12564
││ ✔ {1} A2 ⫹₆₀ 12901
││ │✔ Bitumen : 74/75 (conf: 0.9866666666666667)
││ │✘ Gravel : 3/6 (conf: 0.5)
││ ✘ {1} ⟨DR⟩ (A35 ⫺ 13644)
││  ✔ {1} A18 ⫹ 11494
││  │✔ Gravel : 16/16 (conf: 1.0)
││  │✘ {1} A1 ⫺ 16894
││  │ ✔ Gravel : 2/4 (conf: 0.5)
││  │ ✘ Asphalt : 8/8 (conf: 1.0)
││  ✘ Bitumen : 5/5 (conf: 1.0)
│✘ Shadows : 80/82 (conf: 0.975609756097561)
✘ {1} ⟨P̅P̅⟩ (A36 ⫺₇₀ 14645)
 ✔ {1} A4 ⫺₆₀ 23840
 │✔ Painted metal sheets : 79/79 (conf: 1.0)
 │✘ {1} A81 ⫹₈₀ 24008
 │ ✔ {1} ⟨PO⟩ (A13 ⫹₆₀ 13525)
 │ │✔ {1} A47 ⫹ 16191
 │ ││✔ {1} ⟨DR⟩ (A2 ⫹ 9562)
 │ │││✔ Self-Blocking Bricks : 19/20 (conf: 0.95)
 │ │││✘ Asphalt : 4/5 (conf: 0.8)
 │ ││✘ {1} A36 ⫺₇₀ 17528
 │ ││ ✔ Gravel : 30/30 (conf: 1.0)
 │ ││ ✘ {1} ⟨P̅P̅⟩ (A1 ⫺₆₀ 13099)
 │ ││  ✔ {1} A6 ⫹₇₀ 13763
 │ ││  │✔ Gravel : 16/16 (conf: 1.0)
 │ ││  │✘ Self-Blocking Bricks : 2/4 (conf: 0.5)
 │ ││  ✘ Self-Blocking Bricks : 11/12 (conf: 0.9166666666666666)
 │ │✘ {1} ⟨PO⟩ (A1 ⫹ 12296)
 │ │ ✔ Self-Blocking Bricks : 42/43 (conf: 0.9767441860465116)
 │ │ ✘ {1} A13 ⫹₇₀ 14922
 │ │  ✔ Gravel : 7/7 (conf: 1.0)
 │ │  ✘ Self-Blocking Bricks : 5/5 (conf: 1.0)
 │ ✘ Bare Soil : 19/19 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5886)
  ✔ {1} ⟨PO⟩ (A70 ⫹₆₀ 10136)
  │✔ Trees : 62/63 (conf: 0.9841269841269841)
  │✘ {1} ⟨P̅P̅⟩ (A32 ⫺₆₀ 8373)
  │ ✔ Trees : 14/14 (conf: 1.0)
  │ ✘ {1} ⟨DR⟩ (A71 ⫺ 16547)
  │  ✔ Trees : 3/5 (conf: 0.6)
  │  ✘ Meadows : 19/19 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A100 ⫹ 24623)
   ✔ {1} A39 ⫺ 9899
   │✔ {1} A5 ⫹ 7481
   ││✔ Bare Soil : 43/43 (conf: 1.0)
   ││✘ Meadows : 5/6 (conf: 0.8333333333333334)
   │✘ {1} ⟨P̅P̅⟩ (A18 ⫹ 4994)
   │ ✔ {1} ⟨PO⟩ (A15 ⫺₆₀ 5004)
   │ │✔ Bare Soil : 12/12 (conf: 1.0)
   │ │✘ {1} A9 ⫹ 3607
   │ │ ✔ Bare Soil : 4/4 (conf: 1.0)
   │ │ ✘ Meadows : 8/8 (conf: 1.0)
   │ ✘ Meadows : 19/19 (conf: 1.0)
   ✘ Meadows : 26/28 (conf: 0.9285714285714286)
● [ 22/07/2021 09:23:32 ] Saving tree to file ./gandalf/trees/tree_0e666acad9b522ace08ffcec8012dcdb17f6b11b3072f80267b09da371745f5a.jld...
Test tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 9
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₆₀ 16082)
✔ {1} A44 ⫺ 8502
│✔ {1} ⟨PO⟩ (A74 ⫹₆₀ 12673)
││✔ Asphalt : 16/16 (conf: 1.0)
││✘ {1} A18 ⫺₇₀ 12564
││ ✔ {1} A2 ⫹₆₀ 12901
││ │✔ Bitumen : 18/21 (conf: 0.8571428571428571)
││ │✘ Gravel : 0/1 (conf: 0.0)
││ ✘ {1} ⟨DR⟩ (A35 ⫺ 13644)
││  ✔ {1} A18 ⫹ 11494
││  │✔ Gravel : 2/3 (conf: 0.6666666666666666)
││  │✘ {1} A1 ⫺ 16894
││  │ ✔ Gravel : 0/0 (conf: NaN)
││  │ ✘ Asphalt : 1/2 (conf: 0.5)
││  ✘ Bitumen : 0/2 (conf: 0.0)
│✘ Shadows : 20/20 (conf: 1.0)
✘ {1} ⟨P̅P̅⟩ (A36 ⫺₇₀ 14645)
 ✔ {1} A4 ⫺₆₀ 23840
 │✔ Painted metal sheets : 20/20 (conf: 1.0)
 │✘ {1} A81 ⫹₈₀ 24008
 │ ✔ {1} ⟨PO⟩ (A13 ⫹₆₀ 13525)
 │ │✔ {1} A47 ⫹ 16191
 │ ││✔ {1} ⟨DR⟩ (A2 ⫹ 9562)
 │ │││✔ Self-Blocking Bricks : 2/3 (conf: 0.6666666666666666)
 │ │││✘ Asphalt : 0/2 (conf: 0.0)
 │ ││✘ {1} A36 ⫺₇₀ 17528
 │ ││ ✔ Gravel : 7/11 (conf: 0.6363636363636364)
 │ ││ ✘ {1} ⟨P̅P̅⟩ (A1 ⫺₆₀ 13099)
 │ ││  ✔ {1} A6 ⫹₇₀ 13763
 │ ││  │✔ Gravel : 3/4 (conf: 0.75)
 │ ││  │✘ Self-Blocking Bricks : 1/1 (conf: 1.0)
 │ ││  ✘ Self-Blocking Bricks : 2/3 (conf: 0.6666666666666666)
 │ │✘ {1} ⟨PO⟩ (A1 ⫹ 12296)
 │ │ ✔ Self-Blocking Bricks : 7/8 (conf: 0.875)
 │ │ ✘ {1} A13 ⫹₇₀ 14922
 │ │  ✔ Gravel : 1/1 (conf: 1.0)
 │ │  ✘ Self-Blocking Bricks : 2/2 (conf: 1.0)
 │ ✘ Bare Soil : 4/4 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A66 ⫹ 5886)
  ✔ {1} ⟨PO⟩ (A70 ⫹₆₀ 10136)
  │✔ Trees : 17/17 (conf: 1.0)
  │✘ {1} ⟨P̅P̅⟩ (A32 ⫺₆₀ 8373)
  │ ✔ Trees : 2/2 (conf: 1.0)
  │ ✘ {1} ⟨DR⟩ (A71 ⫺ 16547)
  │  ✔ Trees : 1/2 (conf: 0.5)
  │  ✘ Meadows : 5/5 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A100 ⫹ 24623)
   ✔ {1} A39 ⫺ 9899
   │✔ {1} A5 ⫹ 7481
   ││✔ Bare Soil : 9/13 (conf: 0.6923076923076923)
   ││✘ Meadows : 1/3 (conf: 0.3333333333333333)
   │✘ {1} ⟨P̅P̅⟩ (A18 ⫹ 4994)
   │ ✔ {1} ⟨PO⟩ (A15 ⫺₆₀ 5004)
   │ │✔ Bare Soil : 0/0 (conf: NaN)
   │ │✘ {1} A9 ⫹ 3607
   │ │ ✔ Bare Soil : 0/0 (conf: NaN)
   │ │ ✘ Meadows : 1/4 (conf: 0.25)
   │ ✘ Meadows : 1/2 (conf: 0.5)
   ✘ Meadows : 7/8 (conf: 0.875)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Pavia	3	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	83.33%	85.0%	65.0%	90.0%	65.0%	75.0%	100.0%	70.0%	100.0%	100.0%	85.0%	76.47%	78.26%	65.0%	68.18%	100.0%	82.35%	100.0%	95.24%	||	81.25%	[85.0, 70.27, 83.72, 65.0, 71.43, 100.0, 75.68, 100.0, 97.56]%	|||	83.33%	97.92%	83.39%	97.93%	83.18%	
  accuracy: 83.33% kappa: 81.25% 
 17  0  2  1  0  0  0  0  0	85.0%		Asphalt
  0 13  0  0  7  0  0  0  0	65.0%		Bare Soil
  1  0 18  1  0  0  0  0  0	90.0%		Bitumen
  1  0  3 13  0  0  3  0  0	65.0%		Gravel
  0  4  0  0 15  0  0  0  1	75.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  1  0  0  5  0  0 14  0  0	70.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  0  0  0  0 20	100.0%		Trees

overall_acc:	0.8333333333333334
κ =		0.8125000000000001
sensitivities:	[0.85, 0.65, 0.9, 0.65, 0.75, 1.0, 0.7, 1.0, 1.0]
specificities:	[0.98125, 0.975, 0.96875, 0.95625, 0.95625, 1.0, 0.98125, 1.0, 0.99375]
PPVs:		[0.85, 0.7647058823529411, 0.782608695652174, 0.65, 0.6818181818181818, 1.0, 0.8235294117647058, 1.0, 0.9523809523809523]
NPVs:		[0.98125, 0.9570552147239264, 0.9872611464968153, 0.95625, 0.9683544303797469, 1.0, 0.9631901840490797, 1.0, 1.0]
F1s:		[0.85, 0.7027027027027027, 0.8372093023255814, 0.65, 0.7142857142857143, 1.0, 0.7567567567567568, 1.0, 0.975609756097561]
accuracies:	[0.9666666666666667, 0.9388888888888889, 0.9611111111111111, 0.9222222222222223, 0.9333333333333333, 1.0, 0.95, 1.0, 0.9944444444444445]
mean_accuracy:	0.9629629629629631
Dataset_slice = (900) -> [60, 161, 270, 359, 480, 580, 608, 710, 877, 46, 140, 238, 345, 460, 561, 649, 741, 817, 23, 131, 243, 309, 470, 560, 652, 781, 844, 40, 121, 266, 306, 436, 558, 613, 770, 827, 68, 185, 240, 312, 488, 534, 694, 736, 860, 29, 183, 233, 332, 495, 531, 646, 744, 869, 53, 164, 208, 386, 441, 511, 603, 782, 826, 24, 154, 269, 393, 440, 551, 690, 788, 808, 83, 153, 226, 339, 425, 590, 651, 799, 833, 1, 112, 263, 302, 429, 515, 618, 776, 813, 47, 146, 273, 387, 432, 545, 602, 737, 893, 65, 110, 300, 341, 426, 529, 660, 756, 897, 98, 115, 209, 348, 419, 530, 679, 772, 874, 51, 176, 286, 395, 442, 516, 609, 775, 875, 6, 148, 212, 336, 452, 556, 654, 760, 855, 12, 103, 204, 303, 453, 600, 612, 758, 854, 45, 122, 237, 366, 420, 541, 673, 722, 819, 93, 167, 293, 368, 415, 521, 617, 707, 858, 80, 106, 241, 323, 496, 563, 662, 763, 811, 97, 193, 276, 365, 414, 592, 631, 748, 887, 5, 132, 232, 390, 444, 528, 674, 792, 888, 73, 124, 231, 358, 433, 504, 635, 764, 864, 85, 174, 265, 329, 462, 524, 686, 784, 816, 44, 134, 255, 322, 489, 578, 648, 732, 890, 18, 160, 258, 372, 493, 501, 611, 783, 837, 32, 188, 290, 394, 409, 554, 626, 745, 822, 62, 200, 206, 320, 473, 587, 675, 733, 883, 74, 111, 234, 360, 463, 514, 681, 761, 801, 49, 128, 289, 355, 406, 533, 671, 789, 840, 76, 191, 257, 381, 478, 566, 624, 729, 894, 88, 125, 274, 349, 424, 546, 698, 704, 802, 34, 101, 262, 318, 408, 573, 664, 780, 834, 2, 162, 246, 324, 486, 570, 639, 717, 857, 95, 105, 292, 337, 421, 595, 656, 778, 848, 36, 197, 207, 343, 492, 520, 622, 759, 810, 27, 147, 203, 362, 437, 577, 663, 752, 876, 35, 149, 202, 375, 411, 539, 685, 727, 803, 31, 170, 242, 374, 430, 571, 696, 779, 859, 7, 126, 247, 344, 500, 552, 620, 730, 870, 11, 184, 298, 338, 428, 532, 669, 734, 815, 52, 109, 282, 370, 456, 562, 684, 767, 831, 75, 142, 213, 328, 446, 576, 672, 716, 814, 69, 152, 287, 330, 455, 564, 627, 702, 880, 41, 172, 248, 354, 407, 582, 667, 753, 820, 22, 194, 249, 397, 466, 572, 605, 712, 898, 10, 136, 253, 399, 435, 542, 638, 790, 881, 16, 157, 228, 357, 448, 585, 650, 798, 842, 72, 178, 291, 313, 494, 526, 655, 794, 836, 61, 173, 210, 319, 404, 586, 658, 749, 871, 96, 143, 220, 351, 464, 598, 657, 751, 863, 56, 158, 299, 378, 401, 557, 615, 800, 839, 48, 175, 211, 367, 431, 509, 668, 731, 853, 89, 104, 236, 389, 417, 527, 700, 771, 861, 71, 139, 260, 376, 491, 536, 683, 754, 804, 15, 168, 280, 327, 443, 599, 653, 708, 856, 30, 119, 288, 310, 449, 594, 619, 701, 867, 90, 138, 294, 305, 459, 549, 693, 795, 882, 50, 118, 205, 400, 477, 518, 616, 714, 830, 66, 130, 252, 380, 483, 589, 637, 743, 852, 14, 144, 261, 369, 454, 503, 633, 705, 835, 100, 145, 215, 371, 447, 579, 607, 768, 846, 17, 156, 296, 356, 457, 508, 677, 746, 818, 84, 186, 227, 315, 475, 565, 691, 750, 878, 86, 179, 283, 304, 439, 548, 699, 720, 879, 92, 113, 281, 335, 461, 537, 634, 709, 841, 78, 163, 279, 342, 418, 596, 682, 719, 862, 43, 133, 217, 311, 469, 519, 643, 715, 865, 59, 169, 251, 316, 498, 547, 676, 796, 828, 54, 177, 245, 361, 403, 591, 695, 791, 885, 25, 117, 254, 384, 422, 543, 614, 769, 899, 64, 108, 264, 346, 434, 505, 640, 797, 900, 55, 165, 297, 352, 484, 593, 629, 777, 832, 99, 159, 278, 307, 416, 538, 623, 728, 892, 58, 150, 256, 388, 467, 502, 642, 739, 809, 42, 196, 250, 326, 427, 569, 604, 703, 868, 67, 141, 216, 331, 487, 525, 601, 742, 889, 3, 137, 219, 373, 445, 544, 670, 713, 807, 13, 195, 222, 377, 402, 583, 632, 723, 886, 8, 102, 259, 340, 476, 535, 610, 787, 823, 79, 151, 272, 398, 405, 512, 666, 773, 806, 91, 180, 224, 325, 471, 522, 628, 740, 825, 33, 189, 284, 333, 468, 510, 659, 718, 812, 38, 182, 268, 379, 472, 517, 647, 735, 829, 77, 166, 275, 391, 479, 523, 687, 762, 849, 9, 181, 271, 353, 499, 588, 697, 765, 843, 39, 155, 221, 317, 412, 553, 680, 785, 838, 4, 198, 277, 392, 458, 513, 661, 747, 896, 87, 199, 295, 383, 481, 550, 645, 706, 884, 21, 114, 201, 334, 465, 507, 636, 725, 847, 19, 120, 230, 363, 497, 567, 689, 724, 866, 94, 190, 229, 314, 485, 575, 621, 766, 873, 57, 116, 214, 308, 423, 597, 625, 721, 895, 82, 192, 223, 350, 450, 581, 678, 726, 851, 28, 171, 285, 347, 451, 559, 606, 786, 850, 26, 127, 225, 385, 474, 574, 630, 711, 891, 20, 107, 244, 301, 438, 506, 644, 757, 821, 81, 135, 239, 396, 482, 540, 641, 755, 824, 70, 123, 235, 321, 410, 568, 688, 793, 805, 63, 129, 267, 382, 413, 555, 665, 738, 872, 37, 187, 218, 364, 490, 584, 692, 774, 845]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	1731.95 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1527.65 MBs	(shape (3, 4, 3, 4, 720, 1030, 4), 371784680 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 09:23:38 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (461+259=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A103 ⫹₆₀ 16082), purity -1.633162869558209
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (178+81=259 samples) on frame 1 with decision: {1} A35 ⫹₇₀ 8313, purity -0.6902532944313211
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (221+240=461 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A36 ⫺₇₀ 14645), purity -1.2140888425151986
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (128+93=221 samples) on frame 1 with decision: {1} ⟨DR⟩ (A65 ⫹ 4350), purity -0.6105433517223097
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (114+64=178 samples) on frame 1 with decision: {1} ⟨PO⟩ (A74 ⫹₆₀ 12673), purity -0.5562331378518243
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+80=240 samples) on frame 1 with decision: {1} A4 ⫺₆₀ 23840, purity -0.6898685081872044
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (36+92=128 samples) on frame 1 with decision: {1} ⟨DR⟩ (A99 ⫹ 24425), purity -0.559487512519506
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (30+84=114 samples) on frame 1 with decision: {1} A18 ⫺₇₀ 12534, purity -0.52203622067616
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+142=160 samples) on frame 1 with decision: {1} A81 ⫹₈₀ 24008, purity -0.6830922834314171
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+65=93 samples) on frame 1 with decision: {1} ⟨DR⟩ (A69 ⫹ 7887), purity -0.20792077012228571
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+14=28 samples) on frame 1 with decision: {1} ⟨DR⟩ (A30 ⫺ 8303), purity -0.12865932027191573
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+16=30 samples) on frame 1 with decision: {1} ⟨DR⟩ (A9 ⫺ 11999), purity -0.49146316312957933
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+8=84 samples) on frame 1 with decision: {1} ⟨DR⟩ (A101 ⫺ 16736), purity -0.20912367583633312
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (37+55=92 samples) on frame 1 with decision: {1} ⟨DR⟩ (A42 ⫺ 9819), purity -0.5538490187873953
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (100+42=142 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A16 ⫺ 14883), purity -0.6144558643936767
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A2 ⫹ 11246, purity -0.34657359027997264
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+12=16 samples) on frame 1 with decision: {1} ⟨DR⟩ (A27 ⫹ 12505), purity -0.47850469280443025
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (77+23=100 samples) on frame 1 with decision: {1} ⟨PO⟩ (A52 ⫹ 16210), purity -0.5799454110557717
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+19=37 samples) on frame 1 with decision: {1} A4 ⫺ 6540, purity -0.39331917283761847
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (24+31=55 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A71 ⫹₆₀ 15804), purity -0.27775163707410033
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+10=18 samples) on frame 1 with decision: {1} ⟨PO⟩ (A4 ⫺ 5123), purity -0.29402810584799194
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+5=24 samples) on frame 1 with decision: {1} A50 ⫹ 10681, purity -0.34529517426339734
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (46+31=77 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A14 ⫹ 13674), purity -0.4118264600597596
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+18=23 samples) on frame 1 with decision: {1} ⟨DR⟩ (A2 ⫹ 9562), purity -0.2065805520072249
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+8=12 samples) on frame 1 with decision: {1} A2 ⫺ 10919, purity -0.23104906018664842
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A1 ⫹ 3864, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+15=19 samples) on frame 1 with decision: {1} A3 ⫹ 6133, purity -0.11838634623553859
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+19=46 samples) on frame 1 with decision: {1} ⟨PO⟩ (A8 ⫺₆₀ 14100), purity -0.42107017021046245
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+21=27 samples) on frame 1 with decision: {1} ⟨DR⟩ (A3 ⫹ 11216), purity -0.14890095263378034
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
838.988167 seconds (7.73 G allocations: 257.399 GiB, 29.31% gc time, 0.04% compilation time)
Train tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 9
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₆₀ 16082)
✔ {1} A35 ⫹₇₀ 8313
│✔ Shadows : 80/81 (conf: 0.9876543209876543)
│✘ {1} ⟨PO⟩ (A74 ⫹₆₀ 12673)
│ ✔ Asphalt : 63/64 (conf: 0.984375)
│ ✘ {1} A18 ⫺₇₀ 12534
│  ✔ {1} ⟨DR⟩ (A101 ⫺ 16736)
│  │✔ {1} A2 ⫹ 11246
│  ││✔ Bitumen : 2/4 (conf: 0.5)
│  ││✘ Gravel : 4/4 (conf: 1.0)
│  │✘ Bitumen : 74/76 (conf: 0.9736842105263158)
│  ✘ {1} ⟨DR⟩ (A9 ⫺ 11999)
│   ✔ {1} ⟨DR⟩ (A27 ⫹ 12505)
│   │✔ {1} A2 ⫺ 10919
│   ││✔ Asphalt : 8/8 (conf: 1.0)
│   ││✘ Bitumen : 2/4 (conf: 0.5)
│   │✘ Gravel : 3/4 (conf: 0.75)
│   ✘ Gravel : 14/14 (conf: 1.0)
✘ {1} ⟨P̅P̅⟩ (A36 ⫺₇₀ 14645)
 ✔ {1} A4 ⫺₆₀ 23840
 │✔ Painted metal sheets : 80/80 (conf: 1.0)
 │✘ {1} A81 ⫹₈₀ 24008
 │ ✔ {1} ⟨P̅P̅⟩ (A16 ⫺ 14883)
 │ │✔ Self-Blocking Bricks : 40/42 (conf: 0.9523809523809523)
 │ │✘ {1} ⟨PO⟩ (A52 ⫹ 16210)
 │ │ ✔ {1} ⟨DR⟩ (A2 ⫹ 9562)
 │ │ │✔ Self-Blocking Bricks : 18/18 (conf: 1.0)
 │ │ │✘ Asphalt : 3/5 (conf: 0.6)
 │ │ ✘ {1} ⟨P̅P̅⟩ (A14 ⫹ 13674)
 │ │  ✔ Gravel : 31/31 (conf: 1.0)
 │ │  ✘ {1} ⟨PO⟩ (A8 ⫺₆₀ 14100)
 │ │   ✔ Gravel : 18/19 (conf: 0.9473684210526315)
 │ │   ✘ {1} ⟨DR⟩ (A3 ⫹ 11216)
 │ │    ✔ Self-Blocking Bricks : 20/21 (conf: 0.9523809523809523)
 │ │    ✘ Gravel : 6/6 (conf: 1.0)
 │ ✘ Bare Soil : 18/18 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A65 ⫹ 4350)
  ✔ {1} ⟨DR⟩ (A69 ⫹ 7887)
  │✔ Trees : 65/65 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A30 ⫺ 8303)
  │ ✔ Trees : 13/14 (conf: 0.9285714285714286)
  │ ✘ Meadows : 14/14 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A99 ⫹ 24425)
   ✔ {1} ⟨DR⟩ (A42 ⫺ 9819)
   │✔ {1} ⟨P̅P̅⟩ (A71 ⫹₆₀ 15804)
   ││✔ Bare Soil : 31/31 (conf: 1.0)
   ││✘ {1} A50 ⫹ 10681
   ││ ✔ Meadows : 5/5 (conf: 1.0)
   ││ ✘ {1} A3 ⫹ 6133
   ││  ✔ Bare Soil : 15/15 (conf: 1.0)
   ││  ✘ Meadows : 3/4 (conf: 0.75)
   │✘ {1} A4 ⫺ 6540
   │ ✔ Meadows : 18/19 (conf: 0.9473684210526315)
   │ ✘ {1} ⟨PO⟩ (A4 ⫺ 5123)
   │  ✔ Bare Soil : 10/10 (conf: 1.0)
   │  ✘ {1} A1 ⫹ 3864
   │   ✔ Bare Soil : 3/4 (conf: 0.75)
   │   ✘ Meadows : 4/4 (conf: 1.0)
   ✘ Meadows : 34/36 (conf: 0.9444444444444444)
● [ 22/07/2021 09:37:37 ] Saving tree to file ./gandalf/trees/tree_e3c77e740f1fbfe23ea1ae66b18d958345591326692346a4806b5a0a40f132f4.jld...
Test tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 9
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₆₀ 16082)
✔ {1} A35 ⫹₇₀ 8313
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A74 ⫹₆₀ 12673)
│ ✔ Asphalt : 15/18 (conf: 0.8333333333333334)
│ ✘ {1} A18 ⫺₇₀ 12534
│  ✔ {1} ⟨DR⟩ (A101 ⫺ 16736)
│  │✔ {1} A2 ⫹ 11246
│  ││✔ Bitumen : 1/2 (conf: 0.5)
│  ││✘ Gravel : 0/0 (conf: NaN)
│  │✘ Bitumen : 16/18 (conf: 0.8888888888888888)
│  ✘ {1} ⟨DR⟩ (A9 ⫺ 11999)
│   ✔ {1} ⟨DR⟩ (A27 ⫹ 12505)
│   │✔ {1} A2 ⫺ 10919
│   ││✔ Asphalt : 0/1 (conf: 0.0)
│   ││✘ Bitumen : 1/2 (conf: 0.5)
│   │✘ Gravel : 0/0 (conf: NaN)
│   ✘ Gravel : 1/4 (conf: 0.25)
✘ {1} ⟨P̅P̅⟩ (A36 ⫺₇₀ 14645)
 ✔ {1} A4 ⫺₆₀ 23840
 │✔ Painted metal sheets : 19/19 (conf: 1.0)
 │✘ {1} A81 ⫹₈₀ 24008
 │ ✔ {1} ⟨P̅P̅⟩ (A16 ⫺ 14883)
 │ │✔ Self-Blocking Bricks : 9/12 (conf: 0.75)
 │ │✘ {1} ⟨PO⟩ (A52 ⫹ 16210)
 │ │ ✔ {1} ⟨DR⟩ (A2 ⫹ 9562)
 │ │ │✔ Self-Blocking Bricks : 3/4 (conf: 0.75)
 │ │ │✘ Asphalt : 1/1 (conf: 1.0)
 │ │ ✘ {1} ⟨P̅P̅⟩ (A14 ⫹ 13674)
 │ │  ✔ Gravel : 5/7 (conf: 0.7142857142857143)
 │ │  ✘ {1} ⟨PO⟩ (A8 ⫺₆₀ 14100)
 │ │   ✔ Gravel : 4/5 (conf: 0.8)
 │ │   ✘ {1} ⟨DR⟩ (A3 ⫹ 11216)
 │ │    ✔ Self-Blocking Bricks : 5/6 (conf: 0.8333333333333334)
 │ │    ✘ Gravel : 0/0 (conf: NaN)
 │ ✘ Bare Soil : 5/5 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A65 ⫹ 4350)
  ✔ {1} ⟨DR⟩ (A69 ⫹ 7887)
  │✔ Trees : 16/17 (conf: 0.9411764705882353)
  │✘ {1} ⟨DR⟩ (A30 ⫺ 8303)
  │ ✔ Trees : 2/2 (conf: 1.0)
  │ ✘ Meadows : 3/4 (conf: 0.75)
  ✘ {1} ⟨DR⟩ (A99 ⫹ 24425)
   ✔ {1} ⟨DR⟩ (A42 ⫺ 9819)
   │✔ {1} ⟨P̅P̅⟩ (A71 ⫹₆₀ 15804)
   ││✔ Bare Soil : 5/5 (conf: 1.0)
   ││✘ {1} A50 ⫹ 10681
   ││ ✔ Meadows : 0/2 (conf: 0.0)
   ││ ✘ {1} A3 ⫹ 6133
   ││  ✔ Bare Soil : 2/2 (conf: 1.0)
   ││  ✘ Meadows : 2/4 (conf: 0.5)
   │✘ {1} A4 ⫺ 6540
   │ ✔ Meadows : 3/4 (conf: 0.75)
   │ ✘ {1} ⟨PO⟩ (A4 ⫺ 5123)
   │  ✔ Bare Soil : 1/1 (conf: 1.0)
   │  ✘ {1} A1 ⫹ 3864
   │   ✔ Bare Soil : 0/1 (conf: 0.0)
   │   ✘ Meadows : 1/2 (conf: 0.5)
   ✘ Meadows : 9/12 (conf: 0.75)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Pavia	4	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	82.78%	80.0%	65.0%	90.0%	50.0%	90.0%	95.0%	85.0%	100.0%	90.0%	80.0%	92.86%	81.82%	62.5%	64.29%	100.0%	77.27%	100.0%	94.74%	||	80.62%	[80.0, 76.47, 85.71, 55.56, 75.0, 97.44, 80.95, 100.0, 92.31]%	|||	82.78%	97.85%	83.72%	97.87%	82.6%	
  accuracy: 82.78% kappa: 80.62% 
 16  0  2  2  0  0  0  0  0	80.0%		Asphalt
  0 13  0  0  7  0  0  0  0	65.0%		Bare Soil
  1  0 18  1  0  0  0  0  0	90.0%		Bitumen
  2  0  2 10  1  0  5  0  0	50.0%		Gravel
  0  1  0  0 18  0  0  0  1	90.0%		Meadows
  1  0  0  0  0 19  0  0  0	95.0%		Painted metal sheets
  0  0  0  3  0  0 17  0  0	85.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  2  0  0  0 18	90.0%		Trees

overall_acc:	0.8277777777777777
κ =		0.8062499999999999
sensitivities:	[0.8, 0.65, 0.9, 0.5, 0.9, 0.95, 0.85, 1.0, 0.9]
specificities:	[0.975, 0.99375, 0.975, 0.9625, 0.9375, 1.0, 0.96875, 1.0, 0.99375]
PPVs:		[0.8, 0.9285714285714286, 0.8181818181818182, 0.625, 0.6428571428571429, 1.0, 0.7727272727272727, 1.0, 0.9473684210526315]
NPVs:		[0.975, 0.9578313253012049, 0.9873417721518988, 0.9390243902439024, 0.9868421052631579, 0.9937888198757764, 0.9810126582278481, 1.0, 0.9875776397515528]
F1s:		[0.8, 0.7647058823529411, 0.8571428571428571, 0.5555555555555556, 0.75, 0.9743589743589743, 0.8095238095238095, 1.0, 0.9230769230769231]
accuracies:	[0.9555555555555556, 0.9555555555555556, 0.9666666666666667, 0.9111111111111111, 0.9333333333333333, 0.9944444444444445, 0.9555555555555556, 1.0, 0.9833333333333333]
mean_accuracy:	0.9617283950617284
Dataset_slice = (900) -> [10, 116, 221, 307, 469, 514, 633, 738, 882, 12, 188, 231, 354, 401, 560, 622, 715, 890, 84, 193, 239, 362, 483, 542, 675, 754, 826, 52, 131, 230, 337, 491, 527, 664, 792, 833, 45, 175, 218, 385, 492, 523, 695, 788, 851, 87, 192, 265, 383, 486, 503, 657, 744, 817, 14, 190, 264, 381, 480, 580, 697, 760, 849, 20, 142, 242, 352, 422, 531, 678, 762, 850, 39, 159, 210, 355, 453, 561, 629, 766, 848, 9, 138, 279, 380, 488, 544, 665, 716, 819, 38, 119, 250, 391, 454, 541, 673, 782, 816, 43, 155, 289, 365, 495, 512, 669, 789, 853, 23, 187, 292, 316, 457, 600, 616, 783, 820, 92, 132, 205, 389, 403, 504, 607, 755, 875, 93, 113, 286, 356, 440, 519, 631, 771, 821, 51, 145, 296, 366, 418, 557, 699, 739, 843, 89, 158, 240, 368, 433, 584, 684, 756, 811, 67, 146, 259, 336, 449, 515, 693, 759, 892, 100, 176, 244, 372, 464, 534, 632, 711, 865, 71, 164, 283, 390, 460, 546, 656, 704, 802, 36, 128, 243, 325, 404, 567, 659, 710, 857, 19, 153, 236, 306, 412, 596, 615, 751, 827, 94, 126, 237, 400, 496, 537, 618, 736, 847, 68, 137, 260, 308, 466, 533, 658, 786, 803, 22, 120, 222, 360, 493, 517, 610, 798, 900, 21, 169, 214, 332, 445, 506, 660, 714, 831, 1, 136, 290, 397, 413, 554, 686, 725, 805, 5, 189, 238, 315, 414, 592, 642, 728, 863, 53, 148, 235, 318, 456, 505, 681, 772, 801, 46, 104, 300, 311, 497, 569, 691, 779, 870, 91, 179, 297, 303, 416, 572, 627, 799, 822, 3, 194, 248, 304, 408, 599, 617, 720, 823, 34, 108, 285, 335, 407, 502, 637, 749, 858, 41, 197, 247, 320, 437, 529, 620, 713, 899, 62, 167, 281, 384, 431, 579, 641, 707, 838, 75, 199, 272, 331, 411, 552, 612, 765, 830, 73, 129, 257, 317, 439, 564, 672, 741, 889, 97, 105, 209, 377, 420, 516, 690, 745, 842, 55, 161, 217, 324, 475, 508, 687, 784, 872, 80, 180, 298, 305, 430, 538, 653, 761, 846, 59, 173, 212, 328, 424, 536, 692, 712, 814, 63, 124, 206, 338, 438, 556, 680, 780, 877, 4, 112, 204, 394, 417, 553, 630, 702, 815, 54, 191, 220, 369, 435, 524, 670, 724, 841, 74, 182, 274, 359, 443, 543, 679, 769, 812, 95, 195, 234, 375, 470, 551, 608, 726, 844, 78, 117, 277, 312, 487, 521, 689, 795, 809, 96, 107, 226, 321, 451, 522, 638, 757, 887, 99, 184, 255, 392, 410, 597, 655, 719, 879, 16, 178, 232, 347, 423, 571, 700, 787, 824, 72, 106, 249, 346, 479, 568, 639, 733, 896, 90, 162, 295, 326, 406, 588, 604, 763, 891, 60, 121, 288, 313, 471, 558, 652, 796, 861, 44, 122, 219, 393, 434, 555, 651, 718, 808, 18, 115, 275, 327, 402, 562, 676, 797, 852, 25, 109, 299, 358, 473, 587, 677, 732, 860, 32, 125, 252, 334, 429, 548, 654, 777, 818, 77, 147, 211, 343, 459, 595, 674, 747, 886, 28, 200, 251, 363, 444, 539, 625, 740, 837, 24, 133, 284, 322, 481, 525, 645, 785, 856, 76, 130, 213, 357, 432, 578, 647, 776, 806, 17, 101, 293, 344, 499, 582, 623, 774, 898, 65, 114, 227, 314, 442, 511, 614, 742, 880, 31, 183, 203, 349, 482, 513, 663, 743, 878, 30, 149, 291, 373, 450, 535, 635, 717, 884, 50, 141, 225, 310, 500, 590, 611, 767, 813, 85, 139, 233, 341, 468, 507, 682, 727, 895, 26, 165, 258, 333, 447, 509, 628, 737, 807, 33, 144, 270, 378, 462, 598, 698, 708, 873, 37, 123, 269, 398, 441, 545, 650, 770, 834, 64, 110, 215, 345, 474, 570, 643, 703, 893, 56, 177, 266, 329, 425, 589, 609, 706, 888, 27, 170, 246, 350, 472, 520, 605, 701, 876, 49, 118, 268, 376, 465, 576, 661, 752, 869, 57, 196, 262, 351, 476, 577, 640, 735, 864, 69, 174, 245, 388, 428, 518, 636, 768, 894, 70, 154, 224, 399, 455, 540, 667, 758, 810, 8, 198, 253, 370, 494, 573, 613, 781, 836, 83, 181, 208, 340, 478, 594, 648, 750, 804, 15, 186, 254, 309, 458, 547, 696, 753, 854, 98, 102, 267, 323, 490, 565, 646, 794, 897, 11, 171, 223, 386, 498, 575, 621, 764, 874, 7, 150, 261, 339, 477, 549, 606, 729, 839, 29, 151, 278, 364, 463, 510, 694, 723, 855, 2, 156, 273, 342, 426, 559, 688, 773, 883, 48, 143, 263, 301, 467, 563, 603, 775, 835, 61, 185, 256, 367, 461, 574, 685, 793, 868, 82, 152, 202, 330, 436, 530, 644, 730, 829, 6, 160, 280, 348, 485, 585, 666, 721, 825, 81, 168, 207, 396, 421, 526, 662, 790, 867, 79, 166, 276, 353, 419, 591, 624, 800, 845, 88, 140, 294, 361, 415, 583, 626, 734, 862, 35, 111, 229, 382, 489, 581, 634, 731, 832, 13, 103, 201, 302, 427, 532, 683, 748, 881, 66, 127, 287, 395, 452, 501, 602, 709, 866, 47, 135, 271, 387, 446, 566, 619, 791, 885, 42, 157, 241, 374, 448, 528, 649, 746, 828, 40, 163, 282, 319, 484, 593, 668, 778, 859, 86, 172, 228, 371, 405, 586, 671, 705, 840, 58, 134, 216, 379, 409, 550, 601, 722, 871]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	1731.95 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1527.65 MBs	(shape (3, 4, 3, 4, 720, 1030, 4), 371747600 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 09:37:43 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (293+427=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A10 ⫺₈₀ 8135), purity -1.6421941369019477
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+211=293 samples) on frame 1 with decision: {1} A78 ⫺ 12168, purity -0.8183798092685803
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (170+257=427 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A103 ⫺₈₀ 16161), purity -1.2778790568502738
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (113+98=211 samples) on frame 1 with decision: {1} ⟨DR⟩ (A66 ⫹ 5886), purity -0.6120085310160037
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (107+63=170 samples) on frame 1 with decision: {1} ⟨PO⟩ (A88 ⫹ 13119), purity -0.49934657800193316
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (177+80=257 samples) on frame 1 with decision: {1} A4 ⫺₆₀ 23840, purity -0.8704493602456286
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (89+24=113 samples) on frame 1 with decision: {1} ⟨DR⟩ (A33 ⫺ 12514), purity -0.5278435065447799
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+86=107 samples) on frame 1 with decision: {1} A17 ⫺₆₀ 12435, purity -0.4567926268190969
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (145+32=177 samples) on frame 1 with decision: {1} A96 ⫺₈₀ 21759, purity -0.865847843494749
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+60=98 samples) on frame 1 with decision: {1} ⟨PO⟩ (A71 ⫹₆₀ 11761), purity -0.26661914314750096
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+9=21 samples) on frame 1 with decision: {1} A16 ⫺₆₀ 11286, purity -0.2930309596494659
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (29+60=89 samples) on frame 1 with decision: {1} ⟨DR⟩ (A99 ⫹ 24415), purity -0.4578831006684441
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (24+14=38 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A32 ⫺₆₀ 8373), purity -0.23796010184617084
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+6=86 samples) on frame 1 with decision: {1} ⟨PP⟩ (A3 ⫺ 15982), purity -0.14018506028139824
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (117+28=145 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A14 ⫺₈₀ 14873), purity -0.6747637781079613
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+24=32 samples) on frame 1 with decision: {1} A37 ⫺₇₀ 14704, purity -0.5509633325444584
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A1 ⫺₈₀ 8155, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A1 ⫹ 11910, purity -0.46209812037329684
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (20+4=24 samples) on frame 1 with decision: {1} ⟨PO⟩ (A97 ⫹ 22235), purity -0.23104906018664842
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+32=60 samples) on frame 1 with decision: {1} ⟨PO⟩ (A83 ⫺ 20431), purity -0.5103385404281845
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+5=24 samples) on frame 1 with decision: {1} A27 ⫹ 5638, purity -0.14021076396026175
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (33+84=117 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A1 ⫹₆₀ 12802), purity -0.623503828706094
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+17=28 samples) on frame 1 with decision: {1} A4 ⫺ 6540, purity -0.23019567147639505
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (72+12=84 samples) on frame 1 with decision: {1} ⟨PO⟩ (A65 ⫺ 20402), purity -0.6391315357950018
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+24=32 samples) on frame 1 with decision: {1} ⟨PO⟩ (A101 ⫹ 22909), purity -0.16539080953949548
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A7 ⫺₆₀ 5648, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+4=11 samples) on frame 1 with decision: {1} ⟨DR⟩ (A3 ⫹ 1912), purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (33+39=72 samples) on frame 1 with decision: {1} A83 ⫺₈₀ 18489, purity -0.5108950140351577
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+19=33 samples) on frame 1 with decision: {1} ⟨PO⟩ (A35 ⫹₆₀ 15844), purity -0.6329365898132153
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+4=19 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A14 ⫺ 12564), purity -0.3950545448985694
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+4=15 samples) on frame 1 with decision: {1} A43 ⫺ 15774, purity -0.14995603856501555
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
1241.586834 seconds (8.69 G allocations: 354.743 GiB, 25.58% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 32
Tot nodes: 63
Height: 11
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A10 ⫺₈₀ 8135)
✔ {1} ⟨P̅P̅⟩ (A103 ⫺₈₀ 16161)
│✔ {1} A4 ⫺₆₀ 23840
││✔ Painted metal sheets : 80/80 (conf: 1.0)
││✘ {1} A96 ⫺₈₀ 21759
││ ✔ {1} A37 ⫺₇₀ 14704
││ │✔ {1} ⟨PO⟩ (A97 ⫹ 22235)
││ ││✔ Self-Blocking Bricks : 1/4 (conf: 0.25)
││ ││✘ Bare Soil : 20/20 (conf: 1.0)
││ │✘ {1} A1 ⫺₈₀ 8155
││ │ ✔ Trees : 3/4 (conf: 0.75)
││ │ ✘ Meadows : 4/4 (conf: 1.0)
││ ✘ {1} ⟨P̅P̅⟩ (A14 ⫺₈₀ 14873)
││  ✔ Self-Blocking Bricks : 28/28 (conf: 1.0)
││  ✘ {1} ⟨P̅P̅⟩ (A1 ⫹₆₀ 12802)
││   ✔ {1} ⟨PO⟩ (A65 ⫺ 20402)
││   │✔ Gravel : 12/12 (conf: 1.0)
││   │✘ {1} A83 ⫺₈₀ 18489
││   │ ✔ Self-Blocking Bricks : 38/39 (conf: 0.9743589743589743)
││   │ ✘ {1} ⟨PO⟩ (A35 ⫹₆₀ 15844)
││   │  ✔ {1} ⟨P̅P̅⟩ (A14 ⫺ 12564)
││   │  │✔ Asphalt : 4/4 (conf: 1.0)
││   │  │✘ {1} A43 ⫺ 15774
││   │  │ ✔ Gravel : 3/4 (conf: 0.75)
││   │  │ ✘ Self-Blocking Bricks : 11/11 (conf: 1.0)
││   │  ✘ Gravel : 13/14 (conf: 0.9285714285714286)
││   ✘ Gravel : 32/33 (conf: 0.9696969696969697)
│✘ {1} ⟨PO⟩ (A88 ⫹ 13119)
│ ✔ Asphalt : 62/63 (conf: 0.9841269841269841)
│ ✘ {1} A17 ⫺₆₀ 12435
│  ✔ {1} ⟨PP⟩ (A3 ⫺ 15982)
│  │✔ Gravel : 5/6 (conf: 0.8333333333333334)
│  │✘ Bitumen : 78/80 (conf: 0.975)
│  ✘ {1} A16 ⫺₆₀ 11286
│   ✔ {1} A1 ⫹ 11910
│   │✔ Asphalt : 5/5 (conf: 1.0)
│   │✘ Asphalt : 2/4 (conf: 0.5)
│   ✘ Gravel : 12/12 (conf: 1.0)
✘ {1} A78 ⫺ 12168
 ✔ {1} ⟨DR⟩ (A66 ⫹ 5886)
 │✔ {1} ⟨PO⟩ (A71 ⫹₆₀ 11761)
 ││✔ Trees : 60/60 (conf: 1.0)
 ││✘ {1} ⟨P̅P̅⟩ (A32 ⫺₆₀ 8373)
 ││ ✔ Trees : 14/14 (conf: 1.0)
 ││ ✘ {1} A27 ⫹ 5638
 ││  ✔ Trees : 3/5 (conf: 0.6)
 ││  ✘ Meadows : 19/19 (conf: 1.0)
 │✘ {1} ⟨DR⟩ (A33 ⫺ 12514)
 │ ✔ Bare Soil : 24/24 (conf: 1.0)
 │ ✘ {1} ⟨DR⟩ (A99 ⫹ 24415)
 │  ✔ {1} ⟨PO⟩ (A83 ⫺ 20431)
 │  │✔ {1} ⟨PO⟩ (A101 ⫹ 22909)
 │  ││✔ Bare Soil : 24/24 (conf: 1.0)
 │  ││✘ {1} A7 ⫺₆₀ 5648
 │  ││ ✔ Bare Soil : 3/4 (conf: 0.75)
 │  ││ ✘ Meadows : 4/4 (conf: 1.0)
 │  │✘ {1} A4 ⫺ 6540
 │  │ ✔ Meadows : 17/17 (conf: 1.0)
 │  │ ✘ {1} ⟨DR⟩ (A3 ⫹ 1912)
 │  │  ✔ Meadows : 3/4 (conf: 0.75)
 │  │  ✘ Bare Soil : 7/7 (conf: 1.0)
 │  ✘ Meadows : 29/29 (conf: 1.0)
 ✘ Shadows : 80/82 (conf: 0.975609756097561)
● [ 22/07/2021 09:58:25 ] Saving tree to file ./gandalf/trees/tree_b004155ec574f92750516a7b5400aaa33ecfb2209ca827c4281bc1835e0aa8b7.jld...
Test tree:
Decision Tree
Leaves: 32
Tot nodes: 63
Height: 11
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A10 ⫺₈₀ 8135)
✔ {1} ⟨P̅P̅⟩ (A103 ⫺₈₀ 16161)
│✔ {1} A4 ⫺₆₀ 23840
││✔ Painted metal sheets : 20/20 (conf: 1.0)
││✘ {1} A96 ⫺₈₀ 21759
││ ✔ {1} A37 ⫺₇₀ 14704
││ │✔ {1} ⟨PO⟩ (A97 ⫹ 22235)
││ ││✔ Self-Blocking Bricks : 1/1 (conf: 1.0)
││ ││✘ Bare Soil : 3/3 (conf: 1.0)
││ │✘ {1} A1 ⫺₈₀ 8155
││ │ ✔ Trees : 1/3 (conf: 0.3333333333333333)
││ │ ✘ Meadows : 0/0 (conf: NaN)
││ ✘ {1} ⟨P̅P̅⟩ (A14 ⫺₈₀ 14873)
││  ✔ Self-Blocking Bricks : 6/6 (conf: 1.0)
││  ✘ {1} ⟨P̅P̅⟩ (A1 ⫹₆₀ 12802)
││   ✔ {1} ⟨PO⟩ (A65 ⫺ 20402)
││   │✔ Gravel : 1/1 (conf: 1.0)
││   │✘ {1} A83 ⫺₈₀ 18489
││   │ ✔ Self-Blocking Bricks : 7/8 (conf: 0.875)
││   │ ✘ {1} ⟨PO⟩ (A35 ⫹₆₀ 15844)
││   │  ✔ {1} ⟨P̅P̅⟩ (A14 ⫺ 12564)
││   │  │✔ Asphalt : 0/1 (conf: 0.0)
││   │  │✘ {1} A43 ⫺ 15774
││   │  │ ✔ Gravel : 0/0 (conf: NaN)
││   │  │ ✘ Self-Blocking Bricks : 1/3 (conf: 0.3333333333333333)
││   │  ✘ Gravel : 2/5 (conf: 0.4)
││   ✘ Gravel : 10/11 (conf: 0.9090909090909091)
│✘ {1} ⟨PO⟩ (A88 ⫹ 13119)
│ ✔ Asphalt : 14/18 (conf: 0.7777777777777778)
│ ✘ {1} A17 ⫺₆₀ 12435
│  ✔ {1} ⟨PP⟩ (A3 ⫺ 15982)
│  │✔ Gravel : 0/1 (conf: 0.0)
│  │✘ Bitumen : 17/20 (conf: 0.85)
│  ✘ {1} A16 ⫺₆₀ 11286
│   ✔ {1} A1 ⫹ 11910
│   │✔ Asphalt : 0/0 (conf: NaN)
│   │✘ Asphalt : 0/1 (conf: 0.0)
│   ✘ Gravel : 4/5 (conf: 0.8)
✘ {1} A78 ⫺ 12168
 ✔ {1} ⟨DR⟩ (A66 ⫹ 5886)
 │✔ {1} ⟨PO⟩ (A71 ⫹₆₀ 11761)
 ││✔ Trees : 14/15 (conf: 0.9333333333333333)
 ││✘ {1} ⟨P̅P̅⟩ (A32 ⫺₆₀ 8373)
 ││ ✔ Trees : 4/4 (conf: 1.0)
 ││ ✘ {1} A27 ⫹ 5638
 ││  ✔ Trees : 1/2 (conf: 0.5)
 ││  ✘ Meadows : 5/5 (conf: 1.0)
 │✘ {1} ⟨DR⟩ (A33 ⫺ 12514)
 │ ✔ Bare Soil : 5/6 (conf: 0.8333333333333334)
 │ ✘ {1} ⟨DR⟩ (A99 ⫹ 24415)
 │  ✔ {1} ⟨PO⟩ (A83 ⫺ 20431)
 │  │✔ {1} ⟨PO⟩ (A101 ⫹ 22909)
 │  ││✔ Bare Soil : 6/6 (conf: 1.0)
 │  ││✘ {1} A7 ⫺₆₀ 5648
 │  ││ ✔ Bare Soil : 0/0 (conf: NaN)
 │  ││ ✘ Meadows : 0/0 (conf: NaN)
 │  │✘ {1} A4 ⫺ 6540
 │  │ ✔ Meadows : 4/6 (conf: 0.6666666666666666)
 │  │ ✘ {1} ⟨DR⟩ (A3 ⫹ 1912)
 │  │  ✔ Meadows : 0/2 (conf: 0.0)
 │  │  ✘ Bare Soil : 0/1 (conf: 0.0)
 │  ✘ Meadows : 7/7 (conf: 1.0)
 ✘ Shadows : 18/19 (conf: 0.9473684210526315)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Pavia	5	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	83.89%	70.0%	70.0%	85.0%	85.0%	80.0%	100.0%	75.0%	90.0%	100.0%	70.0%	87.5%	85.0%	73.91%	80.0%	100.0%	83.33%	94.74%	83.33%	||	81.88%	[70.0, 77.78, 85.0, 79.07, 80.0, 100.0, 78.95, 92.31, 90.91]%	|||	83.89%	97.99%	84.2%	98.0%	83.78%	
  accuracy: 83.89% kappa: 81.88% 
 14  0  3  2  0  0  0  1  0	70.0%		Asphalt
  0 14  0  0  4  0  0  0  2	70.0%		Bare Soil
  3  0 17  0  0  0  0  0  0	85.0%		Bitumen
  0  0  0 17  0  0  3  0  0	85.0%		Gravel
  0  2  0  0 16  0  0  0  2	80.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  1  0  0  4  0  0 15  0  0	75.0%		Self-Blocking Bricks
  2  0  0  0  0  0  0 18  0	90.0%		Shadows
  0  0  0  0  0  0  0  0 20	100.0%		Trees

overall_acc:	0.8388888888888889
κ =		0.8187500000000001
sensitivities:	[0.7, 0.7, 0.85, 0.85, 0.8, 1.0, 0.75, 0.9, 1.0]
specificities:	[0.9625, 0.9875, 0.98125, 0.9625, 0.975, 1.0, 0.98125, 0.99375, 0.975]
PPVs:		[0.7, 0.875, 0.85, 0.7391304347826086, 0.8, 1.0, 0.8333333333333334, 0.9473684210526315, 0.8333333333333334]
NPVs:		[0.9625, 0.9634146341463414, 0.98125, 0.9808917197452229, 0.975, 1.0, 0.9691358024691358, 0.9875776397515528, 1.0]
F1s:		[0.7, 0.7777777777777778, 0.85, 0.7906976744186046, 0.8, 1.0, 0.7894736842105263, 0.9230769230769231, 0.9090909090909091]
accuracies:	[0.9333333333333333, 0.9555555555555556, 0.9666666666666667, 0.95, 0.9555555555555556, 1.0, 0.9555555555555556, 0.9833333333333333, 0.9777777777777777]
mean_accuracy:	0.9641975308641975
Dataset_slice = (900) -> [68, 113, 288, 329, 406, 554, 655, 710, 862, 53, 120, 291, 341, 461, 505, 698, 752, 882, 72, 123, 234, 372, 472, 560, 663, 709, 872, 28, 128, 298, 379, 479, 553, 632, 745, 818, 84, 172, 287, 311, 466, 538, 673, 773, 871, 96, 182, 229, 309, 491, 516, 668, 708, 899, 91, 200, 222, 382, 418, 508, 627, 753, 877, 42, 156, 226, 342, 429, 562, 694, 750, 801, 33, 167, 204, 385, 498, 502, 635, 701, 823, 4, 158, 259, 316, 486, 511, 631, 765, 806, 63, 102, 220, 354, 496, 551, 700, 717, 851, 21, 101, 266, 327, 485, 570, 662, 742, 859, 79, 179, 270, 393, 404, 537, 693, 725, 900, 15, 151, 214, 332, 454, 532, 612, 732, 838, 22, 115, 217, 375, 468, 578, 615, 748, 805, 51, 118, 235, 378, 469, 525, 681, 784, 810, 32, 153, 232, 352, 470, 506, 646, 729, 893, 70, 160, 244, 373, 464, 595, 640, 743, 873, 66, 138, 250, 380, 437, 514, 609, 751, 830, 99, 176, 277, 338, 417, 547, 664, 798, 814, 40, 168, 258, 305, 482, 577, 622, 779, 844, 64, 196, 240, 363, 477, 521, 613, 724, 811, 19, 150, 282, 347, 401, 529, 671, 723, 876, 73, 140, 201, 337, 489, 550, 611, 707, 822, 18, 186, 215, 304, 492, 581, 624, 711, 847, 80, 106, 289, 353, 425, 585, 676, 799, 809, 60, 170, 223, 330, 416, 515, 606, 781, 807, 3, 144, 290, 392, 435, 530, 660, 769, 896, 87, 124, 286, 384, 483, 534, 638, 746, 835, 43, 131, 284, 346, 420, 552, 621, 737, 868, 9, 143, 253, 361, 421, 531, 661, 764, 804, 20, 162, 261, 308, 438, 513, 658, 712, 870, 1, 110, 254, 343, 484, 543, 601, 758, 808, 62, 174, 252, 349, 443, 567, 649, 714, 834, 45, 135, 205, 339, 436, 510, 683, 791, 856, 30, 134, 238, 367, 473, 539, 628, 728, 890, 76, 148, 275, 325, 474, 544, 618, 722, 866, 37, 173, 280, 359, 407, 557, 691, 747, 803, 38, 137, 297, 377, 427, 535, 678, 793, 812, 23, 166, 233, 399, 453, 523, 656, 726, 855, 57, 132, 260, 365, 442, 526, 680, 727, 865, 75, 108, 264, 333, 451, 563, 636, 738, 854, 35, 145, 202, 312, 411, 573, 686, 749, 869, 55, 159, 269, 340, 460, 566, 688, 718, 864, 50, 164, 225, 344, 500, 579, 645, 731, 821, 95, 103, 300, 395, 452, 527, 641, 713, 842, 61, 155, 212, 386, 471, 600, 603, 736, 816, 82, 105, 228, 387, 446, 518, 659, 716, 817, 12, 161, 216, 383, 493, 575, 651, 721, 853, 74, 112, 206, 381, 444, 509, 654, 794, 819, 94, 180, 230, 390, 423, 504, 604, 740, 813, 49, 109, 293, 336, 409, 555, 633, 797, 825, 6, 184, 221, 324, 456, 549, 684, 756, 858, 24, 187, 241, 345, 495, 546, 625, 766, 826, 90, 114, 265, 364, 449, 558, 620, 786, 860, 93, 121, 251, 351, 412, 556, 695, 788, 874, 14, 177, 272, 358, 467, 587, 677, 703, 839, 47, 169, 239, 400, 431, 533, 643, 792, 846, 89, 194, 263, 391, 445, 528, 642, 777, 892, 81, 147, 211, 369, 403, 522, 607, 734, 848, 39, 127, 242, 397, 405, 571, 674, 780, 887, 11, 195, 208, 334, 459, 569, 614, 770, 827, 58, 192, 207, 319, 490, 599, 644, 787, 880, 92, 199, 209, 388, 487, 572, 667, 772, 867, 52, 104, 203, 396, 439, 576, 637, 795, 881, 59, 188, 227, 348, 441, 540, 657, 774, 841, 48, 193, 237, 315, 402, 542, 610, 739, 802, 7, 122, 283, 317, 457, 598, 608, 735, 857, 54, 141, 246, 303, 488, 561, 616, 757, 878, 17, 126, 285, 389, 478, 512, 687, 767, 824, 56, 171, 248, 398, 434, 517, 690, 800, 879, 97, 133, 271, 318, 481, 541, 679, 715, 875, 29, 189, 245, 322, 440, 589, 669, 705, 843, 34, 163, 296, 356, 450, 596, 692, 762, 886, 77, 185, 292, 328, 414, 584, 630, 754, 833, 46, 107, 236, 326, 419, 565, 619, 730, 852, 71, 116, 257, 394, 465, 507, 648, 776, 820, 31, 183, 247, 366, 494, 594, 602, 720, 891, 26, 198, 279, 357, 410, 564, 634, 778, 888, 25, 190, 224, 355, 455, 524, 653, 790, 863, 65, 178, 231, 313, 499, 536, 672, 719, 845, 83, 146, 219, 350, 480, 591, 665, 706, 832, 2, 152, 267, 320, 415, 574, 605, 704, 895, 8, 154, 295, 376, 408, 586, 647, 771, 898, 27, 157, 276, 321, 463, 592, 699, 768, 850, 85, 181, 268, 362, 458, 588, 689, 783, 829, 86, 125, 278, 331, 424, 580, 682, 782, 849, 36, 111, 243, 307, 432, 582, 685, 702, 884, 78, 117, 299, 306, 413, 548, 626, 789, 828, 44, 197, 210, 335, 497, 519, 666, 755, 815, 10, 175, 273, 314, 476, 501, 629, 785, 840, 98, 191, 256, 302, 428, 597, 650, 760, 889, 69, 139, 274, 374, 422, 520, 652, 744, 897, 67, 165, 281, 360, 426, 559, 639, 759, 831, 16, 149, 249, 310, 462, 590, 696, 775, 894, 13, 129, 255, 368, 447, 583, 670, 741, 861, 5, 136, 213, 370, 448, 593, 617, 763, 883, 41, 142, 218, 301, 433, 545, 697, 761, 836, 88, 130, 262, 323, 475, 568, 623, 796, 885, 100, 119, 294, 371, 430, 503, 675, 733, 837]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	1731.95 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1527.65 MBs	(shape (3, 4, 3, 4, 720, 1030, 4), 369683480 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 09:58:31 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (256+464=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A103 ⫺₈₀ 16359), purity -1.6363450890866027
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+176=256 samples) on frame 1 with decision: {1} A38 ⫺ 8313, purity -0.6706893462710506
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (239+225=464 samples) on frame 1 with decision: {1} A17 ⫹₇₀ 10047, purity -1.2316223515033107
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (114+62=176 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A68 ⫹₆₀ 13109), purity -0.5930850807091423
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (127+98=225 samples) on frame 1 with decision: {1} ⟨PP⟩ (A64 ⫹ 4142), purity -0.6217728945160047
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+80=239 samples) on frame 1 with decision: {1} A1 ⫺₈₀ 19282, purity -0.7020337635969777
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (26+88=114 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A17 ⫺₆₀ 12435), purity -0.5815546806707363
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (37+90=127 samples) on frame 1 with decision: {1} ⟨DR⟩ (A99 ⫹ 24425), purity -0.5345939317275451
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (143+16=159 samples) on frame 1 with decision: {1} A90 ⫺₇₀ 26208, purity -0.728795616538767
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (29+69=98 samples) on frame 1 with decision: {1} ⟨PP⟩ (A74 ⫹ 19946), purity -0.1964085655785174
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+12=26 samples) on frame 1 with decision: {1} ⟨DR⟩ (A86 ⫹ 13981), purity -0.33298324001192836
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (19+10=29 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A13 ⫺ 3874), purity -0.1350913435183241
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (75+13=88 samples) on frame 1 with decision: {1} ⟨PO⟩ (A99 ⫺₆₀ 16567), purity -0.2098987787097257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (96+47=143 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A16 ⫺ 14883), purity -0.6787034744671478
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (29+61=90 samples) on frame 1 with decision: {1} ⟨DR⟩ (A83 ⫺ 22027), purity -0.4759799713533691
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+6=13 samples) on frame 1 with decision: {1} A83 ⫹ 16755, purity -0.3221451630843691
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (36+60=96 samples) on frame 1 with decision: {1} A1 ⫺₇₀ 12346, purity -0.6376688159029656
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+4=12 samples) on frame 1 with decision: {1} A12 ⫹ 9909, purity -0.34657359027997264
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (43+4=47 samples) on frame 1 with decision: {1} A1 ⫺ 14437, purity -0.14891109756163667
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+13=29 samples) on frame 1 with decision: {1} A85 ⫹ 18252, purity -0.3849528230717838
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (57+4=61 samples) on frame 1 with decision: {1} A3 ⫹ 1665, purity -0.19267126042777416
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+8=13 samples) on frame 1 with decision: {1} A73 ⫺ 13991, purity -0.19246247059161073
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+30=36 samples) on frame 1 with decision: {1} A36 ⫹₆₀ 18291, purity -0.27090247782620697
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+55=60 samples) on frame 1 with decision: {1} A33 ⫺₇₀ 15546, purity -0.47632790559786714
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+25=30 samples) on frame 1 with decision: {1} ⟨PO⟩ (A96 ⫺₆₀ 18113), purity -0.11216861116820939
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (47+8=55 samples) on frame 1 with decision: {1} A2 ⫹₆₀ 11920, purity -0.3305242912367362
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A1 ⫺ 12386, purity -0.34657359027997264
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
4191.369138 seconds (17.72 G allocations: 1.309 TiB, 28.06% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 28
Tot nodes: 55
Height: 9
Modal height:  4
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫺₈₀ 16359)
✔ {1} A17 ⫹₇₀ 10047
│✔ {1} ⟨PP⟩ (A64 ⫹ 4142)
││✔ {1} ⟨PP⟩ (A74 ⫹ 19946)
│││✔ Trees : 69/69 (conf: 1.0)
│││✘ {1} ⟨P̅P̅⟩ (A13 ⫺ 3874)
│││ ✔ Trees : 10/10 (conf: 1.0)
│││ ✘ Meadows : 18/19 (conf: 0.9473684210526315)
││✘ {1} ⟨DR⟩ (A99 ⫹ 24425)
││ ✔ {1} ⟨DR⟩ (A83 ⫺ 22027)
││ │✔ {1} A3 ⫹ 1665
││ ││✔ Meadows : 4/4 (conf: 1.0)
││ ││✘ Bare Soil : 54/57 (conf: 0.9473684210526315)
││ │✘ {1} A85 ⫹ 18252
││ │ ✔ {1} A73 ⫺ 13991
││ │ │✔ Bare Soil : 8/8 (conf: 1.0)
││ │ │✘ Meadows : 4/5 (conf: 0.8)
││ │ ✘ Meadows : 16/16 (conf: 1.0)
││ ✘ Meadows : 35/37 (conf: 0.9459459459459459)
│✘ {1} A1 ⫺₈₀ 19282
│ ✔ Painted metal sheets : 80/80 (conf: 1.0)
│ ✘ {1} A90 ⫺₇₀ 26208
│  ✔ Bare Soil : 16/16 (conf: 1.0)
│  ✘ {1} ⟨P̅P̅⟩ (A16 ⫺ 14883)
│   ✔ {1} A1 ⫺ 14437
│   │✔ Gravel : 3/4 (conf: 0.75)
│   │✘ Self-Blocking Bricks : 42/43 (conf: 0.9767441860465116)
│   ✘ {1} A1 ⫺₇₀ 12346
│    ✔ {1} A33 ⫺₇₀ 15546
│    │✔ {1} A2 ⫹₆₀ 11920
│    ││✔ {1} A1 ⫺ 12386
│    │││✔ Self-Blocking Bricks : 4/4 (conf: 1.0)
│    │││✘ Self-Blocking Bricks : 2/4 (conf: 0.5)
│    ││✘ Gravel : 43/47 (conf: 0.9148936170212766)
│    │✘ Asphalt : 4/5 (conf: 0.8)
│    ✘ {1} A36 ⫹₆₀ 18291
│     ✔ {1} ⟨PO⟩ (A96 ⫺₆₀ 18113)
│     │✔ Self-Blocking Bricks : 25/25 (conf: 1.0)
│     │✘ Gravel : 3/5 (conf: 0.6)
│     ✘ Gravel : 6/6 (conf: 1.0)
✘ {1} A38 ⫺ 8313
 ✔ {1} ⟨P̅P̅⟩ (A68 ⫹₆₀ 13109)
 │✔ Asphalt : 60/62 (conf: 0.967741935483871)
 │✘ {1} ⟨P̅P̅⟩ (A17 ⫺₆₀ 12435)
 │ ✔ {1} ⟨PO⟩ (A99 ⫺₆₀ 16567)
 │ │✔ {1} A83 ⫹ 16755
 │ ││✔ Gravel : 6/6 (conf: 1.0)
 │ ││✘ Asphalt : 5/7 (conf: 0.7142857142857143)
 │ │✘ Bitumen : 74/75 (conf: 0.9866666666666667)
 │ ✘ {1} ⟨DR⟩ (A86 ⫹ 13981)
 │  ✔ {1} A12 ⫹ 9909
 │  │✔ Bitumen : 2/4 (conf: 0.5)
 │  │✘ Asphalt : 8/8 (conf: 1.0)
 │  ✘ Gravel : 14/14 (conf: 1.0)
 ✘ Shadows : 80/80 (conf: 1.0)
● [ 22/07/2021 11:08:22 ] Saving tree to file ./gandalf/trees/tree_57b41f9544b483321a47a594ec7e0a4919fbd14494460f0946372f66382753cf.jld...
Test tree:
Decision Tree
Leaves: 28
Tot nodes: 55
Height: 9
Modal height:  4
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫺₈₀ 16359)
✔ {1} A17 ⫹₇₀ 10047
│✔ {1} ⟨PP⟩ (A64 ⫹ 4142)
││✔ {1} ⟨PP⟩ (A74 ⫹ 19946)
│││✔ Trees : 13/13 (conf: 1.0)
│││✘ {1} ⟨P̅P̅⟩ (A13 ⫺ 3874)
│││ ✔ Trees : 4/4 (conf: 1.0)
│││ ✘ Meadows : 3/5 (conf: 0.6)
││✘ {1} ⟨DR⟩ (A99 ⫹ 24425)
││ ✔ {1} ⟨DR⟩ (A83 ⫺ 22027)
││ │✔ {1} A3 ⫹ 1665
││ ││✔ Meadows : 2/4 (conf: 0.5)
││ ││✘ Bare Soil : 4/7 (conf: 0.5714285714285714)
││ │✘ {1} A85 ⫹ 18252
││ │ ✔ {1} A73 ⫺ 13991
││ │ │✔ Bare Soil : 5/5 (conf: 1.0)
││ │ │✘ Meadows : 0/2 (conf: 0.0)
││ │ ✘ Meadows : 7/7 (conf: 1.0)
││ ✘ Meadows : 6/9 (conf: 0.6666666666666666)
│✘ {1} A1 ⫺₈₀ 19282
│ ✔ Painted metal sheets : 20/21 (conf: 0.9523809523809523)
│ ✘ {1} A90 ⫺₇₀ 26208
│  ✔ Bare Soil : 1/1 (conf: 1.0)
│  ✘ {1} ⟨P̅P̅⟩ (A16 ⫺ 14883)
│   ✔ {1} A1 ⫺ 14437
│   │✔ Gravel : 1/1 (conf: 1.0)
│   │✘ Self-Blocking Bricks : 7/8 (conf: 0.875)
│   ✘ {1} A1 ⫺₇₀ 12346
│    ✔ {1} A33 ⫺₇₀ 15546
│    │✔ {1} A2 ⫹₆₀ 11920
│    ││✔ {1} A1 ⫺ 12386
│    │││✔ Self-Blocking Bricks : 0/0 (conf: NaN)
│    │││✘ Self-Blocking Bricks : 0/1 (conf: 0.0)
│    ││✘ Gravel : 9/15 (conf: 0.6)
│    │✘ Asphalt : 1/3 (conf: 0.3333333333333333)
│    ✘ {1} A36 ⫹₆₀ 18291
│     ✔ {1} ⟨PO⟩ (A96 ⫺₆₀ 18113)
│     │✔ Self-Blocking Bricks : 2/4 (conf: 0.5)
│     │✘ Gravel : 0/0 (conf: NaN)
│     ✘ Gravel : 1/6 (conf: 0.16666666666666666)
✘ {1} A38 ⫺ 8313
 ✔ {1} ⟨P̅P̅⟩ (A68 ⫹₆₀ 13109)
 │✔ Asphalt : 15/15 (conf: 1.0)
 │✘ {1} ⟨P̅P̅⟩ (A17 ⫺₆₀ 12435)
 │ ✔ {1} ⟨PO⟩ (A99 ⫺₆₀ 16567)
 │ │✔ {1} A83 ⫹ 16755
 │ ││✔ Gravel : 1/1 (conf: 1.0)
 │ ││✘ Asphalt : 1/1 (conf: 1.0)
 │ │✘ Bitumen : 18/23 (conf: 0.782608695652174)
 │ ✘ {1} ⟨DR⟩ (A86 ⫹ 13981)
 │  ✔ {1} A12 ⫹ 9909
 │  │✔ Bitumen : 0/2 (conf: 0.0)
 │  │✘ Asphalt : 0/0 (conf: NaN)
 │  ✘ Gravel : 2/2 (conf: 1.0)
 ✘ Shadows : 20/20 (conf: 1.0)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Pavia	6	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	79.44%	85.0%	50.0%	90.0%	70.0%	90.0%	100.0%	45.0%	100.0%	85.0%	89.47%	76.92%	72.0%	56.0%	66.67%	95.24%	69.23%	100.0%	100.0%	||	76.88%	[87.18, 60.61, 80.0, 62.22, 76.6, 97.56, 54.55, 100.0, 91.89]%	|||	79.44%	97.43%	80.61%	97.47%	78.96%	
  accuracy: 79.44% kappa: 76.88% 
 17  0  3  0  0  0  0  0  0	85.0%		Asphalt
  0 10  0  1  7  1  1  0  0	50.0%		Bare Soil
  0  0 18  1  0  0  1  0  0	90.0%		Bitumen
  1  0  3 14  0  0  2  0  0	70.0%		Gravel
  0  2  0  0 18  0  0  0  0	90.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  1  0  1  9  0  0  9  0  0	45.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  1  0  0  2  0  0  0 17	85.0%		Trees

overall_acc:	0.7944444444444444
κ =		0.76875
sensitivities:	[0.85, 0.5, 0.9, 0.7, 0.9, 1.0, 0.45, 1.0, 0.85]
specificities:	[0.9875, 0.98125, 0.95625, 0.93125, 0.94375, 0.99375, 0.975, 1.0, 1.0]
PPVs:		[0.8947368421052632, 0.7692307692307693, 0.72, 0.56, 0.6666666666666666, 0.9523809523809523, 0.6923076923076923, 1.0, 1.0]
NPVs:		[0.9813664596273292, 0.9401197604790419, 0.9870967741935484, 0.9612903225806452, 0.9869281045751634, 1.0, 0.9341317365269461, 1.0, 0.9815950920245399]
F1s:		[0.8717948717948718, 0.6060606060606061, 0.8, 0.6222222222222222, 0.7659574468085106, 0.975609756097561, 0.5454545454545454, 1.0, 0.918918918918919]
accuracies:	[0.9722222222222222, 0.9277777777777778, 0.95, 0.9055555555555556, 0.9388888888888889, 0.9944444444444445, 0.9166666666666666, 1.0, 0.9833333333333333]
mean_accuracy:	0.9543209876543209
Dataset_slice = (900) -> [20, 148, 247, 348, 409, 562, 685, 736, 873, 36, 113, 203, 353, 426, 567, 608, 720, 812, 75, 145, 228, 390, 401, 547, 663, 735, 807, 9, 112, 249, 319, 421, 510, 661, 792, 865, 92, 159, 288, 325, 482, 513, 648, 741, 803, 88, 121, 212, 365, 407, 588, 626, 748, 885, 28, 186, 224, 360, 406, 551, 662, 734, 857, 79, 198, 274, 367, 408, 523, 633, 708, 826, 8, 118, 297, 387, 439, 502, 687, 737, 890, 73, 122, 204, 330, 479, 565, 683, 789, 836, 83, 194, 243, 374, 472, 552, 632, 775, 856, 40, 185, 275, 366, 446, 594, 700, 784, 821, 61, 195, 273, 356, 473, 528, 620, 745, 810, 70, 136, 202, 343, 455, 558, 673, 783, 830, 51, 155, 282, 397, 450, 533, 647, 777, 892, 48, 161, 245, 331, 499, 518, 676, 728, 872, 50, 130, 281, 361, 425, 537, 671, 701, 852, 13, 103, 293, 378, 444, 583, 627, 788, 815, 27, 187, 240, 372, 415, 579, 606, 722, 823, 35, 125, 217, 391, 440, 535, 609, 706, 867, 69, 120, 236, 354, 466, 524, 628, 730, 868, 45, 157, 253, 309, 458, 517, 610, 791, 811, 97, 200, 277, 334, 485, 573, 617, 733, 900, 68, 197, 294, 394, 476, 543, 646, 727, 833, 3, 156, 264, 335, 423, 548, 640, 757, 831, 85, 102, 260, 381, 437, 597, 642, 723, 881, 94, 191, 234, 313, 416, 509, 653, 781, 893, 7, 140, 238, 399, 434, 566, 645, 763, 848, 19, 119, 226, 369, 462, 598, 680, 709, 835, 87, 167, 287, 318, 478, 563, 604, 755, 883, 1, 184, 262, 326, 483, 544, 636, 715, 820, 16, 163, 235, 306, 412, 532, 615, 766, 814, 25, 123, 284, 373, 414, 526, 691, 786, 859, 31, 196, 270, 398, 449, 557, 693, 751, 825, 64, 129, 211, 338, 500, 534, 619, 762, 828, 81, 146, 206, 388, 447, 515, 681, 796, 889, 57, 138, 246, 358, 420, 555, 605, 710, 824, 23, 115, 209, 322, 452, 504, 694, 761, 888, 90, 199, 232, 344, 492, 572, 614, 773, 874, 42, 164, 244, 310, 465, 568, 695, 760, 805, 26, 181, 248, 347, 428, 527, 650, 753, 891, 30, 128, 261, 345, 431, 595, 670, 785, 875, 91, 153, 227, 332, 471, 520, 689, 759, 866, 17, 134, 207, 385, 494, 577, 607, 747, 895, 59, 141, 229, 376, 457, 511, 675, 731, 858, 96, 150, 252, 302, 441, 507, 643, 705, 827, 2, 126, 300, 350, 445, 584, 602, 764, 846, 52, 131, 299, 357, 448, 550, 677, 704, 860, 24, 189, 223, 396, 489, 560, 659, 717, 896, 15, 193, 237, 351, 470, 576, 644, 770, 838, 86, 142, 205, 375, 477, 549, 624, 732, 851, 46, 106, 266, 327, 461, 581, 638, 726, 882, 67, 124, 286, 362, 495, 553, 667, 743, 840, 71, 174, 233, 389, 433, 592, 630, 765, 849, 66, 110, 213, 307, 419, 600, 634, 738, 845, 18, 114, 201, 364, 480, 546, 688, 767, 817, 58, 151, 290, 363, 411, 508, 655, 768, 899, 39, 108, 276, 340, 463, 599, 629, 718, 806, 34, 116, 256, 324, 464, 587, 699, 800, 841, 80, 162, 258, 314, 459, 593, 658, 707, 887, 82, 158, 231, 305, 493, 596, 652, 795, 870, 6, 171, 285, 352, 498, 539, 674, 794, 854, 53, 182, 272, 336, 403, 569, 668, 721, 864, 60, 105, 268, 386, 438, 582, 613, 714, 898, 93, 179, 271, 301, 443, 556, 612, 756, 832, 44, 170, 251, 329, 413, 540, 690, 713, 822, 32, 180, 289, 380, 424, 554, 697, 746, 837, 49, 111, 225, 337, 456, 503, 625, 787, 804, 43, 192, 219, 393, 475, 505, 603, 776, 842, 100, 152, 220, 346, 496, 516, 622, 750, 801, 41, 190, 230, 321, 469, 578, 682, 797, 884, 5, 178, 255, 368, 427, 525, 657, 782, 829, 54, 132, 280, 349, 410, 531, 635, 703, 802, 65, 154, 210, 384, 429, 521, 639, 754, 894, 72, 144, 296, 392, 490, 506, 684, 716, 816, 76, 147, 241, 341, 432, 536, 696, 719, 839, 98, 101, 216, 342, 484, 585, 665, 779, 897, 11, 149, 257, 333, 497, 541, 649, 780, 844, 78, 177, 218, 303, 481, 501, 631, 712, 834, 21, 117, 215, 315, 436, 571, 651, 790, 886, 62, 173, 214, 355, 488, 529, 686, 711, 808, 14, 139, 222, 339, 435, 586, 669, 702, 861, 22, 143, 208, 317, 442, 522, 660, 752, 880, 12, 176, 298, 328, 418, 512, 623, 725, 809, 37, 168, 269, 370, 453, 589, 641, 740, 847, 95, 135, 259, 323, 417, 574, 664, 749, 878, 74, 107, 254, 311, 404, 514, 698, 798, 818, 33, 183, 278, 304, 491, 591, 678, 799, 879, 99, 172, 239, 395, 402, 545, 654, 769, 853, 63, 127, 250, 316, 451, 519, 692, 724, 877, 29, 160, 292, 371, 474, 530, 672, 744, 813, 56, 109, 242, 312, 460, 542, 621, 793, 871, 10, 169, 279, 359, 405, 570, 601, 774, 876, 47, 137, 267, 377, 467, 559, 611, 739, 869, 4, 104, 291, 400, 422, 580, 616, 758, 863, 38, 188, 283, 320, 430, 538, 618, 778, 855, 84, 165, 221, 308, 454, 590, 656, 771, 850, 89, 175, 263, 382, 486, 564, 637, 729, 843, 55, 133, 265, 383, 487, 575, 666, 742, 819, 77, 166, 295, 379, 468, 561, 679, 772, 862]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	1731.95 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1527.65 MBs	(shape (3, 4, 3, 4, 720, 1030, 4), 360495880 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 11:08:28 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (460+260=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A103 ⫹₈₀ 16191), purity -1.6275935419822651
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (225+235=460 samples) on frame 1 with decision: {1} A12 ⫺ 10572, purity -1.2184189513691663
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (180+80=260 samples) on frame 1 with decision: {1} A35 ⫹₇₀ 8313, purity -0.6830027612970125
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (132+93=225 samples) on frame 1 with decision: {1} ⟨DR⟩ (A64 ⫹ 4062), purity -0.5967653839534652
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (138+97=235 samples) on frame 1 with decision: {1} A39 ⫺ 21630, purity -0.6457779836774107
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (113+67=180 samples) on frame 1 with decision: {1} ⟨PO⟩ (A74 ⫹₆₀ 12673), purity -0.5634957047985463
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (112+20=132 samples) on frame 1 with decision: {1} ⟨DR⟩ (A30 ⫺ 13436), purity -0.6017269766144615
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (39+99=138 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A17 ⫹₇₀ 14902), purity -0.6089403530189647
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+80=97 samples) on frame 1 with decision: {1} ⟨DR⟩ (A1 ⫺ 24464), purity -0.03920832260947605
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+85=113 samples) on frame 1 with decision: {1} A17 ⫺₆₀ 12435, purity -0.5554512304787704
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+66=93 samples) on frame 1 with decision: {1} ⟨PP⟩ (A74 ⫹ 20223), purity -0.2010371088226161
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+12=28 samples) on frame 1 with decision: {1} ⟨PP⟩ (A15 ⫺ 11950), purity -0.4867206120470121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (30+82=112 samples) on frame 1 with decision: {1} ⟨DR⟩ (A100 ⫹ 24623), purity -0.5039928881086436
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (61+38=99 samples) on frame 1 with decision: {1} A1 ⫺₇₀ 13040, purity -0.5538644835175358
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+79=85 samples) on frame 1 with decision: {1} A85 ⫹₆₀ 16587, purity -0.21269335251373106
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (14+13=27 samples) on frame 1 with decision: {1} ⟨DR⟩ (A30 ⫺ 8303), purity -0.1334244802819867
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+5=12 samples) on frame 1 with decision: {1} A15 ⫹ 11999, purity -0.3959460580138477
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (49+12=61 samples) on frame 1 with decision: {1} ⟨PO⟩ (A54 ⫺₆₀ 19748), purity -0.4628929717229172
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+4=38 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A1 ⫹₆₀ 12495), purity -0.2281681945240871
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (41+41=82 samples) on frame 1 with decision: {1} A39 ⫺ 9899, purity -0.5754667250271992
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+28=49 samples) on frame 1 with decision: {1} ⟨DR⟩ (A95 ⫺ 19827), purity -0.2965769849279458
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+19=41 samples) on frame 1 with decision: {1} A7 ⫺ 6351, purity -0.36301393002090254
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (30+11=41 samples) on frame 1 with decision: {1} ⟨PO⟩ (A6 ⫺₆₀ 7649), purity -0.2641419800389263
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+4=11 samples) on frame 1 with decision: {1} A2 ⫹₆₀ 6916, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+6=21 samples) on frame 1 with decision: {1} ⟨DR⟩ (A39 ⫺ 18687), purity -0.41422512244150045
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+10=22 samples) on frame 1 with decision: {1} ⟨PO⟩ (A15 ⫺ 4865), purity -0.30672826070116815
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+4=12 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A2 ⫹ 3805), purity -0.18744504820626942
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+9=15 samples) on frame 1 with decision: {1} ⟨DR⟩ (A98 ⫺ 18093), purity -0.2546056673179251
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
520.355285 seconds (5.79 G allocations: 129.858 GiB, 24.19% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 29
Tot nodes: 57
Height: 9
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₈₀ 16191)
✔ {1} A35 ⫹₇₀ 8313
│✔ Shadows : 80/80 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A74 ⫹₆₀ 12673)
│ ✔ Asphalt : 65/67 (conf: 0.9701492537313433)
│ ✘ {1} A17 ⫺₆₀ 12435
│  ✔ {1} A85 ⫹₆₀ 16587
│  │✔ Bitumen : 75/79 (conf: 0.9493670886075949)
│  │✘ Gravel : 6/6 (conf: 1.0)
│  ✘ {1} ⟨PP⟩ (A15 ⫺ 11950)
│   ✔ {1} A15 ⫹ 11999
│   │✔ Bitumen : 3/5 (conf: 0.6)
│   │✘ Asphalt : 7/7 (conf: 1.0)
│   ✘ Gravel : 15/16 (conf: 0.9375)
✘ {1} A12 ⫺ 10572
 ✔ {1} A39 ⫺ 21630
 │✔ {1} ⟨DR⟩ (A1 ⫺ 24464)
 ││✔ Painted metal sheets : 80/80 (conf: 1.0)
 ││✘ Bare Soil : 16/17 (conf: 0.9411764705882353)
 │✘ {1} ⟨P̅P̅⟩ (A17 ⫹₇₀ 14902)
 │ ✔ {1} A1 ⫺₇₀ 13040
 │ │✔ {1} ⟨P̅P̅⟩ (A1 ⫹₆₀ 12495)
 │ ││✔ Self-Blocking Bricks : 2/4 (conf: 0.5)
 │ ││✘ Gravel : 33/34 (conf: 0.9705882352941176)
 │ │✘ {1} ⟨PO⟩ (A54 ⫺₆₀ 19748)
 │ │ ✔ Gravel : 11/12 (conf: 0.9166666666666666)
 │ │ ✘ {1} ⟨DR⟩ (A95 ⫺ 19827)
 │ │  ✔ Self-Blocking Bricks : 28/28 (conf: 1.0)
 │ │  ✘ {1} ⟨DR⟩ (A39 ⫺ 18687)
 │ │   ✔ Gravel : 6/6 (conf: 1.0)
 │ │   ✘ {1} ⟨DR⟩ (A98 ⫺ 18093)
 │ │    ✔ Self-Blocking Bricks : 9/9 (conf: 1.0)
 │ │    ✘ Gravel : 4/6 (conf: 0.6666666666666666)
 │ ✘ Self-Blocking Bricks : 37/39 (conf: 0.9487179487179487)
 ✘ {1} ⟨DR⟩ (A64 ⫹ 4062)
  ✔ {1} ⟨PP⟩ (A74 ⫹ 20223)
  │✔ Trees : 66/66 (conf: 1.0)
  │✘ {1} ⟨DR⟩ (A30 ⫺ 8303)
  │ ✔ Trees : 13/13 (conf: 1.0)
  │ ✘ Meadows : 13/14 (conf: 0.9285714285714286)
  ✘ {1} ⟨DR⟩ (A30 ⫺ 13436)
   ✔ Bare Soil : 19/20 (conf: 0.95)
   ✘ {1} ⟨DR⟩ (A100 ⫹ 24623)
    ✔ {1} A39 ⫺ 9899
    │✔ {1} ⟨PO⟩ (A6 ⫺₆₀ 7649)
    ││✔ {1} A2 ⫹₆₀ 6916
    │││✔ Bare Soil : 3/4 (conf: 0.75)
    │││✘ Meadows : 7/7 (conf: 1.0)
    ││✘ Bare Soil : 29/30 (conf: 0.9666666666666667)
    │✘ {1} A7 ⫺ 6351
    │ ✔ Meadows : 19/19 (conf: 1.0)
    │ ✘ {1} ⟨PO⟩ (A15 ⫺ 4865)
    │  ✔ Bare Soil : 10/10 (conf: 1.0)
    │  ✘ {1} ⟨P̅P̅⟩ (A2 ⫹ 3805)
    │   ✔ Bare Soil : 3/4 (conf: 0.75)
    │   ✘ Meadows : 8/8 (conf: 1.0)
    ✘ Meadows : 30/30 (conf: 1.0)
● [ 22/07/2021 11:17:09 ] Saving tree to file ./gandalf/trees/tree_c23c71fe4c08079e33abbd08a055955595e0b8c524290fce939213d7c06436ad.jld...
Test tree:
Decision Tree
Leaves: 29
Tot nodes: 57
Height: 9
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₈₀ 16191)
✔ {1} A35 ⫹₇₀ 8313
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A74 ⫹₆₀ 12673)
│ ✔ Asphalt : 12/13 (conf: 0.9230769230769231)
│ ✘ {1} A17 ⫺₆₀ 12435
│  ✔ {1} A85 ⫹₆₀ 16587
│  │✔ Bitumen : 20/21 (conf: 0.9523809523809523)
│  │✘ Gravel : 1/1 (conf: 1.0)
│  ✘ {1} ⟨PP⟩ (A15 ⫺ 11950)
│   ✔ {1} A15 ⫹ 11999
│   │✔ Bitumen : 0/1 (conf: 0.0)
│   │✘ Asphalt : 1/1 (conf: 1.0)
│   ✘ Gravel : 2/2 (conf: 1.0)
✘ {1} A12 ⫺ 10572
 ✔ {1} A39 ⫺ 21630
 │✔ {1} ⟨DR⟩ (A1 ⫺ 24464)
 ││✔ Painted metal sheets : 20/21 (conf: 0.9523809523809523)
 ││✘ Bare Soil : 2/5 (conf: 0.4)
 │✘ {1} ⟨P̅P̅⟩ (A17 ⫹₇₀ 14902)
 │ ✔ {1} A1 ⫺₇₀ 13040
 │ │✔ {1} ⟨P̅P̅⟩ (A1 ⫹₆₀ 12495)
 │ ││✔ Self-Blocking Bricks : 1/1 (conf: 1.0)
 │ ││✘ Gravel : 8/14 (conf: 0.5714285714285714)
 │ │✘ {1} ⟨PO⟩ (A54 ⫺₆₀ 19748)
 │ │ ✔ Gravel : 1/3 (conf: 0.3333333333333333)
 │ │ ✘ {1} ⟨DR⟩ (A95 ⫺ 19827)
 │ │  ✔ Self-Blocking Bricks : 1/8 (conf: 0.125)
 │ │  ✘ {1} ⟨DR⟩ (A39 ⫺ 18687)
 │ │   ✔ Gravel : 0/1 (conf: 0.0)
 │ │   ✘ {1} ⟨DR⟩ (A98 ⫺ 18093)
 │ │    ✔ Self-Blocking Bricks : 3/3 (conf: 1.0)
 │ │    ✘ Gravel : 1/1 (conf: 1.0)
 │ ✘ Self-Blocking Bricks : 7/9 (conf: 0.7777777777777778)
 ✘ {1} ⟨DR⟩ (A64 ⫹ 4062)
  ✔ {1} ⟨PP⟩ (A74 ⫹ 20223)
  │✔ Trees : 16/17 (conf: 0.9411764705882353)
  │✘ {1} ⟨DR⟩ (A30 ⫺ 8303)
  │ ✔ Trees : 1/2 (conf: 0.5)
  │ ✘ Meadows : 5/5 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A30 ⫺ 13436)
   ✔ Bare Soil : 4/5 (conf: 0.8)
   ✘ {1} ⟨DR⟩ (A100 ⫹ 24623)
    ✔ {1} A39 ⫺ 9899
    │✔ {1} ⟨PO⟩ (A6 ⫺₆₀ 7649)
    ││✔ {1} A2 ⫹₆₀ 6916
    │││✔ Bare Soil : 1/1 (conf: 1.0)
    │││✘ Meadows : 0/0 (conf: NaN)
    ││✘ Bare Soil : 5/6 (conf: 0.8333333333333334)
    │✘ {1} A7 ⫺ 6351
    │ ✔ Meadows : 2/5 (conf: 0.4)
    │ ✘ {1} ⟨PO⟩ (A15 ⫺ 4865)
    │  ✔ Bare Soil : 2/3 (conf: 0.6666666666666666)
    │  ✘ {1} ⟨P̅P̅⟩ (A2 ⫹ 3805)
    │   ✔ Bare Soil : 0/0 (conf: NaN)
    │   ✘ Meadows : 1/3 (conf: 0.3333333333333333)
    ✘ Meadows : 8/8 (conf: 1.0)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Pavia	7	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	80.56%	65.0%	70.0%	100.0%	65.0%	80.0%	100.0%	60.0%	100.0%	85.0%	92.86%	70.0%	90.91%	59.09%	76.19%	95.24%	57.14%	100.0%	89.47%	||	78.12%	[76.47, 70.0, 95.24, 61.9, 78.05, 97.56, 58.54, 100.0, 87.18]%	|||	80.56%	97.57%	81.21%	97.58%	80.55%	
  accuracy: 80.56% kappa: 78.12% 
 13  0  2  3  0  0  2  0  0	65.0%		Asphalt
  0 14  0  0  4  1  1  0  0	70.0%		Bare Soil
  0  0 20  0  0  0  0  0  0	100.0%		Bitumen
  1  2  0 13  0  0  4  0  0	65.0%		Gravel
  0  2  0  0 16  0  0  0  2	80.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  2  0  6  0  0 12  0  0	60.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  1  0  2  0 17	85.0%		Trees

overall_acc:	0.8055555555555556
κ =		0.78125
sensitivities:	[0.65, 0.7, 1.0, 0.65, 0.8, 1.0, 0.6, 1.0, 0.85]
specificities:	[0.99375, 0.9625, 0.9875, 0.94375, 0.96875, 0.99375, 0.94375, 1.0, 0.9875]
PPVs:		[0.9285714285714286, 0.7, 0.9090909090909091, 0.5909090909090909, 0.7619047619047619, 0.9523809523809523, 0.5714285714285714, 1.0, 0.8947368421052632]
NPVs:		[0.9578313253012049, 0.9625, 1.0, 0.9556962025316456, 0.9748427672955975, 1.0, 0.949685534591195, 1.0, 0.9813664596273292]
F1s:		[0.7647058823529411, 0.7, 0.9523809523809523, 0.6190476190476191, 0.7804878048780488, 0.975609756097561, 0.5853658536585366, 1.0, 0.8717948717948718]
accuracies:	[0.9555555555555556, 0.9333333333333333, 0.9888888888888889, 0.9111111111111111, 0.95, 0.9944444444444445, 0.9055555555555556, 1.0, 0.9722222222222222]
mean_accuracy:	0.95679012345679
Dataset_slice = (900) -> [14, 145, 209, 319, 413, 525, 605, 718, 878, 59, 126, 201, 393, 450, 561, 606, 736, 841, 55, 102, 207, 312, 445, 527, 660, 764, 888, 87, 121, 255, 362, 475, 501, 637, 796, 884, 44, 116, 271, 308, 421, 555, 635, 715, 875, 11, 131, 219, 380, 474, 532, 648, 743, 873, 60, 110, 268, 310, 440, 528, 674, 739, 876, 6, 101, 211, 304, 437, 518, 694, 795, 857, 83, 167, 283, 357, 414, 597, 655, 701, 854, 46, 162, 229, 318, 456, 585, 678, 770, 861, 20, 123, 288, 395, 424, 584, 666, 774, 882, 74, 140, 291, 373, 481, 551, 623, 763, 829, 32, 165, 281, 315, 434, 589, 634, 732, 820, 22, 135, 220, 398, 486, 544, 691, 780, 858, 40, 152, 286, 316, 451, 593, 610, 719, 855, 24, 103, 221, 350, 429, 515, 686, 709, 851, 18, 137, 230, 355, 438, 543, 665, 772, 848, 89, 125, 262, 390, 443, 595, 681, 710, 825, 62, 124, 264, 383, 406, 529, 653, 703, 818, 12, 172, 276, 377, 411, 517, 700, 741, 822, 31, 163, 204, 369, 471, 503, 687, 707, 839, 58, 168, 208, 302, 407, 547, 614, 742, 899, 30, 129, 224, 325, 415, 505, 642, 735, 801, 79, 104, 235, 326, 495, 519, 668, 753, 852, 99, 197, 213, 343, 464, 581, 676, 773, 897, 48, 173, 284, 388, 410, 568, 679, 760, 898, 67, 149, 275, 391, 455, 548, 695, 798, 842, 10, 198, 289, 360, 485, 554, 697, 766, 831, 5, 182, 244, 397, 487, 599, 698, 747, 844, 93, 164, 257, 384, 457, 530, 611, 756, 869, 64, 187, 246, 354, 458, 583, 659, 761, 837, 70, 134, 242, 371, 422, 577, 612, 784, 846, 41, 133, 256, 351, 473, 512, 630, 726, 865, 82, 158, 299, 322, 404, 507, 693, 724, 802, 84, 120, 290, 314, 423, 522, 661, 757, 867, 51, 199, 261, 359, 412, 523, 646, 771, 812, 81, 175, 206, 340, 472, 539, 609, 711, 824, 94, 181, 300, 303, 426, 514, 654, 729, 891, 23, 179, 266, 321, 459, 572, 669, 779, 856, 100, 176, 270, 376, 432, 560, 601, 751, 874, 90, 109, 278, 346, 418, 510, 602, 792, 823, 68, 186, 274, 379, 467, 556, 645, 762, 894, 43, 117, 265, 382, 480, 570, 617, 708, 879, 1, 178, 280, 344, 425, 504, 650, 794, 819, 95, 132, 277, 332, 491, 524, 683, 787, 828, 19, 113, 282, 378, 476, 579, 608, 720, 887, 98, 112, 292, 348, 462, 563, 640, 767, 849, 50, 106, 285, 352, 444, 550, 656, 791, 886, 33, 170, 295, 386, 493, 537, 643, 777, 850, 27, 136, 241, 337, 408, 564, 624, 783, 859, 63, 148, 279, 324, 427, 511, 696, 744, 893, 54, 119, 216, 372, 401, 575, 633, 740, 838, 86, 193, 254, 306, 428, 567, 652, 721, 805, 17, 188, 293, 399, 496, 508, 671, 758, 895, 91, 142, 273, 328, 494, 574, 641, 785, 835, 97, 189, 297, 320, 430, 531, 647, 790, 883, 57, 155, 263, 301, 492, 557, 690, 733, 847, 61, 196, 294, 347, 405, 594, 677, 745, 890, 75, 141, 205, 349, 436, 590, 675, 789, 814, 71, 183, 203, 341, 409, 562, 639, 716, 868, 92, 180, 258, 394, 441, 520, 616, 759, 881, 65, 177, 249, 309, 449, 598, 644, 722, 840, 37, 166, 272, 356, 498, 582, 657, 737, 815, 29, 195, 234, 331, 469, 513, 628, 778, 853, 21, 127, 218, 313, 435, 541, 670, 752, 804, 69, 184, 267, 368, 500, 534, 604, 793, 862, 3, 185, 298, 334, 488, 588, 673, 754, 872, 77, 139, 225, 327, 403, 516, 663, 788, 836, 56, 107, 260, 396, 490, 558, 619, 705, 811, 72, 200, 217, 342, 416, 580, 607, 768, 870, 8, 111, 227, 366, 465, 571, 620, 786, 821, 2, 190, 237, 374, 419, 596, 638, 755, 808, 73, 130, 233, 363, 482, 538, 667, 746, 863, 36, 159, 238, 307, 448, 578, 682, 765, 816, 45, 146, 250, 375, 463, 587, 621, 706, 866, 52, 153, 212, 335, 460, 566, 662, 717, 845, 53, 156, 287, 311, 478, 552, 629, 799, 860, 34, 143, 222, 389, 453, 526, 689, 769, 832, 28, 169, 259, 323, 452, 569, 699, 782, 826, 39, 128, 243, 365, 454, 533, 632, 712, 896, 76, 115, 231, 364, 461, 546, 692, 748, 803, 85, 105, 228, 400, 499, 559, 625, 775, 809, 66, 171, 240, 305, 402, 573, 631, 704, 833, 88, 108, 248, 387, 497, 521, 651, 727, 806, 15, 174, 247, 370, 417, 549, 626, 738, 813, 38, 154, 253, 339, 446, 586, 627, 702, 900, 9, 114, 202, 367, 489, 535, 688, 797, 810, 80, 192, 251, 353, 442, 540, 615, 728, 843, 25, 160, 223, 392, 447, 565, 636, 723, 880, 26, 191, 215, 329, 483, 591, 672, 749, 892, 7, 151, 252, 381, 484, 576, 603, 734, 871, 96, 194, 210, 338, 477, 536, 684, 781, 864, 16, 144, 296, 317, 466, 545, 649, 776, 817, 13, 147, 269, 333, 431, 553, 618, 730, 885, 47, 150, 236, 336, 470, 600, 613, 714, 830, 49, 157, 214, 385, 468, 509, 680, 725, 834, 35, 118, 239, 358, 479, 542, 622, 750, 889, 78, 122, 232, 345, 420, 502, 658, 800, 827, 42, 161, 245, 361, 433, 506, 664, 713, 877, 4, 138, 226, 330, 439, 592, 685, 731, 807]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	1731.95 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1527.65 MBs	(shape (3, 4, 3, 4, 720, 1030, 4), 360784280 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 11:17:14 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (461+259=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A103 ⫹₆₀ 16082), purity -1.6391491356793741
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+177=259 samples) on frame 1 with decision: {1} A44 ⫺ 8502, purity -0.7027704881837915
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (226+235=461 samples) on frame 1 with decision: {1} A13 ⫺ 10364, purity -1.2136696478592872
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (132+94=226 samples) on frame 1 with decision: {1} ⟨DR⟩ (A58 ⫹ 4380), purity -0.6103541789220928
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (143+92=235 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A39 ⫺₇₀ 22274), purity -0.6511392267215261
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (114+63=177 samples) on frame 1 with decision: {1} ⟨PO⟩ (A74 ⫹₆₀ 12673), purity -0.5612429388380545
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (40+92=132 samples) on frame 1 with decision: {1} ⟨DR⟩ (A99 ⫹ 24425), purity -0.5930009725328221
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (35+108=143 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A14 ⫹₇₀ 14605), purity -0.6882326928380171
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+87=114 samples) on frame 1 with decision: {1} A16 ⫺₇₀ 12118, purity -0.5371062706096642
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+79=92 samples) on frame 1 with decision: {1} A7 ⫺₇₀ 27209, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+66=94 samples) on frame 1 with decision: {1} ⟨PP⟩ (A74 ⫹ 19946), purity -0.2057088470358784
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (35+5=40 samples) on frame 1 with decision: {1} ⟨DR⟩ (A17 ⫺ 9413), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+11=27 samples) on frame 1 with decision: {1} A86 ⫹₆₀ 14744, purity -0.1931678682828227
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+5=87 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A94 ⫺₆₀ 16547), purity -0.2452044063040866
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (85+23=108 samples) on frame 1 with decision: {1} ⟨PO⟩ (A52 ⫹₆₀ 16250), purity -0.6835527031591789
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+13=28 samples) on frame 1 with decision: {1} A10 ⫺ 4231, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (68+24=92 samples) on frame 1 with decision: {1} A83 ⫺ 24068, purity -0.5574634753725469
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+4=11 samples) on frame 1 with decision: {1} A2 ⫹ 11216, purity -0.2520535202036165
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (50+35=85 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A20 ⫹₆₀ 14219), purity -0.4569107567976308
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+17=23 samples) on frame 1 with decision: {1} ⟨PO⟩ (A45 ⫺₆₀ 16795), purity -0.42920142962449076
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (52+16=68 samples) on frame 1 with decision: {1} ⟨PO⟩ (A3 ⫺ 7481), purity -0.6249065869539078
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+34=50 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A3 ⫹₇₀ 13129), purity -0.31687949473350907
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+18=52 samples) on frame 1 with decision: {1} ⟨PO⟩ (A20 ⫺₆₀ 6411), purity -0.45321161805842586
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+6=16 samples) on frame 1 with decision: {1} ⟨DR⟩ (A81 ⫺ 22146), purity -0.3792765992652569
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+18=34 samples) on frame 1 with decision: {1} ⟨PO⟩ (A25 ⫹₆₀ 15566), purity -0.31132387678022677
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+7=34 samples) on frame 1 with decision: {1} A85 ⫺ 23711, purity -0.5234446353888456
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+10=16 samples) on frame 1 with decision: {1} A15 ⫺₇₀ 14308, purity 8.326672684688674e-17
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (22+5=27 samples) on frame 1 with decision: {1} ⟨PP⟩ (A8 ⫺ 6470), purity -0.43670805787988065
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+15=22 samples) on frame 1 with decision: {1} A27 ⫺ 7283, purity -0.19035850545894545
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
555.976942 seconds (6.19 G allocations: 145.000 GiB, 23.05% gc time)
Train tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 10
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₆₀ 16082)
✔ {1} A44 ⫺ 8502
│✔ {1} ⟨PO⟩ (A74 ⫹₆₀ 12673)
││✔ Asphalt : 62/63 (conf: 0.9841269841269841)
││✘ {1} A16 ⫺₇₀ 12118
││ ✔ {1} ⟨P̅P̅⟩ (A94 ⫺₆₀ 16547)
││ │✔ Gravel : 4/5 (conf: 0.8)
││ │✘ Bitumen : 77/82 (conf: 0.9390243902439024)
││ ✘ {1} A86 ⫹₆₀ 14744
││  ✔ {1} A2 ⫹ 11216
││  │✔ Bitumen : 2/4 (conf: 0.5)
││  │✘ Asphalt : 7/7 (conf: 1.0)
││  ✘ Gravel : 16/16 (conf: 1.0)
│✘ Shadows : 80/82 (conf: 0.975609756097561)
✘ {1} A13 ⫺ 10364
 ✔ {1} ⟨P̅P̅⟩ (A39 ⫺₇₀ 22274)
 │✔ {1} A7 ⫺₇₀ 27209
 ││✔ Painted metal sheets : 79/79 (conf: 1.0)
 ││✘ Bare Soil : 13/13 (conf: 1.0)
 │✘ {1} ⟨P̅P̅⟩ (A14 ⫹₇₀ 14605)
 │ ✔ {1} ⟨PO⟩ (A52 ⫹₆₀ 16250)
 │ │✔ {1} ⟨PO⟩ (A45 ⫺₆₀ 16795)
 │ ││✔ Self-Blocking Bricks : 16/17 (conf: 0.9411764705882353)
 │ ││✘ Asphalt : 3/6 (conf: 0.5)
 │ │✘ {1} ⟨P̅P̅⟩ (A20 ⫹₆₀ 14219)
 │ │ ✔ Gravel : 34/35 (conf: 0.9714285714285714)
 │ │ ✘ {1} ⟨P̅P̅⟩ (A3 ⫹₇₀ 13129)
 │ │  ✔ {1} ⟨PO⟩ (A25 ⫹₆₀ 15566)
 │ │  │✔ Self-Blocking Bricks : 18/18 (conf: 1.0)
 │ │  │✘ {1} A15 ⫺₇₀ 14308
 │ │  │ ✔ Self-Blocking Bricks : 10/10 (conf: 1.0)
 │ │  │ ✘ Gravel : 6/6 (conf: 1.0)
 │ │  ✘ Gravel : 16/16 (conf: 1.0)
 │ ✘ Self-Blocking Bricks : 33/35 (conf: 0.9428571428571428)
 ✘ {1} ⟨DR⟩ (A58 ⫹ 4380)
  ✔ {1} ⟨PP⟩ (A74 ⫹ 19946)
  │✔ Trees : 66/66 (conf: 1.0)
  │✘ {1} A10 ⫺ 4231
  │ ✔ Trees : 13/13 (conf: 1.0)
  │ ✘ Meadows : 15/15 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A99 ⫹ 24425)
   ✔ {1} A83 ⫺ 24068
   │✔ Bare Soil : 24/24 (conf: 1.0)
   │✘ {1} ⟨PO⟩ (A3 ⫺ 7481)
   │ ✔ {1} ⟨DR⟩ (A81 ⫺ 22146)
   │ │✔ Meadows : 3/6 (conf: 0.5)
   │ │✘ Meadows : 10/10 (conf: 1.0)
   │ ✘ {1} ⟨PO⟩ (A20 ⫺₆₀ 6411)
   │  ✔ Bare Soil : 18/18 (conf: 1.0)
   │  ✘ {1} A85 ⫺ 23711
   │   ✔ Meadows : 7/7 (conf: 1.0)
   │   ✘ {1} ⟨PP⟩ (A8 ⫺ 6470)
   │    ✔ Meadows : 5/5 (conf: 1.0)
   │    ✘ {1} A27 ⫺ 7283
   │     ✔ Bare Soil : 15/15 (conf: 1.0)
   │     ✘ Meadows : 5/7 (conf: 0.7142857142857143)
   ✘ {1} ⟨DR⟩ (A17 ⫺ 9413)
    ✔ Bare Soil : 5/5 (conf: 1.0)
    ✘ Meadows : 35/35 (conf: 1.0)
● [ 22/07/2021 11:26:30 ] Saving tree to file ./gandalf/trees/tree_e76b1e4e8f89e80f874a20064614e0aaf4cbd312d7e6b69e3a3b330b59960ec0.jld...
Test tree:
Decision Tree
Leaves: 30
Tot nodes: 59
Height: 10
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₆₀ 16082)
✔ {1} A44 ⫺ 8502
│✔ {1} ⟨PO⟩ (A74 ⫹₆₀ 12673)
││✔ Asphalt : 16/16 (conf: 1.0)
││✘ {1} A16 ⫺₇₀ 12118
││ ✔ {1} ⟨P̅P̅⟩ (A94 ⫺₆₀ 16547)
││ │✔ Gravel : 0/0 (conf: NaN)
││ │✘ Bitumen : 20/24 (conf: 0.8333333333333334)
││ ✘ {1} A86 ⫹₆₀ 14744
││  ✔ {1} A2 ⫹ 11216
││  │✔ Bitumen : 0/3 (conf: 0.0)
││  │✘ Asphalt : 0/1 (conf: 0.0)
││  ✘ Gravel : 1/1 (conf: 1.0)
│✘ Shadows : 20/20 (conf: 1.0)
✘ {1} A13 ⫺ 10364
 ✔ {1} ⟨P̅P̅⟩ (A39 ⫺₇₀ 22274)
 │✔ {1} A7 ⫺₇₀ 27209
 ││✔ Painted metal sheets : 20/20 (conf: 1.0)
 ││✘ Bare Soil : 2/2 (conf: 1.0)
 │✘ {1} ⟨P̅P̅⟩ (A14 ⫹₇₀ 14605)
 │ ✔ {1} ⟨PO⟩ (A52 ⫹₆₀ 16250)
 │ │✔ {1} ⟨PO⟩ (A45 ⫺₆₀ 16795)
 │ ││✔ Self-Blocking Bricks : 5/8 (conf: 0.625)
 │ ││✘ Asphalt : 0/2 (conf: 0.0)
 │ │✘ {1} ⟨P̅P̅⟩ (A20 ⫹₆₀ 14219)
 │ │ ✔ Gravel : 5/5 (conf: 1.0)
 │ │ ✘ {1} ⟨P̅P̅⟩ (A3 ⫹₇₀ 13129)
 │ │  ✔ {1} ⟨PO⟩ (A25 ⫹₆₀ 15566)
 │ │  │✔ Self-Blocking Bricks : 3/8 (conf: 0.375)
 │ │  │✘ {1} A15 ⫺₇₀ 14308
 │ │  │ ✔ Self-Blocking Bricks : 2/2 (conf: 1.0)
 │ │  │ ✘ Gravel : 4/6 (conf: 0.6666666666666666)
 │ │  ✘ Gravel : 0/1 (conf: 0.0)
 │ ✘ Self-Blocking Bricks : 7/8 (conf: 0.875)
 ✘ {1} ⟨DR⟩ (A58 ⫹ 4380)
  ✔ {1} ⟨PP⟩ (A74 ⫹ 19946)
  │✔ Trees : 15/15 (conf: 1.0)
  │✘ {1} A10 ⫺ 4231
  │ ✔ Trees : 2/4 (conf: 0.5)
  │ ✘ Meadows : 5/5 (conf: 1.0)
  ✘ {1} ⟨DR⟩ (A99 ⫹ 24425)
   ✔ {1} A83 ⫺ 24068
   │✔ Bare Soil : 7/7 (conf: 1.0)
   │✘ {1} ⟨PO⟩ (A3 ⫺ 7481)
   │ ✔ {1} ⟨DR⟩ (A81 ⫺ 22146)
   │ │✔ Meadows : 0/1 (conf: 0.0)
   │ │✘ Meadows : 2/2 (conf: 1.0)
   │ ✘ {1} ⟨PO⟩ (A20 ⫺₆₀ 6411)
   │  ✔ Bare Soil : 5/6 (conf: 0.8333333333333334)
   │  ✘ {1} A85 ⫺ 23711
   │   ✔ Meadows : 1/1 (conf: 1.0)
   │   ✘ {1} ⟨PP⟩ (A8 ⫺ 6470)
   │    ✔ Meadows : 2/2 (conf: 1.0)
   │    ✘ {1} A27 ⫺ 7283
   │     ✔ Bare Soil : 0/1 (conf: 0.0)
   │     ✘ Meadows : 1/3 (conf: 0.3333333333333333)
   ✘ {1} ⟨DR⟩ (A17 ⫺ 9413)
    ✔ Bare Soil : 0/0 (conf: NaN)
    ✘ Meadows : 6/6 (conf: 1.0)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Pavia	8	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	83.89%	80.0%	70.0%	100.0%	50.0%	85.0%	100.0%	85.0%	100.0%	85.0%	84.21%	87.5%	74.07%	76.92%	85.0%	100.0%	65.38%	100.0%	89.47%	||	81.88%	[82.05, 77.78, 85.11, 60.61, 85.0, 100.0, 73.91, 100.0, 87.18]%	|||	83.89%	97.99%	84.73%	98.02%	83.51%	
  accuracy: 83.89% kappa: 81.88% 
 16  0  3  0  0  0  1  0  0	80.0%		Asphalt
  0 14  0  1  3  0  2  0  0	70.0%		Bare Soil
  0  0 20  0  0  0  0  0  0	100.0%		Bitumen
  1  0  4 10  0  0  5  0  0	50.0%		Gravel
  0  1  0  0 17  0  0  0  2	85.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  1  0  0  2  0  0 17  0  0	85.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  1  1  0  0  0  0  1  0 17	85.0%		Trees

overall_acc:	0.8388888888888889
κ =		0.8187500000000001
sensitivities:	[0.8, 0.7, 1.0, 0.5, 0.85, 1.0, 0.85, 1.0, 0.85]
specificities:	[0.98125, 0.9875, 0.95625, 0.98125, 0.98125, 1.0, 0.94375, 1.0, 0.9875]
PPVs:		[0.8421052631578947, 0.875, 0.7407407407407407, 0.7692307692307693, 0.85, 1.0, 0.6538461538461539, 1.0, 0.8947368421052632]
NPVs:		[0.9751552795031055, 0.9634146341463414, 1.0, 0.9401197604790419, 0.98125, 1.0, 0.9805194805194806, 1.0, 0.9813664596273292]
F1s:		[0.8205128205128205, 0.7777777777777778, 0.851063829787234, 0.6060606060606061, 0.85, 1.0, 0.7391304347826086, 1.0, 0.8717948717948718]
accuracies:	[0.9611111111111111, 0.9555555555555556, 0.9611111111111111, 0.9277777777777778, 0.9666666666666667, 1.0, 0.9333333333333333, 1.0, 0.9722222222222222]
mean_accuracy:	0.9641975308641975
Dataset_slice = (900) -> [70, 177, 261, 314, 419, 581, 639, 713, 846, 28, 119, 212, 327, 454, 562, 671, 731, 805, 31, 139, 280, 374, 459, 507, 684, 793, 820, 19, 178, 249, 324, 453, 509, 643, 732, 831, 5, 145, 248, 337, 422, 598, 659, 780, 874, 75, 174, 287, 378, 420, 519, 670, 791, 844, 12, 144, 202, 385, 465, 588, 689, 721, 897, 26, 108, 298, 344, 403, 544, 641, 785, 801, 67, 162, 228, 360, 498, 513, 628, 725, 881, 14, 125, 236, 322, 482, 571, 638, 706, 857, 50, 105, 214, 320, 440, 559, 627, 737, 841, 25, 148, 229, 376, 423, 535, 679, 712, 826, 11, 196, 219, 397, 434, 552, 633, 714, 893, 51, 170, 257, 399, 417, 534, 607, 764, 888, 6, 199, 207, 301, 427, 583, 696, 781, 812, 4, 127, 273, 338, 450, 590, 602, 738, 827, 63, 141, 270, 302, 486, 586, 654, 716, 814, 62, 118, 276, 392, 435, 511, 680, 703, 829, 54, 194, 216, 336, 437, 569, 669, 701, 880, 73, 190, 251, 349, 411, 582, 631, 724, 885, 16, 168, 238, 312, 449, 597, 657, 787, 860, 76, 133, 292, 308, 436, 560, 606, 704, 843, 94, 191, 234, 307, 469, 566, 656, 752, 808, 21, 172, 253, 370, 461, 556, 667, 789, 863, 96, 176, 295, 388, 401, 578, 687, 794, 832, 97, 132, 275, 382, 475, 555, 624, 796, 878, 60, 173, 217, 325, 470, 514, 683, 763, 894, 9, 109, 272, 398, 402, 510, 619, 735, 869, 40, 154, 250, 303, 443, 524, 652, 799, 851, 72, 113, 240, 368, 431, 501, 663, 756, 899, 99, 156, 279, 381, 497, 540, 664, 759, 806, 44, 167, 220, 335, 489, 523, 661, 710, 866, 91, 104, 245, 357, 416, 533, 608, 777, 872, 92, 116, 297, 355, 412, 553, 647, 779, 855, 71, 166, 246, 351, 426, 536, 646, 745, 853, 13, 192, 203, 394, 410, 529, 697, 798, 828, 98, 129, 206, 331, 414, 537, 640, 743, 858, 79, 122, 281, 346, 448, 504, 682, 723, 879, 18, 137, 224, 371, 442, 549, 666, 782, 816, 48, 101, 289, 362, 487, 589, 695, 746, 835, 56, 175, 285, 350, 456, 516, 677, 775, 833, 22, 103, 242, 356, 408, 502, 693, 741, 882, 35, 124, 293, 361, 428, 577, 698, 707, 883, 81, 189, 262, 364, 460, 547, 691, 773, 807, 84, 187, 230, 342, 478, 557, 681, 795, 849, 37, 181, 208, 310, 418, 521, 673, 772, 867, 87, 120, 299, 359, 458, 530, 630, 768, 822, 77, 117, 237, 354, 462, 538, 668, 771, 854, 34, 115, 231, 379, 429, 525, 637, 727, 815, 65, 155, 205, 316, 495, 550, 690, 733, 875, 7, 121, 252, 319, 488, 508, 625, 748, 802, 41, 123, 264, 358, 499, 503, 672, 790, 852, 3, 182, 201, 353, 452, 531, 623, 786, 837, 59, 193, 290, 345, 439, 558, 653, 758, 850, 55, 186, 296, 372, 457, 546, 636, 766, 877, 43, 126, 241, 377, 463, 554, 699, 709, 809, 29, 161, 263, 395, 405, 551, 605, 749, 870, 8, 159, 221, 333, 471, 543, 658, 715, 817, 86, 158, 227, 347, 413, 592, 662, 722, 810, 46, 157, 274, 304, 424, 561, 613, 719, 896, 64, 112, 204, 332, 445, 585, 610, 753, 886, 78, 195, 211, 391, 430, 545, 676, 757, 868, 85, 198, 209, 340, 493, 575, 655, 740, 803, 15, 152, 282, 317, 433, 600, 688, 755, 818, 1, 149, 258, 400, 477, 595, 604, 765, 821, 42, 128, 254, 309, 464, 584, 615, 761, 813, 100, 130, 271, 326, 500, 573, 603, 744, 871, 30, 197, 267, 323, 425, 594, 635, 797, 864, 10, 140, 283, 393, 468, 542, 674, 788, 840, 89, 134, 218, 389, 441, 596, 634, 767, 839, 88, 114, 278, 318, 446, 532, 617, 728, 873, 49, 179, 277, 365, 467, 528, 620, 754, 865, 17, 160, 247, 383, 481, 568, 618, 792, 892, 23, 183, 223, 339, 479, 587, 629, 750, 898, 27, 142, 286, 311, 415, 570, 692, 776, 823, 20, 150, 259, 305, 421, 522, 651, 736, 884, 68, 171, 288, 329, 407, 526, 694, 729, 834, 69, 169, 243, 352, 494, 567, 644, 747, 804, 24, 106, 284, 384, 491, 520, 675, 730, 811, 74, 110, 235, 390, 473, 579, 650, 717, 887, 36, 163, 256, 373, 406, 515, 611, 720, 830, 57, 185, 266, 343, 480, 548, 601, 705, 856, 53, 180, 239, 306, 476, 527, 614, 734, 819, 95, 200, 255, 369, 404, 541, 626, 708, 842, 61, 107, 226, 348, 409, 518, 660, 702, 889, 66, 135, 265, 380, 484, 512, 649, 762, 890, 52, 111, 233, 328, 472, 565, 700, 800, 900, 58, 147, 210, 315, 447, 506, 642, 778, 862, 47, 153, 232, 367, 474, 517, 678, 742, 845, 83, 143, 268, 341, 432, 574, 632, 784, 891, 39, 146, 215, 313, 490, 572, 616, 739, 861, 93, 165, 244, 330, 466, 591, 612, 774, 838, 90, 138, 225, 363, 451, 539, 686, 718, 847, 33, 184, 291, 396, 455, 593, 648, 783, 825, 2, 151, 300, 334, 496, 505, 665, 770, 848, 38, 102, 260, 366, 492, 576, 622, 769, 859, 80, 131, 269, 375, 483, 580, 609, 751, 895, 82, 136, 222, 386, 485, 563, 645, 760, 836, 45, 188, 213, 321, 444, 599, 685, 726, 876, 32, 164, 294, 387, 438, 564, 621, 711, 824]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	1731.95 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1527.65 MBs	(shape (3, 4, 3, 4, 720, 1030, 4), 360726600 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 11:26:36 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (428+292=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A14 ⫹₆₀ 7986), purity -1.6398778797600662
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (253+175=428 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A103 ⫹₇₀ 16091), purity -1.2731362947635734
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+211=292 samples) on frame 1 with decision: {1} A74 ⫺₇₀ 10959, purity -0.8180752195139688
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (174+79=253 samples) on frame 1 with decision: {1} A5 ⫺ 19916, purity -0.8260337500297855
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (109+66=175 samples) on frame 1 with decision: {1} ⟨PO⟩ (A74 ⫹₆₀ 12673), purity -0.6316012016577697
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (110+101=211 samples) on frame 1 with decision: {1} ⟨PP⟩ (A66 ⫹ 5886), purity -0.6121604972687974
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (31+143=174 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A97 ⫹₇₀ 21303), purity -0.7926993366130788
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+81=109 samples) on frame 1 with decision: {1} A15 ⫺₆₀ 12455, purity -0.5134800454013034
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (28+82=110 samples) on frame 1 with decision: {1} ⟨PO⟩ (A100 ⫹₆₀ 25138), purity -0.511583532805043
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (36+65=101 samples) on frame 1 with decision: {1} ⟨PO⟩ (A69 ⫹₆₀ 7986), purity -0.2381875761972612
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (60+6=66 samples) on frame 1 with decision: {1} ⟨PP⟩ (A46 ⫹ 7937), purity -0.1418827644583097
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+13=28 samples) on frame 1 with decision: {1} ⟨DR⟩ (A77 ⫹ 13941), purity -0.28657653594623006
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (23+13=36 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A32 ⫺₆₀ 8234), purity -0.11426202756909681
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+75=81 samples) on frame 1 with decision: {1} A1 ⫹₇₀ 14060, purity -0.11690956421573184
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (29+53=82 samples) on frame 1 with decision: {1} ⟨PO⟩ (A72 ⫺ 15883), purity -0.47132327486437614
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+25=31 samples) on frame 1 with decision: {1} ⟨DR⟩ (A93 ⫺ 24147), purity -0.3033542923949379
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (106+37=143 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A16 ⫺₈₀ 15021), purity -0.6368554779689177
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+8=29 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A3 ⫹ 4776), purity -0.13863192141765762
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+4=13 samples) on frame 1 with decision: {1} ⟨DR⟩ (A4 ⫹ 8135), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (66+40=106 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A2 ⫹₈₀ 12118), purity -0.6309298027348411
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (21+32=53 samples) on frame 1 with decision: {1} ⟨PO⟩ (A102 ⫹₆₀ 22819), purity -0.252203727060209
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+12=21 samples) on frame 1 with decision: {1} ⟨DR⟩ (A82 ⫺ 26476), purity -0.22701694245328063
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+59=66 samples) on frame 1 with decision: {1} A35 ⫺₈₀ 16587, purity -0.45422567357435606
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (20+20=40 samples) on frame 1 with decision: {1} ⟨PO⟩ (A14 ⫺₇₀ 13912), purity -0.3440694068567942
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A3 ⫹ 5489, purity -0.3080654135821979
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+9=20 samples) on frame 1 with decision: {1} ⟨DR⟩ (A46 ⫹ 14744), purity -0.26077662218181064
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (31+28=59 samples) on frame 1 with decision: {1} A3 ⫹₇₀ 12802, purity -0.298006177707074
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A2 ⫹ 11702, purity -0.2520535202036165
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+16=28 samples) on frame 1 with decision: {1} A13 ⫹₇₀ 13525, purity -0.24100077626520355
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+8=12 samples) on frame 1 with decision: {1} A10 ⫹₈₀ 14357, purity -0.18744504820626942
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
1912.771208 seconds (10.72 G allocations: 603.727 GiB, 28.40% gc time, 0.01% compilation time)
Train tree:
Decision Tree
Leaves: 31
Tot nodes: 61
Height: 10
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A14 ⫹₆₀ 7986)
✔ {1} A74 ⫺₇₀ 10959
│✔ {1} ⟨PP⟩ (A66 ⫹ 5886)
││✔ {1} ⟨PO⟩ (A69 ⫹₆₀ 7986)
│││✔ Trees : 65/65 (conf: 1.0)
│││✘ {1} ⟨P̅P̅⟩ (A32 ⫺₆₀ 8234)
│││ ✔ Trees : 13/13 (conf: 1.0)
│││ ✘ Meadows : 22/23 (conf: 0.9565217391304348)
││✘ {1} ⟨PO⟩ (A100 ⫹₆₀ 25138)
││ ✔ {1} ⟨PO⟩ (A72 ⫺ 15883)
││ │✔ {1} ⟨PO⟩ (A102 ⫹₆₀ 22819)
││ ││✔ Bare Soil : 32/32 (conf: 1.0)
││ ││✘ {1} ⟨DR⟩ (A82 ⫺ 26476)
││ ││ ✔ Bare Soil : 12/12 (conf: 1.0)
││ ││ ✘ {1} A3 ⫹ 5489
││ ││  ✔ Meadows : 5/5 (conf: 1.0)
││ ││  ✘ Bare Soil : 2/4 (conf: 0.5)
││ │✘ {1} ⟨P̅P̅⟩ (A3 ⫹ 4776)
││ │ ✔ Bare Soil : 8/8 (conf: 1.0)
││ │ ✘ Meadows : 20/21 (conf: 0.9523809523809523)
││ ✘ Meadows : 27/28 (conf: 0.9642857142857143)
│✘ Shadows : 79/81 (conf: 0.9753086419753086)
✘ {1} ⟨P̅P̅⟩ (A103 ⫹₇₀ 16091)
 ✔ {1} ⟨PO⟩ (A74 ⫹₆₀ 12673)
 │✔ {1} ⟨PP⟩ (A46 ⫹ 7937)
 ││✔ Bitumen : 2/6 (conf: 0.3333333333333333)
 ││✘ Asphalt : 60/60 (conf: 1.0)
 │✘ {1} A15 ⫺₆₀ 12455
 │ ✔ {1} A1 ⫹₇₀ 14060
 │ │✔ Bitumen : 74/75 (conf: 0.9866666666666667)
 │ │✘ Gravel : 3/6 (conf: 0.5)
 │ ✘ {1} ⟨DR⟩ (A77 ⫹ 13941)
 │  ✔ {1} ⟨DR⟩ (A4 ⫹ 8135)
 │  │✔ Bitumen : 4/4 (conf: 1.0)
 │  │✘ Asphalt : 9/9 (conf: 1.0)
 │  ✘ Gravel : 15/15 (conf: 1.0)
 ✘ {1} A5 ⫺ 19916
  ✔ Painted metal sheets : 79/79 (conf: 1.0)
  ✘ {1} ⟨P̅P̅⟩ (A97 ⫹₇₀ 21303)
   ✔ {1} ⟨P̅P̅⟩ (A16 ⫺₈₀ 15021)
   │✔ Self-Blocking Bricks : 36/37 (conf: 0.972972972972973)
   │✘ {1} ⟨P̅P̅⟩ (A2 ⫹₈₀ 12118)
   │ ✔ {1} ⟨PO⟩ (A14 ⫺₇₀ 13912)
   │ │✔ Self-Blocking Bricks : 20/20 (conf: 1.0)
   │ │✘ {1} ⟨DR⟩ (A46 ⫹ 14744)
   │ │ ✔ Self-Blocking Bricks : 9/9 (conf: 1.0)
   │ │ ✘ {1} A2 ⫹ 11702
   │ │  ✔ Gravel : 7/7 (conf: 1.0)
   │ │  ✘ Self-Blocking Bricks : 2/4 (conf: 0.5)
   │ ✘ {1} A35 ⫺₈₀ 16587
   │  ✔ {1} A3 ⫹₇₀ 12802
   │  │✔ {1} A13 ⫹₇₀ 13525
   │  ││✔ Gravel : 16/16 (conf: 1.0)
   │  ││✘ {1} A10 ⫹₈₀ 14357
   │  ││ ✔ Self-Blocking Bricks : 8/8 (conf: 1.0)
   │  ││ ✘ Gravel : 3/4 (conf: 0.75)
   │  │✘ Gravel : 31/31 (conf: 1.0)
   │  ✘ Asphalt : 4/7 (conf: 0.5714285714285714)
   ✘ {1} ⟨DR⟩ (A93 ⫺ 24147)
    ✔ Bare Soil : 24/25 (conf: 0.96)
    ✘ Meadows : 4/6 (conf: 0.6666666666666666)
● [ 22/07/2021 11:58:28 ] Saving tree to file ./gandalf/trees/tree_2e8aa3b3d7ce2c78bd21d2c70c3441c78f5211e3857785ab31b913031d7a2bf4.jld...
Test tree:
Decision Tree
Leaves: 31
Tot nodes: 61
Height: 10
Modal height:  7
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A14 ⫹₆₀ 7986)
✔ {1} A74 ⫺₇₀ 10959
│✔ {1} ⟨PP⟩ (A66 ⫹ 5886)
││✔ {1} ⟨PO⟩ (A69 ⫹₆₀ 7986)
│││✔ Trees : 14/15 (conf: 0.9333333333333333)
│││✘ {1} ⟨P̅P̅⟩ (A32 ⫺₆₀ 8234)
│││ ✔ Trees : 3/5 (conf: 0.6)
│││ ✘ Meadows : 3/5 (conf: 0.6)
││✘ {1} ⟨PO⟩ (A100 ⫹₆₀ 25138)
││ ✔ {1} ⟨PO⟩ (A72 ⫺ 15883)
││ │✔ {1} ⟨PO⟩ (A102 ⫹₆₀ 22819)
││ ││✔ Bare Soil : 5/6 (conf: 0.8333333333333334)
││ ││✘ {1} ⟨DR⟩ (A82 ⫺ 26476)
││ ││ ✔ Bare Soil : 2/2 (conf: 1.0)
││ ││ ✘ {1} A3 ⫹ 5489
││ ││  ✔ Meadows : 4/5 (conf: 0.8)
││ ││  ✘ Bare Soil : 2/2 (conf: 1.0)
││ │✘ {1} ⟨P̅P̅⟩ (A3 ⫹ 4776)
││ │ ✔ Bare Soil : 2/3 (conf: 0.6666666666666666)
││ │ ✘ Meadows : 2/4 (conf: 0.5)
││ ✘ Meadows : 6/6 (conf: 1.0)
│✘ Shadows : 20/21 (conf: 0.9523809523809523)
✘ {1} ⟨P̅P̅⟩ (A103 ⫹₇₀ 16091)
 ✔ {1} ⟨PO⟩ (A74 ⫹₆₀ 12673)
 │✔ {1} ⟨PP⟩ (A46 ⫹ 7937)
 ││✔ Bitumen : 0/1 (conf: 0.0)
 ││✘ Asphalt : 12/12 (conf: 1.0)
 │✘ {1} A15 ⫺₆₀ 12455
 │ ✔ {1} A1 ⫹₇₀ 14060
 │ │✔ Bitumen : 17/20 (conf: 0.85)
 │ │✘ Gravel : 0/2 (conf: 0.0)
 │ ✘ {1} ⟨DR⟩ (A77 ⫹ 13941)
 │  ✔ {1} ⟨DR⟩ (A4 ⫹ 8135)
 │  │✔ Bitumen : 0/1 (conf: 0.0)
 │  │✘ Asphalt : 1/5 (conf: 0.2)
 │  ✘ Gravel : 5/6 (conf: 0.8333333333333334)
 ✘ {1} A5 ⫺ 19916
  ✔ Painted metal sheets : 20/21 (conf: 0.9523809523809523)
  ✘ {1} ⟨P̅P̅⟩ (A97 ⫹₇₀ 21303)
   ✔ {1} ⟨P̅P̅⟩ (A16 ⫺₈₀ 15021)
   │✔ Self-Blocking Bricks : 9/11 (conf: 0.8181818181818182)
   │✘ {1} ⟨P̅P̅⟩ (A2 ⫹₈₀ 12118)
   │ ✔ {1} ⟨PO⟩ (A14 ⫺₇₀ 13912)
   │ │✔ Self-Blocking Bricks : 1/1 (conf: 1.0)
   │ │✘ {1} ⟨DR⟩ (A46 ⫹ 14744)
   │ │ ✔ Self-Blocking Bricks : 1/1 (conf: 1.0)
   │ │ ✘ {1} A2 ⫹ 11702
   │ │  ✔ Gravel : 0/2 (conf: 0.0)
   │ │  ✘ Self-Blocking Bricks : 0/4 (conf: 0.0)
   │ ✘ {1} A35 ⫺₈₀ 16587
   │  ✔ {1} A3 ⫹₇₀ 12802
   │  │✔ {1} A13 ⫹₇₀ 13525
   │  ││✔ Gravel : 1/1 (conf: 1.0)
   │  ││✘ {1} A10 ⫹₈₀ 14357
   │  ││ ✔ Self-Blocking Bricks : 3/5 (conf: 0.6)
   │  ││ ✘ Gravel : 1/2 (conf: 0.5)
   │  │✘ Gravel : 0/2 (conf: 0.0)
   │  ✘ Asphalt : 0/2 (conf: 0.0)
   ✘ {1} ⟨DR⟩ (A93 ⫺ 24147)
    ✔ Bare Soil : 5/6 (conf: 0.8333333333333334)
    ✘ Meadows : 1/1 (conf: 1.0)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Pavia	9	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	77.78%	65.0%	80.0%	85.0%	35.0%	80.0%	100.0%	70.0%	100.0%	85.0%	68.42%	84.21%	77.27%	46.67%	76.19%	95.24%	63.64%	95.24%	85.0%	||	75.0%	[66.67, 82.05, 80.95, 40.0, 78.05, 97.56, 66.67, 97.56, 85.0]%	|||	77.78%	97.22%	76.87%	97.24%	77.17%	
  accuracy: 77.78% kappa: 75.0% 
 13  0  4  2  0  0  0  1  0	65.0%		Asphalt
  0 16  0  0  3  1  0  0  0	80.0%		Bare Soil
  2  0 17  1  0  0  0  0  0	85.0%		Bitumen
  4  0  1  7  0  0  8  0  0	35.0%		Gravel
  0  1  0  0 16  0  0  0  3	80.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  1  0  5  0  0 14  0  0	70.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  1  0  0  2  0  0  0 17	85.0%		Trees

overall_acc:	0.7777777777777778
κ =		0.7500000000000001
sensitivities:	[0.65, 0.8, 0.85, 0.35, 0.8, 1.0, 0.7, 1.0, 0.85]
specificities:	[0.9625, 0.98125, 0.96875, 0.95, 0.96875, 0.99375, 0.95, 0.99375, 0.98125]
PPVs:		[0.6842105263157895, 0.8421052631578947, 0.7727272727272727, 0.4666666666666667, 0.7619047619047619, 0.9523809523809523, 0.6363636363636364, 0.9523809523809523, 0.85]
NPVs:		[0.9565217391304348, 0.9751552795031055, 0.9810126582278481, 0.9212121212121213, 0.9748427672955975, 1.0, 0.9620253164556962, 1.0, 0.98125]
F1s:		[0.6666666666666666, 0.8205128205128205, 0.8095238095238095, 0.4, 0.7804878048780488, 0.975609756097561, 0.6666666666666666, 0.975609756097561, 0.85]
accuracies:	[0.9277777777777778, 0.9611111111111111, 0.9555555555555556, 0.8833333333333333, 0.95, 0.9944444444444445, 0.9222222222222223, 0.9944444444444445, 0.9666666666666667]
mean_accuracy:	0.9506172839506173
Dataset_slice = (900) -> [21, 173, 279, 381, 499, 569, 691, 744, 847, 64, 138, 231, 310, 469, 582, 680, 764, 808, 10, 149, 269, 301, 481, 525, 602, 729, 862, 84, 168, 271, 334, 458, 600, 640, 775, 883, 13, 194, 289, 400, 497, 548, 626, 769, 896, 73, 107, 225, 375, 444, 512, 628, 755, 891, 20, 174, 213, 347, 441, 545, 677, 706, 849, 60, 159, 210, 398, 448, 505, 611, 742, 854, 22, 196, 237, 354, 492, 558, 667, 779, 832, 27, 187, 300, 345, 461, 572, 696, 704, 877, 3, 110, 264, 394, 498, 583, 655, 772, 813, 48, 125, 238, 341, 464, 565, 688, 721, 814, 24, 171, 293, 356, 470, 502, 631, 757, 836, 1, 123, 260, 339, 417, 519, 685, 712, 838, 95, 165, 224, 315, 422, 550, 652, 762, 880, 30, 190, 294, 327, 484, 589, 684, 713, 829, 29, 188, 211, 359, 429, 586, 645, 733, 889, 65, 176, 232, 305, 500, 559, 698, 780, 885, 85, 157, 282, 357, 472, 516, 647, 800, 898, 4, 179, 202, 362, 436, 585, 681, 752, 801, 50, 169, 261, 371, 460, 594, 694, 796, 815, 8, 131, 256, 343, 439, 590, 610, 785, 843, 89, 192, 240, 382, 447, 557, 606, 756, 804, 68, 144, 221, 342, 438, 560, 683, 751, 876, 23, 134, 277, 335, 419, 587, 635, 748, 895, 56, 116, 278, 364, 459, 581, 644, 797, 865, 70, 121, 292, 307, 440, 520, 633, 793, 866, 71, 155, 247, 324, 425, 508, 608, 724, 818, 62, 133, 204, 374, 405, 551, 604, 740, 824, 31, 129, 299, 368, 479, 501, 636, 741, 807, 49, 162, 227, 308, 401, 579, 692, 754, 855, 15, 119, 249, 361, 467, 546, 630, 795, 846, 77, 115, 265, 388, 426, 598, 646, 716, 894, 61, 126, 242, 396, 463, 517, 622, 735, 857, 52, 189, 275, 372, 491, 521, 660, 709, 872, 11, 195, 234, 365, 468, 544, 661, 777, 890, 75, 154, 222, 316, 480, 555, 675, 701, 856, 67, 105, 226, 393, 466, 593, 659, 731, 881, 81, 178, 267, 379, 477, 596, 656, 746, 886, 44, 153, 266, 366, 476, 542, 662, 720, 828, 38, 127, 245, 352, 452, 518, 648, 728, 848, 17, 147, 219, 340, 427, 515, 624, 771, 850, 96, 193, 229, 344, 457, 578, 663, 732, 817, 35, 128, 262, 325, 431, 543, 699, 737, 822, 36, 113, 230, 392, 414, 554, 620, 719, 812, 40, 139, 281, 314, 435, 561, 674, 749, 806, 93, 135, 268, 380, 430, 562, 682, 767, 863, 55, 132, 285, 312, 421, 528, 668, 776, 845, 90, 199, 212, 326, 486, 511, 616, 723, 816, 72, 151, 208, 331, 434, 536, 638, 781, 874, 19, 166, 283, 322, 403, 599, 625, 705, 864, 87, 180, 244, 351, 462, 513, 651, 794, 893, 74, 140, 254, 333, 490, 524, 621, 790, 830, 39, 141, 241, 391, 412, 580, 637, 798, 844, 18, 142, 207, 350, 485, 591, 687, 707, 882, 25, 148, 246, 383, 410, 573, 697, 789, 823, 2, 175, 239, 337, 495, 523, 673, 708, 873, 91, 197, 209, 378, 478, 529, 676, 773, 887, 83, 114, 274, 373, 474, 553, 650, 788, 834, 99, 182, 255, 360, 489, 533, 666, 787, 851, 43, 106, 258, 304, 454, 509, 623, 792, 803, 53, 170, 218, 353, 404, 503, 671, 727, 811, 6, 101, 235, 399, 445, 597, 612, 718, 871, 28, 145, 263, 309, 442, 510, 603, 739, 859, 79, 146, 257, 328, 456, 556, 601, 702, 861, 42, 200, 273, 319, 496, 574, 617, 791, 853, 66, 158, 206, 389, 493, 541, 695, 761, 884, 92, 143, 201, 397, 443, 568, 653, 738, 831, 76, 161, 290, 318, 424, 527, 693, 747, 820, 7, 102, 297, 311, 413, 547, 665, 715, 821, 14, 150, 216, 336, 415, 507, 669, 783, 840, 5, 137, 284, 348, 406, 564, 700, 760, 825, 57, 130, 296, 346, 402, 532, 686, 758, 842, 88, 177, 295, 384, 450, 506, 639, 736, 809, 86, 104, 203, 367, 423, 595, 609, 786, 868, 63, 191, 217, 349, 451, 514, 641, 717, 867, 16, 183, 250, 302, 420, 538, 658, 714, 888, 32, 185, 236, 355, 446, 537, 679, 766, 899, 100, 118, 287, 306, 473, 534, 654, 734, 860, 80, 136, 252, 330, 418, 530, 607, 759, 878, 33, 112, 286, 376, 407, 504, 618, 753, 805, 69, 117, 233, 370, 471, 571, 690, 782, 858, 37, 111, 223, 303, 433, 577, 678, 725, 841, 26, 164, 276, 317, 449, 588, 627, 743, 819, 59, 167, 251, 323, 408, 575, 615, 711, 879, 41, 160, 280, 358, 483, 567, 672, 765, 839, 12, 172, 228, 321, 455, 566, 657, 768, 897, 9, 108, 272, 386, 437, 584, 649, 722, 826, 47, 156, 253, 369, 482, 531, 643, 774, 900, 46, 103, 259, 313, 428, 576, 619, 745, 810, 51, 198, 220, 332, 487, 563, 664, 778, 833, 45, 181, 215, 329, 409, 526, 605, 784, 802, 98, 152, 291, 320, 453, 592, 629, 799, 827, 94, 184, 288, 363, 488, 535, 689, 726, 869, 34, 122, 205, 338, 411, 522, 614, 770, 875, 54, 163, 214, 385, 416, 570, 613, 763, 837, 78, 109, 298, 377, 494, 539, 642, 703, 870, 58, 124, 270, 387, 432, 549, 632, 750, 835, 97, 186, 248, 390, 475, 552, 670, 710, 892, 82, 120, 243, 395, 465, 540, 634, 730, 852]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	1731.95 MBs
     ├ fmd	204.3 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	1527.65 MBs	(shape (3, 4, 3, 4, 720, 1030, 4), 357195760 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.12 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 11:58:35 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (462+258=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A103 ⫹₆₀ 16082), purity -1.6442429271104888
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+176=258 samples) on frame 1 with decision: {1} A44 ⫺ 8502, purity -0.7022539555105483
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (224+238=462 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A13 ⫺ 10364), purity -1.226736095394122
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (130+94=224 samples) on frame 1 with decision: {1} ⟨DR⟩ (A63 ⫹ 4033), purity -0.6095462716649228
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (115+61=176 samples) on frame 1 with decision: {1} ⟨PO⟩ (A74 ⫹₆₀ 12673), purity -0.5756101214273223
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (144+94=238 samples) on frame 1 with decision: {1} A39 ⫺₇₀ 22195, purity -0.6744683184377991
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+92=130 samples) on frame 1 with decision: {1} ⟨DR⟩ (A99 ⫹ 24425), purity -0.5898239292639983
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (30+85=115 samples) on frame 1 with decision: {1} A18 ⫺₇₀ 12534, purity -0.5390681396826728
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (30+64=94 samples) on frame 1 with decision: {1} ⟨PP⟩ (A73 ⫹ 17023), purity -0.22121718528508896
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (53+91=144 samples) on frame 1 with decision: {1} ⟨PO⟩ (A13 ⫹₆₀ 13525), purity -0.6931903669324605
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (15+79=94 samples) on frame 1 with decision: {1} A4 ⫺₆₀ 23840, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+4=38 samples) on frame 1 with decision: {1} ⟨DR⟩ (A11 ⫺ 8838), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+12=30 samples) on frame 1 with decision: {1} ⟨PP⟩ (A86 ⫹ 13981), purity -0.5388829441062521
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+15=53 samples) on frame 1 with decision: {1} ⟨PO⟩ (A3 ⫺ 14338), purity -0.19554433282466555
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (81+4=85 samples) on frame 1 with decision: {1} ⟨PO⟩ (A78 ⫺ 17171), purity -0.24725645509424932
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (67+25=92 samples) on frame 1 with decision: {1} A83 ⫺ 24048, purity -0.5524306522611492
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+13=30 samples) on frame 1 with decision: {1} A19 ⫺ 4043, purity -0.2052526490434211
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (36+55=91 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A2 ⫺ 10919), purity -0.6174871753531652
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+13=17 samples) on frame 1 with decision: {1} A5 ⫹ 3101, purity -0.1630934542493989
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+14=18 samples) on frame 1 with decision: {1} A42 ⫺₈₀ 13268, purity -0.15403270679109896
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (31+5=36 samples) on frame 1 with decision: {1} A36 ⫺₆₀ 18559, purity -0.4006345175037226
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+4=12 samples) on frame 1 with decision: {1} A12 ⫹ 10018, purity -0.18744504820626942
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (45+10=55 samples) on frame 1 with decision: {1} A41 ⫹₆₀ 16527, purity -0.34056571606514113
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (52+15=67 samples) on frame 1 with decision: {1} ⟨PO⟩ (A3 ⫺ 7481), purity -0.6092258993535369
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+7=15 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A14 ⫹₆₀ 14972), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A20 ⫹₆₀ 13268, purity -0.38190850097688767
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+4=31 samples) on frame 1 with decision: {1} ⟨PO⟩ (A1 ⫺ 14863), purity -0.21052987006559934
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (35+17=52 samples) on frame 1 with decision: {1} A63 ⫺ 12455, purity -0.46626660886620847
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+11=15 samples) on frame 1 with decision: {1} A24 ⫹ 11078, purity -0.2772588722239781
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+25=35 samples) on frame 1 with decision: {1} A58 ⫹ 8601, purity -0.4477638982660184
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+14=25 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A15 ⫺₈₀ 4855), purity -0.25781915205356243
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+4=11 samples) on frame 1 with decision: {1} A9 ⫹ 3171, purity -0.2044855071341121
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
777.515263 seconds (7.26 G allocations: 218.696 GiB, 26.90% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 33
Tot nodes: 65
Height: 10
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₆₀ 16082)
✔ {1} A44 ⫺ 8502
│✔ {1} ⟨PO⟩ (A74 ⫹₆₀ 12673)
││✔ Asphalt : 60/61 (conf: 0.9836065573770492)
││✘ {1} A18 ⫺₇₀ 12534
││ ✔ {1} ⟨PO⟩ (A78 ⫺ 17171)
││ │✔ Gravel : 3/4 (conf: 0.75)
││ │✘ Bitumen : 76/81 (conf: 0.9382716049382716)
││ ✘ {1} ⟨PP⟩ (A86 ⫹ 13981)
││  ✔ {1} A12 ⫹ 10018
││  │✔ Bitumen : 3/4 (conf: 0.75)
││  │✘ Asphalt : 8/8 (conf: 1.0)
││  ✘ {1} A42 ⫺₈₀ 13268
││   ✔ Gravel : 14/14 (conf: 1.0)
││   ✘ Gravel : 2/4 (conf: 0.5)
│✘ Shadows : 80/82 (conf: 0.975609756097561)
✘ {1} ⟨P̅P̅⟩ (A13 ⫺ 10364)
 ✔ {1} A39 ⫺₇₀ 22195
 │✔ {1} A4 ⫺₆₀ 23840
 ││✔ Painted metal sheets : 79/79 (conf: 1.0)
 ││✘ Bare Soil : 15/15 (conf: 1.0)
 │✘ {1} ⟨PO⟩ (A13 ⫹₆₀ 13525)
 │ ✔ {1} ⟨P̅P̅⟩ (A2 ⫺ 10919)
 │ │✔ {1} A41 ⫹₆₀ 16527
 │ ││✔ {1} A20 ⫹₆₀ 13268
 │ │││✔ Self-Blocking Bricks : 4/6 (conf: 0.6666666666666666)
 │ │││✘ Asphalt : 4/4 (conf: 1.0)
 │ ││✘ Gravel : 43/45 (conf: 0.9555555555555556)
 │ │✘ {1} A36 ⫺₆₀ 18559
 │ │ ✔ Gravel : 4/5 (conf: 0.8)
 │ │ ✘ {1} ⟨PO⟩ (A1 ⫺ 14863)
 │ │  ✔ Gravel : 3/4 (conf: 0.75)
 │ │  ✘ Self-Blocking Bricks : 26/27 (conf: 0.9629629629629629)
 │ ✘ {1} ⟨PO⟩ (A3 ⫺ 14338)
 │  ✔ {1} ⟨P̅P̅⟩ (A14 ⫹₆₀ 14972)
 │  │✔ Gravel : 7/7 (conf: 1.0)
 │  │✘ Self-Blocking Bricks : 8/8 (conf: 1.0)
 │  ✘ Self-Blocking Bricks : 38/38 (conf: 1.0)
 ✘ {1} ⟨DR⟩ (A63 ⫹ 4033)
  ✔ {1} ⟨PP⟩ (A73 ⫹ 17023)
  │✔ Trees : 64/64 (conf: 1.0)
  │✘ {1} A19 ⫺ 4043
  │ ✔ Trees : 13/13 (conf: 1.0)
  │ ✘ {1} A5 ⫹ 3101
  │  ✔ Meadows : 13/13 (conf: 1.0)
  │  ✘ Trees : 2/4 (conf: 0.5)
  ✘ {1} ⟨DR⟩ (A99 ⫹ 24425)
   ✔ {1} A83 ⫺ 24048
   │✔ Bare Soil : 25/25 (conf: 1.0)
   │✘ {1} ⟨PO⟩ (A3 ⫺ 7481)
   │ ✔ {1} A24 ⫹ 11078
   │ │✔ Meadows : 11/11 (conf: 1.0)
   │ │✘ Meadows : 2/4 (conf: 0.5)
   │ ✘ {1} A63 ⫺ 12455
   │  ✔ Bare Soil : 17/17 (conf: 1.0)
   │  ✘ {1} A58 ⫹ 8601
   │   ✔ {1} ⟨P̅P̅⟩ (A15 ⫺₈₀ 4855)
   │   │✔ Bare Soil : 14/14 (conf: 1.0)
   │   │✘ {1} A9 ⫹ 3171
   │   │ ✔ Bare Soil : 3/4 (conf: 0.75)
   │   │ ✘ Meadows : 7/7 (conf: 1.0)
   │   ✘ Meadows : 10/10 (conf: 1.0)
   ✘ {1} ⟨DR⟩ (A11 ⫺ 8838)
    ✔ Bare Soil : 4/4 (conf: 1.0)
    ✘ Meadows : 34/34 (conf: 1.0)
● [ 22/07/2021 12:11:32 ] Saving tree to file ./gandalf/trees/tree_76255e7a454eb133a26d50df78a2cafe896e484510130ee515de7a0397f691ef.jld...
Test tree:
Decision Tree
Leaves: 33
Tot nodes: 65
Height: 10
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A103 ⫹₆₀ 16082)
✔ {1} A44 ⫺ 8502
│✔ {1} ⟨PO⟩ (A74 ⫹₆₀ 12673)
││✔ Asphalt : 18/18 (conf: 1.0)
││✘ {1} A18 ⫺₇₀ 12534
││ ✔ {1} ⟨PO⟩ (A78 ⫺ 17171)
││ │✔ Gravel : 1/1 (conf: 1.0)
││ │✘ Bitumen : 18/19 (conf: 0.9473684210526315)
││ ✘ {1} ⟨PP⟩ (A86 ⫹ 13981)
││  ✔ {1} A12 ⫹ 10018
││  │✔ Bitumen : 1/2 (conf: 0.5)
││  │✘ Asphalt : 0/1 (conf: 0.0)
││  ✘ {1} A42 ⫺₈₀ 13268
││   ✔ Gravel : 4/5 (conf: 0.8)
││   ✘ Gravel : 0/0 (conf: NaN)
│✘ Shadows : 20/20 (conf: 1.0)
✘ {1} ⟨P̅P̅⟩ (A13 ⫺ 10364)
 ✔ {1} A39 ⫺₇₀ 22195
 │✔ {1} A4 ⫺₆₀ 23840
 ││✔ Painted metal sheets : 20/20 (conf: 1.0)
 ││✘ Bare Soil : 1/1 (conf: 1.0)
 │✘ {1} ⟨PO⟩ (A13 ⫹₆₀ 13525)
 │ ✔ {1} ⟨P̅P̅⟩ (A2 ⫺ 10919)
 │ │✔ {1} A41 ⫹₆₀ 16527
 │ ││✔ {1} A20 ⫹₆₀ 13268
 │ │││✔ Self-Blocking Bricks : 0/1 (conf: 0.0)
 │ │││✘ Asphalt : 0/3 (conf: 0.0)
 │ ││✘ Gravel : 9/15 (conf: 0.6)
 │ │✘ {1} A36 ⫺₆₀ 18559
 │ │ ✔ Gravel : 1/2 (conf: 0.5)
 │ │ ✘ {1} ⟨PO⟩ (A1 ⫺ 14863)
 │ │  ✔ Gravel : 0/0 (conf: NaN)
 │ │  ✘ Self-Blocking Bricks : 2/2 (conf: 1.0)
 │ ✘ {1} ⟨PO⟩ (A3 ⫺ 14338)
 │  ✔ {1} ⟨P̅P̅⟩ (A14 ⫹₆₀ 14972)
 │  │✔ Gravel : 0/1 (conf: 0.0)
 │  │✘ Self-Blocking Bricks : 4/4 (conf: 1.0)
 │  ✘ Self-Blocking Bricks : 5/9 (conf: 0.5555555555555556)
 ✘ {1} ⟨DR⟩ (A63 ⫹ 4033)
  ✔ {1} ⟨PP⟩ (A73 ⫹ 17023)
  │✔ Trees : 15/15 (conf: 1.0)
  │✘ {1} A19 ⫺ 4043
  │ ✔ Trees : 0/0 (conf: NaN)
  │ ✘ {1} A5 ⫹ 3101
  │  ✔ Meadows : 7/8 (conf: 0.875)
  │  ✘ Trees : 2/3 (conf: 0.6666666666666666)
  ✘ {1} ⟨DR⟩ (A99 ⫹ 24425)
   ✔ {1} A83 ⫺ 24048
   │✔ Bare Soil : 7/7 (conf: 1.0)
   │✘ {1} ⟨PO⟩ (A3 ⫺ 7481)
   │ ✔ {1} A24 ⫹ 11078
   │ │✔ Meadows : 2/3 (conf: 0.6666666666666666)
   │ │✘ Meadows : 0/1 (conf: 0.0)
   │ ✘ {1} A63 ⫺ 12455
   │  ✔ Bare Soil : 2/2 (conf: 1.0)
   │  ✘ {1} A58 ⫹ 8601
   │   ✔ {1} ⟨P̅P̅⟩ (A15 ⫺₈₀ 4855)
   │   │✔ Bare Soil : 4/5 (conf: 0.8)
   │   │✘ {1} A9 ⫹ 3171
   │   │ ✔ Bare Soil : 0/1 (conf: 0.0)
   │   │ ✘ Meadows : 0/0 (conf: NaN)
   │   ✘ Meadows : 2/4 (conf: 0.5)
   ✘ {1} ⟨DR⟩ (A11 ⫺ 8838)
    ✔ Bare Soil : 1/2 (conf: 0.5)
    ✘ Meadows : 5/5 (conf: 1.0)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Pavia	10	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	83.89%	90.0%	75.0%	95.0%	75.0%	80.0%	100.0%	55.0%	100.0%	85.0%	81.82%	83.33%	90.48%	62.5%	76.19%	100.0%	68.75%	100.0%	94.44%	||	81.88%	[85.71, 78.95, 92.68, 68.18, 78.05, 100.0, 61.11, 100.0, 89.47]%	|||	83.89%	97.99%	84.17%	98.0%	83.8%	
  accuracy: 83.89% kappa: 81.88% 
 18  0  1  1  0  0  0  0  0	90.0%		Asphalt
  0 15  0  1  3  0  1  0  0	75.0%		Bare Soil
  1  0 19  0  0  0  0  0  0	95.0%		Bitumen
  0  0  1 15  0  0  4  0  0	75.0%		Gravel
  0  3  0  0 16  0  0  0  1	80.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  2  0  0  7  0  0 11  0  0	55.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  1  0  0  0  2  0  0  0 17	85.0%		Trees

overall_acc:	0.8388888888888889
κ =		0.8187500000000001
sensitivities:	[0.9, 0.75, 0.95, 0.75, 0.8, 1.0, 0.55, 1.0, 0.85]
specificities:	[0.975, 0.98125, 0.9875, 0.94375, 0.96875, 1.0, 0.96875, 1.0, 0.99375]
PPVs:		[0.8181818181818182, 0.8333333333333334, 0.9047619047619048, 0.625, 0.7619047619047619, 1.0, 0.6875, 1.0, 0.9444444444444444]
NPVs:		[0.9873417721518988, 0.9691358024691358, 0.9937106918238994, 0.967948717948718, 0.9748427672955975, 1.0, 0.9451219512195121, 1.0, 0.9814814814814815]
F1s:		[0.8571428571428571, 0.7894736842105263, 0.926829268292683, 0.6818181818181818, 0.7804878048780488, 1.0, 0.6111111111111112, 1.0, 0.8947368421052632]
accuracies:	[0.9666666666666667, 0.9555555555555556, 0.9833333333333333, 0.9222222222222223, 0.95, 1.0, 0.9222222222222223, 1.0, 0.9777777777777777]
mean_accuracy:	0.9641975308641975
Iteration "((3,7),false,"o_RCC8","TestOpAll"),100,-1,Salinas-A"...
● [ 22/07/2021 12:11:33 ] Computing dataset...
● [ 22/07/2021 12:11:34 ] Computed dataset in 0.953 seconds (00:00:01)
● [ 22/07/2021 12:11:35 ] Saving dataset to file ./gandalf/cache/dataset_2c9380f960dbf9b71680baffbd63137462673a520928d737ad58ef7b0352df8f.jld...
Dataseeds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

executing run '((3,7),false,"o_RCC8","TestOpAll"),100,-1,Salinas-A'...
dataset type = Tuple{Array{Int64, 4}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (test_operators = TestOperator[⫺, ⫹, ⫺₉₀, ⫹₉₀, ⫺₈₀, ⫹₈₀, ⫺₇₀, ⫹₇₀, ⫺₆₀, ⫹₆₀], ontology = Ontology{DecisionTree.ModalLogic.Interval2D}(RCC8))
dataset_slices    = (10 dataset_slices)

Frame 1/1
  0.005912 seconds (22.47 k allocations: 2.087 MiB)
Frame 1/1
┌ LogLevel(-500): OntologicalDataset -> FeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:11
┌ LogLevel(-500): Instance 1/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 483/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 362/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 241/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 120/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): FeatModalDataset -> StumpFeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:388
┌ LogLevel(-500): Instance 1/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 483/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 362/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 120/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 241/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
167.105834 seconds (1.51 G allocations: 111.343 GiB, 65.40% gc time)
Dataset_slice = (600) -> [10, 122, 267, 386, 478, 583, 3, 166, 252, 331, 497, 503, 27, 190, 228, 353, 403, 521, 63, 130, 246, 366, 462, 566, 50, 195, 235, 350, 474, 501, 57, 186, 201, 397, 447, 511, 36, 116, 254, 326, 457, 542, 21, 123, 248, 340, 469, 593, 75, 157, 258, 336, 417, 509, 78, 183, 238, 394, 408, 596, 35, 154, 264, 376, 477, 599, 66, 191, 274, 307, 448, 548, 20, 167, 215, 392, 467, 549, 67, 188, 239, 310, 434, 568, 25, 141, 231, 330, 490, 594, 24, 117, 270, 400, 492, 592, 82, 194, 226, 387, 455, 560, 74, 197, 289, 378, 441, 565, 69, 105, 227, 341, 461, 539, 81, 187, 300, 388, 427, 585, 28, 159, 210, 342, 405, 531, 15, 179, 244, 323, 420, 554, 59, 163, 223, 332, 416, 558, 29, 124, 268, 351, 459, 564, 18, 153, 232, 329, 500, 582, 31, 162, 220, 319, 418, 535, 43, 177, 288, 346, 465, 576, 40, 155, 249, 325, 470, 575, 12, 149, 205, 327, 496, 578, 83, 192, 275, 305, 464, 597, 100, 145, 247, 398, 415, 508, 94, 178, 261, 322, 488, 519, 16, 110, 291, 347, 485, 551, 51, 119, 204, 337, 466, 590, 73, 148, 297, 362, 449, 522, 19, 103, 292, 358, 425, 533, 8, 142, 213, 382, 499, 530, 11, 134, 207, 345, 472, 598, 95, 136, 296, 357, 407, 515, 58, 169, 284, 339, 458, 595, 72, 101, 241, 321, 491, 581, 13, 127, 230, 349, 432, 550, 53, 172, 240, 301, 435, 555, 22, 200, 285, 335, 483, 532, 71, 176, 260, 379, 437, 517, 87, 139, 202, 399, 439, 514, 33, 160, 299, 389, 451, 544, 61, 168, 208, 343, 480, 540, 90, 180, 233, 309, 428, 586, 55, 175, 216, 348, 476, 518, 60, 137, 290, 383, 443, 573, 96, 198, 211, 308, 456, 552, 68, 144, 214, 317, 431, 563, 77, 189, 203, 315, 471, 507, 9, 135, 279, 361, 473, 536, 42, 147, 221, 352, 481, 553, 64, 115, 287, 391, 423, 528, 85, 196, 256, 390, 453, 516, 54, 182, 280, 359, 442, 588, 2, 140, 245, 320, 429, 541, 23, 170, 272, 313, 402, 559, 91, 104, 269, 324, 413, 538, 65, 181, 257, 344, 414, 505, 48, 132, 224, 367, 487, 523, 70, 173, 271, 303, 444, 589, 80, 118, 276, 338, 460, 570, 49, 171, 265, 333, 454, 577, 7, 120, 281, 360, 438, 572, 88, 193, 218, 372, 482, 584, 45, 121, 229, 381, 475, 510, 14, 174, 236, 364, 450, 534, 97, 128, 283, 304, 436, 562, 26, 111, 243, 311, 463, 561, 52, 112, 294, 302, 412, 506, 4, 158, 234, 384, 410, 569, 32, 150, 253, 371, 409, 512, 34, 146, 277, 374, 493, 579, 99, 125, 266, 380, 430, 504, 93, 102, 206, 363, 422, 587, 56, 152, 286, 375, 445, 513, 46, 113, 250, 306, 498, 524, 47, 185, 263, 373, 404, 525, 84, 108, 242, 385, 419, 600, 79, 129, 217, 318, 486, 546, 39, 156, 282, 365, 494, 591, 17, 114, 251, 312, 468, 574, 38, 143, 225, 369, 452, 556, 5, 151, 212, 368, 426, 502, 44, 138, 278, 355, 433, 526, 98, 126, 237, 395, 489, 529, 86, 109, 273, 334, 421, 537, 92, 199, 262, 354, 479, 527, 41, 184, 209, 328, 446, 547, 89, 107, 259, 370, 411, 567, 6, 131, 222, 377, 495, 545, 1, 106, 295, 314, 401, 557, 76, 161, 255, 396, 406, 520, 37, 164, 298, 393, 484, 543, 30, 133, 219, 356, 440, 580, 62, 165, 293, 316, 424, 571]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	3799.95 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	3529.91 MBs	(shape (3, 4, 3, 4, 480, 2040, 7), 987033600 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 12:14:31 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (238+242=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489), purity -1.118131486148477
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+158=238 samples) on frame 1 with decision: {1} ⟨EC⟩ (A83 ⫺ 5106), purity -0.460103344380513
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+82=242 samples) on frame 1 with decision: {1} A12 ⫹ 12431, purity -0.4971326530174778
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A39 ⫹₆₀ 21079, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+78=158 samples) on frame 1 with decision: {1} A6 ⫹ 12791, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
5747.843119 seconds (25.61 G allocations: 2.122 TiB, 33.08% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489)
✔ {1} A12 ⫹ 12431
│✔ Brocoli_green_weeds_1 : 80/82 (conf: 0.975609756097561)
│✘ {1} A39 ⫹₆₀ 21079
│ ✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
✘ {1} ⟨EC⟩ (A83 ⫺ 5106)
 ✔ {1} A6 ⫹ 12791
 │✔ Corn_senesced_green_weeds : 78/78 (conf: 1.0)
 │✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
● [ 22/07/2021 13:50:19 ] Saving tree to file ./gandalf/trees/tree_df623c2b154421fbe9545750bdbf63cb5451b3f4ddef540f2b893c873346b560.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489)
✔ {1} A12 ⫹ 12431
│✔ Brocoli_green_weeds_1 : 20/21 (conf: 0.9523809523809523)
│✘ {1} A39 ⫹₆₀ 21079
│ ✔ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 19/20 (conf: 0.95)
✘ {1} ⟨EC⟩ (A83 ⫺ 5106)
 ✔ {1} A6 ⫹ 12791
 │✔ Corn_senesced_green_weeds : 19/20 (conf: 0.95)
 │✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Salinas-A	1	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	97.5%	100.0%	95.0%	100.0%	100.0%	95.0%	95.0%	95.24%	95.0%	100.0%	100.0%	100.0%	95.0%	||	97.0%	[97.56, 95.0, 100.0, 100.0, 97.44, 95.0]%	|||	97.5%	99.5%	97.54%	99.5%	97.5%	
  accuracy: 97.5% kappa: 97.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  1 19  0  0  0  0	95.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 19  1	95.0%		Lettuce_romaine_6wk
  0  1  0  0  0 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.975
κ =		0.97
sensitivities:	[1.0, 0.95, 1.0, 1.0, 0.95, 0.95]
specificities:	[0.99, 0.99, 1.0, 1.0, 1.0, 0.99]
PPVs:		[0.9523809523809523, 0.95, 1.0, 1.0, 1.0, 0.95]
NPVs:		[1.0, 0.99, 1.0, 1.0, 0.9900990099009901, 0.99]
F1s:		[0.975609756097561, 0.95, 1.0, 1.0, 0.9743589743589743, 0.95]
accuracies:	[0.9916666666666667, 0.9833333333333333, 1.0, 1.0, 0.9916666666666667, 0.9833333333333333]
mean_accuracy:	0.9916666666666667
Dataset_slice = (600) -> [19, 131, 215, 348, 496, 545, 50, 123, 292, 322, 459, 579, 6, 121, 285, 331, 464, 513, 53, 110, 205, 315, 435, 505, 51, 109, 209, 311, 473, 521, 80, 124, 226, 364, 462, 528, 76, 158, 287, 370, 471, 541, 54, 114, 245, 399, 458, 519, 24, 151, 225, 332, 409, 527, 38, 128, 231, 316, 429, 518, 86, 191, 265, 391, 487, 566, 56, 141, 221, 356, 402, 555, 28, 200, 232, 346, 467, 520, 100, 140, 259, 325, 420, 595, 21, 171, 206, 379, 454, 589, 46, 184, 222, 395, 468, 560, 74, 146, 214, 343, 418, 540, 79, 143, 237, 320, 448, 558, 98, 188, 201, 390, 442, 600, 83, 186, 235, 338, 484, 503, 10, 119, 286, 398, 422, 547, 52, 167, 293, 396, 449, 544, 42, 176, 202, 326, 476, 509, 62, 154, 269, 304, 461, 561, 45, 144, 278, 334, 417, 597, 33, 163, 250, 333, 474, 534, 90, 134, 256, 388, 431, 549, 77, 172, 271, 367, 450, 584, 75, 189, 233, 387, 405, 573, 47, 182, 247, 312, 432, 501, 37, 137, 299, 340, 440, 568, 59, 125, 273, 345, 411, 506, 78, 149, 229, 305, 480, 529, 82, 102, 243, 374, 407, 533, 34, 104, 253, 329, 427, 585, 67, 108, 224, 335, 408, 526, 44, 198, 261, 357, 452, 569, 89, 180, 279, 363, 414, 580, 68, 105, 267, 306, 413, 557, 85, 166, 274, 365, 447, 542, 26, 145, 220, 369, 404, 578, 39, 142, 227, 376, 428, 590, 99, 193, 264, 321, 483, 512, 20, 147, 272, 381, 481, 572, 9, 130, 204, 301, 424, 565, 7, 156, 257, 344, 438, 570, 12, 199, 230, 336, 466, 571, 41, 132, 289, 337, 415, 593, 16, 170, 262, 373, 444, 543, 58, 196, 210, 347, 433, 551, 31, 107, 260, 383, 477, 535, 92, 164, 254, 355, 463, 502, 97, 174, 298, 397, 478, 508, 88, 106, 219, 317, 446, 531, 27, 115, 248, 360, 470, 515, 32, 153, 291, 330, 489, 582, 63, 185, 251, 362, 500, 524, 22, 160, 207, 352, 401, 577, 55, 152, 283, 353, 485, 525, 96, 169, 280, 389, 403, 586, 70, 173, 255, 366, 493, 550, 43, 127, 300, 339, 451, 507, 72, 155, 236, 400, 492, 539, 84, 168, 203, 324, 455, 564, 69, 187, 239, 378, 419, 546, 4, 139, 268, 368, 498, 598, 15, 111, 241, 319, 479, 536, 93, 175, 294, 302, 439, 548, 17, 122, 297, 307, 421, 538, 48, 190, 295, 318, 456, 594, 57, 138, 208, 354, 488, 563, 49, 183, 281, 385, 469, 517, 66, 195, 258, 372, 472, 583, 61, 118, 266, 351, 425, 599, 94, 116, 277, 349, 475, 537, 8, 135, 213, 375, 457, 504, 29, 197, 263, 394, 441, 588, 91, 117, 290, 342, 494, 567, 64, 113, 284, 380, 445, 514, 30, 181, 282, 303, 486, 581, 40, 179, 296, 350, 430, 552, 5, 157, 223, 384, 453, 522, 18, 161, 270, 314, 499, 576, 87, 177, 275, 308, 443, 554, 73, 129, 242, 382, 490, 574, 60, 136, 212, 358, 416, 523, 71, 148, 238, 393, 434, 511, 81, 150, 228, 371, 437, 510, 23, 178, 276, 328, 497, 556, 95, 101, 252, 392, 410, 591, 3, 165, 246, 323, 460, 530, 36, 133, 217, 361, 423, 559, 35, 126, 218, 386, 491, 562, 2, 103, 216, 359, 436, 532, 13, 162, 240, 309, 412, 553, 14, 192, 288, 341, 406, 587, 25, 159, 249, 310, 465, 592, 11, 112, 211, 377, 495, 575, 65, 120, 234, 313, 482, 596, 1, 194, 244, 327, 426, 516]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	3799.95 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	3529.91 MBs	(shape (3, 4, 3, 4, 480, 2040, 7), 945821520 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 13:50:27 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (239+241=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489), purity -1.1293049241654884
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+159=239 samples) on frame 1 with decision: {1} ⟨EC⟩ (A83 ⫺ 5106), purity -0.4835579451770631
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+82=241 samples) on frame 1 with decision: {1} A12 ⫹ 12431, purity -0.4963062662856841
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A24 ⫺₆₀ 15598, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+79=159 samples) on frame 1 with decision: {1} A6 ⫹ 12791, purity -0.03373013750381463
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
1434.084866 seconds (7.52 G allocations: 504.121 GiB, 29.97% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489)
✔ {1} A12 ⫹ 12431
│✔ Brocoli_green_weeds_1 : 80/82 (conf: 0.975609756097561)
│✘ {1} A24 ⫺₆₀ 15598
│ ✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 79/79 (conf: 1.0)
✘ {1} ⟨EC⟩ (A83 ⫺ 5106)
 ✔ {1} A6 ⫹ 12791
 │✔ Corn_senesced_green_weeds : 78/79 (conf: 0.9873417721518988)
 │✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
● [ 22/07/2021 14:14:21 ] Saving tree to file ./gandalf/trees/tree_db740c138142554c75fbdf13aec4b9df5c96e25924df77e2a2cabe147fbdb97e.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489)
✔ {1} A12 ⫹ 12431
│✔ Brocoli_green_weeds_1 : 20/21 (conf: 0.9523809523809523)
│✘ {1} A24 ⫺₆₀ 15598
│ ✔ Lettuce_romaine_6wk : 20/21 (conf: 0.9523809523809523)
│ ✘ Lettuce_romaine_7wk : 19/19 (conf: 1.0)
✘ {1} ⟨EC⟩ (A83 ⫺ 5106)
 ✔ {1} A6 ⫹ 12791
 │✔ Corn_senesced_green_weeds : 19/19 (conf: 1.0)
 │✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Salinas-A	2	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	98.33%	100.0%	95.0%	100.0%	100.0%	100.0%	95.0%	95.24%	100.0%	100.0%	100.0%	95.24%	100.0%	||	98.0%	[97.56, 97.44, 100.0, 100.0, 97.56, 97.44]%	|||	98.33%	99.67%	98.41%	99.67%	98.33%	
  accuracy: 98.33% kappa: 98.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  1 19  0  0  0  0	95.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  1 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.9833333333333333
κ =		0.98
sensitivities:	[1.0, 0.95, 1.0, 1.0, 1.0, 0.95]
specificities:	[0.99, 1.0, 1.0, 1.0, 0.99, 1.0]
PPVs:		[0.9523809523809523, 1.0, 1.0, 1.0, 0.9523809523809523, 1.0]
NPVs:		[1.0, 0.9900990099009901, 1.0, 1.0, 1.0, 0.9900990099009901]
F1s:		[0.975609756097561, 0.9743589743589743, 1.0, 1.0, 0.975609756097561, 0.9743589743589743]
accuracies:	[0.9916666666666667, 0.9916666666666667, 1.0, 1.0, 0.9916666666666667, 0.9916666666666667]
mean_accuracy:	0.9944444444444445
Dataset_slice = (600) -> [69, 125, 224, 361, 493, 514, 56, 174, 287, 365, 435, 502, 62, 169, 286, 356, 466, 569, 91, 135, 227, 360, 414, 522, 63, 180, 272, 321, 443, 562, 66, 141, 201, 312, 426, 509, 98, 175, 260, 368, 409, 518, 32, 187, 210, 383, 490, 549, 41, 185, 278, 364, 500, 551, 100, 165, 256, 334, 417, 567, 48, 101, 289, 351, 477, 597, 95, 137, 246, 338, 464, 563, 38, 149, 277, 328, 480, 578, 57, 146, 293, 341, 412, 552, 14, 176, 298, 390, 442, 594, 22, 126, 218, 309, 441, 582, 1, 120, 266, 344, 405, 592, 93, 168, 254, 381, 419, 556, 37, 123, 225, 313, 453, 533, 54, 138, 204, 315, 437, 568, 49, 156, 203, 335, 402, 507, 58, 164, 257, 343, 440, 577, 15, 155, 234, 394, 489, 542, 60, 186, 285, 306, 423, 583, 71, 107, 291, 348, 459, 513, 85, 160, 283, 353, 496, 547, 77, 178, 247, 316, 469, 544, 25, 189, 237, 387, 495, 599, 45, 182, 292, 373, 482, 584, 39, 117, 250, 392, 456, 520, 83, 162, 274, 346, 421, 576, 44, 194, 231, 366, 448, 527, 35, 112, 219, 333, 497, 560, 28, 106, 236, 311, 468, 600, 51, 119, 261, 310, 431, 516, 96, 114, 273, 347, 465, 536, 78, 163, 251, 352, 404, 538, 2, 129, 213, 359, 403, 591, 26, 183, 288, 308, 454, 598, 19, 113, 282, 400, 401, 540, 5, 111, 252, 302, 473, 566, 10, 108, 211, 393, 427, 581, 55, 152, 235, 342, 470, 541, 65, 148, 276, 327, 428, 511, 99, 136, 233, 304, 472, 546, 6, 184, 230, 332, 413, 517, 23, 131, 244, 330, 452, 515, 7, 199, 240, 322, 422, 529, 74, 142, 214, 319, 467, 505, 86, 128, 264, 399, 494, 559, 75, 200, 212, 389, 449, 573, 42, 122, 300, 388, 418, 561, 9, 150, 259, 339, 491, 510, 11, 170, 296, 382, 484, 554, 80, 140, 208, 374, 457, 596, 73, 130, 239, 354, 458, 595, 16, 134, 294, 370, 475, 519, 31, 177, 202, 336, 432, 580, 89, 151, 275, 317, 438, 572, 13, 104, 243, 391, 479, 504, 72, 144, 262, 375, 436, 548, 84, 173, 258, 320, 451, 575, 64, 109, 221, 350, 474, 555, 97, 102, 228, 325, 408, 508, 61, 118, 248, 378, 487, 553, 59, 172, 279, 395, 434, 545, 40, 132, 241, 358, 406, 574, 43, 171, 217, 380, 425, 526, 20, 124, 215, 385, 486, 501, 30, 105, 269, 355, 445, 558, 53, 195, 280, 369, 463, 550, 12, 157, 297, 377, 439, 565, 50, 159, 238, 345, 499, 589, 34, 193, 284, 398, 424, 579, 81, 115, 253, 397, 416, 570, 67, 166, 222, 372, 450, 585, 24, 127, 281, 371, 481, 524, 4, 145, 263, 384, 492, 539, 68, 154, 265, 324, 410, 503, 90, 139, 255, 349, 462, 534, 3, 143, 249, 357, 455, 506, 52, 181, 220, 305, 420, 523, 94, 188, 229, 329, 483, 543, 29, 153, 270, 303, 446, 535, 36, 179, 226, 307, 433, 564, 82, 158, 209, 314, 478, 530, 27, 190, 245, 318, 485, 521, 70, 197, 206, 376, 476, 537, 92, 196, 271, 363, 415, 532, 76, 191, 295, 331, 447, 571, 21, 110, 268, 337, 498, 557, 17, 167, 242, 396, 407, 588, 46, 192, 290, 301, 429, 531, 18, 161, 216, 362, 430, 525, 87, 103, 267, 379, 471, 590, 8, 147, 232, 323, 411, 593, 47, 198, 223, 326, 444, 586, 33, 133, 207, 386, 488, 512, 88, 121, 299, 340, 460, 528, 79, 116, 205, 367, 461, 587]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	3799.95 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	3529.91 MBs	(shape (3, 4, 3, 4, 480, 2040, 7), 936610920 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 14:14:30 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (238+242=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489), purity -1.136499150571781
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+158=238 samples) on frame 1 with decision: {1} ⟨EC⟩ (A83 ⫺ 5106), purity -0.4825834746286413
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+83=242 samples) on frame 1 with decision: {1} A12 ⫹ 12431, purity -0.5087316522372493
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A39 ⫹₆₀ 21079, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+78=158 samples) on frame 1 with decision: {1} A6 ⫹ 12791, purity -0.03386247467755994
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
435.389848 seconds (3.34 G allocations: 120.152 GiB, 21.30% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489)
✔ {1} A12 ⫹ 12431
│✔ Brocoli_green_weeds_1 : 80/83 (conf: 0.963855421686747)
│✘ {1} A39 ⫹₆₀ 21079
│ ✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 79/79 (conf: 1.0)
✘ {1} ⟨EC⟩ (A83 ⫺ 5106)
 ✔ {1} A6 ⫹ 12791
 │✔ Corn_senesced_green_weeds : 77/78 (conf: 0.9871794871794872)
 │✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
● [ 22/07/2021 14:21:45 ] Saving tree to file ./gandalf/trees/tree_4878bf06f86fc332dedb7dfff64f0b143c683d9ca301b6948cb519e88be8f9c2.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489)
✔ {1} A12 ⫹ 12431
│✔ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
│✘ {1} A39 ⫹₆₀ 21079
│ ✔ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 20/21 (conf: 0.9523809523809523)
✘ {1} ⟨EC⟩ (A83 ⫺ 5106)
 ✔ {1} A6 ⫹ 12791
 │✔ Corn_senesced_green_weeds : 20/20 (conf: 1.0)
 │✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Salinas-A	3	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	99.17%	100.0%	100.0%	100.0%	100.0%	95.0%	100.0%	100.0%	100.0%	100.0%	100.0%	100.0%	95.24%	||	99.0%	[100.0, 100.0, 100.0, 100.0, 97.44, 97.56]%	|||	99.17%	99.83%	99.21%	99.83%	99.17%	
  accuracy: 99.17% kappa: 99.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0	100.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 19  1	95.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9916666666666667
κ =		0.99
sensitivities:	[1.0, 1.0, 1.0, 1.0, 0.95, 1.0]
specificities:	[1.0, 1.0, 1.0, 1.0, 1.0, 0.99]
PPVs:		[1.0, 1.0, 1.0, 1.0, 1.0, 0.9523809523809523]
NPVs:		[1.0, 1.0, 1.0, 1.0, 0.9900990099009901, 1.0]
F1s:		[1.0, 1.0, 1.0, 1.0, 0.9743589743589743, 0.975609756097561]
accuracies:	[1.0, 1.0, 1.0, 1.0, 0.9916666666666667, 0.9916666666666667]
mean_accuracy:	0.9972222222222223
Dataset_slice = (600) -> [60, 161, 270, 359, 480, 580, 46, 140, 238, 345, 460, 561, 23, 131, 243, 309, 470, 560, 40, 121, 266, 306, 436, 558, 68, 185, 240, 312, 488, 534, 29, 183, 233, 332, 495, 531, 53, 164, 208, 386, 441, 511, 24, 154, 269, 393, 440, 551, 83, 153, 226, 339, 425, 590, 1, 112, 263, 302, 429, 515, 47, 146, 273, 387, 432, 545, 65, 110, 300, 341, 426, 529, 98, 115, 209, 348, 419, 530, 51, 176, 286, 395, 442, 516, 6, 148, 212, 336, 452, 556, 12, 103, 204, 303, 453, 600, 45, 122, 237, 366, 420, 541, 93, 167, 293, 368, 415, 521, 80, 106, 241, 323, 496, 563, 97, 193, 276, 365, 414, 592, 5, 132, 232, 390, 444, 528, 73, 124, 231, 358, 433, 504, 85, 174, 265, 329, 462, 524, 44, 134, 255, 322, 489, 578, 18, 160, 258, 372, 493, 501, 32, 188, 290, 394, 409, 554, 62, 200, 206, 320, 473, 587, 74, 111, 234, 360, 463, 514, 49, 128, 289, 355, 406, 533, 76, 191, 257, 381, 478, 566, 88, 125, 274, 349, 424, 546, 34, 101, 262, 318, 408, 573, 2, 162, 246, 324, 486, 570, 95, 105, 292, 337, 421, 595, 36, 197, 207, 343, 492, 520, 27, 147, 203, 362, 437, 577, 35, 149, 202, 375, 411, 539, 31, 170, 242, 374, 430, 571, 7, 126, 247, 344, 500, 552, 11, 184, 298, 338, 428, 532, 52, 109, 282, 370, 456, 562, 75, 142, 213, 328, 446, 576, 69, 152, 287, 330, 455, 564, 41, 172, 248, 354, 407, 582, 22, 194, 249, 397, 466, 572, 10, 136, 253, 399, 435, 542, 16, 157, 228, 357, 448, 585, 72, 178, 291, 313, 494, 526, 61, 173, 210, 319, 404, 586, 96, 143, 220, 351, 464, 598, 56, 158, 299, 378, 401, 557, 48, 175, 211, 367, 431, 509, 89, 104, 236, 389, 417, 527, 71, 139, 260, 376, 491, 536, 15, 168, 280, 327, 443, 599, 30, 119, 288, 310, 449, 594, 90, 138, 294, 305, 459, 549, 50, 118, 205, 400, 477, 518, 66, 130, 252, 380, 483, 589, 14, 144, 261, 369, 454, 503, 100, 145, 215, 371, 447, 579, 17, 156, 296, 356, 457, 508, 84, 186, 227, 315, 475, 565, 86, 179, 283, 304, 439, 548, 92, 113, 281, 335, 461, 537, 78, 163, 279, 342, 418, 596, 43, 133, 217, 311, 469, 519, 59, 169, 251, 316, 498, 547, 54, 177, 245, 361, 403, 591, 25, 117, 254, 384, 422, 543, 64, 108, 264, 346, 434, 505, 55, 165, 297, 352, 484, 593, 99, 159, 278, 307, 416, 538, 58, 150, 256, 388, 467, 502, 42, 196, 250, 326, 427, 569, 67, 141, 216, 331, 487, 525, 3, 137, 219, 373, 445, 544, 13, 195, 222, 377, 402, 583, 8, 102, 259, 340, 476, 535, 79, 151, 272, 398, 405, 512, 91, 180, 224, 325, 471, 522, 33, 189, 284, 333, 468, 510, 38, 182, 268, 379, 472, 517, 77, 166, 275, 391, 479, 523, 9, 181, 271, 353, 499, 588, 39, 155, 221, 317, 412, 553, 4, 198, 277, 392, 458, 513, 87, 199, 295, 383, 481, 550, 21, 114, 201, 334, 465, 507, 19, 120, 230, 363, 497, 567, 94, 190, 229, 314, 485, 575, 57, 116, 214, 308, 423, 597, 82, 192, 223, 350, 450, 581, 28, 171, 285, 347, 451, 559, 26, 127, 225, 385, 474, 574, 20, 107, 244, 301, 438, 506, 81, 135, 239, 396, 482, 540, 70, 123, 235, 321, 410, 568, 63, 129, 267, 382, 413, 555, 37, 187, 218, 364, 490, 584]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	3799.95 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	3529.91 MBs	(shape (3, 4, 3, 4, 480, 2040, 7), 935397120 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 14:21:54 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (239+241=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489), purity -1.1293049241654884
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+82=241 samples) on frame 1 with decision: {1} A11 ⫹ 12596, purity -0.4963062662856841
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+159=239 samples) on frame 1 with decision: {1} ⟨EC⟩ (A83 ⫺ 5106), purity -0.4835579451770631
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A40 ⫹₆₀ 25762, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+79=159 samples) on frame 1 with decision: {1} A6 ⫹ 12791, purity -0.03373013750381463
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
378.996108 seconds (3.10 G allocations: 96.000 GiB, 19.18% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489)
✔ {1} A11 ⫹ 12596
│✔ Brocoli_green_weeds_1 : 80/82 (conf: 0.975609756097561)
│✘ {1} A40 ⫹₆₀ 25762
│ ✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 79/79 (conf: 1.0)
✘ {1} ⟨EC⟩ (A83 ⫺ 5106)
 ✔ {1} A6 ⫹ 12791
 │✔ Corn_senesced_green_weeds : 78/79 (conf: 0.9873417721518988)
 │✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
● [ 22/07/2021 14:28:13 ] Saving tree to file ./gandalf/trees/tree_836fc6f9b52d24f77a09c0d5f54fafa754a519617688b565d6a8e04ad4ab292b.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489)
✔ {1} A11 ⫹ 12596
│✔ Brocoli_green_weeds_1 : 20/23 (conf: 0.8695652173913043)
│✘ {1} A40 ⫹₆₀ 25762
│ ✔ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 18/18 (conf: 1.0)
✘ {1} ⟨EC⟩ (A83 ⫺ 5106)
 ✔ {1} A6 ⫹ 12791
 │✔ Corn_senesced_green_weeds : 19/19 (conf: 1.0)
 │✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Salinas-A	4	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	97.5%	100.0%	95.0%	100.0%	100.0%	100.0%	90.0%	86.96%	100.0%	100.0%	100.0%	100.0%	100.0%	||	97.0%	[93.02, 97.44, 100.0, 100.0, 100.0, 94.74]%	|||	97.5%	99.5%	97.83%	99.51%	97.53%	
  accuracy: 97.5% kappa: 97.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  1 19  0  0  0  0	95.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  2  0  0  0  0 18	90.0%		Lettuce_romaine_7wk

overall_acc:	0.975
κ =		0.97
sensitivities:	[1.0, 0.95, 1.0, 1.0, 1.0, 0.9]
specificities:	[0.97, 1.0, 1.0, 1.0, 1.0, 1.0]
PPVs:		[0.8695652173913043, 1.0, 1.0, 1.0, 1.0, 1.0]
NPVs:		[1.0, 0.9900990099009901, 1.0, 1.0, 1.0, 0.9803921568627451]
F1s:		[0.9302325581395349, 0.9743589743589743, 1.0, 1.0, 1.0, 0.9473684210526315]
accuracies:	[0.975, 0.9916666666666667, 1.0, 1.0, 1.0, 0.9833333333333333]
mean_accuracy:	0.9916666666666667
Dataset_slice = (600) -> [10, 116, 221, 307, 469, 514, 12, 188, 231, 354, 401, 560, 84, 193, 239, 362, 483, 542, 52, 131, 230, 337, 491, 527, 45, 175, 218, 385, 492, 523, 87, 192, 265, 383, 486, 503, 14, 190, 264, 381, 480, 580, 20, 142, 242, 352, 422, 531, 39, 159, 210, 355, 453, 561, 9, 138, 279, 380, 488, 544, 38, 119, 250, 391, 454, 541, 43, 155, 289, 365, 495, 512, 23, 187, 292, 316, 457, 600, 92, 132, 205, 389, 403, 504, 93, 113, 286, 356, 440, 519, 51, 145, 296, 366, 418, 557, 89, 158, 240, 368, 433, 584, 67, 146, 259, 336, 449, 515, 100, 176, 244, 372, 464, 534, 71, 164, 283, 390, 460, 546, 36, 128, 243, 325, 404, 567, 19, 153, 236, 306, 412, 596, 94, 126, 237, 400, 496, 537, 68, 137, 260, 308, 466, 533, 22, 120, 222, 360, 493, 517, 21, 169, 214, 332, 445, 506, 1, 136, 290, 397, 413, 554, 5, 189, 238, 315, 414, 592, 53, 148, 235, 318, 456, 505, 46, 104, 300, 311, 497, 569, 91, 179, 297, 303, 416, 572, 3, 194, 248, 304, 408, 599, 34, 108, 285, 335, 407, 502, 41, 197, 247, 320, 437, 529, 62, 167, 281, 384, 431, 579, 75, 199, 272, 331, 411, 552, 73, 129, 257, 317, 439, 564, 97, 105, 209, 377, 420, 516, 55, 161, 217, 324, 475, 508, 80, 180, 298, 305, 430, 538, 59, 173, 212, 328, 424, 536, 63, 124, 206, 338, 438, 556, 4, 112, 204, 394, 417, 553, 54, 191, 220, 369, 435, 524, 74, 182, 274, 359, 443, 543, 95, 195, 234, 375, 470, 551, 78, 117, 277, 312, 487, 521, 96, 107, 226, 321, 451, 522, 99, 184, 255, 392, 410, 597, 16, 178, 232, 347, 423, 571, 72, 106, 249, 346, 479, 568, 90, 162, 295, 326, 406, 588, 60, 121, 288, 313, 471, 558, 44, 122, 219, 393, 434, 555, 18, 115, 275, 327, 402, 562, 25, 109, 299, 358, 473, 587, 32, 125, 252, 334, 429, 548, 77, 147, 211, 343, 459, 595, 28, 200, 251, 363, 444, 539, 24, 133, 284, 322, 481, 525, 76, 130, 213, 357, 432, 578, 17, 101, 293, 344, 499, 582, 65, 114, 227, 314, 442, 511, 31, 183, 203, 349, 482, 513, 30, 149, 291, 373, 450, 535, 50, 141, 225, 310, 500, 590, 85, 139, 233, 341, 468, 507, 26, 165, 258, 333, 447, 509, 33, 144, 270, 378, 462, 598, 37, 123, 269, 398, 441, 545, 64, 110, 215, 345, 474, 570, 56, 177, 266, 329, 425, 589, 27, 170, 246, 350, 472, 520, 49, 118, 268, 376, 465, 576, 57, 196, 262, 351, 476, 577, 69, 174, 245, 388, 428, 518, 70, 154, 224, 399, 455, 540, 8, 198, 253, 370, 494, 573, 83, 181, 208, 340, 478, 594, 15, 186, 254, 309, 458, 547, 98, 102, 267, 323, 490, 565, 11, 171, 223, 386, 498, 575, 7, 150, 261, 339, 477, 549, 29, 151, 278, 364, 463, 510, 2, 156, 273, 342, 426, 559, 48, 143, 263, 301, 467, 563, 61, 185, 256, 367, 461, 574, 82, 152, 202, 330, 436, 530, 6, 160, 280, 348, 485, 585, 81, 168, 207, 396, 421, 526, 79, 166, 276, 353, 419, 591, 88, 140, 294, 361, 415, 583, 35, 111, 229, 382, 489, 581, 13, 103, 201, 302, 427, 532, 66, 127, 287, 395, 452, 501, 47, 135, 271, 387, 446, 566, 42, 157, 241, 374, 448, 528, 40, 163, 282, 319, 484, 593, 86, 172, 228, 371, 405, 586, 58, 134, 216, 379, 409, 550]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	3799.95 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	3529.91 MBs	(shape (3, 4, 3, 4, 480, 2040, 7), 935125800 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 14:28:21 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (238+242=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489), purity -1.136499150571781
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+83=242 samples) on frame 1 with decision: {1} A12 ⫹ 12431, purity -0.5087316522372493
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+158=238 samples) on frame 1 with decision: {1} ⟨EC⟩ (A83 ⫺ 5106), purity -0.4825834746286413
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A39 ⫹₈₀ 21720, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+78=158 samples) on frame 1 with decision: {1} A6 ⫹ 12791, purity -0.03386247467755994
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
285.616751 seconds (2.75 G allocations: 64.664 GiB, 13.87% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489)
✔ {1} A12 ⫹ 12431
│✔ Brocoli_green_weeds_1 : 80/83 (conf: 0.963855421686747)
│✘ {1} A39 ⫹₈₀ 21720
│ ✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 79/79 (conf: 1.0)
✘ {1} ⟨EC⟩ (A83 ⫺ 5106)
 ✔ {1} A6 ⫹ 12791
 │✔ Corn_senesced_green_weeds : 77/78 (conf: 0.9871794871794872)
 │✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
● [ 22/07/2021 14:33:07 ] Saving tree to file ./gandalf/trees/tree_8059d2657549207a16977064d5eb2fe40ff9deabdb35b049a4816aa7c83c4407.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489)
✔ {1} A12 ⫹ 12431
│✔ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
│✘ {1} A39 ⫹₈₀ 21720
│ ✔ Lettuce_romaine_6wk : 18/18 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 20/22 (conf: 0.9090909090909091)
✘ {1} ⟨EC⟩ (A83 ⫺ 5106)
 ✔ {1} A6 ⫹ 12791
 │✔ Corn_senesced_green_weeds : 20/20 (conf: 1.0)
 │✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Salinas-A	5	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	98.33%	100.0%	100.0%	100.0%	100.0%	90.0%	100.0%	100.0%	100.0%	100.0%	100.0%	100.0%	90.91%	||	98.0%	[100.0, 100.0, 100.0, 100.0, 94.74, 95.24]%	|||	98.33%	99.67%	98.48%	99.67%	98.33%	
  accuracy: 98.33% kappa: 98.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0	100.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 18  2	90.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9833333333333333
κ =		0.98
sensitivities:	[1.0, 1.0, 1.0, 1.0, 0.9, 1.0]
specificities:	[1.0, 1.0, 1.0, 1.0, 1.0, 0.98]
PPVs:		[1.0, 1.0, 1.0, 1.0, 1.0, 0.9090909090909091]
NPVs:		[1.0, 1.0, 1.0, 1.0, 0.9803921568627451, 1.0]
F1s:		[1.0, 1.0, 1.0, 1.0, 0.9473684210526315, 0.9523809523809523]
accuracies:	[1.0, 1.0, 1.0, 1.0, 0.9833333333333333, 0.9833333333333333]
mean_accuracy:	0.9944444444444445
Dataset_slice = (600) -> [68, 113, 288, 329, 406, 554, 53, 120, 291, 341, 461, 505, 72, 123, 234, 372, 472, 560, 28, 128, 298, 379, 479, 553, 84, 172, 287, 311, 466, 538, 96, 182, 229, 309, 491, 516, 91, 200, 222, 382, 418, 508, 42, 156, 226, 342, 429, 562, 33, 167, 204, 385, 498, 502, 4, 158, 259, 316, 486, 511, 63, 102, 220, 354, 496, 551, 21, 101, 266, 327, 485, 570, 79, 179, 270, 393, 404, 537, 15, 151, 214, 332, 454, 532, 22, 115, 217, 375, 468, 578, 51, 118, 235, 378, 469, 525, 32, 153, 232, 352, 470, 506, 70, 160, 244, 373, 464, 595, 66, 138, 250, 380, 437, 514, 99, 176, 277, 338, 417, 547, 40, 168, 258, 305, 482, 577, 64, 196, 240, 363, 477, 521, 19, 150, 282, 347, 401, 529, 73, 140, 201, 337, 489, 550, 18, 186, 215, 304, 492, 581, 80, 106, 289, 353, 425, 585, 60, 170, 223, 330, 416, 515, 3, 144, 290, 392, 435, 530, 87, 124, 286, 384, 483, 534, 43, 131, 284, 346, 420, 552, 9, 143, 253, 361, 421, 531, 20, 162, 261, 308, 438, 513, 1, 110, 254, 343, 484, 543, 62, 174, 252, 349, 443, 567, 45, 135, 205, 339, 436, 510, 30, 134, 238, 367, 473, 539, 76, 148, 275, 325, 474, 544, 37, 173, 280, 359, 407, 557, 38, 137, 297, 377, 427, 535, 23, 166, 233, 399, 453, 523, 57, 132, 260, 365, 442, 526, 75, 108, 264, 333, 451, 563, 35, 145, 202, 312, 411, 573, 55, 159, 269, 340, 460, 566, 50, 164, 225, 344, 500, 579, 95, 103, 300, 395, 452, 527, 61, 155, 212, 386, 471, 600, 82, 105, 228, 387, 446, 518, 12, 161, 216, 383, 493, 575, 74, 112, 206, 381, 444, 509, 94, 180, 230, 390, 423, 504, 49, 109, 293, 336, 409, 555, 6, 184, 221, 324, 456, 549, 24, 187, 241, 345, 495, 546, 90, 114, 265, 364, 449, 558, 93, 121, 251, 351, 412, 556, 14, 177, 272, 358, 467, 587, 47, 169, 239, 400, 431, 533, 89, 194, 263, 391, 445, 528, 81, 147, 211, 369, 403, 522, 39, 127, 242, 397, 405, 571, 11, 195, 208, 334, 459, 569, 58, 192, 207, 319, 490, 599, 92, 199, 209, 388, 487, 572, 52, 104, 203, 396, 439, 576, 59, 188, 227, 348, 441, 540, 48, 193, 237, 315, 402, 542, 7, 122, 283, 317, 457, 598, 54, 141, 246, 303, 488, 561, 17, 126, 285, 389, 478, 512, 56, 171, 248, 398, 434, 517, 97, 133, 271, 318, 481, 541, 29, 189, 245, 322, 440, 589, 34, 163, 296, 356, 450, 596, 77, 185, 292, 328, 414, 584, 46, 107, 236, 326, 419, 565, 71, 116, 257, 394, 465, 507, 31, 183, 247, 366, 494, 594, 26, 198, 279, 357, 410, 564, 25, 190, 224, 355, 455, 524, 65, 178, 231, 313, 499, 536, 83, 146, 219, 350, 480, 591, 2, 152, 267, 320, 415, 574, 8, 154, 295, 376, 408, 586, 27, 157, 276, 321, 463, 592, 85, 181, 268, 362, 458, 588, 86, 125, 278, 331, 424, 580, 36, 111, 243, 307, 432, 582, 78, 117, 299, 306, 413, 548, 44, 197, 210, 335, 497, 519, 10, 175, 273, 314, 476, 501, 98, 191, 256, 302, 428, 597, 69, 139, 274, 374, 422, 520, 67, 165, 281, 360, 426, 559, 16, 149, 249, 310, 462, 590, 13, 129, 255, 368, 447, 583, 5, 136, 213, 370, 448, 593, 41, 142, 218, 301, 433, 545, 88, 130, 262, 323, 475, 568, 100, 119, 294, 371, 430, 503]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	3799.95 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	3529.91 MBs	(shape (3, 4, 3, 4, 480, 2040, 7), 934811640 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 14:33:15 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (239+241=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A41 ⫺₇₀ 25590), purity -1.1293049241654884
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+82=241 samples) on frame 1 with decision: {1} A12 ⫹ 12431, purity -0.4963062662856841
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+159=239 samples) on frame 1 with decision: {1} ⟨EC⟩ (A83 ⫺ 5106), purity -0.4835579451770631
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A39 ⫹₆₀ 21407, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+79=159 samples) on frame 1 with decision: {1} A5 ⫹ 12033, purity -0.03373013750381463
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
285.630623 seconds (2.76 G allocations: 64.534 GiB, 13.76% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A41 ⫺₇₀ 25590)
✔ {1} A12 ⫹ 12431
│✔ Brocoli_green_weeds_1 : 80/82 (conf: 0.975609756097561)
│✘ {1} A39 ⫹₆₀ 21407
│ ✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 79/79 (conf: 1.0)
✘ {1} ⟨EC⟩ (A83 ⫺ 5106)
 ✔ {1} A5 ⫹ 12033
 │✔ Corn_senesced_green_weeds : 78/79 (conf: 0.9873417721518988)
 │✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
● [ 22/07/2021 14:38:01 ] Saving tree to file ./gandalf/trees/tree_cc1be74c8d48d9336671130ecd3dba008f40e4302b0dfc8609aae03fba1b938b.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A41 ⫺₇₀ 25590)
✔ {1} A12 ⫹ 12431
│✔ Brocoli_green_weeds_1 : 20/21 (conf: 0.9523809523809523)
│✘ {1} A39 ⫹₆₀ 21407
│ ✔ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 19/19 (conf: 1.0)
✘ {1} ⟨EC⟩ (A83 ⫺ 5106)
 ✔ {1} A5 ⫹ 12033
 │✔ Corn_senesced_green_weeds : 18/20 (conf: 0.9)
 │✘ Lettuce_romaine_4wk : 20/21 (conf: 0.9523809523809523)
 ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Salinas-A	6	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	96.67%	100.0%	90.0%	100.0%	100.0%	95.0%	95.0%	95.24%	90.0%	95.24%	100.0%	100.0%	100.0%	||	96.0%	[97.56, 90.0, 97.56, 100.0, 97.44, 97.44]%	|||	96.67%	99.33%	96.75%	99.34%	96.67%	
  accuracy: 96.67% kappa: 96.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  1 18  1  0  0  0	90.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  1  0  0 19  0	95.0%		Lettuce_romaine_6wk
  0  1  0  0  0 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.9666666666666667
κ =		0.96
sensitivities:	[1.0, 0.9, 1.0, 1.0, 0.95, 0.95]
specificities:	[0.99, 0.98, 0.99, 1.0, 1.0, 1.0]
PPVs:		[0.9523809523809523, 0.9, 0.9523809523809523, 1.0, 1.0, 1.0]
NPVs:		[1.0, 0.98, 1.0, 1.0, 0.9900990099009901, 0.9900990099009901]
F1s:		[0.975609756097561, 0.9, 0.975609756097561, 1.0, 0.9743589743589743, 0.9743589743589743]
accuracies:	[0.9916666666666667, 0.9666666666666667, 0.9916666666666667, 1.0, 0.9916666666666667, 0.9916666666666667]
mean_accuracy:	0.9888888888888889
Dataset_slice = (600) -> [20, 148, 247, 348, 409, 562, 36, 113, 203, 353, 426, 567, 75, 145, 228, 390, 401, 547, 9, 112, 249, 319, 421, 510, 92, 159, 288, 325, 482, 513, 88, 121, 212, 365, 407, 588, 28, 186, 224, 360, 406, 551, 79, 198, 274, 367, 408, 523, 8, 118, 297, 387, 439, 502, 73, 122, 204, 330, 479, 565, 83, 194, 243, 374, 472, 552, 40, 185, 275, 366, 446, 594, 61, 195, 273, 356, 473, 528, 70, 136, 202, 343, 455, 558, 51, 155, 282, 397, 450, 533, 48, 161, 245, 331, 499, 518, 50, 130, 281, 361, 425, 537, 13, 103, 293, 378, 444, 583, 27, 187, 240, 372, 415, 579, 35, 125, 217, 391, 440, 535, 69, 120, 236, 354, 466, 524, 45, 157, 253, 309, 458, 517, 97, 200, 277, 334, 485, 573, 68, 197, 294, 394, 476, 543, 3, 156, 264, 335, 423, 548, 85, 102, 260, 381, 437, 597, 94, 191, 234, 313, 416, 509, 7, 140, 238, 399, 434, 566, 19, 119, 226, 369, 462, 598, 87, 167, 287, 318, 478, 563, 1, 184, 262, 326, 483, 544, 16, 163, 235, 306, 412, 532, 25, 123, 284, 373, 414, 526, 31, 196, 270, 398, 449, 557, 64, 129, 211, 338, 500, 534, 81, 146, 206, 388, 447, 515, 57, 138, 246, 358, 420, 555, 23, 115, 209, 322, 452, 504, 90, 199, 232, 344, 492, 572, 42, 164, 244, 310, 465, 568, 26, 181, 248, 347, 428, 527, 30, 128, 261, 345, 431, 595, 91, 153, 227, 332, 471, 520, 17, 134, 207, 385, 494, 577, 59, 141, 229, 376, 457, 511, 96, 150, 252, 302, 441, 507, 2, 126, 300, 350, 445, 584, 52, 131, 299, 357, 448, 550, 24, 189, 223, 396, 489, 560, 15, 193, 237, 351, 470, 576, 86, 142, 205, 375, 477, 549, 46, 106, 266, 327, 461, 581, 67, 124, 286, 362, 495, 553, 71, 174, 233, 389, 433, 592, 66, 110, 213, 307, 419, 600, 18, 114, 201, 364, 480, 546, 58, 151, 290, 363, 411, 508, 39, 108, 276, 340, 463, 599, 34, 116, 256, 324, 464, 587, 80, 162, 258, 314, 459, 593, 82, 158, 231, 305, 493, 596, 6, 171, 285, 352, 498, 539, 53, 182, 272, 336, 403, 569, 60, 105, 268, 386, 438, 582, 93, 179, 271, 301, 443, 556, 44, 170, 251, 329, 413, 540, 32, 180, 289, 380, 424, 554, 49, 111, 225, 337, 456, 503, 43, 192, 219, 393, 475, 505, 100, 152, 220, 346, 496, 516, 41, 190, 230, 321, 469, 578, 5, 178, 255, 368, 427, 525, 54, 132, 280, 349, 410, 531, 65, 154, 210, 384, 429, 521, 72, 144, 296, 392, 490, 506, 76, 147, 241, 341, 432, 536, 98, 101, 216, 342, 484, 585, 11, 149, 257, 333, 497, 541, 78, 177, 218, 303, 481, 501, 21, 117, 215, 315, 436, 571, 62, 173, 214, 355, 488, 529, 14, 139, 222, 339, 435, 586, 22, 143, 208, 317, 442, 522, 12, 176, 298, 328, 418, 512, 37, 168, 269, 370, 453, 589, 95, 135, 259, 323, 417, 574, 74, 107, 254, 311, 404, 514, 33, 183, 278, 304, 491, 591, 99, 172, 239, 395, 402, 545, 63, 127, 250, 316, 451, 519, 29, 160, 292, 371, 474, 530, 56, 109, 242, 312, 460, 542, 10, 169, 279, 359, 405, 570, 47, 137, 267, 377, 467, 559, 4, 104, 291, 400, 422, 580, 38, 188, 283, 320, 430, 538, 84, 165, 221, 308, 454, 590, 89, 175, 263, 382, 486, 564, 55, 133, 265, 383, 487, 575, 77, 166, 295, 379, 468, 561]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	3799.95 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	3529.91 MBs	(shape (3, 4, 3, 4, 480, 2040, 7), 934897320 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 14:38:09 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (238+242=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489), purity -1.136499150571781
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+83=242 samples) on frame 1 with decision: {1} A12 ⫹ 12431, purity -0.5087316522372493
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+158=238 samples) on frame 1 with decision: {1} ⟨EC⟩ (A78 ⫺ 13940), purity -0.4825834746286413
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A40 ⫹₆₀ 25762, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+78=158 samples) on frame 1 with decision: {1} A5 ⫹ 12259, purity -0.03386247467755994
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
286.473956 seconds (2.73 G allocations: 65.956 GiB, 14.20% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489)
✔ {1} A12 ⫹ 12431
│✔ Brocoli_green_weeds_1 : 80/83 (conf: 0.963855421686747)
│✘ {1} A40 ⫹₆₀ 25762
│ ✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 79/79 (conf: 1.0)
✘ {1} ⟨EC⟩ (A78 ⫺ 13940)
 ✔ {1} A5 ⫹ 12259
 │✔ Corn_senesced_green_weeds : 77/78 (conf: 0.9871794871794872)
 │✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
● [ 22/07/2021 14:42:56 ] Saving tree to file ./gandalf/trees/tree_5c6ce5028d638f6933e1051fc01975f7fb200bb474ab3517f65ce95227d3a8d2.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489)
✔ {1} A12 ⫹ 12431
│✔ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
│✘ {1} A40 ⫹₆₀ 25762
│ ✔ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
✘ {1} ⟨EC⟩ (A78 ⫺ 13940)
 ✔ {1} A5 ⫹ 12259
 │✔ Corn_senesced_green_weeds : 20/22 (conf: 0.9090909090909091)
 │✘ Lettuce_romaine_4wk : 18/18 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 19/20 (conf: 0.95)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Salinas-A	7	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	97.5%	100.0%	100.0%	90.0%	95.0%	100.0%	100.0%	100.0%	90.91%	100.0%	95.0%	100.0%	100.0%	||	97.0%	[100.0, 95.24, 94.74, 95.0, 100.0, 100.0]%	|||	97.5%	99.5%	97.65%	99.51%	97.5%	
  accuracy: 97.5% kappa: 97.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0	100.0%		Corn_senesced_green_weeds
  0  1 18  1  0  0	90.0%		Lettuce_romaine_4wk
  0  1  0 19  0  0	95.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.975
κ =		0.97
sensitivities:	[1.0, 1.0, 0.9, 0.95, 1.0, 1.0]
specificities:	[1.0, 0.98, 1.0, 0.99, 1.0, 1.0]
PPVs:		[1.0, 0.9090909090909091, 1.0, 0.95, 1.0, 1.0]
NPVs:		[1.0, 1.0, 0.9803921568627451, 0.99, 1.0, 1.0]
F1s:		[1.0, 0.9523809523809523, 0.9473684210526315, 0.95, 1.0, 1.0]
accuracies:	[1.0, 0.9833333333333333, 0.9833333333333333, 0.9833333333333333, 1.0, 1.0]
mean_accuracy:	0.9916666666666667
Dataset_slice = (600) -> [14, 145, 209, 319, 413, 525, 59, 126, 201, 393, 450, 561, 55, 102, 207, 312, 445, 527, 87, 121, 255, 362, 475, 501, 44, 116, 271, 308, 421, 555, 11, 131, 219, 380, 474, 532, 60, 110, 268, 310, 440, 528, 6, 101, 211, 304, 437, 518, 83, 167, 283, 357, 414, 597, 46, 162, 229, 318, 456, 585, 20, 123, 288, 395, 424, 584, 74, 140, 291, 373, 481, 551, 32, 165, 281, 315, 434, 589, 22, 135, 220, 398, 486, 544, 40, 152, 286, 316, 451, 593, 24, 103, 221, 350, 429, 515, 18, 137, 230, 355, 438, 543, 89, 125, 262, 390, 443, 595, 62, 124, 264, 383, 406, 529, 12, 172, 276, 377, 411, 517, 31, 163, 204, 369, 471, 503, 58, 168, 208, 302, 407, 547, 30, 129, 224, 325, 415, 505, 79, 104, 235, 326, 495, 519, 99, 197, 213, 343, 464, 581, 48, 173, 284, 388, 410, 568, 67, 149, 275, 391, 455, 548, 10, 198, 289, 360, 485, 554, 5, 182, 244, 397, 487, 599, 93, 164, 257, 384, 457, 530, 64, 187, 246, 354, 458, 583, 70, 134, 242, 371, 422, 577, 41, 133, 256, 351, 473, 512, 82, 158, 299, 322, 404, 507, 84, 120, 290, 314, 423, 522, 51, 199, 261, 359, 412, 523, 81, 175, 206, 340, 472, 539, 94, 181, 300, 303, 426, 514, 23, 179, 266, 321, 459, 572, 100, 176, 270, 376, 432, 560, 90, 109, 278, 346, 418, 510, 68, 186, 274, 379, 467, 556, 43, 117, 265, 382, 480, 570, 1, 178, 280, 344, 425, 504, 95, 132, 277, 332, 491, 524, 19, 113, 282, 378, 476, 579, 98, 112, 292, 348, 462, 563, 50, 106, 285, 352, 444, 550, 33, 170, 295, 386, 493, 537, 27, 136, 241, 337, 408, 564, 63, 148, 279, 324, 427, 511, 54, 119, 216, 372, 401, 575, 86, 193, 254, 306, 428, 567, 17, 188, 293, 399, 496, 508, 91, 142, 273, 328, 494, 574, 97, 189, 297, 320, 430, 531, 57, 155, 263, 301, 492, 557, 61, 196, 294, 347, 405, 594, 75, 141, 205, 349, 436, 590, 71, 183, 203, 341, 409, 562, 92, 180, 258, 394, 441, 520, 65, 177, 249, 309, 449, 598, 37, 166, 272, 356, 498, 582, 29, 195, 234, 331, 469, 513, 21, 127, 218, 313, 435, 541, 69, 184, 267, 368, 500, 534, 3, 185, 298, 334, 488, 588, 77, 139, 225, 327, 403, 516, 56, 107, 260, 396, 490, 558, 72, 200, 217, 342, 416, 580, 8, 111, 227, 366, 465, 571, 2, 190, 237, 374, 419, 596, 73, 130, 233, 363, 482, 538, 36, 159, 238, 307, 448, 578, 45, 146, 250, 375, 463, 587, 52, 153, 212, 335, 460, 566, 53, 156, 287, 311, 478, 552, 34, 143, 222, 389, 453, 526, 28, 169, 259, 323, 452, 569, 39, 128, 243, 365, 454, 533, 76, 115, 231, 364, 461, 546, 85, 105, 228, 400, 499, 559, 66, 171, 240, 305, 402, 573, 88, 108, 248, 387, 497, 521, 15, 174, 247, 370, 417, 549, 38, 154, 253, 339, 446, 586, 9, 114, 202, 367, 489, 535, 80, 192, 251, 353, 442, 540, 25, 160, 223, 392, 447, 565, 26, 191, 215, 329, 483, 591, 7, 151, 252, 381, 484, 576, 96, 194, 210, 338, 477, 536, 16, 144, 296, 317, 466, 545, 13, 147, 269, 333, 431, 553, 47, 150, 236, 336, 470, 600, 49, 157, 214, 385, 468, 509, 35, 118, 239, 358, 479, 542, 78, 122, 232, 345, 420, 502, 42, 161, 245, 361, 433, 506, 4, 138, 226, 330, 439, 592]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	3799.95 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	3529.91 MBs	(shape (3, 4, 3, 4, 480, 2040, 7), 935711280 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 14:43:04 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (244+236=480 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A42 ⫹₆₀ 26278), purity -1.1318370578787336
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+160=244 samples) on frame 1 with decision: {1} A17 ⫺ 13901, purity -0.520429720385408
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+156=236 samples) on frame 1 with decision: {1} ⟨EC⟩ (A83 ⫺ 5106), purity -0.45796471396294985
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A110 ⫺ 743, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+76=156 samples) on frame 1 with decision: {1} A8 ⫹ 14198, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
6156.116555 seconds (25.44 G allocations: 2.082 TiB, 30.81% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A42 ⫹₆₀ 26278)
✔ {1} ⟨EC⟩ (A83 ⫺ 5106)
│✔ {1} A8 ⫹ 14198
││✔ Corn_senesced_green_weeds : 76/76 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
✘ {1} A17 ⫺ 13901
 ✔ {1} A110 ⫺ 743
 │✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
 │✘ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/84 (conf: 0.9523809523809523)
● [ 22/07/2021 16:25:41 ] Saving tree to file ./gandalf/trees/tree_14bc0c4bb1abd42a0f056bb4d3936730e6dc30e303032ea8094a7aa9c321d0bc.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A42 ⫹₆₀ 26278)
✔ {1} ⟨EC⟩ (A83 ⫺ 5106)
│✔ {1} A8 ⫹ 14198
││✔ Corn_senesced_green_weeds : 19/20 (conf: 0.95)
││✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
✘ {1} A17 ⫺ 13901
 ✔ {1} A110 ⫺ 743
 │✔ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
 │✘ Lettuce_romaine_7wk : 18/18 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 20/23 (conf: 0.8695652173913043)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Salinas-A	8	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	96.67%	100.0%	95.0%	100.0%	100.0%	95.0%	90.0%	86.96%	95.0%	100.0%	100.0%	100.0%	100.0%	||	96.0%	[93.02, 95.0, 100.0, 100.0, 97.44, 94.74]%	|||	96.67%	99.33%	96.99%	99.34%	96.7%	
  accuracy: 96.67% kappa: 96.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  1 19  0  0  0  0	95.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  1  0  0 19  0	95.0%		Lettuce_romaine_6wk
  2  0  0  0  0 18	90.0%		Lettuce_romaine_7wk

overall_acc:	0.9666666666666667
κ =		0.96
sensitivities:	[1.0, 0.95, 1.0, 1.0, 0.95, 0.9]
specificities:	[0.97, 0.99, 1.0, 1.0, 1.0, 1.0]
PPVs:		[0.8695652173913043, 0.95, 1.0, 1.0, 1.0, 1.0]
NPVs:		[1.0, 0.99, 1.0, 1.0, 0.9900990099009901, 0.9803921568627451]
F1s:		[0.9302325581395349, 0.95, 1.0, 1.0, 0.9743589743589743, 0.9473684210526315]
accuracies:	[0.975, 0.9833333333333333, 1.0, 1.0, 0.9916666666666667, 0.9833333333333333]
mean_accuracy:	0.9888888888888888
Dataset_slice = (600) -> [70, 177, 261, 314, 419, 581, 28, 119, 212, 327, 454, 562, 31, 139, 280, 374, 459, 507, 19, 178, 249, 324, 453, 509, 5, 145, 248, 337, 422, 598, 75, 174, 287, 378, 420, 519, 12, 144, 202, 385, 465, 588, 26, 108, 298, 344, 403, 544, 67, 162, 228, 360, 498, 513, 14, 125, 236, 322, 482, 571, 50, 105, 214, 320, 440, 559, 25, 148, 229, 376, 423, 535, 11, 196, 219, 397, 434, 552, 51, 170, 257, 399, 417, 534, 6, 199, 207, 301, 427, 583, 4, 127, 273, 338, 450, 590, 63, 141, 270, 302, 486, 586, 62, 118, 276, 392, 435, 511, 54, 194, 216, 336, 437, 569, 73, 190, 251, 349, 411, 582, 16, 168, 238, 312, 449, 597, 76, 133, 292, 308, 436, 560, 94, 191, 234, 307, 469, 566, 21, 172, 253, 370, 461, 556, 96, 176, 295, 388, 401, 578, 97, 132, 275, 382, 475, 555, 60, 173, 217, 325, 470, 514, 9, 109, 272, 398, 402, 510, 40, 154, 250, 303, 443, 524, 72, 113, 240, 368, 431, 501, 99, 156, 279, 381, 497, 540, 44, 167, 220, 335, 489, 523, 91, 104, 245, 357, 416, 533, 92, 116, 297, 355, 412, 553, 71, 166, 246, 351, 426, 536, 13, 192, 203, 394, 410, 529, 98, 129, 206, 331, 414, 537, 79, 122, 281, 346, 448, 504, 18, 137, 224, 371, 442, 549, 48, 101, 289, 362, 487, 589, 56, 175, 285, 350, 456, 516, 22, 103, 242, 356, 408, 502, 35, 124, 293, 361, 428, 577, 81, 189, 262, 364, 460, 547, 84, 187, 230, 342, 478, 557, 37, 181, 208, 310, 418, 521, 87, 120, 299, 359, 458, 530, 77, 117, 237, 354, 462, 538, 34, 115, 231, 379, 429, 525, 65, 155, 205, 316, 495, 550, 7, 121, 252, 319, 488, 508, 41, 123, 264, 358, 499, 503, 3, 182, 201, 353, 452, 531, 59, 193, 290, 345, 439, 558, 55, 186, 296, 372, 457, 546, 43, 126, 241, 377, 463, 554, 29, 161, 263, 395, 405, 551, 8, 159, 221, 333, 471, 543, 86, 158, 227, 347, 413, 592, 46, 157, 274, 304, 424, 561, 64, 112, 204, 332, 445, 585, 78, 195, 211, 391, 430, 545, 85, 198, 209, 340, 493, 575, 15, 152, 282, 317, 433, 600, 1, 149, 258, 400, 477, 595, 42, 128, 254, 309, 464, 584, 100, 130, 271, 326, 500, 573, 30, 197, 267, 323, 425, 594, 10, 140, 283, 393, 468, 542, 89, 134, 218, 389, 441, 596, 88, 114, 278, 318, 446, 532, 49, 179, 277, 365, 467, 528, 17, 160, 247, 383, 481, 568, 23, 183, 223, 339, 479, 587, 27, 142, 286, 311, 415, 570, 20, 150, 259, 305, 421, 522, 68, 171, 288, 329, 407, 526, 69, 169, 243, 352, 494, 567, 24, 106, 284, 384, 491, 520, 74, 110, 235, 390, 473, 579, 36, 163, 256, 373, 406, 515, 57, 185, 266, 343, 480, 548, 53, 180, 239, 306, 476, 527, 95, 200, 255, 369, 404, 541, 61, 107, 226, 348, 409, 518, 66, 135, 265, 380, 484, 512, 52, 111, 233, 328, 472, 565, 58, 147, 210, 315, 447, 506, 47, 153, 232, 367, 474, 517, 83, 143, 268, 341, 432, 574, 39, 146, 215, 313, 490, 572, 93, 165, 244, 330, 466, 591, 90, 138, 225, 363, 451, 539, 33, 184, 291, 396, 455, 593, 2, 151, 300, 334, 496, 505, 38, 102, 260, 366, 492, 576, 80, 131, 269, 375, 483, 580, 82, 136, 222, 386, 485, 563, 45, 188, 213, 321, 444, 599, 32, 164, 294, 387, 438, 564]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	3799.95 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	3529.91 MBs	(shape (3, 4, 3, 4, 480, 2040, 7), 899154480 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 16:25:49 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (237+243=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489), purity -1.125343074921852
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+83=243 samples) on frame 1 with decision: {1} A12 ⫹ 12431, purity -0.5095035049250785
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+157=237 samples) on frame 1 with decision: {1} ⟨EC⟩ (A83 ⫺ 5106), purity -0.4590525028820263
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A39 ⫹₈₀ 21759, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+77=157 samples) on frame 1 with decision: {1} A6 ⫹ 12791, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
285.641994 seconds (2.74 G allocations: 63.884 GiB, 13.72% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489)
✔ {1} A12 ⫹ 12431
│✔ Brocoli_green_weeds_1 : 80/83 (conf: 0.963855421686747)
│✘ {1} A39 ⫹₈₀ 21759
│ ✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
✘ {1} ⟨EC⟩ (A83 ⫺ 5106)
 ✔ {1} A6 ⫹ 12791
 │✔ Corn_senesced_green_weeds : 77/77 (conf: 1.0)
 │✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
● [ 22/07/2021 16:30:35 ] Saving tree to file ./gandalf/trees/tree_356472d00b4619742f9adcd746579e68d66f0cde30b42dc1885cbac751bf26f1.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489)
✔ {1} A12 ⫹ 12431
│✔ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
│✘ {1} A39 ⫹₈₀ 21759
│ ✔ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 19/20 (conf: 0.95)
✘ {1} ⟨EC⟩ (A83 ⫺ 5106)
 ✔ {1} A6 ⫹ 12791
 │✔ Corn_senesced_green_weeds : 20/21 (conf: 0.9523809523809523)
 │✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Salinas-A	9	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	98.33%	100.0%	100.0%	100.0%	100.0%	95.0%	95.0%	100.0%	95.24%	100.0%	100.0%	100.0%	95.0%	||	98.0%	[100.0, 97.56, 100.0, 100.0, 97.44, 95.0]%	|||	98.33%	99.67%	98.37%	99.67%	98.33%	
  accuracy: 98.33% kappa: 98.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0	100.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 19  1	95.0%		Lettuce_romaine_6wk
  0  1  0  0  0 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.9833333333333333
κ =		0.98
sensitivities:	[1.0, 1.0, 1.0, 1.0, 0.95, 0.95]
specificities:	[1.0, 0.99, 1.0, 1.0, 1.0, 0.99]
PPVs:		[1.0, 0.9523809523809523, 1.0, 1.0, 1.0, 0.95]
NPVs:		[1.0, 1.0, 1.0, 1.0, 0.9900990099009901, 0.99]
F1s:		[1.0, 0.975609756097561, 1.0, 1.0, 0.9743589743589743, 0.95]
accuracies:	[1.0, 0.9916666666666667, 1.0, 1.0, 0.9916666666666667, 0.9833333333333333]
mean_accuracy:	0.9944444444444445
Dataset_slice = (600) -> [21, 173, 279, 381, 499, 569, 64, 138, 231, 310, 469, 582, 10, 149, 269, 301, 481, 525, 84, 168, 271, 334, 458, 600, 13, 194, 289, 400, 497, 548, 73, 107, 225, 375, 444, 512, 20, 174, 213, 347, 441, 545, 60, 159, 210, 398, 448, 505, 22, 196, 237, 354, 492, 558, 27, 187, 300, 345, 461, 572, 3, 110, 264, 394, 498, 583, 48, 125, 238, 341, 464, 565, 24, 171, 293, 356, 470, 502, 1, 123, 260, 339, 417, 519, 95, 165, 224, 315, 422, 550, 30, 190, 294, 327, 484, 589, 29, 188, 211, 359, 429, 586, 65, 176, 232, 305, 500, 559, 85, 157, 282, 357, 472, 516, 4, 179, 202, 362, 436, 585, 50, 169, 261, 371, 460, 594, 8, 131, 256, 343, 439, 590, 89, 192, 240, 382, 447, 557, 68, 144, 221, 342, 438, 560, 23, 134, 277, 335, 419, 587, 56, 116, 278, 364, 459, 581, 70, 121, 292, 307, 440, 520, 71, 155, 247, 324, 425, 508, 62, 133, 204, 374, 405, 551, 31, 129, 299, 368, 479, 501, 49, 162, 227, 308, 401, 579, 15, 119, 249, 361, 467, 546, 77, 115, 265, 388, 426, 598, 61, 126, 242, 396, 463, 517, 52, 189, 275, 372, 491, 521, 11, 195, 234, 365, 468, 544, 75, 154, 222, 316, 480, 555, 67, 105, 226, 393, 466, 593, 81, 178, 267, 379, 477, 596, 44, 153, 266, 366, 476, 542, 38, 127, 245, 352, 452, 518, 17, 147, 219, 340, 427, 515, 96, 193, 229, 344, 457, 578, 35, 128, 262, 325, 431, 543, 36, 113, 230, 392, 414, 554, 40, 139, 281, 314, 435, 561, 93, 135, 268, 380, 430, 562, 55, 132, 285, 312, 421, 528, 90, 199, 212, 326, 486, 511, 72, 151, 208, 331, 434, 536, 19, 166, 283, 322, 403, 599, 87, 180, 244, 351, 462, 513, 74, 140, 254, 333, 490, 524, 39, 141, 241, 391, 412, 580, 18, 142, 207, 350, 485, 591, 25, 148, 246, 383, 410, 573, 2, 175, 239, 337, 495, 523, 91, 197, 209, 378, 478, 529, 83, 114, 274, 373, 474, 553, 99, 182, 255, 360, 489, 533, 43, 106, 258, 304, 454, 509, 53, 170, 218, 353, 404, 503, 6, 101, 235, 399, 445, 597, 28, 145, 263, 309, 442, 510, 79, 146, 257, 328, 456, 556, 42, 200, 273, 319, 496, 574, 66, 158, 206, 389, 493, 541, 92, 143, 201, 397, 443, 568, 76, 161, 290, 318, 424, 527, 7, 102, 297, 311, 413, 547, 14, 150, 216, 336, 415, 507, 5, 137, 284, 348, 406, 564, 57, 130, 296, 346, 402, 532, 88, 177, 295, 384, 450, 506, 86, 104, 203, 367, 423, 595, 63, 191, 217, 349, 451, 514, 16, 183, 250, 302, 420, 538, 32, 185, 236, 355, 446, 537, 100, 118, 287, 306, 473, 534, 80, 136, 252, 330, 418, 530, 33, 112, 286, 376, 407, 504, 69, 117, 233, 370, 471, 571, 37, 111, 223, 303, 433, 577, 26, 164, 276, 317, 449, 588, 59, 167, 251, 323, 408, 575, 41, 160, 280, 358, 483, 567, 12, 172, 228, 321, 455, 566, 9, 108, 272, 386, 437, 584, 47, 156, 253, 369, 482, 531, 46, 103, 259, 313, 428, 576, 51, 198, 220, 332, 487, 563, 45, 181, 215, 329, 409, 526, 98, 152, 291, 320, 453, 592, 94, 184, 288, 363, 488, 535, 34, 122, 205, 338, 411, 522, 54, 163, 214, 385, 416, 570, 78, 109, 298, 377, 494, 539, 58, 124, 270, 387, 432, 549, 97, 186, 248, 390, 475, 552, 82, 120, 243, 395, 465, 540]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	3799.95 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	3529.91 MBs	(shape (3, 4, 3, 4, 480, 2040, 7), 897997800 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 16:30:44 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (238+242=480 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489), purity -1.136499150571781
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+83=242 samples) on frame 1 with decision: {1} A12 ⫹ 12431, purity -0.5087316522372493
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+158=238 samples) on frame 1 with decision: {1} ⟨EC⟩ (A83 ⫺ 5106), purity -0.4825834746286413
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+80=159 samples) on frame 1 with decision: {1} A39 ⫹₈₀ 21759, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+78=158 samples) on frame 1 with decision: {1} A6 ⫹ 12791, purity -0.03386247467755994
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
284.028286 seconds (2.73 G allocations: 63.836 GiB, 13.96% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489)
✔ {1} A12 ⫹ 12431
│✔ Brocoli_green_weeds_1 : 80/83 (conf: 0.963855421686747)
│✘ {1} A39 ⫹₈₀ 21759
│ ✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 79/79 (conf: 1.0)
✘ {1} ⟨EC⟩ (A83 ⫺ 5106)
 ✔ {1} A6 ⫹ 12791
 │✔ Corn_senesced_green_weeds : 77/78 (conf: 0.9871794871794872)
 │✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
● [ 22/07/2021 16:35:28 ] Saving tree to file ./gandalf/trees/tree_ff2991dd9da950e0ce5fd99053344b10818b68d11ed3f65179dda4645babf91d.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A42 ⫺₇₀ 26489)
✔ {1} A12 ⫹ 12431
│✔ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
│✘ {1} A39 ⫹₈₀ 21759
│ ✔ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
│ ✘ Lettuce_romaine_7wk : 20/21 (conf: 0.9523809523809523)
✘ {1} ⟨EC⟩ (A83 ⫺ 5106)
 ✔ {1} A6 ⫹ 12791
 │✔ Corn_senesced_green_weeds : 20/20 (conf: 1.0)
 │✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
 ✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,Salinas-A	10	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	99.17%	100.0%	100.0%	100.0%	100.0%	95.0%	100.0%	100.0%	100.0%	100.0%	100.0%	100.0%	95.24%	||	99.0%	[100.0, 100.0, 100.0, 100.0, 97.44, 97.56]%	|||	99.17%	99.83%	99.21%	99.83%	99.17%	
  accuracy: 99.17% kappa: 99.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0	100.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 19  1	95.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9916666666666667
κ =		0.99
sensitivities:	[1.0, 1.0, 1.0, 1.0, 0.95, 1.0]
specificities:	[1.0, 1.0, 1.0, 1.0, 1.0, 0.99]
PPVs:		[1.0, 1.0, 1.0, 1.0, 1.0, 0.9523809523809523]
NPVs:		[1.0, 1.0, 1.0, 1.0, 0.9900990099009901, 1.0]
F1s:		[1.0, 1.0, 1.0, 1.0, 0.9743589743589743, 0.975609756097561]
accuracies:	[1.0, 1.0, 1.0, 1.0, 0.9916666666666667, 0.9916666666666667]
mean_accuracy:	0.9972222222222223
Iteration "((3,7),false,"o_RCC5","TestOpAll"),100,-1,Salinas-A"...
● [ 22/07/2021 16:35:28 ] Loading dataset from file ./gandalf/cache/dataset_2c9380f960dbf9b71680baffbd63137462673a520928d737ad58ef7b0352df8f.jld...
Dataseeds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

executing run '((3,7),false,"o_RCC5","TestOpAll"),100,-1,Salinas-A'...
dataset type = Tuple{Array{Int64, 4}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (test_operators = TestOperator[⫺, ⫹, ⫺₉₀, ⫹₉₀, ⫺₈₀, ⫹₈₀, ⫺₇₀, ⫹₇₀, ⫺₆₀, ⫹₆₀], ontology = Ontology{DecisionTree.ModalLogic.Interval2D}(RCC5))
dataset_slices    = (10 dataset_slices)

Frame 1/1
  0.005480 seconds (22.47 k allocations: 2.087 MiB)
Frame 1/1
┌ LogLevel(-500): OntologicalDataset -> FeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:11
┌ LogLevel(-500): Instance 1/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 483/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 362/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 241/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 120/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): FeatModalDataset -> StumpFeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:388
┌ LogLevel(-500): Instance 1/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 483/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 362/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 120/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 241/600
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
150.208520 seconds (1.51 G allocations: 109.865 GiB, 62.80% gc time)
Dataset_slice = (600) -> [10, 122, 267, 386, 478, 583, 3, 166, 252, 331, 497, 503, 27, 190, 228, 353, 403, 521, 63, 130, 246, 366, 462, 566, 50, 195, 235, 350, 474, 501, 57, 186, 201, 397, 447, 511, 36, 116, 254, 326, 457, 542, 21, 123, 248, 340, 469, 593, 75, 157, 258, 336, 417, 509, 78, 183, 238, 394, 408, 596, 35, 154, 264, 376, 477, 599, 66, 191, 274, 307, 448, 548, 20, 167, 215, 392, 467, 549, 67, 188, 239, 310, 434, 568, 25, 141, 231, 330, 490, 594, 24, 117, 270, 400, 492, 592, 82, 194, 226, 387, 455, 560, 74, 197, 289, 378, 441, 565, 69, 105, 227, 341, 461, 539, 81, 187, 300, 388, 427, 585, 28, 159, 210, 342, 405, 531, 15, 179, 244, 323, 420, 554, 59, 163, 223, 332, 416, 558, 29, 124, 268, 351, 459, 564, 18, 153, 232, 329, 500, 582, 31, 162, 220, 319, 418, 535, 43, 177, 288, 346, 465, 576, 40, 155, 249, 325, 470, 575, 12, 149, 205, 327, 496, 578, 83, 192, 275, 305, 464, 597, 100, 145, 247, 398, 415, 508, 94, 178, 261, 322, 488, 519, 16, 110, 291, 347, 485, 551, 51, 119, 204, 337, 466, 590, 73, 148, 297, 362, 449, 522, 19, 103, 292, 358, 425, 533, 8, 142, 213, 382, 499, 530, 11, 134, 207, 345, 472, 598, 95, 136, 296, 357, 407, 515, 58, 169, 284, 339, 458, 595, 72, 101, 241, 321, 491, 581, 13, 127, 230, 349, 432, 550, 53, 172, 240, 301, 435, 555, 22, 200, 285, 335, 483, 532, 71, 176, 260, 379, 437, 517, 87, 139, 202, 399, 439, 514, 33, 160, 299, 389, 451, 544, 61, 168, 208, 343, 480, 540, 90, 180, 233, 309, 428, 586, 55, 175, 216, 348, 476, 518, 60, 137, 290, 383, 443, 573, 96, 198, 211, 308, 456, 552, 68, 144, 214, 317, 431, 563, 77, 189, 203, 315, 471, 507, 9, 135, 279, 361, 473, 536, 42, 147, 221, 352, 481, 553, 64, 115, 287, 391, 423, 528, 85, 196, 256, 390, 453, 516, 54, 182, 280, 359, 442, 588, 2, 140, 245, 320, 429, 541, 23, 170, 272, 313, 402, 559, 91, 104, 269, 324, 413, 538, 65, 181, 257, 344, 414, 505, 48, 132, 224, 367, 487, 523, 70, 173, 271, 303, 444, 589, 80, 118, 276, 338, 460, 570, 49, 171, 265, 333, 454, 577, 7, 120, 281, 360, 438, 572, 88, 193, 218, 372, 482, 584, 45, 121, 229, 381, 475, 510, 14, 174, 236, 364, 450, 534, 97, 128, 283, 304, 436, 562, 26, 111, 243, 311, 463, 561, 52, 112, 294, 302, 412, 506, 4, 158, 234, 384, 410, 569, 32, 150, 253, 371, 409, 512, 34, 146, 277, 374, 493, 579, 99, 125, 266, 380, 430, 504, 93, 102, 206, 363, 422, 587, 56, 152, 286, 375, 445, 513, 46, 113, 250, 306, 498, 524, 47, 185, 263, 373, 404, 525, 84, 108, 242, 385, 419, 600, 79, 129, 217, 318, 486, 546, 39, 156, 282, 365, 494, 591, 17, 114, 251, 312, 468, 574, 38, 143, 225, 369, 452, 556, 5, 151, 212, 368, 426, 502, 44, 138, 278, 355, 433, 526, 98, 126, 237, 395, 489, 529, 86, 109, 273, 334, 421, 537, 92, 199, 262, 354, 479, 527, 41, 184, 209, 328, 446, 547, 89, 107, 259, 370, 411, 567, 6, 131, 222, 377, 495, 545, 1, 106, 295, 314, 401, 557, 76, 161, 255, 396, 406, 520, 37, 164, 298, 393, 484, 543, 30, 133, 219, 356, 440, 580, 62, 165, 293, 316, 424, 571]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2287.14 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	2017.09 MBs	(shape (3, 4, 3, 4, 480, 2040, 4), 564019200 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 16:38:05 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (244+236=480 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26036), purity -1.1318370578787336
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+164=244 samples) on frame 1 with decision: {1} A15 ⫺ 11353, purity -0.5315928490609347
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+156=236 samples) on frame 1 with decision: {1} ⟨DR⟩ (A83 ⫺ 5106), purity -0.45796471396294985
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+84=164 samples) on frame 1 with decision: {1} ⟨DR⟩ (A104 ⫺ 7764), purity -0.09805672490517246
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+76=156 samples) on frame 1 with decision: {1} A6 ⫹ 12791, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
16338.585828 seconds (49.92 G allocations: 5.560 TiB, 30.29% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26036)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A6 ⫹ 12791
││✔ Corn_senesced_green_weeds : 76/76 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
✘ {1} A15 ⫺ 11353
 ✔ {1} ⟨DR⟩ (A104 ⫺ 7764)
 │✔ Lettuce_romaine_7wk : 80/84 (conf: 0.9523809523809523)
 │✘ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
● [ 22/07/2021 21:10:24 ] Saving tree to file ./gandalf/trees/tree_6bff373ad3ce60dd49c960119ac7f464866a4078b223d384cd99a46e7ab05ccb.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26036)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A6 ⫹ 12791
││✔ Corn_senesced_green_weeds : 18/18 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
✘ {1} A15 ⫺ 11353
 ✔ {1} ⟨DR⟩ (A104 ⫺ 7764)
 │✔ Lettuce_romaine_7wk : 20/22 (conf: 0.9090909090909091)
 │✘ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Salinas-A	1	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	98.33%	100.0%	90.0%	100.0%	100.0%	100.0%	100.0%	100.0%	100.0%	100.0%	100.0%	100.0%	90.91%	||	98.0%	[100.0, 94.74, 100.0, 100.0, 100.0, 95.24]%	|||	98.33%	99.67%	98.48%	99.67%	98.33%	
  accuracy: 98.33% kappa: 98.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 18  0  0  0  2	90.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9833333333333333
κ =		0.98
sensitivities:	[1.0, 0.9, 1.0, 1.0, 1.0, 1.0]
specificities:	[1.0, 1.0, 1.0, 1.0, 1.0, 0.98]
PPVs:		[1.0, 1.0, 1.0, 1.0, 1.0, 0.9090909090909091]
NPVs:		[1.0, 0.9803921568627451, 1.0, 1.0, 1.0, 1.0]
F1s:		[1.0, 0.9473684210526315, 1.0, 1.0, 1.0, 0.9523809523809523]
accuracies:	[1.0, 0.9833333333333333, 1.0, 1.0, 1.0, 0.9833333333333333]
mean_accuracy:	0.9944444444444445
Dataset_slice = (600) -> [19, 131, 215, 348, 496, 545, 50, 123, 292, 322, 459, 579, 6, 121, 285, 331, 464, 513, 53, 110, 205, 315, 435, 505, 51, 109, 209, 311, 473, 521, 80, 124, 226, 364, 462, 528, 76, 158, 287, 370, 471, 541, 54, 114, 245, 399, 458, 519, 24, 151, 225, 332, 409, 527, 38, 128, 231, 316, 429, 518, 86, 191, 265, 391, 487, 566, 56, 141, 221, 356, 402, 555, 28, 200, 232, 346, 467, 520, 100, 140, 259, 325, 420, 595, 21, 171, 206, 379, 454, 589, 46, 184, 222, 395, 468, 560, 74, 146, 214, 343, 418, 540, 79, 143, 237, 320, 448, 558, 98, 188, 201, 390, 442, 600, 83, 186, 235, 338, 484, 503, 10, 119, 286, 398, 422, 547, 52, 167, 293, 396, 449, 544, 42, 176, 202, 326, 476, 509, 62, 154, 269, 304, 461, 561, 45, 144, 278, 334, 417, 597, 33, 163, 250, 333, 474, 534, 90, 134, 256, 388, 431, 549, 77, 172, 271, 367, 450, 584, 75, 189, 233, 387, 405, 573, 47, 182, 247, 312, 432, 501, 37, 137, 299, 340, 440, 568, 59, 125, 273, 345, 411, 506, 78, 149, 229, 305, 480, 529, 82, 102, 243, 374, 407, 533, 34, 104, 253, 329, 427, 585, 67, 108, 224, 335, 408, 526, 44, 198, 261, 357, 452, 569, 89, 180, 279, 363, 414, 580, 68, 105, 267, 306, 413, 557, 85, 166, 274, 365, 447, 542, 26, 145, 220, 369, 404, 578, 39, 142, 227, 376, 428, 590, 99, 193, 264, 321, 483, 512, 20, 147, 272, 381, 481, 572, 9, 130, 204, 301, 424, 565, 7, 156, 257, 344, 438, 570, 12, 199, 230, 336, 466, 571, 41, 132, 289, 337, 415, 593, 16, 170, 262, 373, 444, 543, 58, 196, 210, 347, 433, 551, 31, 107, 260, 383, 477, 535, 92, 164, 254, 355, 463, 502, 97, 174, 298, 397, 478, 508, 88, 106, 219, 317, 446, 531, 27, 115, 248, 360, 470, 515, 32, 153, 291, 330, 489, 582, 63, 185, 251, 362, 500, 524, 22, 160, 207, 352, 401, 577, 55, 152, 283, 353, 485, 525, 96, 169, 280, 389, 403, 586, 70, 173, 255, 366, 493, 550, 43, 127, 300, 339, 451, 507, 72, 155, 236, 400, 492, 539, 84, 168, 203, 324, 455, 564, 69, 187, 239, 378, 419, 546, 4, 139, 268, 368, 498, 598, 15, 111, 241, 319, 479, 536, 93, 175, 294, 302, 439, 548, 17, 122, 297, 307, 421, 538, 48, 190, 295, 318, 456, 594, 57, 138, 208, 354, 488, 563, 49, 183, 281, 385, 469, 517, 66, 195, 258, 372, 472, 583, 61, 118, 266, 351, 425, 599, 94, 116, 277, 349, 475, 537, 8, 135, 213, 375, 457, 504, 29, 197, 263, 394, 441, 588, 91, 117, 290, 342, 494, 567, 64, 113, 284, 380, 445, 514, 30, 181, 282, 303, 486, 581, 40, 179, 296, 350, 430, 552, 5, 157, 223, 384, 453, 522, 18, 161, 270, 314, 499, 576, 87, 177, 275, 308, 443, 554, 73, 129, 242, 382, 490, 574, 60, 136, 212, 358, 416, 523, 71, 148, 238, 393, 434, 511, 81, 150, 228, 371, 437, 510, 23, 178, 276, 328, 497, 556, 95, 101, 252, 392, 410, 591, 3, 165, 246, 323, 460, 530, 36, 133, 217, 361, 423, 559, 35, 126, 218, 386, 491, 562, 2, 103, 216, 359, 436, 532, 13, 162, 240, 309, 412, 553, 14, 192, 288, 341, 406, 587, 25, 159, 249, 310, 465, 592, 11, 112, 211, 377, 495, 575, 65, 120, 234, 313, 482, 596, 1, 194, 244, 327, 426, 516]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2287.14 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	2017.09 MBs	(shape (3, 4, 3, 4, 480, 2040, 4), 520714080 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 21:10:30 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (245+235=480 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26036), purity -1.1377945947091448
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+161=245 samples) on frame 1 with decision: {1} ⟨DR⟩ (A16 ⫺ 12658), purity -0.5431148738739829
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+155=235 samples) on frame 1 with decision: {1} ⟨DR⟩ (A83 ⫺ 5106), purity -0.45683895248233825
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+75=155 samples) on frame 1 with decision: {1} A6 ⫹ 12791, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+81=161 samples) on frame 1 with decision: {1} A85 ⫹ 10805, purity -0.033467395991037596
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
9865.064980 seconds (32.52 G allocations: 3.576 TiB, 34.28% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26036)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A6 ⫹ 12791
││✔ Corn_senesced_green_weeds : 75/75 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
✘ {1} ⟨DR⟩ (A16 ⫺ 12658)
 ✔ {1} A85 ⫹ 10805
 │✔ Lettuce_romaine_6wk : 80/81 (conf: 0.9876543209876543)
 │✘ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/84 (conf: 0.9523809523809523)
● [ 22/07/2021 23:54:55 ] Saving tree to file ./gandalf/trees/tree_f5043724616e255a6deb04d096c8da8ffff70f7592b67b4974799c0fe9e5da74.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26036)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A6 ⫹ 12791
││✔ Corn_senesced_green_weeds : 18/18 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
✘ {1} ⟨DR⟩ (A16 ⫺ 12658)
 ✔ {1} A85 ⫹ 10805
 │✔ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
 │✘ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 20/22 (conf: 0.9090909090909091)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Salinas-A	2	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	98.33%	100.0%	90.0%	100.0%	100.0%	100.0%	100.0%	90.91%	100.0%	100.0%	100.0%	100.0%	100.0%	||	98.0%	[95.24, 94.74, 100.0, 100.0, 100.0, 100.0]%	|||	98.33%	99.67%	98.48%	99.67%	98.33%	
  accuracy: 98.33% kappa: 98.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  2 18  0  0  0  0	90.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9833333333333333
κ =		0.98
sensitivities:	[1.0, 0.9, 1.0, 1.0, 1.0, 1.0]
specificities:	[0.98, 1.0, 1.0, 1.0, 1.0, 1.0]
PPVs:		[0.9090909090909091, 1.0, 1.0, 1.0, 1.0, 1.0]
NPVs:		[1.0, 0.9803921568627451, 1.0, 1.0, 1.0, 1.0]
F1s:		[0.9523809523809523, 0.9473684210526315, 1.0, 1.0, 1.0, 1.0]
accuracies:	[0.9833333333333333, 0.9833333333333333, 1.0, 1.0, 1.0, 1.0]
mean_accuracy:	0.9944444444444445
Dataset_slice = (600) -> [69, 125, 224, 361, 493, 514, 56, 174, 287, 365, 435, 502, 62, 169, 286, 356, 466, 569, 91, 135, 227, 360, 414, 522, 63, 180, 272, 321, 443, 562, 66, 141, 201, 312, 426, 509, 98, 175, 260, 368, 409, 518, 32, 187, 210, 383, 490, 549, 41, 185, 278, 364, 500, 551, 100, 165, 256, 334, 417, 567, 48, 101, 289, 351, 477, 597, 95, 137, 246, 338, 464, 563, 38, 149, 277, 328, 480, 578, 57, 146, 293, 341, 412, 552, 14, 176, 298, 390, 442, 594, 22, 126, 218, 309, 441, 582, 1, 120, 266, 344, 405, 592, 93, 168, 254, 381, 419, 556, 37, 123, 225, 313, 453, 533, 54, 138, 204, 315, 437, 568, 49, 156, 203, 335, 402, 507, 58, 164, 257, 343, 440, 577, 15, 155, 234, 394, 489, 542, 60, 186, 285, 306, 423, 583, 71, 107, 291, 348, 459, 513, 85, 160, 283, 353, 496, 547, 77, 178, 247, 316, 469, 544, 25, 189, 237, 387, 495, 599, 45, 182, 292, 373, 482, 584, 39, 117, 250, 392, 456, 520, 83, 162, 274, 346, 421, 576, 44, 194, 231, 366, 448, 527, 35, 112, 219, 333, 497, 560, 28, 106, 236, 311, 468, 600, 51, 119, 261, 310, 431, 516, 96, 114, 273, 347, 465, 536, 78, 163, 251, 352, 404, 538, 2, 129, 213, 359, 403, 591, 26, 183, 288, 308, 454, 598, 19, 113, 282, 400, 401, 540, 5, 111, 252, 302, 473, 566, 10, 108, 211, 393, 427, 581, 55, 152, 235, 342, 470, 541, 65, 148, 276, 327, 428, 511, 99, 136, 233, 304, 472, 546, 6, 184, 230, 332, 413, 517, 23, 131, 244, 330, 452, 515, 7, 199, 240, 322, 422, 529, 74, 142, 214, 319, 467, 505, 86, 128, 264, 399, 494, 559, 75, 200, 212, 389, 449, 573, 42, 122, 300, 388, 418, 561, 9, 150, 259, 339, 491, 510, 11, 170, 296, 382, 484, 554, 80, 140, 208, 374, 457, 596, 73, 130, 239, 354, 458, 595, 16, 134, 294, 370, 475, 519, 31, 177, 202, 336, 432, 580, 89, 151, 275, 317, 438, 572, 13, 104, 243, 391, 479, 504, 72, 144, 262, 375, 436, 548, 84, 173, 258, 320, 451, 575, 64, 109, 221, 350, 474, 555, 97, 102, 228, 325, 408, 508, 61, 118, 248, 378, 487, 553, 59, 172, 279, 395, 434, 545, 40, 132, 241, 358, 406, 574, 43, 171, 217, 380, 425, 526, 20, 124, 215, 385, 486, 501, 30, 105, 269, 355, 445, 558, 53, 195, 280, 369, 463, 550, 12, 157, 297, 377, 439, 565, 50, 159, 238, 345, 499, 589, 34, 193, 284, 398, 424, 579, 81, 115, 253, 397, 416, 570, 67, 166, 222, 372, 450, 585, 24, 127, 281, 371, 481, 524, 4, 145, 263, 384, 492, 539, 68, 154, 265, 324, 410, 503, 90, 139, 255, 349, 462, 534, 3, 143, 249, 357, 455, 506, 52, 181, 220, 305, 420, 523, 94, 188, 229, 329, 483, 543, 29, 153, 270, 303, 446, 535, 36, 179, 226, 307, 433, 564, 82, 158, 209, 314, 478, 530, 27, 190, 245, 318, 485, 521, 70, 197, 206, 376, 476, 537, 92, 196, 271, 363, 415, 532, 76, 191, 295, 331, 447, 571, 21, 110, 268, 337, 498, 557, 17, 167, 242, 396, 407, 588, 46, 192, 290, 301, 429, 531, 18, 161, 216, 362, 430, 525, 87, 103, 267, 379, 471, 590, 8, 147, 232, 323, 411, 593, 47, 198, 223, 326, 444, 586, 33, 133, 207, 386, 488, 512, 88, 121, 299, 340, 460, 528, 79, 116, 205, 367, 461, 587]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2287.14 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	2017.09 MBs	(shape (3, 4, 3, 4, 480, 2040, 4), 493378080 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 22/07/2021 23:55:02 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (245+235=480 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26278), purity -1.1377945947091448
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (85+160=245 samples) on frame 1 with decision: {1} ⟨DR⟩ (A16 ⫺ 12658), purity -0.5302840218579069
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+155=235 samples) on frame 1 with decision: {1} ⟨DR⟩ (A83 ⫺ 5106), purity -0.45683895248233825
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+75=155 samples) on frame 1 with decision: {1} A8 ⫹ 14198, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A84 ⫹ 7271, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
2309.290077 seconds (9.21 G allocations: 817.155 GiB, 32.93% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26278)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A8 ⫹ 14198
││✔ Corn_senesced_green_weeds : 75/75 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
✘ {1} ⟨DR⟩ (A16 ⫺ 12658)
 ✔ {1} A84 ⫹ 7271
 │✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
 │✘ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/85 (conf: 0.9411764705882353)
● [ 23/07/2021 00:33:31 ] Saving tree to file ./gandalf/trees/tree_bc817b9d2ff314532743fcfe58aa23cd5d41bb5fb03f9918c7d78ee8b8fc630c.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26278)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A8 ⫹ 14198
││✔ Corn_senesced_green_weeds : 19/20 (conf: 0.95)
││✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
✘ {1} ⟨DR⟩ (A16 ⫺ 12658)
 ✔ {1} A84 ⫹ 7271
 │✔ Lettuce_romaine_6wk : 18/18 (conf: 1.0)
 │✘ Lettuce_romaine_7wk : 20/21 (conf: 0.9523809523809523)
 ✘ Brocoli_green_weeds_1 : 20/21 (conf: 0.9523809523809523)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Salinas-A	3	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	97.5%	100.0%	95.0%	100.0%	100.0%	90.0%	100.0%	95.24%	95.0%	100.0%	100.0%	100.0%	95.24%	||	97.0%	[97.56, 95.0, 100.0, 100.0, 94.74, 97.56]%	|||	97.5%	99.5%	97.58%	99.51%	97.48%	
  accuracy: 97.5% kappa: 97.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  1 19  0  0  0  0	95.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  1  0  0 18  1	90.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.975
κ =		0.97
sensitivities:	[1.0, 0.95, 1.0, 1.0, 0.9, 1.0]
specificities:	[0.99, 0.99, 1.0, 1.0, 1.0, 0.99]
PPVs:		[0.9523809523809523, 0.95, 1.0, 1.0, 1.0, 0.9523809523809523]
NPVs:		[1.0, 0.99, 1.0, 1.0, 0.9803921568627451, 1.0]
F1s:		[0.975609756097561, 0.95, 1.0, 1.0, 0.9473684210526315, 0.975609756097561]
accuracies:	[0.9916666666666667, 0.9833333333333333, 1.0, 1.0, 0.9833333333333333, 0.9916666666666667]
mean_accuracy:	0.9916666666666666
Dataset_slice = (600) -> [60, 161, 270, 359, 480, 580, 46, 140, 238, 345, 460, 561, 23, 131, 243, 309, 470, 560, 40, 121, 266, 306, 436, 558, 68, 185, 240, 312, 488, 534, 29, 183, 233, 332, 495, 531, 53, 164, 208, 386, 441, 511, 24, 154, 269, 393, 440, 551, 83, 153, 226, 339, 425, 590, 1, 112, 263, 302, 429, 515, 47, 146, 273, 387, 432, 545, 65, 110, 300, 341, 426, 529, 98, 115, 209, 348, 419, 530, 51, 176, 286, 395, 442, 516, 6, 148, 212, 336, 452, 556, 12, 103, 204, 303, 453, 600, 45, 122, 237, 366, 420, 541, 93, 167, 293, 368, 415, 521, 80, 106, 241, 323, 496, 563, 97, 193, 276, 365, 414, 592, 5, 132, 232, 390, 444, 528, 73, 124, 231, 358, 433, 504, 85, 174, 265, 329, 462, 524, 44, 134, 255, 322, 489, 578, 18, 160, 258, 372, 493, 501, 32, 188, 290, 394, 409, 554, 62, 200, 206, 320, 473, 587, 74, 111, 234, 360, 463, 514, 49, 128, 289, 355, 406, 533, 76, 191, 257, 381, 478, 566, 88, 125, 274, 349, 424, 546, 34, 101, 262, 318, 408, 573, 2, 162, 246, 324, 486, 570, 95, 105, 292, 337, 421, 595, 36, 197, 207, 343, 492, 520, 27, 147, 203, 362, 437, 577, 35, 149, 202, 375, 411, 539, 31, 170, 242, 374, 430, 571, 7, 126, 247, 344, 500, 552, 11, 184, 298, 338, 428, 532, 52, 109, 282, 370, 456, 562, 75, 142, 213, 328, 446, 576, 69, 152, 287, 330, 455, 564, 41, 172, 248, 354, 407, 582, 22, 194, 249, 397, 466, 572, 10, 136, 253, 399, 435, 542, 16, 157, 228, 357, 448, 585, 72, 178, 291, 313, 494, 526, 61, 173, 210, 319, 404, 586, 96, 143, 220, 351, 464, 598, 56, 158, 299, 378, 401, 557, 48, 175, 211, 367, 431, 509, 89, 104, 236, 389, 417, 527, 71, 139, 260, 376, 491, 536, 15, 168, 280, 327, 443, 599, 30, 119, 288, 310, 449, 594, 90, 138, 294, 305, 459, 549, 50, 118, 205, 400, 477, 518, 66, 130, 252, 380, 483, 589, 14, 144, 261, 369, 454, 503, 100, 145, 215, 371, 447, 579, 17, 156, 296, 356, 457, 508, 84, 186, 227, 315, 475, 565, 86, 179, 283, 304, 439, 548, 92, 113, 281, 335, 461, 537, 78, 163, 279, 342, 418, 596, 43, 133, 217, 311, 469, 519, 59, 169, 251, 316, 498, 547, 54, 177, 245, 361, 403, 591, 25, 117, 254, 384, 422, 543, 64, 108, 264, 346, 434, 505, 55, 165, 297, 352, 484, 593, 99, 159, 278, 307, 416, 538, 58, 150, 256, 388, 467, 502, 42, 196, 250, 326, 427, 569, 67, 141, 216, 331, 487, 525, 3, 137, 219, 373, 445, 544, 13, 195, 222, 377, 402, 583, 8, 102, 259, 340, 476, 535, 79, 151, 272, 398, 405, 512, 91, 180, 224, 325, 471, 522, 33, 189, 284, 333, 468, 510, 38, 182, 268, 379, 472, 517, 77, 166, 275, 391, 479, 523, 9, 181, 271, 353, 499, 588, 39, 155, 221, 317, 412, 553, 4, 198, 277, 392, 458, 513, 87, 199, 295, 383, 481, 550, 21, 114, 201, 334, 465, 507, 19, 120, 230, 363, 497, 567, 94, 190, 229, 314, 485, 575, 57, 116, 214, 308, 423, 597, 82, 192, 223, 350, 450, 581, 28, 171, 285, 347, 451, 559, 26, 127, 225, 385, 474, 574, 20, 107, 244, 301, 438, 506, 81, 135, 239, 396, 482, 540, 70, 123, 235, 321, 410, 568, 63, 129, 267, 382, 413, 555, 37, 187, 218, 364, 490, 584]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2287.14 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	2017.09 MBs	(shape (3, 4, 3, 4, 480, 2040, 4), 487356000 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 00:33:37 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (245+235=480 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26036), purity -1.1377945947091448
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+161=245 samples) on frame 1 with decision: {1} ⟨DR⟩ (A11 ⫺ 12682), purity -0.5431148738739829
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+155=235 samples) on frame 1 with decision: {1} ⟨DR⟩ (A83 ⫺ 5106), purity -0.45683895248233825
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+75=155 samples) on frame 1 with decision: {1} A6 ⫹ 12768, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+81=161 samples) on frame 1 with decision: {1} A41 ⫹ 28225, purity -0.033467395991037596
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
760.236840 seconds (4.56 G allocations: 249.618 GiB, 31.81% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26036)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A6 ⫹ 12768
││✔ Corn_senesced_green_weeds : 75/75 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
✘ {1} ⟨DR⟩ (A11 ⫺ 12682)
 ✔ {1} A41 ⫹ 28225
 │✔ Lettuce_romaine_6wk : 80/81 (conf: 0.9876543209876543)
 │✘ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/84 (conf: 0.9523809523809523)
● [ 23/07/2021 00:46:17 ] Saving tree to file ./gandalf/trees/tree_71e200b415518ae8412a9a00cd2a719bba29c9b038e2b51c66345f65624c6a07.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26036)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A6 ⫹ 12768
││✔ Corn_senesced_green_weeds : 18/18 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 20/21 (conf: 0.9523809523809523)
│✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
✘ {1} ⟨DR⟩ (A11 ⫺ 12682)
 ✔ {1} A41 ⫹ 28225
 │✔ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
 │✘ Lettuce_romaine_7wk : 17/17 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 20/24 (conf: 0.8333333333333334)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Salinas-A	4	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	95.83%	100.0%	90.0%	100.0%	100.0%	100.0%	85.0%	83.33%	100.0%	95.24%	100.0%	100.0%	100.0%	||	95.0%	[90.91, 94.74, 97.56, 100.0, 100.0, 91.89]%	|||	95.83%	99.17%	96.43%	99.19%	95.85%	
  accuracy: 95.83% kappa: 95.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  1 18  1  0  0  0	90.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  3  0  0  0  0 17	85.0%		Lettuce_romaine_7wk

overall_acc:	0.9583333333333334
κ =		0.9500000000000001
sensitivities:	[1.0, 0.9, 1.0, 1.0, 1.0, 0.85]
specificities:	[0.96, 1.0, 0.99, 1.0, 1.0, 1.0]
PPVs:		[0.8333333333333334, 1.0, 0.9523809523809523, 1.0, 1.0, 1.0]
NPVs:		[1.0, 0.9803921568627451, 1.0, 1.0, 1.0, 0.970873786407767]
F1s:		[0.9090909090909091, 0.9473684210526315, 0.975609756097561, 1.0, 1.0, 0.918918918918919]
accuracies:	[0.9666666666666667, 0.9833333333333333, 0.9916666666666667, 1.0, 1.0, 0.975]
mean_accuracy:	0.986111111111111
Dataset_slice = (600) -> [10, 116, 221, 307, 469, 514, 12, 188, 231, 354, 401, 560, 84, 193, 239, 362, 483, 542, 52, 131, 230, 337, 491, 527, 45, 175, 218, 385, 492, 523, 87, 192, 265, 383, 486, 503, 14, 190, 264, 381, 480, 580, 20, 142, 242, 352, 422, 531, 39, 159, 210, 355, 453, 561, 9, 138, 279, 380, 488, 544, 38, 119, 250, 391, 454, 541, 43, 155, 289, 365, 495, 512, 23, 187, 292, 316, 457, 600, 92, 132, 205, 389, 403, 504, 93, 113, 286, 356, 440, 519, 51, 145, 296, 366, 418, 557, 89, 158, 240, 368, 433, 584, 67, 146, 259, 336, 449, 515, 100, 176, 244, 372, 464, 534, 71, 164, 283, 390, 460, 546, 36, 128, 243, 325, 404, 567, 19, 153, 236, 306, 412, 596, 94, 126, 237, 400, 496, 537, 68, 137, 260, 308, 466, 533, 22, 120, 222, 360, 493, 517, 21, 169, 214, 332, 445, 506, 1, 136, 290, 397, 413, 554, 5, 189, 238, 315, 414, 592, 53, 148, 235, 318, 456, 505, 46, 104, 300, 311, 497, 569, 91, 179, 297, 303, 416, 572, 3, 194, 248, 304, 408, 599, 34, 108, 285, 335, 407, 502, 41, 197, 247, 320, 437, 529, 62, 167, 281, 384, 431, 579, 75, 199, 272, 331, 411, 552, 73, 129, 257, 317, 439, 564, 97, 105, 209, 377, 420, 516, 55, 161, 217, 324, 475, 508, 80, 180, 298, 305, 430, 538, 59, 173, 212, 328, 424, 536, 63, 124, 206, 338, 438, 556, 4, 112, 204, 394, 417, 553, 54, 191, 220, 369, 435, 524, 74, 182, 274, 359, 443, 543, 95, 195, 234, 375, 470, 551, 78, 117, 277, 312, 487, 521, 96, 107, 226, 321, 451, 522, 99, 184, 255, 392, 410, 597, 16, 178, 232, 347, 423, 571, 72, 106, 249, 346, 479, 568, 90, 162, 295, 326, 406, 588, 60, 121, 288, 313, 471, 558, 44, 122, 219, 393, 434, 555, 18, 115, 275, 327, 402, 562, 25, 109, 299, 358, 473, 587, 32, 125, 252, 334, 429, 548, 77, 147, 211, 343, 459, 595, 28, 200, 251, 363, 444, 539, 24, 133, 284, 322, 481, 525, 76, 130, 213, 357, 432, 578, 17, 101, 293, 344, 499, 582, 65, 114, 227, 314, 442, 511, 31, 183, 203, 349, 482, 513, 30, 149, 291, 373, 450, 535, 50, 141, 225, 310, 500, 590, 85, 139, 233, 341, 468, 507, 26, 165, 258, 333, 447, 509, 33, 144, 270, 378, 462, 598, 37, 123, 269, 398, 441, 545, 64, 110, 215, 345, 474, 570, 56, 177, 266, 329, 425, 589, 27, 170, 246, 350, 472, 520, 49, 118, 268, 376, 465, 576, 57, 196, 262, 351, 476, 577, 69, 174, 245, 388, 428, 518, 70, 154, 224, 399, 455, 540, 8, 198, 253, 370, 494, 573, 83, 181, 208, 340, 478, 594, 15, 186, 254, 309, 458, 547, 98, 102, 267, 323, 490, 565, 11, 171, 223, 386, 498, 575, 7, 150, 261, 339, 477, 549, 29, 151, 278, 364, 463, 510, 2, 156, 273, 342, 426, 559, 48, 143, 263, 301, 467, 563, 61, 185, 256, 367, 461, 574, 82, 152, 202, 330, 436, 530, 6, 160, 280, 348, 485, 585, 81, 168, 207, 396, 421, 526, 79, 166, 276, 353, 419, 591, 88, 140, 294, 361, 415, 583, 35, 111, 229, 382, 489, 581, 13, 103, 201, 302, 427, 532, 66, 127, 287, 395, 452, 501, 47, 135, 271, 387, 446, 566, 42, 157, 241, 374, 448, 528, 40, 163, 282, 319, 484, 593, 86, 172, 228, 371, 405, 586, 58, 134, 216, 379, 409, 550]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2287.14 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	2017.09 MBs	(shape (3, 4, 3, 4, 480, 2040, 4), 486123840 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 00:46:24 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (245+235=480 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A43 ⫹₇₀ 15793), purity -1.1377945947091448
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (85+160=245 samples) on frame 1 with decision: {1} ⟨DR⟩ (A16 ⫺ 12658), purity -0.5302840218579069
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+155=235 samples) on frame 1 with decision: {1} ⟨DR⟩ (A83 ⫺ 5106), purity -0.45683895248233825
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+75=155 samples) on frame 1 with decision: {1} A8 ⫹ 14198, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A85 ⫹ 10805, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
441.789611 seconds (3.48 G allocations: 115.723 GiB, 24.21% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A43 ⫹₇₀ 15793)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A8 ⫹ 14198
││✔ Corn_senesced_green_weeds : 75/75 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
✘ {1} ⟨DR⟩ (A16 ⫺ 12658)
 ✔ {1} A85 ⫹ 10805
 │✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
 │✘ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/85 (conf: 0.9411764705882353)
● [ 23/07/2021 00:53:45 ] Saving tree to file ./gandalf/trees/tree_4a7fadb3913418ebcff931f8ba4df9a0ec454f09370939d1fa11db7cb2bceb6d.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A43 ⫹₇₀ 15793)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A8 ⫹ 14198
││✔ Corn_senesced_green_weeds : 18/18 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
✘ {1} ⟨DR⟩ (A16 ⫺ 12658)
 ✔ {1} A85 ⫹ 10805
 │✔ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
 │✘ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 20/22 (conf: 0.9090909090909091)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Salinas-A	5	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	98.33%	100.0%	90.0%	100.0%	100.0%	100.0%	100.0%	90.91%	100.0%	100.0%	100.0%	100.0%	100.0%	||	98.0%	[95.24, 94.74, 100.0, 100.0, 100.0, 100.0]%	|||	98.33%	99.67%	98.48%	99.67%	98.33%	
  accuracy: 98.33% kappa: 98.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  2 18  0  0  0  0	90.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9833333333333333
κ =		0.98
sensitivities:	[1.0, 0.9, 1.0, 1.0, 1.0, 1.0]
specificities:	[0.98, 1.0, 1.0, 1.0, 1.0, 1.0]
PPVs:		[0.9090909090909091, 1.0, 1.0, 1.0, 1.0, 1.0]
NPVs:		[1.0, 0.9803921568627451, 1.0, 1.0, 1.0, 1.0]
F1s:		[0.9523809523809523, 0.9473684210526315, 1.0, 1.0, 1.0, 1.0]
accuracies:	[0.9833333333333333, 0.9833333333333333, 1.0, 1.0, 1.0, 1.0]
mean_accuracy:	0.9944444444444445
Dataset_slice = (600) -> [68, 113, 288, 329, 406, 554, 53, 120, 291, 341, 461, 505, 72, 123, 234, 372, 472, 560, 28, 128, 298, 379, 479, 553, 84, 172, 287, 311, 466, 538, 96, 182, 229, 309, 491, 516, 91, 200, 222, 382, 418, 508, 42, 156, 226, 342, 429, 562, 33, 167, 204, 385, 498, 502, 4, 158, 259, 316, 486, 511, 63, 102, 220, 354, 496, 551, 21, 101, 266, 327, 485, 570, 79, 179, 270, 393, 404, 537, 15, 151, 214, 332, 454, 532, 22, 115, 217, 375, 468, 578, 51, 118, 235, 378, 469, 525, 32, 153, 232, 352, 470, 506, 70, 160, 244, 373, 464, 595, 66, 138, 250, 380, 437, 514, 99, 176, 277, 338, 417, 547, 40, 168, 258, 305, 482, 577, 64, 196, 240, 363, 477, 521, 19, 150, 282, 347, 401, 529, 73, 140, 201, 337, 489, 550, 18, 186, 215, 304, 492, 581, 80, 106, 289, 353, 425, 585, 60, 170, 223, 330, 416, 515, 3, 144, 290, 392, 435, 530, 87, 124, 286, 384, 483, 534, 43, 131, 284, 346, 420, 552, 9, 143, 253, 361, 421, 531, 20, 162, 261, 308, 438, 513, 1, 110, 254, 343, 484, 543, 62, 174, 252, 349, 443, 567, 45, 135, 205, 339, 436, 510, 30, 134, 238, 367, 473, 539, 76, 148, 275, 325, 474, 544, 37, 173, 280, 359, 407, 557, 38, 137, 297, 377, 427, 535, 23, 166, 233, 399, 453, 523, 57, 132, 260, 365, 442, 526, 75, 108, 264, 333, 451, 563, 35, 145, 202, 312, 411, 573, 55, 159, 269, 340, 460, 566, 50, 164, 225, 344, 500, 579, 95, 103, 300, 395, 452, 527, 61, 155, 212, 386, 471, 600, 82, 105, 228, 387, 446, 518, 12, 161, 216, 383, 493, 575, 74, 112, 206, 381, 444, 509, 94, 180, 230, 390, 423, 504, 49, 109, 293, 336, 409, 555, 6, 184, 221, 324, 456, 549, 24, 187, 241, 345, 495, 546, 90, 114, 265, 364, 449, 558, 93, 121, 251, 351, 412, 556, 14, 177, 272, 358, 467, 587, 47, 169, 239, 400, 431, 533, 89, 194, 263, 391, 445, 528, 81, 147, 211, 369, 403, 522, 39, 127, 242, 397, 405, 571, 11, 195, 208, 334, 459, 569, 58, 192, 207, 319, 490, 599, 92, 199, 209, 388, 487, 572, 52, 104, 203, 396, 439, 576, 59, 188, 227, 348, 441, 540, 48, 193, 237, 315, 402, 542, 7, 122, 283, 317, 457, 598, 54, 141, 246, 303, 488, 561, 17, 126, 285, 389, 478, 512, 56, 171, 248, 398, 434, 517, 97, 133, 271, 318, 481, 541, 29, 189, 245, 322, 440, 589, 34, 163, 296, 356, 450, 596, 77, 185, 292, 328, 414, 584, 46, 107, 236, 326, 419, 565, 71, 116, 257, 394, 465, 507, 31, 183, 247, 366, 494, 594, 26, 198, 279, 357, 410, 564, 25, 190, 224, 355, 455, 524, 65, 178, 231, 313, 499, 536, 83, 146, 219, 350, 480, 591, 2, 152, 267, 320, 415, 574, 8, 154, 295, 376, 408, 586, 27, 157, 276, 321, 463, 592, 85, 181, 268, 362, 458, 588, 86, 125, 278, 331, 424, 580, 36, 111, 243, 307, 432, 582, 78, 117, 299, 306, 413, 548, 44, 197, 210, 335, 497, 519, 10, 175, 273, 314, 476, 501, 98, 191, 256, 302, 428, 597, 69, 139, 274, 374, 422, 520, 67, 165, 281, 360, 426, 559, 16, 149, 249, 310, 462, 590, 13, 129, 255, 368, 447, 583, 5, 136, 213, 370, 448, 593, 41, 142, 218, 301, 433, 545, 88, 130, 262, 323, 475, 568, 100, 119, 294, 371, 430, 503]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2287.14 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	2017.09 MBs	(shape (3, 4, 3, 4, 480, 2040, 4), 486099360 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 00:53:52 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (245+235=480 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26036), purity -1.1377945947091448
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+85=245 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A40 ⫹₈₀ 25825), purity -0.5302840218579069
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+155=235 samples) on frame 1 with decision: {1} ⟨DR⟩ (A83 ⫺ 5106), purity -0.45683895248233825
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A14 ⫺ 11657, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+75=155 samples) on frame 1 with decision: {1} A5 ⫹ 12033, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
311.741571 seconds (2.66 G allocations: 63.663 GiB, 18.39% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26036)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A5 ⫹ 12033
││✔ Corn_senesced_green_weeds : 75/75 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
✘ {1} ⟨P̅P̅⟩ (A40 ⫹₈₀ 25825)
 ✔ Lettuce_romaine_6wk : 80/85 (conf: 0.9411764705882353)
 ✘ {1} A14 ⫺ 11657
  ✔ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
  ✘ Brocoli_green_weeds_1 : 80/80 (conf: 1.0)
● [ 23/07/2021 00:59:03 ] Saving tree to file ./gandalf/trees/tree_20d0ce383b04128a41f82482c5404e2af8e451fb884618a147c779fa85c81e95.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26036)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A5 ⫹ 12033
││✔ Corn_senesced_green_weeds : 18/18 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 20/21 (conf: 0.9523809523809523)
│✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
✘ {1} ⟨P̅P̅⟩ (A40 ⫹₈₀ 25825)
 ✔ Lettuce_romaine_6wk : 20/23 (conf: 0.8695652173913043)
 ✘ {1} A14 ⫺ 11657
  ✔ Lettuce_romaine_7wk : 18/18 (conf: 1.0)
  ✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Salinas-A	6	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	96.67%	100.0%	90.0%	100.0%	100.0%	100.0%	90.0%	100.0%	100.0%	95.24%	100.0%	86.96%	100.0%	||	96.0%	[100.0, 94.74, 97.56, 100.0, 93.02, 94.74]%	|||	96.67%	99.33%	97.03%	99.35%	96.68%	
  accuracy: 96.67% kappa: 96.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 18  1  0  1  0	90.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  2 18	90.0%		Lettuce_romaine_7wk

overall_acc:	0.9666666666666667
κ =		0.96
sensitivities:	[1.0, 0.9, 1.0, 1.0, 1.0, 0.9]
specificities:	[1.0, 1.0, 0.99, 1.0, 0.97, 1.0]
PPVs:		[1.0, 1.0, 0.9523809523809523, 1.0, 0.8695652173913043, 1.0]
NPVs:		[1.0, 0.9803921568627451, 1.0, 1.0, 1.0, 0.9803921568627451]
F1s:		[1.0, 0.9473684210526315, 0.975609756097561, 1.0, 0.9302325581395349, 0.9473684210526315]
accuracies:	[1.0, 0.9833333333333333, 0.9916666666666667, 1.0, 0.975, 0.9833333333333333]
mean_accuracy:	0.9888888888888889
Dataset_slice = (600) -> [20, 148, 247, 348, 409, 562, 36, 113, 203, 353, 426, 567, 75, 145, 228, 390, 401, 547, 9, 112, 249, 319, 421, 510, 92, 159, 288, 325, 482, 513, 88, 121, 212, 365, 407, 588, 28, 186, 224, 360, 406, 551, 79, 198, 274, 367, 408, 523, 8, 118, 297, 387, 439, 502, 73, 122, 204, 330, 479, 565, 83, 194, 243, 374, 472, 552, 40, 185, 275, 366, 446, 594, 61, 195, 273, 356, 473, 528, 70, 136, 202, 343, 455, 558, 51, 155, 282, 397, 450, 533, 48, 161, 245, 331, 499, 518, 50, 130, 281, 361, 425, 537, 13, 103, 293, 378, 444, 583, 27, 187, 240, 372, 415, 579, 35, 125, 217, 391, 440, 535, 69, 120, 236, 354, 466, 524, 45, 157, 253, 309, 458, 517, 97, 200, 277, 334, 485, 573, 68, 197, 294, 394, 476, 543, 3, 156, 264, 335, 423, 548, 85, 102, 260, 381, 437, 597, 94, 191, 234, 313, 416, 509, 7, 140, 238, 399, 434, 566, 19, 119, 226, 369, 462, 598, 87, 167, 287, 318, 478, 563, 1, 184, 262, 326, 483, 544, 16, 163, 235, 306, 412, 532, 25, 123, 284, 373, 414, 526, 31, 196, 270, 398, 449, 557, 64, 129, 211, 338, 500, 534, 81, 146, 206, 388, 447, 515, 57, 138, 246, 358, 420, 555, 23, 115, 209, 322, 452, 504, 90, 199, 232, 344, 492, 572, 42, 164, 244, 310, 465, 568, 26, 181, 248, 347, 428, 527, 30, 128, 261, 345, 431, 595, 91, 153, 227, 332, 471, 520, 17, 134, 207, 385, 494, 577, 59, 141, 229, 376, 457, 511, 96, 150, 252, 302, 441, 507, 2, 126, 300, 350, 445, 584, 52, 131, 299, 357, 448, 550, 24, 189, 223, 396, 489, 560, 15, 193, 237, 351, 470, 576, 86, 142, 205, 375, 477, 549, 46, 106, 266, 327, 461, 581, 67, 124, 286, 362, 495, 553, 71, 174, 233, 389, 433, 592, 66, 110, 213, 307, 419, 600, 18, 114, 201, 364, 480, 546, 58, 151, 290, 363, 411, 508, 39, 108, 276, 340, 463, 599, 34, 116, 256, 324, 464, 587, 80, 162, 258, 314, 459, 593, 82, 158, 231, 305, 493, 596, 6, 171, 285, 352, 498, 539, 53, 182, 272, 336, 403, 569, 60, 105, 268, 386, 438, 582, 93, 179, 271, 301, 443, 556, 44, 170, 251, 329, 413, 540, 32, 180, 289, 380, 424, 554, 49, 111, 225, 337, 456, 503, 43, 192, 219, 393, 475, 505, 100, 152, 220, 346, 496, 516, 41, 190, 230, 321, 469, 578, 5, 178, 255, 368, 427, 525, 54, 132, 280, 349, 410, 531, 65, 154, 210, 384, 429, 521, 72, 144, 296, 392, 490, 506, 76, 147, 241, 341, 432, 536, 98, 101, 216, 342, 484, 585, 11, 149, 257, 333, 497, 541, 78, 177, 218, 303, 481, 501, 21, 117, 215, 315, 436, 571, 62, 173, 214, 355, 488, 529, 14, 139, 222, 339, 435, 586, 22, 143, 208, 317, 442, 522, 12, 176, 298, 328, 418, 512, 37, 168, 269, 370, 453, 589, 95, 135, 259, 323, 417, 574, 74, 107, 254, 311, 404, 514, 33, 183, 278, 304, 491, 591, 99, 172, 239, 395, 402, 545, 63, 127, 250, 316, 451, 519, 29, 160, 292, 371, 474, 530, 56, 109, 242, 312, 460, 542, 10, 169, 279, 359, 405, 570, 47, 137, 267, 377, 467, 559, 4, 104, 291, 400, 422, 580, 38, 188, 283, 320, 430, 538, 84, 165, 221, 308, 454, 590, 89, 175, 263, 382, 486, 564, 55, 133, 265, 383, 487, 575, 77, 166, 295, 379, 468, 561]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2287.14 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	2017.09 MBs	(shape (3, 4, 3, 4, 480, 2040, 4), 486205440 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 00:59:10 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (246+234=480 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26036), purity -1.1433222317729872
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (85+161=246 samples) on frame 1 with decision: {1} ⟨DR⟩ (A16 ⫺ 12658), purity -0.552836901139323
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+154=234 samples) on frame 1 with decision: {1} A86 ⫺₇₀ 11415, purity -0.45567415854991367
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+74=154 samples) on frame 1 with decision: {1} A9 ⫹ 16677, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+81=161 samples) on frame 1 with decision: {1} A85 ⫹ 10805, purity -0.033467395991037596
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
331.012633 seconds (3.05 G allocations: 74.470 GiB, 22.12% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26036)
✔ {1} A86 ⫺₇₀ 11415
│✔ {1} A9 ⫹ 16677
││✔ Corn_senesced_green_weeds : 74/74 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
✘ {1} ⟨DR⟩ (A16 ⫺ 12658)
 ✔ {1} A85 ⫹ 10805
 │✔ Lettuce_romaine_6wk : 80/81 (conf: 0.9876543209876543)
 │✘ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/85 (conf: 0.9411764705882353)
● [ 23/07/2021 01:04:41 ] Saving tree to file ./gandalf/trees/tree_1f89f91f2128848d9d1af1ef4b833a85862b0836cce17084c06fe0d228865c8d.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26036)
✔ {1} A86 ⫺₇₀ 11415
│✔ {1} A9 ⫹ 16677
││✔ Corn_senesced_green_weeds : 19/19 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 18/19 (conf: 0.9473684210526315)
│✘ Lettuce_romaine_5wk : 20/22 (conf: 0.9090909090909091)
✘ {1} ⟨DR⟩ (A16 ⫺ 12658)
 ✔ {1} A85 ⫹ 10805
 │✔ Lettuce_romaine_6wk : 20/20 (conf: 1.0)
 │✘ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Salinas-A	7	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	97.5%	100.0%	95.0%	90.0%	100.0%	100.0%	100.0%	100.0%	100.0%	94.74%	90.91%	100.0%	100.0%	||	97.0%	[100.0, 97.44, 92.31, 95.24, 100.0, 100.0]%	|||	97.5%	99.5%	97.61%	99.5%	97.5%	
  accuracy: 97.5% kappa: 97.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 19  1  0  0  0	95.0%		Corn_senesced_green_weeds
  0  0 18  2  0  0	90.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.975
κ =		0.97
sensitivities:	[1.0, 0.95, 0.9, 1.0, 1.0, 1.0]
specificities:	[1.0, 1.0, 0.99, 0.98, 1.0, 1.0]
PPVs:		[1.0, 1.0, 0.9473684210526315, 0.9090909090909091, 1.0, 1.0]
NPVs:		[1.0, 0.9900990099009901, 0.9801980198019802, 1.0, 1.0, 1.0]
F1s:		[1.0, 0.9743589743589743, 0.9230769230769231, 0.9523809523809523, 1.0, 1.0]
accuracies:	[1.0, 0.9916666666666667, 0.975, 0.9833333333333333, 1.0, 1.0]
mean_accuracy:	0.9916666666666667
Dataset_slice = (600) -> [14, 145, 209, 319, 413, 525, 59, 126, 201, 393, 450, 561, 55, 102, 207, 312, 445, 527, 87, 121, 255, 362, 475, 501, 44, 116, 271, 308, 421, 555, 11, 131, 219, 380, 474, 532, 60, 110, 268, 310, 440, 528, 6, 101, 211, 304, 437, 518, 83, 167, 283, 357, 414, 597, 46, 162, 229, 318, 456, 585, 20, 123, 288, 395, 424, 584, 74, 140, 291, 373, 481, 551, 32, 165, 281, 315, 434, 589, 22, 135, 220, 398, 486, 544, 40, 152, 286, 316, 451, 593, 24, 103, 221, 350, 429, 515, 18, 137, 230, 355, 438, 543, 89, 125, 262, 390, 443, 595, 62, 124, 264, 383, 406, 529, 12, 172, 276, 377, 411, 517, 31, 163, 204, 369, 471, 503, 58, 168, 208, 302, 407, 547, 30, 129, 224, 325, 415, 505, 79, 104, 235, 326, 495, 519, 99, 197, 213, 343, 464, 581, 48, 173, 284, 388, 410, 568, 67, 149, 275, 391, 455, 548, 10, 198, 289, 360, 485, 554, 5, 182, 244, 397, 487, 599, 93, 164, 257, 384, 457, 530, 64, 187, 246, 354, 458, 583, 70, 134, 242, 371, 422, 577, 41, 133, 256, 351, 473, 512, 82, 158, 299, 322, 404, 507, 84, 120, 290, 314, 423, 522, 51, 199, 261, 359, 412, 523, 81, 175, 206, 340, 472, 539, 94, 181, 300, 303, 426, 514, 23, 179, 266, 321, 459, 572, 100, 176, 270, 376, 432, 560, 90, 109, 278, 346, 418, 510, 68, 186, 274, 379, 467, 556, 43, 117, 265, 382, 480, 570, 1, 178, 280, 344, 425, 504, 95, 132, 277, 332, 491, 524, 19, 113, 282, 378, 476, 579, 98, 112, 292, 348, 462, 563, 50, 106, 285, 352, 444, 550, 33, 170, 295, 386, 493, 537, 27, 136, 241, 337, 408, 564, 63, 148, 279, 324, 427, 511, 54, 119, 216, 372, 401, 575, 86, 193, 254, 306, 428, 567, 17, 188, 293, 399, 496, 508, 91, 142, 273, 328, 494, 574, 97, 189, 297, 320, 430, 531, 57, 155, 263, 301, 492, 557, 61, 196, 294, 347, 405, 594, 75, 141, 205, 349, 436, 590, 71, 183, 203, 341, 409, 562, 92, 180, 258, 394, 441, 520, 65, 177, 249, 309, 449, 598, 37, 166, 272, 356, 498, 582, 29, 195, 234, 331, 469, 513, 21, 127, 218, 313, 435, 541, 69, 184, 267, 368, 500, 534, 3, 185, 298, 334, 488, 588, 77, 139, 225, 327, 403, 516, 56, 107, 260, 396, 490, 558, 72, 200, 217, 342, 416, 580, 8, 111, 227, 366, 465, 571, 2, 190, 237, 374, 419, 596, 73, 130, 233, 363, 482, 538, 36, 159, 238, 307, 448, 578, 45, 146, 250, 375, 463, 587, 52, 153, 212, 335, 460, 566, 53, 156, 287, 311, 478, 552, 34, 143, 222, 389, 453, 526, 28, 169, 259, 323, 452, 569, 39, 128, 243, 365, 454, 533, 76, 115, 231, 364, 461, 546, 85, 105, 228, 400, 499, 559, 66, 171, 240, 305, 402, 573, 88, 108, 248, 387, 497, 521, 15, 174, 247, 370, 417, 549, 38, 154, 253, 339, 446, 586, 9, 114, 202, 367, 489, 535, 80, 192, 251, 353, 442, 540, 25, 160, 223, 392, 447, 565, 26, 191, 215, 329, 483, 591, 7, 151, 252, 381, 484, 576, 96, 194, 210, 338, 477, 536, 16, 144, 296, 317, 466, 545, 13, 147, 269, 333, 431, 553, 47, 150, 236, 336, 470, 600, 49, 157, 214, 385, 468, 509, 35, 118, 239, 358, 479, 542, 78, 122, 232, 345, 420, 502, 42, 161, 245, 361, 433, 506, 4, 138, 226, 330, 439, 592]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2287.14 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	2017.09 MBs	(shape (3, 4, 3, 4, 480, 2040, 4), 486368640 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 01:04:47 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (244+236=480 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26278), purity -1.1318370578787336
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+160=244 samples) on frame 1 with decision: {1} A17 ⫺ 13901, purity -0.520429720385408
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+156=236 samples) on frame 1 with decision: {1} ⟨DR⟩ (A83 ⫺ 5106), purity -0.45796471396294985
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A110 ⫺ 743, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+76=156 samples) on frame 1 with decision: {1} A8 ⫹ 14198, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
380.487521 seconds (2.86 G allocations: 87.111 GiB, 20.45% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26278)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A8 ⫹ 14198
││✔ Corn_senesced_green_weeds : 76/76 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
✘ {1} A17 ⫺ 13901
 ✔ {1} A110 ⫺ 743
 │✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
 │✘ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/84 (conf: 0.9523809523809523)
● [ 23/07/2021 01:11:07 ] Saving tree to file ./gandalf/trees/tree_7bef1740aafb7990f3a657cd924e25e37da94deaa18733d4de9119bbd8c42be9.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26278)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A8 ⫹ 14198
││✔ Corn_senesced_green_weeds : 19/20 (conf: 0.95)
││✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
✘ {1} A17 ⫺ 13901
 ✔ {1} A110 ⫺ 743
 │✔ Lettuce_romaine_6wk : 19/19 (conf: 1.0)
 │✘ Lettuce_romaine_7wk : 18/18 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 20/23 (conf: 0.8695652173913043)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Salinas-A	8	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	96.67%	100.0%	95.0%	100.0%	100.0%	95.0%	90.0%	86.96%	95.0%	100.0%	100.0%	100.0%	100.0%	||	96.0%	[93.02, 95.0, 100.0, 100.0, 97.44, 94.74]%	|||	96.67%	99.33%	96.99%	99.34%	96.7%	
  accuracy: 96.67% kappa: 96.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  1 19  0  0  0  0	95.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  1  0  0 19  0	95.0%		Lettuce_romaine_6wk
  2  0  0  0  0 18	90.0%		Lettuce_romaine_7wk

overall_acc:	0.9666666666666667
κ =		0.96
sensitivities:	[1.0, 0.95, 1.0, 1.0, 0.95, 0.9]
specificities:	[0.97, 0.99, 1.0, 1.0, 1.0, 1.0]
PPVs:		[0.8695652173913043, 0.95, 1.0, 1.0, 1.0, 1.0]
NPVs:		[1.0, 0.99, 1.0, 1.0, 0.9900990099009901, 0.9803921568627451]
F1s:		[0.9302325581395349, 0.95, 1.0, 1.0, 0.9743589743589743, 0.9473684210526315]
accuracies:	[0.975, 0.9833333333333333, 1.0, 1.0, 0.9916666666666667, 0.9833333333333333]
mean_accuracy:	0.9888888888888888
Dataset_slice = (600) -> [70, 177, 261, 314, 419, 581, 28, 119, 212, 327, 454, 562, 31, 139, 280, 374, 459, 507, 19, 178, 249, 324, 453, 509, 5, 145, 248, 337, 422, 598, 75, 174, 287, 378, 420, 519, 12, 144, 202, 385, 465, 588, 26, 108, 298, 344, 403, 544, 67, 162, 228, 360, 498, 513, 14, 125, 236, 322, 482, 571, 50, 105, 214, 320, 440, 559, 25, 148, 229, 376, 423, 535, 11, 196, 219, 397, 434, 552, 51, 170, 257, 399, 417, 534, 6, 199, 207, 301, 427, 583, 4, 127, 273, 338, 450, 590, 63, 141, 270, 302, 486, 586, 62, 118, 276, 392, 435, 511, 54, 194, 216, 336, 437, 569, 73, 190, 251, 349, 411, 582, 16, 168, 238, 312, 449, 597, 76, 133, 292, 308, 436, 560, 94, 191, 234, 307, 469, 566, 21, 172, 253, 370, 461, 556, 96, 176, 295, 388, 401, 578, 97, 132, 275, 382, 475, 555, 60, 173, 217, 325, 470, 514, 9, 109, 272, 398, 402, 510, 40, 154, 250, 303, 443, 524, 72, 113, 240, 368, 431, 501, 99, 156, 279, 381, 497, 540, 44, 167, 220, 335, 489, 523, 91, 104, 245, 357, 416, 533, 92, 116, 297, 355, 412, 553, 71, 166, 246, 351, 426, 536, 13, 192, 203, 394, 410, 529, 98, 129, 206, 331, 414, 537, 79, 122, 281, 346, 448, 504, 18, 137, 224, 371, 442, 549, 48, 101, 289, 362, 487, 589, 56, 175, 285, 350, 456, 516, 22, 103, 242, 356, 408, 502, 35, 124, 293, 361, 428, 577, 81, 189, 262, 364, 460, 547, 84, 187, 230, 342, 478, 557, 37, 181, 208, 310, 418, 521, 87, 120, 299, 359, 458, 530, 77, 117, 237, 354, 462, 538, 34, 115, 231, 379, 429, 525, 65, 155, 205, 316, 495, 550, 7, 121, 252, 319, 488, 508, 41, 123, 264, 358, 499, 503, 3, 182, 201, 353, 452, 531, 59, 193, 290, 345, 439, 558, 55, 186, 296, 372, 457, 546, 43, 126, 241, 377, 463, 554, 29, 161, 263, 395, 405, 551, 8, 159, 221, 333, 471, 543, 86, 158, 227, 347, 413, 592, 46, 157, 274, 304, 424, 561, 64, 112, 204, 332, 445, 585, 78, 195, 211, 391, 430, 545, 85, 198, 209, 340, 493, 575, 15, 152, 282, 317, 433, 600, 1, 149, 258, 400, 477, 595, 42, 128, 254, 309, 464, 584, 100, 130, 271, 326, 500, 573, 30, 197, 267, 323, 425, 594, 10, 140, 283, 393, 468, 542, 89, 134, 218, 389, 441, 596, 88, 114, 278, 318, 446, 532, 49, 179, 277, 365, 467, 528, 17, 160, 247, 383, 481, 568, 23, 183, 223, 339, 479, 587, 27, 142, 286, 311, 415, 570, 20, 150, 259, 305, 421, 522, 68, 171, 288, 329, 407, 526, 69, 169, 243, 352, 494, 567, 24, 106, 284, 384, 491, 520, 74, 110, 235, 390, 473, 579, 36, 163, 256, 373, 406, 515, 57, 185, 266, 343, 480, 548, 53, 180, 239, 306, 476, 527, 95, 200, 255, 369, 404, 541, 61, 107, 226, 348, 409, 518, 66, 135, 265, 380, 484, 512, 52, 111, 233, 328, 472, 565, 58, 147, 210, 315, 447, 506, 47, 153, 232, 367, 474, 517, 83, 143, 268, 341, 432, 574, 39, 146, 215, 313, 490, 572, 93, 165, 244, 330, 466, 591, 90, 138, 225, 363, 451, 539, 33, 184, 291, 396, 455, 593, 2, 151, 300, 334, 496, 505, 38, 102, 260, 366, 492, 576, 80, 131, 269, 375, 483, 580, 82, 136, 222, 386, 485, 563, 45, 188, 213, 321, 444, 599, 32, 164, 294, 387, 438, 564]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2287.14 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	2017.09 MBs	(shape (3, 4, 3, 4, 480, 2040, 4), 486099360 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 01:11:13 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (245+235=480 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26278), purity -1.1377945947091448
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (85+160=245 samples) on frame 1 with decision: {1} ⟨DR⟩ (A16 ⫺ 12658), purity -0.5302840218579069
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+155=235 samples) on frame 1 with decision: {1} ⟨DR⟩ (A83 ⫺ 5106), purity -0.45683895248233825
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+75=155 samples) on frame 1 with decision: {1} A8 ⫹ 14198, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A40 ⫹ 24527, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
358.900083 seconds (3.25 G allocations: 87.397 GiB, 23.52% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26278)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A8 ⫹ 14198
││✔ Corn_senesced_green_weeds : 75/75 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
✘ {1} ⟨DR⟩ (A16 ⫺ 12658)
 ✔ {1} A40 ⫹ 24527
 │✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
 │✘ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/85 (conf: 0.9411764705882353)
● [ 23/07/2021 01:17:12 ] Saving tree to file ./gandalf/trees/tree_b33fd1dc1e6fe9b404e1de437e3fcea7d36687de75d4276dd0b3dc9ff9502822.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₆₀ 26278)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A8 ⫹ 14198
││✔ Corn_senesced_green_weeds : 20/21 (conf: 0.9523809523809523)
││✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
✘ {1} ⟨DR⟩ (A16 ⫺ 12658)
 ✔ {1} A40 ⫹ 24527
 │✔ Lettuce_romaine_6wk : 18/19 (conf: 0.9473684210526315)
 │✘ Lettuce_romaine_7wk : 19/20 (conf: 0.95)
 ✘ Brocoli_green_weeds_1 : 20/20 (conf: 1.0)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Salinas-A	9	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	97.5%	100.0%	100.0%	100.0%	100.0%	90.0%	95.0%	100.0%	95.24%	100.0%	100.0%	94.74%	95.0%	||	97.0%	[100.0, 97.56, 100.0, 100.0, 92.31, 95.0]%	|||	97.5%	99.5%	97.5%	99.5%	97.48%	
  accuracy: 97.5% kappa: 97.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  0 20  0  0  0  0	100.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  1  0  0 18  1	90.0%		Lettuce_romaine_6wk
  0  0  0  0  1 19	95.0%		Lettuce_romaine_7wk

overall_acc:	0.975
κ =		0.97
sensitivities:	[1.0, 1.0, 1.0, 1.0, 0.9, 0.95]
specificities:	[1.0, 0.99, 1.0, 1.0, 0.99, 0.99]
PPVs:		[1.0, 0.9523809523809523, 1.0, 1.0, 0.9473684210526315, 0.95]
NPVs:		[1.0, 1.0, 1.0, 1.0, 0.9801980198019802, 0.99]
F1s:		[1.0, 0.975609756097561, 1.0, 1.0, 0.9230769230769231, 0.95]
accuracies:	[1.0, 0.9916666666666667, 1.0, 1.0, 0.975, 0.9833333333333333]
mean_accuracy:	0.9916666666666667
Dataset_slice = (600) -> [21, 173, 279, 381, 499, 569, 64, 138, 231, 310, 469, 582, 10, 149, 269, 301, 481, 525, 84, 168, 271, 334, 458, 600, 13, 194, 289, 400, 497, 548, 73, 107, 225, 375, 444, 512, 20, 174, 213, 347, 441, 545, 60, 159, 210, 398, 448, 505, 22, 196, 237, 354, 492, 558, 27, 187, 300, 345, 461, 572, 3, 110, 264, 394, 498, 583, 48, 125, 238, 341, 464, 565, 24, 171, 293, 356, 470, 502, 1, 123, 260, 339, 417, 519, 95, 165, 224, 315, 422, 550, 30, 190, 294, 327, 484, 589, 29, 188, 211, 359, 429, 586, 65, 176, 232, 305, 500, 559, 85, 157, 282, 357, 472, 516, 4, 179, 202, 362, 436, 585, 50, 169, 261, 371, 460, 594, 8, 131, 256, 343, 439, 590, 89, 192, 240, 382, 447, 557, 68, 144, 221, 342, 438, 560, 23, 134, 277, 335, 419, 587, 56, 116, 278, 364, 459, 581, 70, 121, 292, 307, 440, 520, 71, 155, 247, 324, 425, 508, 62, 133, 204, 374, 405, 551, 31, 129, 299, 368, 479, 501, 49, 162, 227, 308, 401, 579, 15, 119, 249, 361, 467, 546, 77, 115, 265, 388, 426, 598, 61, 126, 242, 396, 463, 517, 52, 189, 275, 372, 491, 521, 11, 195, 234, 365, 468, 544, 75, 154, 222, 316, 480, 555, 67, 105, 226, 393, 466, 593, 81, 178, 267, 379, 477, 596, 44, 153, 266, 366, 476, 542, 38, 127, 245, 352, 452, 518, 17, 147, 219, 340, 427, 515, 96, 193, 229, 344, 457, 578, 35, 128, 262, 325, 431, 543, 36, 113, 230, 392, 414, 554, 40, 139, 281, 314, 435, 561, 93, 135, 268, 380, 430, 562, 55, 132, 285, 312, 421, 528, 90, 199, 212, 326, 486, 511, 72, 151, 208, 331, 434, 536, 19, 166, 283, 322, 403, 599, 87, 180, 244, 351, 462, 513, 74, 140, 254, 333, 490, 524, 39, 141, 241, 391, 412, 580, 18, 142, 207, 350, 485, 591, 25, 148, 246, 383, 410, 573, 2, 175, 239, 337, 495, 523, 91, 197, 209, 378, 478, 529, 83, 114, 274, 373, 474, 553, 99, 182, 255, 360, 489, 533, 43, 106, 258, 304, 454, 509, 53, 170, 218, 353, 404, 503, 6, 101, 235, 399, 445, 597, 28, 145, 263, 309, 442, 510, 79, 146, 257, 328, 456, 556, 42, 200, 273, 319, 496, 574, 66, 158, 206, 389, 493, 541, 92, 143, 201, 397, 443, 568, 76, 161, 290, 318, 424, 527, 7, 102, 297, 311, 413, 547, 14, 150, 216, 336, 415, 507, 5, 137, 284, 348, 406, 564, 57, 130, 296, 346, 402, 532, 88, 177, 295, 384, 450, 506, 86, 104, 203, 367, 423, 595, 63, 191, 217, 349, 451, 514, 16, 183, 250, 302, 420, 538, 32, 185, 236, 355, 446, 537, 100, 118, 287, 306, 473, 534, 80, 136, 252, 330, 418, 530, 33, 112, 286, 376, 407, 504, 69, 117, 233, 370, 471, 571, 37, 111, 223, 303, 433, 577, 26, 164, 276, 317, 449, 588, 59, 167, 251, 323, 408, 575, 41, 160, 280, 358, 483, 567, 12, 172, 228, 321, 455, 566, 9, 108, 272, 386, 437, 584, 47, 156, 253, 369, 482, 531, 46, 103, 259, 313, 428, 576, 51, 198, 220, 332, 487, 563, 45, 181, 215, 329, 409, 526, 98, 152, 291, 320, 453, 592, 94, 184, 288, 363, 488, 535, 34, 122, 205, 338, 411, 522, 54, 163, 214, 385, 416, 570, 78, 109, 298, 377, 494, 539, 58, 124, 270, 387, 432, 549, 97, 186, 248, 390, 475, 552, 82, 120, 243, 395, 465, 540]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2287.14 MBs
     ├ fmd	270.04 MBs	(shape (3, 4, 3, 4, 480, 2040))
     ├ fmd_m	2017.09 MBs	(shape (3, 4, 3, 4, 480, 2040, 4), 486042240 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	3.14 MBs
     ├ domain shape	(3, 3, 204, 120)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 01:17:19 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (245+235=480 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26036), purity -1.1377945947091448
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (85+160=245 samples) on frame 1 with decision: {1} ⟨DR⟩ (A16 ⫺ 12658), purity -0.5302840218579069
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+155=235 samples) on frame 1 with decision: {1} ⟨DR⟩ (A83 ⫺ 5106), purity -0.45683895248233825
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A85 ⫹ 10805, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+75=155 samples) on frame 1 with decision: {1} A6 ⫹ 12791, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
331.984447 seconds (3.15 G allocations: 77.859 GiB, 22.75% gc time)
Train tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26036)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A6 ⫹ 12791
││✔ Corn_senesced_green_weeds : 75/75 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 80/80 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 80/80 (conf: 1.0)
✘ {1} ⟨DR⟩ (A16 ⫺ 12658)
 ✔ {1} A85 ⫹ 10805
 │✔ Lettuce_romaine_6wk : 80/80 (conf: 1.0)
 │✘ Lettuce_romaine_7wk : 80/80 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 80/85 (conf: 0.9411764705882353)
● [ 23/07/2021 01:22:51 ] Saving tree to file ./gandalf/trees/tree_73d1c7dce4938d9326b862e47cfeabeac39322228e0d011e552fb75c67822572.jld...
Test tree:
Decision Tree
Leaves: 6
Tot nodes: 11
Height: 3
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨P̅P̅⟩ (A42 ⫹₇₀ 26036)
✔ {1} ⟨DR⟩ (A83 ⫺ 5106)
│✔ {1} A6 ⫹ 12791
││✔ Corn_senesced_green_weeds : 18/18 (conf: 1.0)
││✘ Lettuce_romaine_4wk : 20/20 (conf: 1.0)
│✘ Lettuce_romaine_5wk : 20/20 (conf: 1.0)
✘ {1} ⟨DR⟩ (A16 ⫺ 12658)
 ✔ {1} A85 ⫹ 10805
 │✔ Lettuce_romaine_6wk : 20/21 (conf: 0.9523809523809523)
 │✘ Lettuce_romaine_7wk : 20/20 (conf: 1.0)
 ✘ Brocoli_green_weeds_1 : 20/21 (conf: 0.9523809523809523)
 test size = [(3, 3, 204, 120)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC5","TestOpAll"),100,-1,Salinas-A	10	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	98.33%	100.0%	90.0%	100.0%	100.0%	100.0%	100.0%	95.24%	100.0%	100.0%	100.0%	95.24%	100.0%	||	98.0%	[97.56, 94.74, 100.0, 100.0, 97.56, 100.0]%	|||	98.33%	99.67%	98.41%	99.67%	98.31%	
  accuracy: 98.33% kappa: 98.0% 
 20  0  0  0  0  0	100.0%		Brocoli_green_weeds_1
  1 18  0  0  1  0	90.0%		Corn_senesced_green_weeds
  0  0 20  0  0  0	100.0%		Lettuce_romaine_4wk
  0  0  0 20  0  0	100.0%		Lettuce_romaine_5wk
  0  0  0  0 20  0	100.0%		Lettuce_romaine_6wk
  0  0  0  0  0 20	100.0%		Lettuce_romaine_7wk

overall_acc:	0.9833333333333333
κ =		0.98
sensitivities:	[1.0, 0.9, 1.0, 1.0, 1.0, 1.0]
specificities:	[0.99, 1.0, 1.0, 1.0, 0.99, 1.0]
PPVs:		[0.9523809523809523, 1.0, 1.0, 1.0, 0.9523809523809523, 1.0]
NPVs:		[1.0, 0.9803921568627451, 1.0, 1.0, 1.0, 1.0]
F1s:		[0.975609756097561, 0.9473684210526315, 1.0, 1.0, 0.975609756097561, 1.0]
accuracies:	[0.9916666666666667, 0.9833333333333333, 1.0, 1.0, 0.9916666666666667, 1.0]
mean_accuracy:	0.9944444444444445
Iteration "((3,7),false,"o_RCC8","TestOpAll"),100,-1,PaviaCentre"...
● [ 23/07/2021 01:22:51 ] Computing dataset...
● [ 23/07/2021 01:22:53 ] Computed dataset in 2.24 seconds (00:00:02)
● [ 23/07/2021 01:22:53 ] Saving dataset to file ./gandalf/cache/dataset_56da9f6b542121abacd9e677ae2c33727fe2869bc9b82400b5d7132395404f1f.jld...
Dataseeds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

executing run '((3,7),false,"o_RCC8","TestOpAll"),100,-1,PaviaCentre'...
dataset type = Tuple{Array{Int64, 4}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (test_operators = TestOperator[⫺, ⫹, ⫺₉₀, ⫹₉₀, ⫺₈₀, ⫹₈₀, ⫺₇₀, ⫹₇₀, ⫺₆₀, ⫹₆₀], ontology = Ontology{DecisionTree.ModalLogic.Interval2D}(RCC8))
dataset_slices    = (10 dataset_slices)

Frame 1/1
  0.002973 seconds (11.25 k allocations: 1.045 MiB)
Frame 1/1
┌ LogLevel(-500): OntologicalDataset -> FeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:11
┌ LogLevel(-500): Instance 1/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 723/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 542/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 361/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 180/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): FeatModalDataset -> StumpFeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:388
┌ LogLevel(-500): Instance 1/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 723/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 542/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 180/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 361/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
 98.978014 seconds (1.15 G allocations: 65.917 GiB, 65.30% gc time)
Dataset_slice = (900) -> [10, 122, 267, 386, 478, 583, 633, 707, 810, 3, 166, 252, 331, 497, 503, 670, 754, 819, 27, 190, 228, 353, 403, 521, 606, 735, 887, 63, 130, 246, 366, 462, 566, 687, 712, 872, 50, 195, 235, 350, 474, 501, 671, 769, 829, 57, 186, 201, 397, 447, 511, 660, 778, 843, 36, 116, 254, 326, 457, 542, 622, 766, 867, 21, 123, 248, 340, 469, 593, 666, 720, 868, 75, 157, 258, 336, 417, 509, 634, 704, 854, 78, 183, 238, 394, 408, 596, 624, 759, 862, 35, 154, 264, 376, 477, 599, 697, 748, 865, 66, 191, 274, 307, 448, 548, 602, 787, 823, 20, 167, 215, 392, 467, 549, 650, 795, 875, 67, 188, 239, 310, 434, 568, 682, 775, 890, 25, 141, 231, 330, 490, 594, 678, 732, 871, 24, 117, 270, 400, 492, 592, 668, 750, 816, 82, 194, 226, 387, 455, 560, 690, 793, 825, 74, 197, 289, 378, 441, 565, 683, 788, 896, 69, 105, 227, 341, 461, 539, 636, 705, 822, 81, 187, 300, 388, 427, 585, 646, 776, 811, 28, 159, 210, 342, 405, 531, 675, 710, 856, 15, 179, 244, 323, 420, 554, 618, 714, 830, 59, 163, 223, 332, 416, 558, 661, 740, 878, 29, 124, 268, 351, 459, 564, 601, 786, 820, 18, 153, 232, 329, 500, 582, 673, 767, 847, 31, 162, 220, 319, 418, 535, 685, 791, 821, 43, 177, 288, 346, 465, 576, 681, 770, 876, 40, 155, 249, 325, 470, 575, 625, 784, 860, 12, 149, 205, 327, 496, 578, 651, 718, 848, 83, 192, 275, 305, 464, 597, 665, 774, 836, 100, 145, 247, 398, 415, 508, 688, 746, 888, 94, 178, 261, 322, 488, 519, 607, 717, 824, 16, 110, 291, 347, 485, 551, 680, 722, 849, 51, 119, 204, 337, 466, 590, 612, 796, 894, 73, 148, 297, 362, 449, 522, 611, 749, 885, 19, 103, 292, 358, 425, 533, 623, 800, 801, 8, 142, 213, 382, 499, 530, 684, 785, 846, 11, 134, 207, 345, 472, 598, 628, 761, 827, 95, 136, 296, 357, 407, 515, 652, 701, 881, 58, 169, 284, 339, 458, 595, 632, 709, 899, 72, 101, 241, 321, 491, 581, 603, 777, 898, 13, 127, 230, 349, 432, 550, 620, 723, 863, 53, 172, 240, 301, 435, 555, 657, 757, 813, 22, 200, 285, 335, 483, 532, 663, 744, 859, 71, 176, 260, 379, 437, 517, 643, 782, 869, 87, 139, 202, 399, 439, 514, 672, 702, 855, 33, 160, 299, 389, 451, 544, 674, 727, 828, 61, 168, 208, 343, 480, 540, 617, 781, 808, 90, 180, 233, 309, 428, 586, 629, 772, 897, 55, 175, 216, 348, 476, 518, 613, 731, 886, 60, 137, 290, 383, 443, 573, 637, 711, 900, 96, 198, 211, 308, 456, 552, 610, 706, 852, 68, 144, 214, 317, 431, 563, 692, 733, 806, 77, 189, 203, 315, 471, 507, 669, 789, 832, 9, 135, 279, 361, 473, 536, 621, 743, 858, 42, 147, 221, 352, 481, 553, 698, 762, 834, 64, 115, 287, 391, 423, 528, 604, 763, 835, 85, 196, 256, 390, 453, 516, 614, 752, 818, 54, 182, 280, 359, 442, 588, 689, 783, 837, 2, 140, 245, 320, 429, 541, 609, 726, 805, 23, 170, 272, 313, 402, 559, 656, 764, 839, 91, 104, 269, 324, 413, 538, 642, 737, 833, 65, 181, 257, 344, 414, 505, 619, 758, 857, 48, 132, 224, 367, 487, 523, 638, 742, 826, 70, 173, 271, 303, 444, 589, 658, 779, 804, 80, 118, 276, 338, 460, 570, 644, 794, 895, 49, 171, 265, 333, 454, 577, 677, 773, 817, 7, 120, 281, 360, 438, 572, 694, 768, 807, 88, 193, 218, 372, 482, 584, 635, 753, 873, 45, 121, 229, 381, 475, 510, 676, 771, 866, 14, 174, 236, 364, 450, 534, 645, 741, 844, 97, 128, 283, 304, 436, 562, 695, 751, 841, 26, 111, 243, 311, 463, 561, 653, 729, 883, 52, 112, 294, 302, 412, 506, 654, 797, 851, 4, 158, 234, 384, 410, 569, 648, 721, 861, 32, 150, 253, 371, 409, 512, 616, 780, 870, 34, 146, 277, 374, 493, 579, 699, 765, 893, 99, 125, 266, 380, 430, 504, 631, 798, 802, 93, 102, 206, 363, 422, 587, 659, 792, 842, 56, 152, 286, 375, 445, 513, 630, 715, 882, 46, 113, 250, 306, 498, 524, 627, 730, 812, 47, 185, 263, 373, 404, 525, 679, 716, 850, 84, 108, 242, 385, 419, 600, 691, 760, 877, 79, 129, 217, 318, 486, 546, 655, 734, 840, 39, 156, 282, 365, 494, 591, 640, 799, 815, 17, 114, 251, 312, 468, 574, 615, 756, 838, 38, 143, 225, 369, 452, 556, 700, 790, 880, 5, 151, 212, 368, 426, 502, 649, 736, 809, 44, 138, 278, 355, 433, 526, 641, 724, 831, 98, 126, 237, 395, 489, 529, 693, 713, 889, 86, 109, 273, 334, 421, 537, 608, 755, 853, 92, 199, 262, 354, 479, 527, 647, 725, 803, 41, 184, 209, 328, 446, 547, 605, 719, 814, 89, 107, 259, 370, 411, 567, 664, 703, 891, 6, 131, 222, 377, 495, 545, 639, 708, 845, 1, 106, 295, 314, 401, 557, 667, 747, 864, 76, 161, 255, 396, 406, 520, 686, 738, 879, 37, 164, 298, 393, 484, 543, 696, 739, 884, 30, 133, 219, 356, 440, 580, 626, 745, 874, 62, 165, 293, 316, 424, 571, 662, 728, 892]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2849.75 MBs
     ├ fmd	202.31 MBs	(shape (3, 4, 3, 4, 720, 1020))
     ├ fmd_m	2647.44 MBs	(shape (3, 4, 3, 4, 720, 1020, 7), 740275200 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.1 MBs
     ├ domain shape	(3, 3, 102, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 01:24:39 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (321+399=720 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A9 ⫺₆₀ 5905), purity -1.517423304621683
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+161=321 samples) on frame 1 with decision: {1} A71 ⫺ 6197, purity -0.7099233336581583
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (157+242=399 samples) on frame 1 with decision: {1} A101 ⫺₆₀ 16742, purity -1.0628765422624336
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A15 ⫺ 2560, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (74+87=161 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114), purity -0.23163322964327934
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (73+84=157 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A18 ⫹ 11370), purity -0.25145268916630154
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (123+119=242 samples) on frame 1 with decision: {1} ⟨PO⟩ (A14 ⫺ 13805), purity -0.776279652864885
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (66+57=123 samples) on frame 1 with decision: {1} ⟨EC⟩ (A100 ⫹ 20619), purity -0.4254907495854712
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (25+62=87 samples) on frame 1 with decision: {1} A34 ⫺ 6437, purity -0.1801349016012718
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+6=84 samples) on frame 1 with decision: {1} ⟨NTPP⟩ (A81 ⫺ 13512), purity -0.06369370236969607
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (43+76=119 samples) on frame 1 with decision: {1} ⟨TPP⟩ (A83 ⫹ 23629), purity -0.4659704311247876
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+7=25 samples) on frame 1 with decision: {1} A9 ⫺₈₀ 2696, purity -0.1544825917270113
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+33=43 samples) on frame 1 with decision: {1} ⟨PO⟩ (A1 ⫹₆₀ 12781), purity -0.278198458544402
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (46+20=66 samples) on frame 1 with decision: {1} A56 ⫺₇₀ 21079, purity -0.09850999193680224
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+63=76 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A55 ⫺₇₀ 20817), purity -0.1856259168173069
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+7=13 samples) on frame 1 with decision: {1} A6 ⫺ 15258, purity 1.0248212535001446e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+4=20 samples) on frame 1 with decision: {1} A3 ⫹₇₀ 7817, purity -0.13862943611198905
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (26+7=33 samples) on frame 1 with decision: {1} ⟨PO⟩ (A102 ⫹₆₀ 23336), purity -0.20272421932690085
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
6971.620289 seconds (32.50 G allocations: 2.456 TiB, 30.98% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 19
Tot nodes: 37
Height: 6
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A9 ⫺₆₀ 5905)
✔ {1} A101 ⫺₆₀ 16742
│✔ {1} ⟨PO⟩ (A14 ⫺ 13805)
││✔ {1} ⟨TPP⟩ (A83 ⫹ 23629)
│││✔ {1} ⟨T̅P̅P̅⟩ (A55 ⫺₇₀ 20817)
││││✔ Self-Blocking Bricks : 62/63 (conf: 0.9841269841269841)
││││✘ {1} A6 ⫺ 15258
││││ ✔ Shadows : 7/7 (conf: 1.0)
││││ ✘ Self-Blocking Bricks : 6/6 (conf: 1.0)
│││✘ {1} ⟨PO⟩ (A1 ⫹₆₀ 12781)
│││ ✔ {1} ⟨PO⟩ (A102 ⫹₆₀ 23336)
│││ │✔ Bitumen : 4/7 (conf: 0.5714285714285714)
│││ │✘ Bitumen : 26/26 (conf: 1.0)
│││ ✘ Self-Blocking Bricks : 10/10 (conf: 1.0)
││✘ {1} ⟨EC⟩ (A100 ⫹ 20619)
││ ✔ Meadows : 54/57 (conf: 0.9473684210526315)
││ ✘ {1} A56 ⫺₇₀ 21079
││  ✔ {1} A3 ⫹₇₀ 7817
││  │✔ Bitumen : 2/4 (conf: 0.5)
││  │✘ Meadows : 16/16 (conf: 1.0)
││  ✘ Bitumen : 46/46 (conf: 1.0)
│✘ {1} ⟨T̅P̅P̅⟩ (A18 ⫹ 11370)
│ ✔ {1} ⟨NTPP⟩ (A81 ⫺ 13512)
│ │✔ Meadows : 6/6 (conf: 1.0)
│ │✘ Tiles : 77/78 (conf: 0.9871794871794872)
│ ✘ Shadows : 70/73 (conf: 0.958904109589041)
✘ {1} A71 ⫺ 6197
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114)
 │✔ {1} A34 ⫺ 6437
 ││✔ Asphalt : 62/62 (conf: 1.0)
 ││✘ {1} A9 ⫺₈₀ 2696
 ││ ✔ Trees : 7/7 (conf: 1.0)
 ││ ✘ Asphalt : 17/18 (conf: 0.9444444444444444)
 │✘ Trees : 72/74 (conf: 0.972972972972973)
 ✘ {1} A15 ⫺ 2560
  ✔ Water : 80/80 (conf: 1.0)
  ✘ Bare Soil : 80/80 (conf: 1.0)
● [ 23/07/2021 03:20:51 ] Saving tree to file ./gandalf/trees/tree_34c17eb0462eae3035366f887ae3f6a31c7fd11c28672d72ee8509e2d38070ad.jld...
Test tree:
Decision Tree
Leaves: 19
Tot nodes: 37
Height: 6
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A9 ⫺₆₀ 5905)
✔ {1} A101 ⫺₆₀ 16742
│✔ {1} ⟨PO⟩ (A14 ⫺ 13805)
││✔ {1} ⟨TPP⟩ (A83 ⫹ 23629)
│││✔ {1} ⟨T̅P̅P̅⟩ (A55 ⫺₇₀ 20817)
││││✔ Self-Blocking Bricks : 13/14 (conf: 0.9285714285714286)
││││✘ {1} A6 ⫺ 15258
││││ ✔ Shadows : 0/3 (conf: 0.0)
││││ ✘ Self-Blocking Bricks : 1/2 (conf: 0.5)
│││✘ {1} ⟨PO⟩ (A1 ⫹₆₀ 12781)
│││ ✔ {1} ⟨PO⟩ (A102 ⫹₆₀ 23336)
│││ │✔ Bitumen : 1/3 (conf: 0.3333333333333333)
│││ │✘ Bitumen : 2/2 (conf: 1.0)
│││ ✘ Self-Blocking Bricks : 0/1 (conf: 0.0)
││✘ {1} ⟨EC⟩ (A100 ⫹ 20619)
││ ✔ Meadows : 15/16 (conf: 0.9375)
││ ✘ {1} A56 ⫺₇₀ 21079
││  ✔ {1} A3 ⫹₇₀ 7817
││  │✔ Bitumen : 0/2 (conf: 0.0)
││  │✘ Meadows : 2/2 (conf: 1.0)
││  ✘ Bitumen : 14/16 (conf: 0.875)
│✘ {1} ⟨T̅P̅P̅⟩ (A18 ⫹ 11370)
│ ✔ {1} ⟨NTPP⟩ (A81 ⫺ 13512)
│ │✔ Meadows : 1/1 (conf: 1.0)
│ │✘ Tiles : 19/21 (conf: 0.9047619047619048)
│ ✘ Shadows : 19/20 (conf: 0.95)
✘ {1} A71 ⫺ 6197
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114)
 │✔ {1} A34 ⫺ 6437
 ││✔ Asphalt : 13/13 (conf: 1.0)
 ││✘ {1} A9 ⫺₈₀ 2696
 ││ ✔ Trees : 0/3 (conf: 0.0)
 ││ ✘ Asphalt : 3/4 (conf: 0.75)
 │✘ Trees : 19/19 (conf: 1.0)
 ✘ {1} A15 ⫺ 2560
  ✔ Water : 17/19 (conf: 0.8947368421052632)
  ✘ Bare Soil : 18/19 (conf: 0.9473684210526315)
 test size = [(3, 3, 102, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,PaviaCentre	1	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	87.22%	80.0%	90.0%	85.0%	90.0%	70.0%	95.0%	95.0%	95.0%	85.0%	94.12%	94.74%	73.91%	94.74%	82.35%	82.61%	90.48%	86.36%	89.47%	||	85.62%	[86.49, 92.31, 79.07, 92.31, 75.68, 88.37, 92.68, 90.48, 87.18]%	|||	87.22%	98.4%	87.64%	98.41%	87.17%	
  accuracy: 87.22% kappa: 85.62% 
 16  0  2  0  0  0  0  2  0	80.0%		Asphalt
  0 18  0  0  0  0  0  0  2	90.0%		Bare Soil
  0  0 17  0  3  0  0  0  0	85.0%		Bitumen
  0  0  2 18  0  0  0  0  0	90.0%		Meadows
  0  0  2  1 14  3  0  0  0	70.0%		Self-Blocking Bricks
  0  0  0  0  0 19  1  0  0	95.0%		Shadows
  0  0  0  0  0  1 19  0  0	95.0%		Tiles
  1  0  0  0  0  0  0 19  0	95.0%		Trees
  0  1  0  0  0  0  1  1 17	85.0%		Water

overall_acc:	0.8722222222222222
κ =		0.85625
sensitivities:	[0.8, 0.9, 0.85, 0.9, 0.7, 0.95, 0.95, 0.95, 0.85]
specificities:	[0.99375, 0.99375, 0.9625, 0.99375, 0.98125, 0.975, 0.9875, 0.98125, 0.9875]
PPVs:		[0.9411764705882353, 0.9473684210526315, 0.7391304347826086, 0.9473684210526315, 0.8235294117647058, 0.8260869565217391, 0.9047619047619048, 0.8636363636363636, 0.8947368421052632]
NPVs:		[0.9754601226993865, 0.9875776397515528, 0.9808917197452229, 0.9875776397515528, 0.9631901840490797, 0.9936305732484076, 0.9937106918238994, 0.9936708860759493, 0.9813664596273292]
F1s:		[0.8648648648648649, 0.9230769230769231, 0.7906976744186046, 0.9230769230769231, 0.7567567567567568, 0.8837209302325582, 0.926829268292683, 0.9047619047619048, 0.8717948717948718]
accuracies:	[0.9722222222222222, 0.9833333333333333, 0.95, 0.9833333333333333, 0.95, 0.9722222222222222, 0.9833333333333333, 0.9777777777777777, 0.9722222222222222]
mean_accuracy:	0.9716049382716049
Dataset_slice = (900) -> [19, 131, 215, 348, 496, 545, 639, 707, 847, 50, 123, 292, 322, 459, 579, 650, 796, 817, 6, 121, 285, 331, 464, 513, 654, 769, 869, 53, 110, 205, 315, 435, 505, 680, 790, 891, 51, 109, 209, 311, 473, 521, 694, 780, 806, 80, 124, 226, 364, 462, 528, 612, 795, 802, 76, 158, 287, 370, 471, 541, 626, 745, 853, 54, 114, 245, 399, 458, 519, 633, 713, 855, 24, 151, 225, 332, 409, 527, 630, 735, 837, 38, 128, 231, 316, 429, 518, 664, 734, 820, 86, 191, 265, 391, 487, 566, 666, 747, 823, 56, 141, 221, 356, 402, 555, 615, 758, 873, 28, 200, 232, 346, 467, 520, 646, 715, 825, 100, 140, 259, 325, 420, 595, 602, 753, 838, 21, 171, 206, 379, 454, 589, 644, 789, 842, 46, 184, 222, 395, 468, 560, 659, 725, 859, 74, 146, 214, 343, 418, 540, 698, 775, 826, 79, 143, 237, 320, 448, 558, 641, 732, 815, 98, 188, 201, 390, 442, 600, 691, 736, 899, 83, 186, 235, 338, 484, 503, 604, 702, 892, 10, 119, 286, 398, 422, 547, 687, 712, 818, 52, 167, 293, 396, 449, 544, 672, 711, 894, 42, 176, 202, 326, 476, 509, 619, 727, 821, 62, 154, 269, 304, 461, 561, 608, 720, 868, 45, 144, 278, 334, 417, 597, 670, 762, 878, 33, 163, 250, 333, 474, 534, 658, 717, 877, 90, 134, 256, 388, 431, 549, 631, 768, 890, 77, 172, 271, 367, 450, 584, 673, 729, 871, 75, 189, 233, 387, 405, 573, 656, 756, 870, 47, 182, 247, 312, 432, 501, 651, 787, 884, 37, 137, 299, 340, 440, 568, 649, 774, 897, 59, 125, 273, 345, 411, 506, 605, 766, 887, 78, 149, 229, 305, 480, 529, 662, 794, 813, 82, 102, 243, 374, 407, 533, 647, 786, 885, 34, 104, 253, 329, 427, 585, 616, 792, 808, 67, 108, 224, 335, 408, 526, 613, 785, 811, 44, 198, 261, 357, 452, 569, 653, 741, 860, 89, 180, 279, 363, 414, 580, 634, 708, 846, 68, 105, 267, 306, 413, 557, 618, 743, 832, 85, 166, 274, 365, 447, 542, 700, 760, 814, 26, 145, 220, 369, 404, 578, 628, 746, 841, 39, 142, 227, 376, 428, 590, 606, 750, 900, 99, 193, 264, 321, 483, 512, 665, 777, 845, 20, 147, 272, 381, 481, 572, 648, 754, 812, 9, 130, 204, 301, 424, 565, 693, 783, 819, 7, 156, 257, 344, 438, 570, 622, 731, 840, 12, 199, 230, 336, 466, 571, 669, 718, 805, 41, 132, 289, 337, 415, 593, 638, 776, 810, 16, 170, 262, 373, 444, 543, 635, 703, 801, 58, 196, 210, 347, 433, 551, 627, 752, 861, 31, 107, 260, 383, 477, 535, 632, 740, 822, 92, 164, 254, 355, 463, 502, 620, 791, 831, 97, 174, 298, 397, 478, 508, 686, 751, 809, 88, 106, 219, 317, 446, 531, 617, 749, 850, 27, 115, 248, 360, 470, 515, 677, 701, 844, 32, 153, 291, 330, 489, 582, 689, 799, 864, 63, 185, 251, 362, 500, 524, 671, 716, 874, 22, 160, 207, 352, 401, 577, 697, 764, 839, 55, 152, 283, 353, 485, 525, 674, 757, 830, 96, 169, 280, 389, 403, 586, 601, 719, 872, 70, 173, 255, 366, 493, 550, 690, 730, 862, 43, 127, 300, 339, 451, 507, 692, 797, 816, 72, 155, 236, 400, 492, 539, 603, 767, 851, 84, 168, 203, 324, 455, 564, 642, 798, 879, 69, 187, 239, 378, 419, 546, 609, 748, 881, 4, 139, 268, 368, 498, 598, 699, 781, 896, 15, 111, 241, 319, 479, 536, 667, 726, 804, 93, 175, 294, 302, 439, 548, 684, 765, 866, 17, 122, 297, 307, 421, 538, 652, 782, 848, 48, 190, 295, 318, 456, 594, 679, 788, 898, 57, 138, 208, 354, 488, 563, 621, 763, 835, 49, 183, 281, 385, 469, 517, 668, 724, 824, 66, 195, 258, 372, 472, 583, 695, 784, 865, 61, 118, 266, 351, 425, 599, 645, 733, 854, 94, 116, 277, 349, 475, 537, 683, 771, 803, 8, 135, 213, 375, 457, 504, 663, 759, 829, 29, 197, 263, 394, 441, 588, 682, 737, 883, 91, 117, 290, 342, 494, 567, 655, 755, 888, 64, 113, 284, 380, 445, 514, 675, 761, 827, 30, 181, 282, 303, 486, 581, 610, 742, 882, 40, 179, 296, 350, 430, 552, 678, 704, 807, 5, 157, 223, 384, 453, 522, 625, 706, 856, 18, 161, 270, 314, 499, 576, 623, 723, 857, 87, 177, 275, 308, 443, 554, 624, 800, 875, 73, 129, 242, 382, 490, 574, 640, 705, 889, 60, 136, 212, 358, 416, 523, 676, 710, 876, 71, 148, 238, 393, 434, 511, 685, 778, 834, 81, 150, 228, 371, 437, 510, 643, 728, 893, 23, 178, 276, 328, 497, 556, 657, 709, 833, 95, 101, 252, 392, 410, 591, 661, 773, 867, 3, 165, 246, 323, 460, 530, 614, 779, 863, 36, 133, 217, 361, 423, 559, 637, 772, 858, 35, 126, 218, 386, 491, 562, 688, 793, 886, 2, 103, 216, 359, 436, 532, 607, 714, 836, 13, 162, 240, 309, 412, 553, 660, 722, 852, 14, 192, 288, 341, 406, 587, 611, 744, 828, 25, 159, 249, 310, 465, 592, 696, 721, 880, 11, 112, 211, 377, 495, 575, 681, 739, 895, 65, 120, 234, 313, 482, 596, 629, 770, 849, 1, 194, 244, 327, 426, 516, 636, 738, 843]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2849.75 MBs
     ├ fmd	202.31 MBs	(shape (3, 4, 3, 4, 720, 1020))
     ├ fmd_m	2647.44 MBs	(shape (3, 4, 3, 4, 720, 1020, 7), 697656540 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.1 MBs
     ├ domain shape	(3, 3, 102, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 03:20:58 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (398+322=720 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A7 ⫹₈₀ 5612), purity -1.52459141619631
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (237+161=398 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A98 ⫹₆₀ 17337), purity -1.027866097973285
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (161+161=322 samples) on frame 1 with decision: {1} A71 ⫺₇₀ 7514, purity -0.7265952870476866
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (111+126=237 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A16 ⫹₇₀ 14066), purity -0.7088036089914763
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+81=161 samples) on frame 1 with decision: {1} A15 ⫺₇₀ 2675, purity -0.033467395991037596
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (82+79=161 samples) on frame 1 with decision: {1} ⟨EC⟩ (A29 ⫹ 5581), purity -0.22925283350578718
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (83+78=161 samples) on frame 1 with decision: {1} A23 ⫺₆₀ 11119, purity -0.2459212600655203
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (77+6=83 samples) on frame 1 with decision: {1} ⟨NTPP⟩ (A81 ⫺ 13512), purity -0.06430462193942856
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (34+77=111 samples) on frame 1 with decision: {1} ⟨EC⟩ (A78 ⫹ 22939), purity -0.47739978531020916
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (58+68=126 samples) on frame 1 with decision: {1} A100 ⫺ 20891, purity -0.32485771319287765
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+25=34 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A1 ⫹₆₀ 14578), purity -0.24575084280395815
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (53+15=68 samples) on frame 1 with decision: {1} A57 ⫺₆₀ 21110, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (72+5=77 samples) on frame 1 with decision: {1} A6 ⫹ 7963, purity -0.2236639945728164
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+20=25 samples) on frame 1 with decision: {1} ⟨EC⟩ (A26 ⫺ 21267), purity -0.1900541078466469
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
5119.692826 seconds (23.64 G allocations: 1.753 TiB, 30.22% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 15
Tot nodes: 29
Height: 6
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A7 ⫹₈₀ 5612)
✔ {1} A71 ⫺₇₀ 7514
│✔ {1} ⟨EC⟩ (A29 ⫹ 5581)
││✔ Trees : 75/79 (conf: 0.9493670886075949)
││✘ Asphalt : 77/82 (conf: 0.9390243902439024)
│✘ {1} A15 ⫺₇₀ 2675
│ ✔ Water : 80/81 (conf: 0.9876543209876543)
│ ✘ Bare Soil : 80/80 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A98 ⫹₆₀ 17337)
 ✔ {1} A23 ⫺₆₀ 11119
 │✔ Shadows : 75/78 (conf: 0.9615384615384616)
 │✘ {1} ⟨NTPP⟩ (A81 ⫺ 13512)
 │ ✔ Meadows : 6/6 (conf: 1.0)
 │ ✘ Tiles : 76/77 (conf: 0.987012987012987)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A16 ⫹₇₀ 14066)
  ✔ {1} A100 ⫺ 20891
  │✔ {1} A57 ⫺₆₀ 21110
  ││✔ Meadows : 15/15 (conf: 1.0)
  ││✘ Bitumen : 53/53 (conf: 1.0)
  │✘ Meadows : 57/58 (conf: 0.9827586206896551)
  ✘ {1} ⟨EC⟩ (A78 ⫹ 22939)
   ✔ {1} A6 ⫹ 7963
   │✔ Bitumen : 3/5 (conf: 0.6)
   │✘ Self-Blocking Bricks : 69/72 (conf: 0.9583333333333334)
   ✘ {1} ⟨T̅P̅P̅⟩ (A1 ⫹₆₀ 14578)
    ✔ {1} ⟨EC⟩ (A26 ⫺ 21267)
    │✔ Bitumen : 20/20 (conf: 1.0)
    │✘ Bitumen : 3/5 (conf: 0.6)
    ✘ Self-Blocking Bricks : 9/9 (conf: 1.0)
● [ 23/07/2021 04:46:18 ] Saving tree to file ./gandalf/trees/tree_4e74eb915578213caa5c213bcdef942f709ef1afdae3018221530bd0ffbe7bec.jld...
Test tree:
Decision Tree
Leaves: 15
Tot nodes: 29
Height: 6
Modal height:  6
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A7 ⫹₈₀ 5612)
✔ {1} A71 ⫺₇₀ 7514
│✔ {1} ⟨EC⟩ (A29 ⫹ 5581)
││✔ Trees : 20/22 (conf: 0.9090909090909091)
││✘ Asphalt : 17/18 (conf: 0.9444444444444444)
│✘ {1} A15 ⫺₇₀ 2675
│ ✔ Water : 20/20 (conf: 1.0)
│ ✘ Bare Soil : 20/20 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A98 ⫹₆₀ 17337)
 ✔ {1} A23 ⫺₆₀ 11119
 │✔ Shadows : 16/16 (conf: 1.0)
 │✘ {1} ⟨NTPP⟩ (A81 ⫺ 13512)
 │ ✔ Meadows : 2/3 (conf: 0.6666666666666666)
 │ ✘ Tiles : 19/19 (conf: 1.0)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A16 ⫹₇₀ 14066)
  ✔ {1} A100 ⫺ 20891
  │✔ {1} A57 ⫺₆₀ 21110
  ││✔ Meadows : 6/6 (conf: 1.0)
  ││✘ Bitumen : 11/13 (conf: 0.8461538461538461)
  │✘ Meadows : 11/13 (conf: 0.8461538461538461)
  ✘ {1} ⟨EC⟩ (A78 ⫹ 22939)
   ✔ {1} A6 ⫹ 7963
   │✔ Bitumen : 0/0 (conf: NaN)
   │✘ Self-Blocking Bricks : 18/21 (conf: 0.8571428571428571)
   ✘ {1} ⟨T̅P̅P̅⟩ (A1 ⫹₆₀ 14578)
    ✔ {1} ⟨EC⟩ (A26 ⫺ 21267)
    │✔ Bitumen : 2/3 (conf: 0.6666666666666666)
    │✘ Bitumen : 4/5 (conf: 0.8)
    ✘ Self-Blocking Bricks : 0/1 (conf: 0.0)
 test size = [(3, 3, 102, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,PaviaCentre	2	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	92.22%	85.0%	100.0%	85.0%	95.0%	90.0%	80.0%	95.0%	100.0%	100.0%	94.44%	100.0%	80.95%	86.36%	81.82%	100.0%	100.0%	90.91%	100.0%	||	91.25%	[89.47, 100.0, 82.93, 90.48, 85.71, 88.89, 97.44, 95.24, 100.0]%	|||	92.22%	99.03%	92.72%	99.03%	92.24%	
  accuracy: 92.22% kappa: 91.25% 
 17  0  1  0  0  0  0  2  0	85.0%		Asphalt
  0 20  0  0  0  0  0  0  0	100.0%		Bare Soil
  1  0 17  1  1  0  0  0  0	85.0%		Bitumen
  0  0  1 19  0  0  0  0  0	95.0%		Meadows
  0  0  2  0 18  0  0  0  0	90.0%		Self-Blocking Bricks
  0  0  0  1  3 16  0  0  0	80.0%		Shadows
  0  0  0  1  0  0 19  0  0	95.0%		Tiles
  0  0  0  0  0  0  0 20  0	100.0%		Trees
  0  0  0  0  0  0  0  0 20	100.0%		Water

overall_acc:	0.9222222222222223
κ =		0.9125000000000001
sensitivities:	[0.85, 1.0, 0.85, 0.95, 0.9, 0.8, 0.95, 1.0, 1.0]
specificities:	[0.99375, 1.0, 0.975, 0.98125, 0.975, 1.0, 1.0, 0.9875, 1.0]
PPVs:		[0.9444444444444444, 1.0, 0.8095238095238095, 0.8636363636363636, 0.8181818181818182, 1.0, 1.0, 0.9090909090909091, 1.0]
NPVs:		[0.9814814814814815, 1.0, 0.9811320754716981, 0.9936708860759493, 0.9873417721518988, 0.975609756097561, 0.9937888198757764, 1.0, 1.0]
F1s:		[0.8947368421052632, 1.0, 0.8292682926829268, 0.9047619047619048, 0.8571428571428571, 0.8888888888888888, 0.9743589743589743, 0.9523809523809523, 1.0]
accuracies:	[0.9777777777777777, 1.0, 0.9611111111111111, 0.9777777777777777, 0.9666666666666667, 0.9777777777777777, 0.9944444444444445, 0.9888888888888889, 1.0]
mean_accuracy:	0.9827160493827161
Dataset_slice = (900) -> [69, 125, 224, 361, 493, 514, 611, 763, 813, 56, 174, 287, 365, 435, 502, 659, 726, 860, 62, 169, 286, 356, 466, 569, 685, 738, 880, 91, 135, 227, 360, 414, 522, 653, 796, 867, 63, 180, 272, 321, 443, 562, 623, 795, 824, 66, 141, 201, 312, 426, 509, 652, 718, 802, 98, 175, 260, 368, 409, 518, 684, 749, 859, 32, 187, 210, 383, 490, 549, 636, 725, 854, 41, 185, 278, 364, 500, 551, 617, 750, 833, 100, 165, 256, 334, 417, 567, 681, 703, 830, 48, 101, 289, 351, 477, 597, 674, 791, 865, 95, 137, 246, 338, 464, 563, 682, 733, 853, 38, 149, 277, 328, 480, 578, 610, 770, 866, 57, 146, 293, 341, 412, 552, 648, 772, 851, 14, 176, 298, 390, 442, 594, 666, 727, 846, 22, 126, 218, 309, 441, 582, 655, 769, 808, 1, 120, 266, 344, 405, 592, 619, 793, 884, 93, 168, 254, 381, 419, 556, 697, 730, 826, 37, 123, 225, 313, 453, 533, 688, 728, 823, 54, 138, 204, 315, 437, 568, 643, 768, 875, 49, 156, 203, 335, 402, 507, 698, 706, 856, 58, 164, 257, 343, 440, 577, 612, 731, 845, 15, 155, 234, 394, 489, 542, 640, 775, 816, 60, 186, 285, 306, 423, 583, 637, 709, 810, 71, 107, 291, 348, 459, 513, 650, 777, 818, 85, 160, 283, 353, 496, 547, 687, 754, 861, 77, 178, 247, 316, 469, 544, 606, 741, 838, 25, 189, 237, 387, 495, 599, 692, 797, 828, 45, 182, 292, 373, 482, 584, 634, 788, 888, 39, 117, 250, 392, 456, 520, 660, 761, 894, 83, 162, 274, 346, 421, 576, 677, 739, 827, 44, 194, 231, 366, 448, 527, 691, 762, 897, 35, 112, 219, 333, 497, 560, 646, 740, 850, 28, 106, 236, 311, 468, 600, 662, 702, 852, 51, 119, 261, 310, 431, 516, 647, 737, 849, 96, 114, 273, 347, 465, 536, 670, 720, 863, 78, 163, 251, 352, 404, 538, 608, 779, 809, 2, 129, 213, 359, 403, 591, 624, 715, 848, 26, 183, 288, 308, 454, 598, 663, 701, 892, 19, 113, 282, 400, 401, 540, 625, 756, 882, 5, 111, 252, 302, 473, 566, 671, 743, 868, 10, 108, 211, 393, 427, 581, 621, 707, 893, 55, 152, 235, 342, 470, 541, 695, 717, 811, 65, 148, 276, 327, 428, 511, 673, 705, 855, 99, 136, 233, 304, 472, 546, 632, 708, 891, 6, 184, 230, 332, 413, 517, 633, 800, 812, 23, 131, 244, 330, 452, 515, 616, 766, 878, 7, 199, 240, 322, 422, 529, 627, 721, 819, 74, 142, 214, 319, 467, 505, 607, 746, 887, 86, 128, 264, 399, 494, 559, 602, 716, 847, 75, 200, 212, 389, 449, 573, 700, 755, 840, 42, 122, 300, 388, 418, 561, 622, 748, 843, 9, 150, 259, 339, 491, 510, 639, 759, 889, 11, 170, 296, 382, 484, 554, 630, 764, 805, 80, 140, 208, 374, 457, 596, 690, 751, 831, 73, 130, 239, 354, 458, 595, 631, 757, 806, 16, 134, 294, 370, 475, 519, 686, 790, 862, 31, 177, 202, 336, 432, 580, 613, 745, 872, 89, 151, 275, 317, 438, 572, 699, 712, 834, 13, 104, 243, 391, 479, 504, 680, 742, 890, 72, 144, 262, 375, 436, 548, 672, 781, 877, 84, 173, 258, 320, 451, 575, 693, 799, 836, 64, 109, 221, 350, 474, 555, 669, 744, 801, 97, 102, 228, 325, 408, 508, 683, 735, 898, 61, 118, 248, 378, 487, 553, 651, 794, 815, 59, 172, 279, 395, 434, 545, 696, 776, 817, 40, 132, 241, 358, 406, 574, 667, 753, 803, 43, 171, 217, 380, 425, 526, 679, 734, 820, 20, 124, 215, 385, 486, 501, 678, 722, 807, 30, 105, 269, 355, 445, 558, 614, 786, 825, 53, 195, 280, 369, 463, 550, 668, 771, 839, 12, 157, 297, 377, 439, 565, 644, 719, 857, 50, 159, 238, 345, 499, 589, 676, 704, 873, 34, 193, 284, 398, 424, 579, 661, 732, 870, 81, 115, 253, 397, 416, 570, 664, 724, 844, 67, 166, 222, 372, 450, 585, 649, 774, 804, 24, 127, 281, 371, 481, 524, 615, 729, 841, 4, 145, 263, 384, 492, 539, 641, 783, 871, 68, 154, 265, 324, 410, 503, 605, 765, 885, 90, 139, 255, 349, 462, 534, 665, 758, 821, 3, 143, 249, 357, 455, 506, 654, 711, 837, 52, 181, 220, 305, 420, 523, 628, 780, 883, 94, 188, 229, 329, 483, 543, 642, 785, 822, 29, 153, 270, 303, 446, 535, 626, 767, 832, 36, 179, 226, 307, 433, 564, 694, 747, 829, 82, 158, 209, 314, 478, 530, 620, 773, 900, 27, 190, 245, 318, 485, 521, 609, 760, 895, 70, 197, 206, 376, 476, 537, 657, 714, 899, 92, 196, 271, 363, 415, 532, 656, 723, 835, 76, 191, 295, 331, 447, 571, 601, 782, 858, 21, 110, 268, 337, 498, 557, 638, 792, 842, 17, 167, 242, 396, 407, 588, 629, 713, 881, 46, 192, 290, 301, 429, 531, 635, 784, 864, 18, 161, 216, 362, 430, 525, 689, 736, 814, 87, 103, 267, 379, 471, 590, 675, 789, 879, 8, 147, 232, 323, 411, 593, 604, 752, 874, 47, 198, 223, 326, 444, 586, 645, 798, 869, 33, 133, 207, 386, 488, 512, 658, 787, 896, 88, 121, 299, 340, 460, 528, 618, 778, 886, 79, 116, 205, 367, 461, 587, 603, 710, 876]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2849.75 MBs
     ├ fmd	202.31 MBs	(shape (3, 4, 3, 4, 720, 1020))
     ├ fmd_m	2647.44 MBs	(shape (3, 4, 3, 4, 720, 1020, 7), 666733200 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.1 MBs
     ├ domain shape	(3, 3, 102, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 04:46:25 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (322+398=720 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A6 ⫺₇₀ 6281), purity -1.52459141619631
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (161+161=322 samples) on frame 1 with decision: {1} A72 ⫺ 7274, purity -0.7265952870476866
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (247+151=398 samples) on frame 1 with decision: {1} A83 ⫹₇₀ 13910, purity -1.0109941190099472
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+81=161 samples) on frame 1 with decision: {1} A17 ⫺ 2393, purity -0.033467395991037596
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (75+86=161 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114), purity -0.21660984721062407
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+73=151 samples) on frame 1 with decision: {1} A25 ⫺₇₀ 11767, purity -0.03499058698461278
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (117+130=247 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A10 ⫹₈₀ 11799), purity -0.7590436727893969
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (33+84=117 samples) on frame 1 with decision: {1} ⟨EC⟩ (A95 ⫹ 22416), purity -0.5320916928867424
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (69+61=130 samples) on frame 1 with decision: {1} ⟨EC⟩ (A100 ⫹ 20535), purity -0.4043817859885891
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (8+25=33 samples) on frame 1 with decision: {1} ⟨PO⟩ (A1 ⫹₆₀ 12133), purity -0.21856863586078185
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (49+20=69 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A56 ⫺₇₀ 20671), purity -0.0575406502451802
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+78=84 samples) on frame 1 with decision: {1} ⟨DC⟩ (A41 ⫺ 20253), purity -0.28389476852042667
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A1 ⫺ 15414, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+71=78 samples) on frame 1 with decision: {1} A57 ⫹ 24036, purity -0.20257086319731135
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
1972.042775 seconds (12.08 G allocations: 645.513 GiB, 25.78% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 15
Tot nodes: 29
Height: 6
Modal height:  4
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A6 ⫺₇₀ 6281)
✔ {1} A83 ⫹₇₀ 13910
│✔ {1} A25 ⫺₇₀ 11767
││✔ Shadows : 72/73 (conf: 0.9863013698630136)
││✘ Tiles : 78/78 (conf: 1.0)
│✘ {1} ⟨T̅P̅P̅⟩ (A10 ⫹₈₀ 11799)
│ ✔ {1} ⟨EC⟩ (A100 ⫹ 20535)
│ │✔ Meadows : 58/61 (conf: 0.9508196721311475)
│ │✘ {1} ⟨T̅P̅P̅⟩ (A56 ⫺₇₀ 20671)
│ │ ✔ Meadows : 19/20 (conf: 0.95)
│ │ ✘ Bitumen : 49/49 (conf: 1.0)
│ ✘ {1} ⟨EC⟩ (A95 ⫹ 22416)
│  ✔ {1} ⟨DC⟩ (A41 ⫺ 20253)
│  │✔ {1} A57 ⫹ 24036
│  ││✔ Self-Blocking Bricks : 69/71 (conf: 0.971830985915493)
│  ││✘ Self-Blocking Bricks : 4/7 (conf: 0.5714285714285714)
│  │✘ Shadows : 6/6 (conf: 1.0)
│  ✘ {1} ⟨PO⟩ (A1 ⫹₆₀ 12133)
│   ✔ Bitumen : 24/25 (conf: 0.96)
│   ✘ {1} A1 ⫺ 15414
│    ✔ Self-Blocking Bricks : 4/4 (conf: 1.0)
│    ✘ Self-Blocking Bricks : 3/4 (conf: 0.75)
✘ {1} A72 ⫺ 7274
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114)
 │✔ Asphalt : 79/86 (conf: 0.9186046511627907)
 │✘ Trees : 73/75 (conf: 0.9733333333333334)
 ✘ {1} A17 ⫺ 2393
  ✔ Water : 80/81 (conf: 0.9876543209876543)
  ✘ Bare Soil : 80/80 (conf: 1.0)
● [ 23/07/2021 05:19:17 ] Saving tree to file ./gandalf/trees/tree_9795f3bbfccd368e87755d9da68927a7f3da42b4288497331ba40d3456f2812b.jld...
Test tree:
Decision Tree
Leaves: 15
Tot nodes: 29
Height: 6
Modal height:  4
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A6 ⫺₇₀ 6281)
✔ {1} A83 ⫹₇₀ 13910
│✔ {1} A25 ⫺₇₀ 11767
││✔ Shadows : 16/16 (conf: 1.0)
││✘ Tiles : 18/19 (conf: 0.9473684210526315)
│✘ {1} ⟨T̅P̅P̅⟩ (A10 ⫹₈₀ 11799)
│ ✔ {1} ⟨EC⟩ (A100 ⫹ 20535)
│ │✔ Meadows : 14/17 (conf: 0.8235294117647058)
│ │✘ {1} ⟨T̅P̅P̅⟩ (A56 ⫺₇₀ 20671)
│ │ ✔ Meadows : 4/4 (conf: 1.0)
│ │ ✘ Bitumen : 13/14 (conf: 0.9285714285714286)
│ ✘ {1} ⟨EC⟩ (A95 ⫹ 22416)
│  ✔ {1} ⟨DC⟩ (A41 ⫺ 20253)
│  │✔ {1} A57 ⫹ 24036
│  ││✔ Self-Blocking Bricks : 12/15 (conf: 0.8)
│  ││✘ Self-Blocking Bricks : 1/1 (conf: 1.0)
│  │✘ Shadows : 1/3 (conf: 0.3333333333333333)
│  ✘ {1} ⟨PO⟩ (A1 ⫹₆₀ 12133)
│   ✔ Bitumen : 4/5 (conf: 0.8)
│   ✘ {1} A1 ⫺ 15414
│    ✔ Self-Blocking Bricks : 3/3 (conf: 1.0)
│    ✘ Self-Blocking Bricks : 1/2 (conf: 0.5)
✘ {1} A72 ⫺ 7274
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114)
 │✔ Asphalt : 20/23 (conf: 0.8695652173913043)
 │✘ Trees : 18/18 (conf: 1.0)
 ✘ {1} A17 ⫺ 2393
  ✔ Water : 19/21 (conf: 0.9047619047619048)
  ✘ Bare Soil : 18/19 (conf: 0.9473684210526315)
 test size = [(3, 3, 102, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,PaviaCentre	3	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	90.0%	100.0%	90.0%	85.0%	90.0%	85.0%	85.0%	90.0%	90.0%	95.0%	86.96%	94.74%	89.47%	85.71%	80.95%	89.47%	94.74%	100.0%	90.48%	||	88.75%	[93.02, 92.31, 87.18, 87.8, 82.93, 87.18, 92.31, 94.74, 92.68]%	|||	90.0%	98.75%	90.28%	98.75%	90.02%	
  accuracy: 90.0% kappa: 88.75% 
 20  0  0  0  0  0  0  0  0	100.0%		Asphalt
  0 18  0  0  0  0  0  0  2	90.0%		Bare Soil
  1  0 17  0  2  0  0  0  0	85.0%		Bitumen
  0  0  1 18  0  0  1  0  0	90.0%		Meadows
  0  0  1  0 17  2  0  0  0	85.0%		Self-Blocking Bricks
  0  0  0  1  2 17  0  0  0	85.0%		Shadows
  0  0  0  2  0  0 18  0  0	90.0%		Tiles
  2  0  0  0  0  0  0 18  0	90.0%		Trees
  0  1  0  0  0  0  0  0 19	95.0%		Water

overall_acc:	0.9
κ =		0.8875000000000002
sensitivities:	[1.0, 0.9, 0.85, 0.9, 0.85, 0.85, 0.9, 0.9, 0.95]
specificities:	[0.98125, 0.99375, 0.9875, 0.98125, 0.975, 0.9875, 0.99375, 1.0, 0.9875]
PPVs:		[0.8695652173913043, 0.9473684210526315, 0.8947368421052632, 0.8571428571428571, 0.8095238095238095, 0.8947368421052632, 0.9473684210526315, 1.0, 0.9047619047619048]
NPVs:		[1.0, 0.9875776397515528, 0.9813664596273292, 0.9874213836477987, 0.9811320754716981, 0.9813664596273292, 0.9875776397515528, 0.9876543209876543, 0.9937106918238994]
F1s:		[0.9302325581395349, 0.9230769230769231, 0.8717948717948718, 0.8780487804878049, 0.8292682926829268, 0.8717948717948718, 0.9230769230769231, 0.9473684210526315, 0.926829268292683]
accuracies:	[0.9833333333333333, 0.9833333333333333, 0.9722222222222222, 0.9722222222222222, 0.9611111111111111, 0.9722222222222222, 0.9833333333333333, 0.9888888888888889, 0.9833333333333333]
mean_accuracy:	0.9777777777777776
Dataset_slice = (900) -> [60, 161, 270, 359, 480, 580, 608, 710, 877, 46, 140, 238, 345, 460, 561, 649, 741, 817, 23, 131, 243, 309, 470, 560, 652, 781, 844, 40, 121, 266, 306, 436, 558, 613, 770, 827, 68, 185, 240, 312, 488, 534, 694, 736, 860, 29, 183, 233, 332, 495, 531, 646, 744, 869, 53, 164, 208, 386, 441, 511, 603, 782, 826, 24, 154, 269, 393, 440, 551, 690, 788, 808, 83, 153, 226, 339, 425, 590, 651, 799, 833, 1, 112, 263, 302, 429, 515, 618, 776, 813, 47, 146, 273, 387, 432, 545, 602, 737, 893, 65, 110, 300, 341, 426, 529, 660, 756, 897, 98, 115, 209, 348, 419, 530, 679, 772, 874, 51, 176, 286, 395, 442, 516, 609, 775, 875, 6, 148, 212, 336, 452, 556, 654, 760, 855, 12, 103, 204, 303, 453, 600, 612, 758, 854, 45, 122, 237, 366, 420, 541, 673, 722, 819, 93, 167, 293, 368, 415, 521, 617, 707, 858, 80, 106, 241, 323, 496, 563, 662, 763, 811, 97, 193, 276, 365, 414, 592, 631, 748, 887, 5, 132, 232, 390, 444, 528, 674, 792, 888, 73, 124, 231, 358, 433, 504, 635, 764, 864, 85, 174, 265, 329, 462, 524, 686, 784, 816, 44, 134, 255, 322, 489, 578, 648, 732, 890, 18, 160, 258, 372, 493, 501, 611, 783, 837, 32, 188, 290, 394, 409, 554, 626, 745, 822, 62, 200, 206, 320, 473, 587, 675, 733, 883, 74, 111, 234, 360, 463, 514, 681, 761, 801, 49, 128, 289, 355, 406, 533, 671, 789, 840, 76, 191, 257, 381, 478, 566, 624, 729, 894, 88, 125, 274, 349, 424, 546, 698, 704, 802, 34, 101, 262, 318, 408, 573, 664, 780, 834, 2, 162, 246, 324, 486, 570, 639, 717, 857, 95, 105, 292, 337, 421, 595, 656, 778, 848, 36, 197, 207, 343, 492, 520, 622, 759, 810, 27, 147, 203, 362, 437, 577, 663, 752, 876, 35, 149, 202, 375, 411, 539, 685, 727, 803, 31, 170, 242, 374, 430, 571, 696, 779, 859, 7, 126, 247, 344, 500, 552, 620, 730, 870, 11, 184, 298, 338, 428, 532, 669, 734, 815, 52, 109, 282, 370, 456, 562, 684, 767, 831, 75, 142, 213, 328, 446, 576, 672, 716, 814, 69, 152, 287, 330, 455, 564, 627, 702, 880, 41, 172, 248, 354, 407, 582, 667, 753, 820, 22, 194, 249, 397, 466, 572, 605, 712, 898, 10, 136, 253, 399, 435, 542, 638, 790, 881, 16, 157, 228, 357, 448, 585, 650, 798, 842, 72, 178, 291, 313, 494, 526, 655, 794, 836, 61, 173, 210, 319, 404, 586, 658, 749, 871, 96, 143, 220, 351, 464, 598, 657, 751, 863, 56, 158, 299, 378, 401, 557, 615, 800, 839, 48, 175, 211, 367, 431, 509, 668, 731, 853, 89, 104, 236, 389, 417, 527, 700, 771, 861, 71, 139, 260, 376, 491, 536, 683, 754, 804, 15, 168, 280, 327, 443, 599, 653, 708, 856, 30, 119, 288, 310, 449, 594, 619, 701, 867, 90, 138, 294, 305, 459, 549, 693, 795, 882, 50, 118, 205, 400, 477, 518, 616, 714, 830, 66, 130, 252, 380, 483, 589, 637, 743, 852, 14, 144, 261, 369, 454, 503, 633, 705, 835, 100, 145, 215, 371, 447, 579, 607, 768, 846, 17, 156, 296, 356, 457, 508, 677, 746, 818, 84, 186, 227, 315, 475, 565, 691, 750, 878, 86, 179, 283, 304, 439, 548, 699, 720, 879, 92, 113, 281, 335, 461, 537, 634, 709, 841, 78, 163, 279, 342, 418, 596, 682, 719, 862, 43, 133, 217, 311, 469, 519, 643, 715, 865, 59, 169, 251, 316, 498, 547, 676, 796, 828, 54, 177, 245, 361, 403, 591, 695, 791, 885, 25, 117, 254, 384, 422, 543, 614, 769, 899, 64, 108, 264, 346, 434, 505, 640, 797, 900, 55, 165, 297, 352, 484, 593, 629, 777, 832, 99, 159, 278, 307, 416, 538, 623, 728, 892, 58, 150, 256, 388, 467, 502, 642, 739, 809, 42, 196, 250, 326, 427, 569, 604, 703, 868, 67, 141, 216, 331, 487, 525, 601, 742, 889, 3, 137, 219, 373, 445, 544, 670, 713, 807, 13, 195, 222, 377, 402, 583, 632, 723, 886, 8, 102, 259, 340, 476, 535, 610, 787, 823, 79, 151, 272, 398, 405, 512, 666, 773, 806, 91, 180, 224, 325, 471, 522, 628, 740, 825, 33, 189, 284, 333, 468, 510, 659, 718, 812, 38, 182, 268, 379, 472, 517, 647, 735, 829, 77, 166, 275, 391, 479, 523, 687, 762, 849, 9, 181, 271, 353, 499, 588, 697, 765, 843, 39, 155, 221, 317, 412, 553, 680, 785, 838, 4, 198, 277, 392, 458, 513, 661, 747, 896, 87, 199, 295, 383, 481, 550, 645, 706, 884, 21, 114, 201, 334, 465, 507, 636, 725, 847, 19, 120, 230, 363, 497, 567, 689, 724, 866, 94, 190, 229, 314, 485, 575, 621, 766, 873, 57, 116, 214, 308, 423, 597, 625, 721, 895, 82, 192, 223, 350, 450, 581, 678, 726, 851, 28, 171, 285, 347, 451, 559, 606, 786, 850, 26, 127, 225, 385, 474, 574, 630, 711, 891, 20, 107, 244, 301, 438, 506, 644, 757, 821, 81, 135, 239, 396, 482, 540, 641, 755, 824, 70, 123, 235, 321, 410, 568, 688, 793, 805, 63, 129, 267, 382, 413, 555, 665, 738, 872, 37, 187, 218, 364, 490, 584, 692, 774, 845]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2849.75 MBs
     ├ fmd	202.31 MBs	(shape (3, 4, 3, 4, 720, 1020))
     ├ fmd_m	2647.44 MBs	(shape (3, 4, 3, 4, 720, 1020, 7), 657879600 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.1 MBs
     ├ domain shape	(3, 3, 102, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 05:19:24 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (402+318=720 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A6 ⫹₇₀ 5476), purity -1.5238881254371537
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (237+165=402 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A99 ⫹₆₀ 17149), purity -1.0380698429593103
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+158=318 samples) on frame 1 with decision: {1} A72 ⫺ 7274, purity -0.69310737374891
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+81=165 samples) on frame 1 with decision: {1} A23 ⫺₆₀ 11119, purity -0.2237907803478341
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (129+108=237 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A7 ⫺₆₀ 11182), purity -0.7192239317184568
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A15 ⫺₇₀ 2675, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (86+72=158 samples) on frame 1 with decision: {1} ⟨PO⟩ (A28 ⫹₇₀ 5361), purity -0.2157944183434468
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (74+55=129 samples) on frame 1 with decision: {1} ⟨EC⟩ (A100 ⫹ 20619), purity -0.423882783354279
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (57+29=86 samples) on frame 1 with decision: {1} ⟨EC⟩ (A33 ⫹ 6605), purity -0.20885944654072042
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (38+70=108 samples) on frame 1 with decision: {1} A96 ⫹ 25729, purity -0.397264884975857
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (12+26=38 samples) on frame 1 with decision: {1} A2 ⫹ 18079, purity -0.22203205421599562
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (54+20=74 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A57 ⫺₈₀ 21309), purity -0.20345716560737415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+11=29 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A33 ⫺₈₀ 6803), purity -0.1798459463322832
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+21=26 samples) on frame 1 with decision: {1} A102 ⫺₈₀ 23388, purity -0.1827443344679297
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+7=11 samples) on frame 1 with decision: {1} A1 ⫺ 2602, purity -0.2520535202036165
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+4=20 samples) on frame 1 with decision: {1} A3 ⫹₇₀ 7817, purity -0.13862943611198905
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
1441.243025 seconds (9.79 G allocations: 502.282 GiB, 26.49% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 17
Tot nodes: 33
Height: 6
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A6 ⫹₇₀ 5476)
✔ {1} A72 ⫺ 7274
│✔ {1} ⟨PO⟩ (A28 ⫹₇₀ 5361)
││✔ Trees : 71/72 (conf: 0.9861111111111112)
││✘ {1} ⟨EC⟩ (A33 ⫹ 6605)
││ ✔ {1} ⟨T̅P̅P̅⟩ (A33 ⫺₈₀ 6803)
││ │✔ {1} A1 ⫺ 2602
││ ││✔ Trees : 7/7 (conf: 1.0)
││ ││✘ Trees : 2/4 (conf: 0.5)
││ │✘ Asphalt : 18/18 (conf: 1.0)
││ ✘ Asphalt : 57/57 (conf: 1.0)
│✘ {1} A15 ⫺₇₀ 2675
│ ✔ Water : 80/80 (conf: 1.0)
│ ✘ Bare Soil : 80/80 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A99 ⫹₆₀ 17149)
 ✔ {1} A23 ⫺₆₀ 11119
 │✔ Shadows : 78/81 (conf: 0.9629629629629629)
 │✘ Tiles : 77/84 (conf: 0.9166666666666666)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A7 ⫺₆₀ 11182)
  ✔ {1} A96 ⫹ 25729
  │✔ Self-Blocking Bricks : 67/70 (conf: 0.9571428571428572)
  │✘ {1} A2 ⫹ 18079
  │ ✔ {1} A102 ⫺₈₀ 23388
  │ │✔ Bitumen : 21/21 (conf: 1.0)
  │ │✘ Bitumen : 3/5 (conf: 0.6)
  │ ✘ Self-Blocking Bricks : 12/12 (conf: 1.0)
  ✘ {1} ⟨EC⟩ (A100 ⫹ 20619)
   ✔ Meadows : 54/55 (conf: 0.9818181818181818)
   ✘ {1} ⟨T̅P̅P̅⟩ (A57 ⫺₈₀ 21309)
    ✔ {1} A3 ⫹₇₀ 7817
    │✔ Bitumen : 2/4 (conf: 0.5)
    │✘ Meadows : 16/16 (conf: 1.0)
    ✘ Bitumen : 52/54 (conf: 0.9629629629629629)
● [ 23/07/2021 05:43:25 ] Saving tree to file ./gandalf/trees/tree_5e6111b573fb00d4535bd6d48a1c5017918d9c1172cea9610417e414d6676bb1.jld...
Test tree:
Decision Tree
Leaves: 17
Tot nodes: 33
Height: 6
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A6 ⫹₇₀ 5476)
✔ {1} A72 ⫺ 7274
│✔ {1} ⟨PO⟩ (A28 ⫹₇₀ 5361)
││✔ Trees : 17/17 (conf: 1.0)
││✘ {1} ⟨EC⟩ (A33 ⫹ 6605)
││ ✔ {1} ⟨T̅P̅P̅⟩ (A33 ⫺₈₀ 6803)
││ │✔ {1} A1 ⫺ 2602
││ ││✔ Trees : 1/3 (conf: 0.3333333333333333)
││ ││✘ Trees : 1/2 (conf: 0.5)
││ │✘ Asphalt : 0/1 (conf: 0.0)
││ ✘ Asphalt : 15/16 (conf: 0.9375)
│✘ {1} A15 ⫺₇₀ 2675
│ ✔ Water : 20/20 (conf: 1.0)
│ ✘ Bare Soil : 20/20 (conf: 1.0)
✘ {1} ⟨N̅T̅P̅P̅⟩ (A99 ⫹₆₀ 17149)
 ✔ {1} A23 ⫺₆₀ 11119
 │✔ Shadows : 13/13 (conf: 1.0)
 │✘ Tiles : 20/21 (conf: 0.9523809523809523)
 ✘ {1} ⟨N̅T̅P̅P̅⟩ (A7 ⫺₆₀ 11182)
  ✔ {1} A96 ⫹ 25729
  │✔ Self-Blocking Bricks : 18/23 (conf: 0.782608695652174)
  │✘ {1} A2 ⫹ 18079
  │ ✔ {1} A102 ⫺₈₀ 23388
  │ │✔ Bitumen : 4/4 (conf: 1.0)
  │ │✘ Bitumen : 0/0 (conf: NaN)
  │ ✘ Self-Blocking Bricks : 2/3 (conf: 0.6666666666666666)
  ✘ {1} ⟨EC⟩ (A100 ⫹ 20619)
   ✔ Meadows : 15/18 (conf: 0.8333333333333334)
   ✘ {1} ⟨T̅P̅P̅⟩ (A57 ⫺₈₀ 21309)
    ✔ {1} A3 ⫹₇₀ 7817
    │✔ Bitumen : 0/1 (conf: 0.0)
    │✘ Meadows : 3/5 (conf: 0.6)
    ✘ Bitumen : 11/13 (conf: 0.8461538461538461)
 test size = [(3, 3, 102, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,PaviaCentre	4	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	88.89%	75.0%	100.0%	75.0%	90.0%	100.0%	65.0%	100.0%	95.0%	100.0%	88.24%	100.0%	83.33%	78.26%	76.92%	100.0%	95.24%	86.36%	100.0%	||	87.5%	[81.08, 100.0, 78.95, 83.72, 86.96, 78.79, 97.56, 90.48, 100.0]%	|||	88.89%	98.61%	89.82%	98.64%	88.61%	
  accuracy: 88.89% kappa: 87.5% 
 15  0  2  0  0  0  0  3  0	75.0%		Asphalt
  0 20  0  0  0  0  0  0  0	100.0%		Bare Soil
  0  0 15  4  1  0  0  0  0	75.0%		Bitumen
  1  0  1 18  0  0  0  0  0	90.0%		Meadows
  0  0  0  0 20  0  0  0  0	100.0%		Self-Blocking Bricks
  0  0  0  1  5 13  1  0  0	65.0%		Shadows
  0  0  0  0  0  0 20  0  0	100.0%		Tiles
  1  0  0  0  0  0  0 19  0	95.0%		Trees
  0  0  0  0  0  0  0  0 20	100.0%		Water

overall_acc:	0.8888888888888888
κ =		0.8749999999999999
sensitivities:	[0.75, 1.0, 0.75, 0.9, 1.0, 0.65, 1.0, 0.95, 1.0]
specificities:	[0.9875, 1.0, 0.98125, 0.96875, 0.9625, 1.0, 0.99375, 0.98125, 1.0]
PPVs:		[0.8823529411764706, 1.0, 0.8333333333333334, 0.782608695652174, 0.7692307692307693, 1.0, 0.9523809523809523, 0.8636363636363636, 1.0]
NPVs:		[0.9693251533742331, 1.0, 0.9691358024691358, 0.9872611464968153, 1.0, 0.9580838323353293, 1.0, 0.9936708860759493, 1.0]
F1s:		[0.8108108108108109, 1.0, 0.7894736842105263, 0.8372093023255814, 0.8695652173913043, 0.7878787878787878, 0.975609756097561, 0.9047619047619048, 1.0]
accuracies:	[0.9611111111111111, 1.0, 0.9555555555555556, 0.9611111111111111, 0.9666666666666667, 0.9611111111111111, 0.9944444444444445, 0.9777777777777777, 1.0]
mean_accuracy:	0.9753086419753088
Dataset_slice = (900) -> [10, 116, 221, 307, 469, 514, 633, 738, 882, 12, 188, 231, 354, 401, 560, 622, 715, 890, 84, 193, 239, 362, 483, 542, 675, 754, 826, 52, 131, 230, 337, 491, 527, 664, 792, 833, 45, 175, 218, 385, 492, 523, 695, 788, 851, 87, 192, 265, 383, 486, 503, 657, 744, 817, 14, 190, 264, 381, 480, 580, 697, 760, 849, 20, 142, 242, 352, 422, 531, 678, 762, 850, 39, 159, 210, 355, 453, 561, 629, 766, 848, 9, 138, 279, 380, 488, 544, 665, 716, 819, 38, 119, 250, 391, 454, 541, 673, 782, 816, 43, 155, 289, 365, 495, 512, 669, 789, 853, 23, 187, 292, 316, 457, 600, 616, 783, 820, 92, 132, 205, 389, 403, 504, 607, 755, 875, 93, 113, 286, 356, 440, 519, 631, 771, 821, 51, 145, 296, 366, 418, 557, 699, 739, 843, 89, 158, 240, 368, 433, 584, 684, 756, 811, 67, 146, 259, 336, 449, 515, 693, 759, 892, 100, 176, 244, 372, 464, 534, 632, 711, 865, 71, 164, 283, 390, 460, 546, 656, 704, 802, 36, 128, 243, 325, 404, 567, 659, 710, 857, 19, 153, 236, 306, 412, 596, 615, 751, 827, 94, 126, 237, 400, 496, 537, 618, 736, 847, 68, 137, 260, 308, 466, 533, 658, 786, 803, 22, 120, 222, 360, 493, 517, 610, 798, 900, 21, 169, 214, 332, 445, 506, 660, 714, 831, 1, 136, 290, 397, 413, 554, 686, 725, 805, 5, 189, 238, 315, 414, 592, 642, 728, 863, 53, 148, 235, 318, 456, 505, 681, 772, 801, 46, 104, 300, 311, 497, 569, 691, 779, 870, 91, 179, 297, 303, 416, 572, 627, 799, 822, 3, 194, 248, 304, 408, 599, 617, 720, 823, 34, 108, 285, 335, 407, 502, 637, 749, 858, 41, 197, 247, 320, 437, 529, 620, 713, 899, 62, 167, 281, 384, 431, 579, 641, 707, 838, 75, 199, 272, 331, 411, 552, 612, 765, 830, 73, 129, 257, 317, 439, 564, 672, 741, 889, 97, 105, 209, 377, 420, 516, 690, 745, 842, 55, 161, 217, 324, 475, 508, 687, 784, 872, 80, 180, 298, 305, 430, 538, 653, 761, 846, 59, 173, 212, 328, 424, 536, 692, 712, 814, 63, 124, 206, 338, 438, 556, 680, 780, 877, 4, 112, 204, 394, 417, 553, 630, 702, 815, 54, 191, 220, 369, 435, 524, 670, 724, 841, 74, 182, 274, 359, 443, 543, 679, 769, 812, 95, 195, 234, 375, 470, 551, 608, 726, 844, 78, 117, 277, 312, 487, 521, 689, 795, 809, 96, 107, 226, 321, 451, 522, 638, 757, 887, 99, 184, 255, 392, 410, 597, 655, 719, 879, 16, 178, 232, 347, 423, 571, 700, 787, 824, 72, 106, 249, 346, 479, 568, 639, 733, 896, 90, 162, 295, 326, 406, 588, 604, 763, 891, 60, 121, 288, 313, 471, 558, 652, 796, 861, 44, 122, 219, 393, 434, 555, 651, 718, 808, 18, 115, 275, 327, 402, 562, 676, 797, 852, 25, 109, 299, 358, 473, 587, 677, 732, 860, 32, 125, 252, 334, 429, 548, 654, 777, 818, 77, 147, 211, 343, 459, 595, 674, 747, 886, 28, 200, 251, 363, 444, 539, 625, 740, 837, 24, 133, 284, 322, 481, 525, 645, 785, 856, 76, 130, 213, 357, 432, 578, 647, 776, 806, 17, 101, 293, 344, 499, 582, 623, 774, 898, 65, 114, 227, 314, 442, 511, 614, 742, 880, 31, 183, 203, 349, 482, 513, 663, 743, 878, 30, 149, 291, 373, 450, 535, 635, 717, 884, 50, 141, 225, 310, 500, 590, 611, 767, 813, 85, 139, 233, 341, 468, 507, 682, 727, 895, 26, 165, 258, 333, 447, 509, 628, 737, 807, 33, 144, 270, 378, 462, 598, 698, 708, 873, 37, 123, 269, 398, 441, 545, 650, 770, 834, 64, 110, 215, 345, 474, 570, 643, 703, 893, 56, 177, 266, 329, 425, 589, 609, 706, 888, 27, 170, 246, 350, 472, 520, 605, 701, 876, 49, 118, 268, 376, 465, 576, 661, 752, 869, 57, 196, 262, 351, 476, 577, 640, 735, 864, 69, 174, 245, 388, 428, 518, 636, 768, 894, 70, 154, 224, 399, 455, 540, 667, 758, 810, 8, 198, 253, 370, 494, 573, 613, 781, 836, 83, 181, 208, 340, 478, 594, 648, 750, 804, 15, 186, 254, 309, 458, 547, 696, 753, 854, 98, 102, 267, 323, 490, 565, 646, 794, 897, 11, 171, 223, 386, 498, 575, 621, 764, 874, 7, 150, 261, 339, 477, 549, 606, 729, 839, 29, 151, 278, 364, 463, 510, 694, 723, 855, 2, 156, 273, 342, 426, 559, 688, 773, 883, 48, 143, 263, 301, 467, 563, 603, 775, 835, 61, 185, 256, 367, 461, 574, 685, 793, 868, 82, 152, 202, 330, 436, 530, 644, 730, 829, 6, 160, 280, 348, 485, 585, 666, 721, 825, 81, 168, 207, 396, 421, 526, 662, 790, 867, 79, 166, 276, 353, 419, 591, 624, 800, 845, 88, 140, 294, 361, 415, 583, 626, 734, 862, 35, 111, 229, 382, 489, 581, 634, 731, 832, 13, 103, 201, 302, 427, 532, 683, 748, 881, 66, 127, 287, 395, 452, 501, 602, 709, 866, 47, 135, 271, 387, 446, 566, 619, 791, 885, 42, 157, 241, 374, 448, 528, 649, 746, 828, 40, 163, 282, 319, 484, 593, 668, 778, 859, 86, 172, 228, 371, 405, 586, 671, 705, 840, 58, 134, 216, 379, 409, 550, 601, 722, 871]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2849.75 MBs
     ├ fmd	202.31 MBs	(shape (3, 4, 3, 4, 720, 1020))
     ├ fmd_m	2647.44 MBs	(shape (3, 4, 3, 4, 720, 1020, 7), 649789980 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.1 MBs
     ├ domain shape	(3, 3, 102, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 05:43:32 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (319+401=720 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫺₇₀ 4859), purity -1.5180431494473907
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+159=319 samples) on frame 1 with decision: {1} A72 ⫺ 7817, purity -0.6931373226451498
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (242+159=401 samples) on frame 1 with decision: {1} A100 ⫹₆₀ 17066, purity -1.0510776403275135
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (84+75=159 samples) on frame 1 with decision: {1} A23 ⫺₆₀ 11119, purity -0.21094281766761352
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A19 ⫺ 2707, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (71+88=159 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114), purity -0.1826681643595065
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (132+110=242 samples) on frame 1 with decision: {1} A7 ⫺₆₀ 11182, purity -0.7221711210931633
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (55+77=132 samples) on frame 1 with decision: {1} A100 ⫺ 20891, purity -0.4519432151726016
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (26+62=88 samples) on frame 1 with decision: {1} A31 ⫺ 6584, purity -0.19057797663155557
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+34=110 samples) on frame 1 with decision: {1} A83 ⫺₈₀ 23942, purity -0.37806931892360024
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (17+9=26 samples) on frame 1 with decision: {1} A10 ⫺₈₀ 2717, purity -0.2670267752194795
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (25+9=34 samples) on frame 1 with decision: {1} A1 ⫺ 10639, purity -0.12348834392218552
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (54+23=77 samples) on frame 1 with decision: {1} A57 ⫺₆₀ 21110, purity -0.11809220894410165
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A1 ⫺ 2602, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
358.829934 seconds (4.33 G allocations: 90.260 GiB, 11.14% gc time)
Train tree:
Decision Tree
Leaves: 15
Tot nodes: 29
Height: 6
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A6 ⫺₇₀ 4859)
✔ {1} A100 ⫹₆₀ 17066
│✔ {1} A23 ⫺₆₀ 11119
││✔ Shadows : 73/75 (conf: 0.9733333333333334)
││✘ Tiles : 78/84 (conf: 0.9285714285714286)
│✘ {1} A7 ⫺₆₀ 11182
│ ✔ {1} A83 ⫺₈₀ 23942
│ │✔ {1} A1 ⫺ 10639
│ ││✔ Self-Blocking Bricks : 9/9 (conf: 1.0)
│ ││✘ Bitumen : 24/25 (conf: 0.96)
│ │✘ Self-Blocking Bricks : 70/76 (conf: 0.9210526315789473)
│ ✘ {1} A100 ⫺ 20891
│  ✔ {1} A57 ⫺₆₀ 21110
│  │✔ Meadows : 22/23 (conf: 0.9565217391304348)
│  │✘ Bitumen : 53/54 (conf: 0.9814814814814815)
│  ✘ Meadows : 53/55 (conf: 0.9636363636363636)
✘ {1} A72 ⫺ 7817
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114)
 │✔ {1} A31 ⫺ 6584
 ││✔ Asphalt : 62/62 (conf: 1.0)
 ││✘ {1} A10 ⫺₈₀ 2717
 ││ ✔ {1} A1 ⫺ 2602
 ││ │✔ Trees : 5/5 (conf: 1.0)
 ││ │✘ Trees : 3/4 (conf: 0.75)
 ││ ✘ Asphalt : 16/17 (conf: 0.9411764705882353)
 │✘ Trees : 71/71 (conf: 1.0)
 ✘ {1} A19 ⫺ 2707
  ✔ Water : 80/80 (conf: 1.0)
  ✘ Bare Soil : 80/80 (conf: 1.0)
● [ 23/07/2021 05:49:31 ] Saving tree to file ./gandalf/trees/tree_4e21f5e2de1a4dde366c1a7ebf7b391d92b9d0945a56d4d145d8daf3fad3b0da.jld...
Test tree:
Decision Tree
Leaves: 15
Tot nodes: 29
Height: 6
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A6 ⫺₇₀ 4859)
✔ {1} A100 ⫹₆₀ 17066
│✔ {1} A23 ⫺₆₀ 11119
││✔ Shadows : 19/20 (conf: 0.95)
││✘ Tiles : 19/21 (conf: 0.9047619047619048)
│✘ {1} A7 ⫺₆₀ 11182
│ ✔ {1} A83 ⫺₈₀ 23942
│ │✔ {1} A1 ⫺ 10639
│ ││✔ Self-Blocking Bricks : 4/4 (conf: 1.0)
│ ││✘ Bitumen : 4/6 (conf: 0.6666666666666666)
│ │✘ Self-Blocking Bricks : 15/17 (conf: 0.8823529411764706)
│ ✘ {1} A100 ⫺ 20891
│  ✔ {1} A57 ⫺₆₀ 21110
│  │✔ Meadows : 0/1 (conf: 0.0)
│  │✘ Bitumen : 12/16 (conf: 0.75)
│  ✘ Meadows : 16/18 (conf: 0.8888888888888888)
✘ {1} A72 ⫺ 7817
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114)
 │✔ {1} A31 ⫺ 6584
 ││✔ Asphalt : 10/10 (conf: 1.0)
 ││✘ {1} A10 ⫺₈₀ 2717
 ││ ✔ {1} A1 ⫺ 2602
 ││ │✔ Trees : 0/0 (conf: NaN)
 ││ │✘ Trees : 0/1 (conf: 0.0)
 ││ ✘ Asphalt : 5/5 (conf: 1.0)
 │✘ Trees : 19/20 (conf: 0.95)
 ✘ {1} A19 ⫺ 2707
  ✔ Water : 20/20 (conf: 1.0)
  ✘ Bare Soil : 20/21 (conf: 0.9523809523809523)
 test size = [(3, 3, 102, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,PaviaCentre	5	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	90.56%	75.0%	100.0%	80.0%	80.0%	95.0%	95.0%	95.0%	95.0%	100.0%	100.0%	95.24%	72.73%	84.21%	90.48%	95.0%	90.48%	90.48%	100.0%	||	89.38%	[85.71, 97.56, 76.19, 82.05, 92.68, 95.0, 92.68, 92.68, 100.0]%	|||	90.56%	98.82%	90.96%	98.83%	90.51%	
  accuracy: 90.56% kappa: 89.38% 
 15  0  3  0  0  0  0  2  0	75.0%		Asphalt
  0 20  0  0  0  0  0  0  0	100.0%		Bare Soil
  0  0 16  2  2  0  0  0  0	80.0%		Bitumen
  0  0  2 16  0  0  2  0  0	80.0%		Meadows
  0  0  1  0 19  0  0  0  0	95.0%		Self-Blocking Bricks
  0  0  0  1  0 19  0  0  0	95.0%		Shadows
  0  0  0  0  0  1 19  0  0	95.0%		Tiles
  0  1  0  0  0  0  0 19  0	95.0%		Trees
  0  0  0  0  0  0  0  0 20	100.0%		Water

overall_acc:	0.9055555555555556
κ =		0.8937500000000002
sensitivities:	[0.75, 1.0, 0.8, 0.8, 0.95, 0.95, 0.95, 0.95, 1.0]
specificities:	[1.0, 0.99375, 0.9625, 0.98125, 0.9875, 0.99375, 0.9875, 0.9875, 1.0]
PPVs:		[1.0, 0.9523809523809523, 0.7272727272727273, 0.8421052631578947, 0.9047619047619048, 0.95, 0.9047619047619048, 0.9047619047619048, 1.0]
NPVs:		[0.9696969696969697, 1.0, 0.9746835443037974, 0.9751552795031055, 0.9937106918238994, 0.99375, 0.9937106918238994, 0.9937106918238994, 1.0]
F1s:		[0.8571428571428571, 0.975609756097561, 0.7619047619047619, 0.8205128205128205, 0.926829268292683, 0.95, 0.926829268292683, 0.926829268292683, 1.0]
accuracies:	[0.9722222222222222, 0.9944444444444445, 0.9444444444444444, 0.9611111111111111, 0.9833333333333333, 0.9888888888888889, 0.9833333333333333, 0.9833333333333333, 1.0]
mean_accuracy:	0.9790123456790124
Dataset_slice = (900) -> [68, 113, 288, 329, 406, 554, 655, 710, 862, 53, 120, 291, 341, 461, 505, 698, 752, 882, 72, 123, 234, 372, 472, 560, 663, 709, 872, 28, 128, 298, 379, 479, 553, 632, 745, 818, 84, 172, 287, 311, 466, 538, 673, 773, 871, 96, 182, 229, 309, 491, 516, 668, 708, 899, 91, 200, 222, 382, 418, 508, 627, 753, 877, 42, 156, 226, 342, 429, 562, 694, 750, 801, 33, 167, 204, 385, 498, 502, 635, 701, 823, 4, 158, 259, 316, 486, 511, 631, 765, 806, 63, 102, 220, 354, 496, 551, 700, 717, 851, 21, 101, 266, 327, 485, 570, 662, 742, 859, 79, 179, 270, 393, 404, 537, 693, 725, 900, 15, 151, 214, 332, 454, 532, 612, 732, 838, 22, 115, 217, 375, 468, 578, 615, 748, 805, 51, 118, 235, 378, 469, 525, 681, 784, 810, 32, 153, 232, 352, 470, 506, 646, 729, 893, 70, 160, 244, 373, 464, 595, 640, 743, 873, 66, 138, 250, 380, 437, 514, 609, 751, 830, 99, 176, 277, 338, 417, 547, 664, 798, 814, 40, 168, 258, 305, 482, 577, 622, 779, 844, 64, 196, 240, 363, 477, 521, 613, 724, 811, 19, 150, 282, 347, 401, 529, 671, 723, 876, 73, 140, 201, 337, 489, 550, 611, 707, 822, 18, 186, 215, 304, 492, 581, 624, 711, 847, 80, 106, 289, 353, 425, 585, 676, 799, 809, 60, 170, 223, 330, 416, 515, 606, 781, 807, 3, 144, 290, 392, 435, 530, 660, 769, 896, 87, 124, 286, 384, 483, 534, 638, 746, 835, 43, 131, 284, 346, 420, 552, 621, 737, 868, 9, 143, 253, 361, 421, 531, 661, 764, 804, 20, 162, 261, 308, 438, 513, 658, 712, 870, 1, 110, 254, 343, 484, 543, 601, 758, 808, 62, 174, 252, 349, 443, 567, 649, 714, 834, 45, 135, 205, 339, 436, 510, 683, 791, 856, 30, 134, 238, 367, 473, 539, 628, 728, 890, 76, 148, 275, 325, 474, 544, 618, 722, 866, 37, 173, 280, 359, 407, 557, 691, 747, 803, 38, 137, 297, 377, 427, 535, 678, 793, 812, 23, 166, 233, 399, 453, 523, 656, 726, 855, 57, 132, 260, 365, 442, 526, 680, 727, 865, 75, 108, 264, 333, 451, 563, 636, 738, 854, 35, 145, 202, 312, 411, 573, 686, 749, 869, 55, 159, 269, 340, 460, 566, 688, 718, 864, 50, 164, 225, 344, 500, 579, 645, 731, 821, 95, 103, 300, 395, 452, 527, 641, 713, 842, 61, 155, 212, 386, 471, 600, 603, 736, 816, 82, 105, 228, 387, 446, 518, 659, 716, 817, 12, 161, 216, 383, 493, 575, 651, 721, 853, 74, 112, 206, 381, 444, 509, 654, 794, 819, 94, 180, 230, 390, 423, 504, 604, 740, 813, 49, 109, 293, 336, 409, 555, 633, 797, 825, 6, 184, 221, 324, 456, 549, 684, 756, 858, 24, 187, 241, 345, 495, 546, 625, 766, 826, 90, 114, 265, 364, 449, 558, 620, 786, 860, 93, 121, 251, 351, 412, 556, 695, 788, 874, 14, 177, 272, 358, 467, 587, 677, 703, 839, 47, 169, 239, 400, 431, 533, 643, 792, 846, 89, 194, 263, 391, 445, 528, 642, 777, 892, 81, 147, 211, 369, 403, 522, 607, 734, 848, 39, 127, 242, 397, 405, 571, 674, 780, 887, 11, 195, 208, 334, 459, 569, 614, 770, 827, 58, 192, 207, 319, 490, 599, 644, 787, 880, 92, 199, 209, 388, 487, 572, 667, 772, 867, 52, 104, 203, 396, 439, 576, 637, 795, 881, 59, 188, 227, 348, 441, 540, 657, 774, 841, 48, 193, 237, 315, 402, 542, 610, 739, 802, 7, 122, 283, 317, 457, 598, 608, 735, 857, 54, 141, 246, 303, 488, 561, 616, 757, 878, 17, 126, 285, 389, 478, 512, 687, 767, 824, 56, 171, 248, 398, 434, 517, 690, 800, 879, 97, 133, 271, 318, 481, 541, 679, 715, 875, 29, 189, 245, 322, 440, 589, 669, 705, 843, 34, 163, 296, 356, 450, 596, 692, 762, 886, 77, 185, 292, 328, 414, 584, 630, 754, 833, 46, 107, 236, 326, 419, 565, 619, 730, 852, 71, 116, 257, 394, 465, 507, 648, 776, 820, 31, 183, 247, 366, 494, 594, 602, 720, 891, 26, 198, 279, 357, 410, 564, 634, 778, 888, 25, 190, 224, 355, 455, 524, 653, 790, 863, 65, 178, 231, 313, 499, 536, 672, 719, 845, 83, 146, 219, 350, 480, 591, 665, 706, 832, 2, 152, 267, 320, 415, 574, 605, 704, 895, 8, 154, 295, 376, 408, 586, 647, 771, 898, 27, 157, 276, 321, 463, 592, 699, 768, 850, 85, 181, 268, 362, 458, 588, 689, 783, 829, 86, 125, 278, 331, 424, 580, 682, 782, 849, 36, 111, 243, 307, 432, 582, 685, 702, 884, 78, 117, 299, 306, 413, 548, 626, 789, 828, 44, 197, 210, 335, 497, 519, 666, 755, 815, 10, 175, 273, 314, 476, 501, 629, 785, 840, 98, 191, 256, 302, 428, 597, 650, 760, 889, 69, 139, 274, 374, 422, 520, 652, 744, 897, 67, 165, 281, 360, 426, 559, 639, 759, 831, 16, 149, 249, 310, 462, 590, 696, 775, 894, 13, 129, 255, 368, 447, 583, 670, 741, 861, 5, 136, 213, 370, 448, 593, 617, 763, 883, 41, 142, 218, 301, 433, 545, 697, 761, 836, 88, 130, 262, 323, 475, 568, 623, 796, 885, 100, 119, 294, 371, 430, 503, 675, 733, 837]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2849.75 MBs
     ├ fmd	202.31 MBs	(shape (3, 4, 3, 4, 720, 1020))
     ├ fmd_m	2647.44 MBs	(shape (3, 4, 3, 4, 720, 1020, 7), 649147380 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.1 MBs
     ├ domain shape	(3, 3, 102, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 05:49:38 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (319+401=720 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A6 ⫺₇₀ 4859), purity -1.5180431494473907
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+159=319 samples) on frame 1 with decision: {1} A71 ⫺ 6197, purity -0.6931373226451498
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (241+160=401 samples) on frame 1 with decision: {1} A100 ⫹₆₀ 17066, purity -1.0565454654912088
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (86+74=160 samples) on frame 1 with decision: {1} A23 ⫺₆₀ 11255, purity -0.20271380006759143
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+80=160 samples) on frame 1 with decision: {1} A19 ⫺ 2707, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (77+82=159 samples) on frame 1 with decision: {1} ⟨EC⟩ (A29 ⫹ 5581), purity -0.11450342569649247
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (112+129=241 samples) on frame 1 with decision: {1} A12 ⫹₈₀ 13951, purity -0.7280436545987108
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+8=86 samples) on frame 1 with decision: {1} ⟨NTPP⟩ (A81 ⫺ 13512), purity -0.11452269948842948
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (40+72=112 samples) on frame 1 with decision: {1} A86 ⫹₇₀ 24026, purity -0.4156255030484724
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (59+70=129 samples) on frame 1 with decision: {1} A100 ⫺ 20891, purity -0.4069756534187087
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A1 ⫺ 10503, purity -0.34657359027997264
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (11+29=40 samples) on frame 1 with decision: {1} A2 ⫹ 18079, purity -0.24113080537612178
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (18+52=70 samples) on frame 1 with decision: {1} A65 ⫹₆₀ 22573, purity -0.12576615557812712
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (25+4=29 samples) on frame 1 with decision: {1} A69 ⫹ 25708, purity -0.0775634682232839
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
345.580928 seconds (4.19 G allocations: 80.539 GiB, 9.51% gc time, 0.01% compilation time)
Train tree:
Decision Tree
Leaves: 15
Tot nodes: 29
Height: 6
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A6 ⫺₇₀ 4859)
✔ {1} A100 ⫹₆₀ 17066
│✔ {1} A23 ⫺₆₀ 11255
││✔ Shadows : 73/74 (conf: 0.9864864864864865)
││✘ {1} ⟨NTPP⟩ (A81 ⫺ 13512)
││ ✔ {1} A1 ⫺ 10503
││ │✔ Tiles : 2/4 (conf: 0.5)
││ │✘ Meadows : 4/4 (conf: 1.0)
││ ✘ Tiles : 77/78 (conf: 0.9871794871794872)
│✘ {1} A12 ⫹₈₀ 13951
│ ✔ {1} A100 ⫺ 20891
│ │✔ {1} A65 ⫹₆₀ 22573
│ ││✔ Bitumen : 51/52 (conf: 0.9807692307692307)
│ ││✘ Meadows : 17/18 (conf: 0.9444444444444444)
│ │✘ Meadows : 57/59 (conf: 0.9661016949152542)
│ ✘ {1} A86 ⫹₇₀ 24026
│  ✔ Self-Blocking Bricks : 66/72 (conf: 0.9166666666666666)
│  ✘ {1} A2 ⫹ 18079
│   ✔ {1} A69 ⫹ 25708
│   │✔ Self-Blocking Bricks : 3/4 (conf: 0.75)
│   │✘ Bitumen : 25/25 (conf: 1.0)
│   ✘ Self-Blocking Bricks : 11/11 (conf: 1.0)
✘ {1} A71 ⫺ 6197
 ✔ {1} ⟨EC⟩ (A29 ⫹ 5581)
 │✔ Trees : 79/82 (conf: 0.9634146341463414)
 │✘ Asphalt : 76/77 (conf: 0.987012987012987)
 ✘ {1} A19 ⫺ 2707
  ✔ Water : 80/80 (conf: 1.0)
  ✘ Bare Soil : 80/80 (conf: 1.0)
● [ 23/07/2021 05:55:23 ] Saving tree to file ./gandalf/trees/tree_c0b3c155df7a3ed161ccb3fba354f19011c7f1cc73331923bdc539dbcd00acc9.jld...
Test tree:
Decision Tree
Leaves: 15
Tot nodes: 29
Height: 6
Modal height:  2
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨N̅T̅P̅P̅⟩ (A6 ⫺₇₀ 4859)
✔ {1} A100 ⫹₆₀ 17066
│✔ {1} A23 ⫺₆₀ 11255
││✔ Shadows : 18/19 (conf: 0.9473684210526315)
││✘ {1} ⟨NTPP⟩ (A81 ⫺ 13512)
││ ✔ {1} A1 ⫺ 10503
││ │✔ Tiles : 0/0 (conf: NaN)
││ │✘ Meadows : 1/1 (conf: 1.0)
││ ✘ Tiles : 19/20 (conf: 0.95)
│✘ {1} A12 ⫹₈₀ 13951
│ ✔ {1} A100 ⫺ 20891
│ │✔ {1} A65 ⫹₆₀ 22573
│ ││✔ Bitumen : 13/16 (conf: 0.8125)
│ ││✘ Meadows : 6/7 (conf: 0.8571428571428571)
│ │✘ Meadows : 11/12 (conf: 0.9166666666666666)
│ ✘ {1} A86 ⫹₇₀ 24026
│  ✔ Self-Blocking Bricks : 14/15 (conf: 0.9333333333333333)
│  ✘ {1} A2 ⫹ 18079
│   ✔ {1} A69 ⫹ 25708
│   │✔ Self-Blocking Bricks : 0/1 (conf: 0.0)
│   │✘ Bitumen : 3/8 (conf: 0.375)
│   ✘ Self-Blocking Bricks : 3/4 (conf: 0.75)
✘ {1} A71 ⫺ 6197
 ✔ {1} ⟨EC⟩ (A29 ⫹ 5581)
 │✔ Trees : 16/18 (conf: 0.8888888888888888)
 │✘ Asphalt : 15/21 (conf: 0.7142857142857143)
 ✘ {1} A19 ⫺ 2707
  ✔ Water : 18/18 (conf: 1.0)
  ✘ Bare Soil : 20/20 (conf: 1.0)
 test size = [(3, 3, 102, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,PaviaCentre	6	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	87.22%	75.0%	100.0%	80.0%	90.0%	85.0%	90.0%	95.0%	80.0%	90.0%	71.43%	100.0%	66.67%	90.0%	85.0%	94.74%	95.0%	88.89%	100.0%	||	85.62%	[73.17, 100.0, 72.73, 90.0, 85.0, 92.31, 95.0, 84.21, 94.74]%	|||	87.22%	98.4%	87.97%	98.4%	87.46%	
  accuracy: 87.22% kappa: 85.62% 
 15  0  3  0  0  0  0  2  0	75.0%		Asphalt
  0 20  0  0  0  0  0  0  0	100.0%		Bare Soil
  0  0 16  2  2  0  0  0  0	80.0%		Bitumen
  0  0  2 18  0  0  0  0  0	90.0%		Meadows
  0  0  3  0 17  0  0  0  0	85.0%		Self-Blocking Bricks
  0  0  0  0  1 18  1  0  0	90.0%		Shadows
  0  0  0  0  0  1 19  0  0	95.0%		Tiles
  4  0  0  0  0  0  0 16  0	80.0%		Trees
  2  0  0  0  0  0  0  0 18	90.0%		Water

overall_acc:	0.8722222222222222
κ =		0.85625
sensitivities:	[0.75, 1.0, 0.8, 0.9, 0.85, 0.9, 0.95, 0.8, 0.9]
specificities:	[0.9625, 1.0, 0.95, 0.9875, 0.98125, 0.99375, 0.99375, 0.9875, 1.0]
PPVs:		[0.7142857142857143, 1.0, 0.6666666666666666, 0.9, 0.85, 0.9473684210526315, 0.95, 0.8888888888888888, 1.0]
NPVs:		[0.9685534591194969, 1.0, 0.9743589743589743, 0.9875, 0.98125, 0.9875776397515528, 0.99375, 0.9753086419753086, 0.9876543209876543]
F1s:		[0.7317073170731707, 1.0, 0.7272727272727273, 0.9, 0.85, 0.9230769230769231, 0.95, 0.8421052631578947, 0.9473684210526315]
accuracies:	[0.9388888888888889, 1.0, 0.9333333333333333, 0.9777777777777777, 0.9666666666666667, 0.9833333333333333, 0.9888888888888889, 0.9666666666666667, 0.9888888888888889]
mean_accuracy:	0.9716049382716049
Dataset_slice = (900) -> [20, 148, 247, 348, 409, 562, 685, 736, 873, 36, 113, 203, 353, 426, 567, 608, 720, 812, 75, 145, 228, 390, 401, 547, 663, 735, 807, 9, 112, 249, 319, 421, 510, 661, 792, 865, 92, 159, 288, 325, 482, 513, 648, 741, 803, 88, 121, 212, 365, 407, 588, 626, 748, 885, 28, 186, 224, 360, 406, 551, 662, 734, 857, 79, 198, 274, 367, 408, 523, 633, 708, 826, 8, 118, 297, 387, 439, 502, 687, 737, 890, 73, 122, 204, 330, 479, 565, 683, 789, 836, 83, 194, 243, 374, 472, 552, 632, 775, 856, 40, 185, 275, 366, 446, 594, 700, 784, 821, 61, 195, 273, 356, 473, 528, 620, 745, 810, 70, 136, 202, 343, 455, 558, 673, 783, 830, 51, 155, 282, 397, 450, 533, 647, 777, 892, 48, 161, 245, 331, 499, 518, 676, 728, 872, 50, 130, 281, 361, 425, 537, 671, 701, 852, 13, 103, 293, 378, 444, 583, 627, 788, 815, 27, 187, 240, 372, 415, 579, 606, 722, 823, 35, 125, 217, 391, 440, 535, 609, 706, 867, 69, 120, 236, 354, 466, 524, 628, 730, 868, 45, 157, 253, 309, 458, 517, 610, 791, 811, 97, 200, 277, 334, 485, 573, 617, 733, 900, 68, 197, 294, 394, 476, 543, 646, 727, 833, 3, 156, 264, 335, 423, 548, 640, 757, 831, 85, 102, 260, 381, 437, 597, 642, 723, 881, 94, 191, 234, 313, 416, 509, 653, 781, 893, 7, 140, 238, 399, 434, 566, 645, 763, 848, 19, 119, 226, 369, 462, 598, 680, 709, 835, 87, 167, 287, 318, 478, 563, 604, 755, 883, 1, 184, 262, 326, 483, 544, 636, 715, 820, 16, 163, 235, 306, 412, 532, 615, 766, 814, 25, 123, 284, 373, 414, 526, 691, 786, 859, 31, 196, 270, 398, 449, 557, 693, 751, 825, 64, 129, 211, 338, 500, 534, 619, 762, 828, 81, 146, 206, 388, 447, 515, 681, 796, 889, 57, 138, 246, 358, 420, 555, 605, 710, 824, 23, 115, 209, 322, 452, 504, 694, 761, 888, 90, 199, 232, 344, 492, 572, 614, 773, 874, 42, 164, 244, 310, 465, 568, 695, 760, 805, 26, 181, 248, 347, 428, 527, 650, 753, 891, 30, 128, 261, 345, 431, 595, 670, 785, 875, 91, 153, 227, 332, 471, 520, 689, 759, 866, 17, 134, 207, 385, 494, 577, 607, 747, 895, 59, 141, 229, 376, 457, 511, 675, 731, 858, 96, 150, 252, 302, 441, 507, 643, 705, 827, 2, 126, 300, 350, 445, 584, 602, 764, 846, 52, 131, 299, 357, 448, 550, 677, 704, 860, 24, 189, 223, 396, 489, 560, 659, 717, 896, 15, 193, 237, 351, 470, 576, 644, 770, 838, 86, 142, 205, 375, 477, 549, 624, 732, 851, 46, 106, 266, 327, 461, 581, 638, 726, 882, 67, 124, 286, 362, 495, 553, 667, 743, 840, 71, 174, 233, 389, 433, 592, 630, 765, 849, 66, 110, 213, 307, 419, 600, 634, 738, 845, 18, 114, 201, 364, 480, 546, 688, 767, 817, 58, 151, 290, 363, 411, 508, 655, 768, 899, 39, 108, 276, 340, 463, 599, 629, 718, 806, 34, 116, 256, 324, 464, 587, 699, 800, 841, 80, 162, 258, 314, 459, 593, 658, 707, 887, 82, 158, 231, 305, 493, 596, 652, 795, 870, 6, 171, 285, 352, 498, 539, 674, 794, 854, 53, 182, 272, 336, 403, 569, 668, 721, 864, 60, 105, 268, 386, 438, 582, 613, 714, 898, 93, 179, 271, 301, 443, 556, 612, 756, 832, 44, 170, 251, 329, 413, 540, 690, 713, 822, 32, 180, 289, 380, 424, 554, 697, 746, 837, 49, 111, 225, 337, 456, 503, 625, 787, 804, 43, 192, 219, 393, 475, 505, 603, 776, 842, 100, 152, 220, 346, 496, 516, 622, 750, 801, 41, 190, 230, 321, 469, 578, 682, 797, 884, 5, 178, 255, 368, 427, 525, 657, 782, 829, 54, 132, 280, 349, 410, 531, 635, 703, 802, 65, 154, 210, 384, 429, 521, 639, 754, 894, 72, 144, 296, 392, 490, 506, 684, 716, 816, 76, 147, 241, 341, 432, 536, 696, 719, 839, 98, 101, 216, 342, 484, 585, 665, 779, 897, 11, 149, 257, 333, 497, 541, 649, 780, 844, 78, 177, 218, 303, 481, 501, 631, 712, 834, 21, 117, 215, 315, 436, 571, 651, 790, 886, 62, 173, 214, 355, 488, 529, 686, 711, 808, 14, 139, 222, 339, 435, 586, 669, 702, 861, 22, 143, 208, 317, 442, 522, 660, 752, 880, 12, 176, 298, 328, 418, 512, 623, 725, 809, 37, 168, 269, 370, 453, 589, 641, 740, 847, 95, 135, 259, 323, 417, 574, 664, 749, 878, 74, 107, 254, 311, 404, 514, 698, 798, 818, 33, 183, 278, 304, 491, 591, 678, 799, 879, 99, 172, 239, 395, 402, 545, 654, 769, 853, 63, 127, 250, 316, 451, 519, 692, 724, 877, 29, 160, 292, 371, 474, 530, 672, 744, 813, 56, 109, 242, 312, 460, 542, 621, 793, 871, 10, 169, 279, 359, 405, 570, 601, 774, 876, 47, 137, 267, 377, 467, 559, 611, 739, 869, 4, 104, 291, 400, 422, 580, 616, 758, 863, 38, 188, 283, 320, 430, 538, 618, 778, 855, 84, 165, 221, 308, 454, 590, 656, 771, 850, 89, 175, 263, 382, 486, 564, 637, 729, 843, 55, 133, 265, 383, 487, 575, 666, 742, 819, 77, 166, 295, 379, 468, 561, 679, 772, 862]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2849.75 MBs
     ├ fmd	202.31 MBs	(shape (3, 4, 3, 4, 720, 1020))
     ├ fmd_m	2647.44 MBs	(shape (3, 4, 3, 4, 720, 1020, 7), 649854240 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.1 MBs
     ├ domain shape	(3, 3, 102, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 05:55:30 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (322+398=720 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A6 ⫺₈₀ 6228), purity -1.52459141619631
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (161+161=322 samples) on frame 1 with decision: {1} A72 ⫺ 7817, purity -0.7265952870476866
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (249+149=398 samples) on frame 1 with decision: {1} A90 ⫹₇₀ 13481, purity -1.0239101273733155
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+81=161 samples) on frame 1 with decision: {1} A19 ⫺ 2707, purity -0.033467395991037596
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (73+88=161 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114), purity -0.24594724265255097
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (79+70=149 samples) on frame 1 with decision: {1} A26 ⫺₇₀ 11778, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (127+122=249 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A8 ⫺₇₀ 11621), purity -0.7799918159386424
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+61=88 samples) on frame 1 with decision: {1} A34 ⫺ 6437, purity -0.19529411981772676
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (66+61=127 samples) on frame 1 with decision: {1} ⟨EC⟩ (A100 ⫹ 20619), purity -0.33666160235128856
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (50+72=122 samples) on frame 1 with decision: {1} ⟨TPP⟩ (A88 ⫹ 21465), purity -0.56691820151403
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+20=27 samples) on frame 1 with decision: {1} A6 ⫹₈₀ 4452, purity -0.240802202512184
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (26+24=50 samples) on frame 1 with decision: {1} A1 ⫹₆₀ 11830, purity -0.410939343398787
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (47+19=66 samples) on frame 1 with decision: {1} A56 ⫺₈₀ 20891, purity -0.09686999081949695
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (13+59=72 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A65 ⫺₇₀ 20410), purity -0.1818494109061054
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (16+4=20 samples) on frame 1 with decision: {1} A57 ⫺ 2905, purity -0.13862943611198905
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+4=13 samples) on frame 1 with decision: {1} A85 ⫹ 14453, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+15=19 samples) on frame 1 with decision: {1} A2 ⫺₆₀ 9270, purity -0.14592572222314637
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+16=26 samples) on frame 1 with decision: {1} ⟨EC⟩ (A101 ⫹ 25896), purity -0.4907092019305984
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A1 ⫹ 15498, purity 1.3322676295501878e-16
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+12=16 samples) on frame 1 with decision: {1} A1 ⫺ 15195, purity -0.17328679513998632
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
872.202139 seconds (7.85 G allocations: 251.206 GiB, 18.48% gc time)
Train tree:
Decision Tree
Leaves: 21
Tot nodes: 41
Height: 7
Modal height:  4
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A6 ⫺₈₀ 6228)
✔ {1} A90 ⫹₇₀ 13481
│✔ {1} A26 ⫺₇₀ 11778
││✔ Shadows : 70/70 (conf: 1.0)
││✘ Tiles : 79/79 (conf: 1.0)
│✘ {1} ⟨T̅P̅P̅⟩ (A8 ⫺₇₀ 11621)
│ ✔ {1} ⟨TPP⟩ (A88 ⫹ 21465)
│ │✔ {1} ⟨T̅P̅P̅⟩ (A65 ⫺₇₀ 20410)
│ ││✔ Self-Blocking Bricks : 58/59 (conf: 0.9830508474576272)
│ ││✘ {1} A85 ⫹ 14453
│ ││ ✔ Self-Blocking Bricks : 4/4 (conf: 1.0)
│ ││ ✘ Shadows : 9/9 (conf: 1.0)
│ │✘ {1} A1 ⫹₆₀ 11830
│ │ ✔ Bitumen : 24/24 (conf: 1.0)
│ │ ✘ {1} ⟨EC⟩ (A101 ⫹ 25896)
│ │  ✔ {1} A1 ⫺ 15195
│ │  │✔ Self-Blocking Bricks : 12/12 (conf: 1.0)
│ │  │✘ Self-Blocking Bricks : 2/4 (conf: 0.5)
│ │  ✘ {1} A1 ⫹ 15498
│ │   ✔ Bitumen : 6/6 (conf: 1.0)
│ │   ✘ Self-Blocking Bricks : 4/4 (conf: 1.0)
│ ✘ {1} ⟨EC⟩ (A100 ⫹ 20619)
│  ✔ Meadows : 60/61 (conf: 0.9836065573770492)
│  ✘ {1} A56 ⫺₈₀ 20891
│   ✔ {1} A2 ⫺₆₀ 9270
│   │✔ Meadows : 15/15 (conf: 1.0)
│   │✘ Bitumen : 2/4 (conf: 0.5)
│   ✘ Bitumen : 47/47 (conf: 1.0)
✘ {1} A72 ⫺ 7817
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114)
 │✔ {1} A34 ⫺ 6437
 ││✔ Asphalt : 61/61 (conf: 1.0)
 ││✘ {1} A6 ⫹₈₀ 4452
 ││ ✔ {1} A57 ⫺ 2905
 ││ │✔ Trees : 2/4 (conf: 0.5)
 ││ │✘ Asphalt : 16/16 (conf: 1.0)
 ││ ✘ Trees : 7/7 (conf: 1.0)
 │✘ Trees : 71/73 (conf: 0.9726027397260274)
 ✘ {1} A19 ⫺ 2707
  ✔ Water : 80/81 (conf: 0.9876543209876543)
  ✘ Bare Soil : 80/80 (conf: 1.0)
● [ 23/07/2021 06:10:02 ] Saving tree to file ./gandalf/trees/tree_3f83019605ad75e3af7dd97deb688f03b65fd99f29926498a456de78eca24037.jld...
Test tree:
Decision Tree
Leaves: 21
Tot nodes: 41
Height: 7
Modal height:  4
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A6 ⫺₈₀ 6228)
✔ {1} A90 ⫹₇₀ 13481
│✔ {1} A26 ⫺₇₀ 11778
││✔ Shadows : 17/18 (conf: 0.9444444444444444)
││✘ Tiles : 18/19 (conf: 0.9473684210526315)
│✘ {1} ⟨T̅P̅P̅⟩ (A8 ⫺₇₀ 11621)
│ ✔ {1} ⟨TPP⟩ (A88 ⫹ 21465)
│ │✔ {1} ⟨T̅P̅P̅⟩ (A65 ⫺₇₀ 20410)
│ ││✔ Self-Blocking Bricks : 14/16 (conf: 0.875)
│ ││✘ {1} A85 ⫹ 14453
│ ││ ✔ Self-Blocking Bricks : 2/2 (conf: 1.0)
│ ││ ✘ Shadows : 1/1 (conf: 1.0)
│ │✘ {1} A1 ⫹₆₀ 11830
│ │ ✔ Bitumen : 5/8 (conf: 0.625)
│ │ ✘ {1} ⟨EC⟩ (A101 ⫹ 25896)
│ │  ✔ {1} A1 ⫺ 15195
│ │  │✔ Self-Blocking Bricks : 1/1 (conf: 1.0)
│ │  │✘ Self-Blocking Bricks : 0/2 (conf: 0.0)
│ │  ✘ {1} A1 ⫹ 15498
│ │   ✔ Bitumen : 0/0 (conf: NaN)
│ │   ✘ Self-Blocking Bricks : 0/1 (conf: 0.0)
│ ✘ {1} ⟨EC⟩ (A100 ⫹ 20619)
│  ✔ Meadows : 13/15 (conf: 0.8666666666666667)
│  ✘ {1} A56 ⫺₈₀ 20891
│   ✔ {1} A2 ⫺₆₀ 9270
│   │✔ Meadows : 4/4 (conf: 1.0)
│   │✘ Bitumen : 0/1 (conf: 0.0)
│   ✘ Bitumen : 11/11 (conf: 1.0)
✘ {1} A72 ⫺ 7817
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114)
 │✔ {1} A34 ⫺ 6437
 ││✔ Asphalt : 16/16 (conf: 1.0)
 ││✘ {1} A6 ⫹₈₀ 4452
 ││ ✔ {1} A57 ⫺ 2905
 ││ │✔ Trees : 0/3 (conf: 0.0)
 ││ │✘ Asphalt : 0/0 (conf: NaN)
 ││ ✘ Trees : 0/2 (conf: 0.0)
 │✘ Trees : 19/19 (conf: 1.0)
 ✘ {1} A19 ⫺ 2707
  ✔ Water : 20/20 (conf: 1.0)
  ✘ Bare Soil : 20/21 (conf: 0.9523809523809523)
 test size = [(3, 3, 102, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,PaviaCentre	7	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	89.44%	80.0%	100.0%	80.0%	85.0%	85.0%	90.0%	90.0%	95.0%	100.0%	100.0%	95.24%	80.0%	89.47%	77.27%	94.74%	94.74%	79.17%	100.0%	||	88.13%	[88.89, 97.56, 80.0, 87.18, 80.95, 92.31, 92.31, 86.36, 100.0]%	|||	89.44%	98.68%	90.07%	98.69%	89.51%	
  accuracy: 89.44% kappa: 88.13% 
 16  0  0  0  0  0  0  4  0	80.0%		Asphalt
  0 20  0  0  0  0  0  0  0	100.0%		Bare Soil
  0  0 16  1  3  0  0  0  0	80.0%		Bitumen
  0  0  1 17  1  0  0  1  0	85.0%		Meadows
  0  0  3  0 17  0  0  0  0	85.0%		Self-Blocking Bricks
  0  0  0  0  1 18  1  0  0	90.0%		Shadows
  0  0  0  1  0  1 18  0  0	90.0%		Tiles
  0  1  0  0  0  0  0 19  0	95.0%		Trees
  0  0  0  0  0  0  0  0 20	100.0%		Water

overall_acc:	0.8944444444444445
κ =		0.8812500000000002
sensitivities:	[0.8, 1.0, 0.8, 0.85, 0.85, 0.9, 0.9, 0.95, 1.0]
specificities:	[1.0, 0.99375, 0.975, 0.9875, 0.96875, 0.99375, 0.99375, 0.96875, 1.0]
PPVs:		[1.0, 0.9523809523809523, 0.8, 0.8947368421052632, 0.7727272727272727, 0.9473684210526315, 0.9473684210526315, 0.7916666666666666, 1.0]
NPVs:		[0.975609756097561, 1.0, 0.975, 0.9813664596273292, 0.9810126582278481, 0.9875776397515528, 0.9875776397515528, 0.9935897435897436, 1.0]
F1s:		[0.8888888888888888, 0.975609756097561, 0.8, 0.8717948717948718, 0.8095238095238095, 0.9230769230769231, 0.9230769230769231, 0.8636363636363636, 1.0]
accuracies:	[0.9777777777777777, 0.9944444444444445, 0.9555555555555556, 0.9722222222222222, 0.9555555555555556, 0.9833333333333333, 0.9833333333333333, 0.9666666666666667, 1.0]
mean_accuracy:	0.9765432098765433
Dataset_slice = (900) -> [14, 145, 209, 319, 413, 525, 605, 718, 878, 59, 126, 201, 393, 450, 561, 606, 736, 841, 55, 102, 207, 312, 445, 527, 660, 764, 888, 87, 121, 255, 362, 475, 501, 637, 796, 884, 44, 116, 271, 308, 421, 555, 635, 715, 875, 11, 131, 219, 380, 474, 532, 648, 743, 873, 60, 110, 268, 310, 440, 528, 674, 739, 876, 6, 101, 211, 304, 437, 518, 694, 795, 857, 83, 167, 283, 357, 414, 597, 655, 701, 854, 46, 162, 229, 318, 456, 585, 678, 770, 861, 20, 123, 288, 395, 424, 584, 666, 774, 882, 74, 140, 291, 373, 481, 551, 623, 763, 829, 32, 165, 281, 315, 434, 589, 634, 732, 820, 22, 135, 220, 398, 486, 544, 691, 780, 858, 40, 152, 286, 316, 451, 593, 610, 719, 855, 24, 103, 221, 350, 429, 515, 686, 709, 851, 18, 137, 230, 355, 438, 543, 665, 772, 848, 89, 125, 262, 390, 443, 595, 681, 710, 825, 62, 124, 264, 383, 406, 529, 653, 703, 818, 12, 172, 276, 377, 411, 517, 700, 741, 822, 31, 163, 204, 369, 471, 503, 687, 707, 839, 58, 168, 208, 302, 407, 547, 614, 742, 899, 30, 129, 224, 325, 415, 505, 642, 735, 801, 79, 104, 235, 326, 495, 519, 668, 753, 852, 99, 197, 213, 343, 464, 581, 676, 773, 897, 48, 173, 284, 388, 410, 568, 679, 760, 898, 67, 149, 275, 391, 455, 548, 695, 798, 842, 10, 198, 289, 360, 485, 554, 697, 766, 831, 5, 182, 244, 397, 487, 599, 698, 747, 844, 93, 164, 257, 384, 457, 530, 611, 756, 869, 64, 187, 246, 354, 458, 583, 659, 761, 837, 70, 134, 242, 371, 422, 577, 612, 784, 846, 41, 133, 256, 351, 473, 512, 630, 726, 865, 82, 158, 299, 322, 404, 507, 693, 724, 802, 84, 120, 290, 314, 423, 522, 661, 757, 867, 51, 199, 261, 359, 412, 523, 646, 771, 812, 81, 175, 206, 340, 472, 539, 609, 711, 824, 94, 181, 300, 303, 426, 514, 654, 729, 891, 23, 179, 266, 321, 459, 572, 669, 779, 856, 100, 176, 270, 376, 432, 560, 601, 751, 874, 90, 109, 278, 346, 418, 510, 602, 792, 823, 68, 186, 274, 379, 467, 556, 645, 762, 894, 43, 117, 265, 382, 480, 570, 617, 708, 879, 1, 178, 280, 344, 425, 504, 650, 794, 819, 95, 132, 277, 332, 491, 524, 683, 787, 828, 19, 113, 282, 378, 476, 579, 608, 720, 887, 98, 112, 292, 348, 462, 563, 640, 767, 849, 50, 106, 285, 352, 444, 550, 656, 791, 886, 33, 170, 295, 386, 493, 537, 643, 777, 850, 27, 136, 241, 337, 408, 564, 624, 783, 859, 63, 148, 279, 324, 427, 511, 696, 744, 893, 54, 119, 216, 372, 401, 575, 633, 740, 838, 86, 193, 254, 306, 428, 567, 652, 721, 805, 17, 188, 293, 399, 496, 508, 671, 758, 895, 91, 142, 273, 328, 494, 574, 641, 785, 835, 97, 189, 297, 320, 430, 531, 647, 790, 883, 57, 155, 263, 301, 492, 557, 690, 733, 847, 61, 196, 294, 347, 405, 594, 677, 745, 890, 75, 141, 205, 349, 436, 590, 675, 789, 814, 71, 183, 203, 341, 409, 562, 639, 716, 868, 92, 180, 258, 394, 441, 520, 616, 759, 881, 65, 177, 249, 309, 449, 598, 644, 722, 840, 37, 166, 272, 356, 498, 582, 657, 737, 815, 29, 195, 234, 331, 469, 513, 628, 778, 853, 21, 127, 218, 313, 435, 541, 670, 752, 804, 69, 184, 267, 368, 500, 534, 604, 793, 862, 3, 185, 298, 334, 488, 588, 673, 754, 872, 77, 139, 225, 327, 403, 516, 663, 788, 836, 56, 107, 260, 396, 490, 558, 619, 705, 811, 72, 200, 217, 342, 416, 580, 607, 768, 870, 8, 111, 227, 366, 465, 571, 620, 786, 821, 2, 190, 237, 374, 419, 596, 638, 755, 808, 73, 130, 233, 363, 482, 538, 667, 746, 863, 36, 159, 238, 307, 448, 578, 682, 765, 816, 45, 146, 250, 375, 463, 587, 621, 706, 866, 52, 153, 212, 335, 460, 566, 662, 717, 845, 53, 156, 287, 311, 478, 552, 629, 799, 860, 34, 143, 222, 389, 453, 526, 689, 769, 832, 28, 169, 259, 323, 452, 569, 699, 782, 826, 39, 128, 243, 365, 454, 533, 632, 712, 896, 76, 115, 231, 364, 461, 546, 692, 748, 803, 85, 105, 228, 400, 499, 559, 625, 775, 809, 66, 171, 240, 305, 402, 573, 631, 704, 833, 88, 108, 248, 387, 497, 521, 651, 727, 806, 15, 174, 247, 370, 417, 549, 626, 738, 813, 38, 154, 253, 339, 446, 586, 627, 702, 900, 9, 114, 202, 367, 489, 535, 688, 797, 810, 80, 192, 251, 353, 442, 540, 615, 728, 843, 25, 160, 223, 392, 447, 565, 636, 723, 880, 26, 191, 215, 329, 483, 591, 672, 749, 892, 7, 151, 252, 381, 484, 576, 603, 734, 871, 96, 194, 210, 338, 477, 536, 684, 781, 864, 16, 144, 296, 317, 466, 545, 649, 776, 817, 13, 147, 269, 333, 431, 553, 618, 730, 885, 47, 150, 236, 336, 470, 600, 613, 714, 830, 49, 157, 214, 385, 468, 509, 680, 725, 834, 35, 118, 239, 358, 479, 542, 622, 750, 889, 78, 122, 232, 345, 420, 502, 658, 800, 827, 42, 161, 245, 361, 433, 506, 664, 713, 877, 4, 138, 226, 330, 439, 592, 685, 731, 807]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2849.75 MBs
     ├ fmd	202.31 MBs	(shape (3, 4, 3, 4, 720, 1020))
     ├ fmd_m	2647.44 MBs	(shape (3, 4, 3, 4, 720, 1020, 7), 647376660 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.1 MBs
     ├ domain shape	(3, 3, 102, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 06:10:09 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (323+397=720 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A6 ⫺₈₀ 6228), purity -1.5298243405952174
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (161+162=323 samples) on frame 1 with decision: {1} A72 ⫺ 7817, purity -0.7388913053045906
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (249+148=397 samples) on frame 1 with decision: {1} A90 ⫹₇₀ 13481, purity -1.03839252229725
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+81=161 samples) on frame 1 with decision: {1} A19 ⫺ 2707, purity -0.033467395991037596
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+86=162 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114), purity -0.23315955112463643
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (76+72=148 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A35 ⫺₇₀ 11914), purity -0.06174999503095233
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (125+124=249 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A10 ⫺₇₀ 12311), purity -0.7905680534235382
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (63+23=86 samples) on frame 1 with decision: {1} ⟨TPP⟩ (A34 ⫹ 6385), purity -0.19772547203680937
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (63+62=125 samples) on frame 1 with decision: {1} ⟨EC⟩ (A100 ⫹ 20567), purity -0.37565611851745734
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (40+84=124 samples) on frame 1 with decision: {1} ⟨TPP⟩ (A99 ⫹ 21549), purity -0.5359092594462619
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+30=40 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A1 ⫹₆₀ 14578), purity -0.0812707433478621
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (6+17=23 samples) on frame 1 with decision: {1} ⟨DC⟩ (A7 ⫹ 2498), purity -0.2828945454920437
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (44+19=63 samples) on frame 1 with decision: {1} A56 ⫺₇₀ 21079, purity -0.10148284752518728
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+75=84 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A61 ⫺₆₀ 19919), purity -0.3188552584775671
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A1 ⫺ 14610, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (5+4=9 samples) on frame 1 with decision: {1} A1 ⫺ 16355, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+15=19 samples) on frame 1 with decision: {1} A8 ⫹₇₀ 10074, purity -0.14592572222314637
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (63+12=75 samples) on frame 1 with decision: {1} A67 ⫺₆₀ 24820, purity -0.17899893375772044
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+8=12 samples) on frame 1 with decision: {1} ⟨PO⟩ (A83 ⫺ 25708), purity -0.4822291676909396
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+4=8 samples) on frame 1 with decision: {1} A1 ⫺ 17306, purity -0.28116757230940415
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
676.812997 seconds (7.13 G allocations: 174.490 GiB, 16.13% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 21
Tot nodes: 41
Height: 8
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A6 ⫺₈₀ 6228)
✔ {1} A90 ⫹₇₀ 13481
│✔ {1} ⟨T̅P̅P̅⟩ (A35 ⫺₇₀ 11914)
││✔ Shadows : 70/72 (conf: 0.9722222222222222)
││✘ Tiles : 76/76 (conf: 1.0)
│✘ {1} ⟨T̅P̅P̅⟩ (A10 ⫺₇₀ 12311)
│ ✔ {1} ⟨TPP⟩ (A99 ⫹ 21549)
│ │✔ {1} ⟨T̅P̅P̅⟩ (A61 ⫺₆₀ 19919)
│ ││✔ {1} A67 ⫺₆₀ 24820
│ │││✔ {1} ⟨PO⟩ (A83 ⫺ 25708)
│ ││││✔ {1} A1 ⫺ 17306
│ │││││✔ Self-Blocking Bricks : 4/4 (conf: 1.0)
│ │││││✘ Self-Blocking Bricks : 3/4 (conf: 0.75)
│ ││││✘ Bitumen : 2/4 (conf: 0.5)
│ │││✘ Self-Blocking Bricks : 63/63 (conf: 1.0)
│ ││✘ {1} A1 ⫺ 16355
│ ││ ✔ Shadows : 3/4 (conf: 0.75)
│ ││ ✘ Shadows : 5/5 (conf: 1.0)
│ │✘ {1} ⟨T̅P̅P̅⟩ (A1 ⫹₆₀ 14578)
│ │ ✔ Bitumen : 30/30 (conf: 1.0)
│ │ ✘ {1} A1 ⫺ 14610
│ │  ✔ Self-Blocking Bricks : 6/6 (conf: 1.0)
│ │  ✘ Self-Blocking Bricks : 3/4 (conf: 0.75)
│ ✘ {1} ⟨EC⟩ (A100 ⫹ 20567)
│  ✔ Meadows : 60/62 (conf: 0.967741935483871)
│  ✘ {1} A56 ⫺₇₀ 21079
│   ✔ {1} A8 ⫹₇₀ 10074
│   │✔ Meadows : 15/15 (conf: 1.0)
│   │✘ Bitumen : 2/4 (conf: 0.5)
│   ✘ Bitumen : 44/44 (conf: 1.0)
✘ {1} A72 ⫺ 7817
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114)
 │✔ {1} ⟨TPP⟩ (A34 ⫹ 6385)
 ││✔ {1} ⟨DC⟩ (A7 ⫹ 2498)
 │││✔ Asphalt : 16/17 (conf: 0.9411764705882353)
 │││✘ Trees : 5/6 (conf: 0.8333333333333334)
 ││✘ Asphalt : 63/63 (conf: 1.0)
 │✘ Trees : 74/76 (conf: 0.9736842105263158)
 ✘ {1} A19 ⫺ 2707
  ✔ Water : 80/81 (conf: 0.9876543209876543)
  ✘ Bare Soil : 80/80 (conf: 1.0)
● [ 23/07/2021 06:21:26 ] Saving tree to file ./gandalf/trees/tree_ce23af51e46b4c158a2f34e54cec84b8417b79ae5f79728fa9edbc9e67f0c07a.jld...
Test tree:
Decision Tree
Leaves: 21
Tot nodes: 41
Height: 8
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A6 ⫺₈₀ 6228)
✔ {1} A90 ⫹₇₀ 13481
│✔ {1} ⟨T̅P̅P̅⟩ (A35 ⫺₇₀ 11914)
││✔ Shadows : 18/18 (conf: 1.0)
││✘ Tiles : 20/20 (conf: 1.0)
│✘ {1} ⟨T̅P̅P̅⟩ (A10 ⫺₇₀ 12311)
│ ✔ {1} ⟨TPP⟩ (A99 ⫹ 21549)
│ │✔ {1} ⟨T̅P̅P̅⟩ (A61 ⫺₆₀ 19919)
│ ││✔ {1} A67 ⫺₆₀ 24820
│ │││✔ {1} ⟨PO⟩ (A83 ⫺ 25708)
│ ││││✔ {1} A1 ⫺ 17306
│ │││││✔ Self-Blocking Bricks : 0/0 (conf: NaN)
│ │││││✘ Self-Blocking Bricks : 0/0 (conf: NaN)
│ ││││✘ Bitumen : 0/1 (conf: 0.0)
│ │││✘ Self-Blocking Bricks : 12/13 (conf: 0.9230769230769231)
│ ││✘ {1} A1 ⫺ 16355
│ ││ ✔ Shadows : 0/0 (conf: NaN)
│ ││ ✘ Shadows : 0/0 (conf: NaN)
│ │✘ {1} ⟨T̅P̅P̅⟩ (A1 ⫹₆₀ 14578)
│ │ ✔ Bitumen : 3/7 (conf: 0.42857142857142855)
│ │ ✘ {1} A1 ⫺ 14610
│ │  ✔ Self-Blocking Bricks : 3/3 (conf: 1.0)
│ │  ✘ Self-Blocking Bricks : 0/0 (conf: NaN)
│ ✘ {1} ⟨EC⟩ (A100 ⫹ 20567)
│  ✔ Meadows : 13/16 (conf: 0.8125)
│  ✘ {1} A56 ⫺₇₀ 21079
│   ✔ {1} A8 ⫹₇₀ 10074
│   │✔ Meadows : 6/6 (conf: 1.0)
│   │✘ Bitumen : 0/0 (conf: NaN)
│   ✘ Bitumen : 16/16 (conf: 1.0)
✘ {1} A72 ⫺ 7817
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114)
 │✔ {1} ⟨TPP⟩ (A34 ⫹ 6385)
 ││✔ {1} ⟨DC⟩ (A7 ⫹ 2498)
 │││✔ Asphalt : 4/4 (conf: 1.0)
 │││✘ Trees : 3/4 (conf: 0.75)
 ││✘ Asphalt : 15/15 (conf: 1.0)
 │✘ Trees : 16/16 (conf: 1.0)
 ✘ {1} A19 ⫺ 2707
  ✔ Water : 20/20 (conf: 1.0)
  ✘ Bare Soil : 20/21 (conf: 0.9523809523809523)
 test size = [(3, 3, 102, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,PaviaCentre	8	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	93.89%	95.0%	100.0%	95.0%	95.0%	75.0%	90.0%	100.0%	95.0%	100.0%	100.0%	95.24%	79.17%	86.36%	93.75%	100.0%	100.0%	95.0%	100.0%	||	93.12%	[97.44, 97.56, 86.36, 90.48, 83.33, 94.74, 100.0, 95.0, 100.0]%	|||	93.89%	99.24%	94.39%	99.24%	93.88%	
  accuracy: 93.89% kappa: 93.12% 
 19  0  0  0  0  0  0  1  0	95.0%		Asphalt
  0 20  0  0  0  0  0  0  0	100.0%		Bare Soil
  0  0 19  1  0  0  0  0  0	95.0%		Bitumen
  0  0  1 19  0  0  0  0  0	95.0%		Meadows
  0  0  4  1 15  0  0  0  0	75.0%		Self-Blocking Bricks
  0  0  0  1  1 18  0  0  0	90.0%		Shadows
  0  0  0  0  0  0 20  0  0	100.0%		Tiles
  0  1  0  0  0  0  0 19  0	95.0%		Trees
  0  0  0  0  0  0  0  0 20	100.0%		Water

overall_acc:	0.9388888888888889
κ =		0.93125
sensitivities:	[0.95, 1.0, 0.95, 0.95, 0.75, 0.9, 1.0, 0.95, 1.0]
specificities:	[1.0, 0.99375, 0.96875, 0.98125, 0.99375, 1.0, 1.0, 0.99375, 1.0]
PPVs:		[1.0, 0.9523809523809523, 0.7916666666666666, 0.8636363636363636, 0.9375, 1.0, 1.0, 0.95, 1.0]
NPVs:		[0.9937888198757764, 1.0, 0.9935897435897436, 0.9936708860759493, 0.9695121951219512, 0.9876543209876543, 1.0, 0.99375, 1.0]
F1s:		[0.9743589743589743, 0.975609756097561, 0.8636363636363636, 0.9047619047619048, 0.8333333333333334, 0.9473684210526315, 1.0, 0.95, 1.0]
accuracies:	[0.9944444444444445, 0.9944444444444445, 0.9666666666666667, 0.9777777777777777, 0.9666666666666667, 0.9888888888888889, 1.0, 0.9888888888888889, 1.0]
mean_accuracy:	0.9864197530864198
Dataset_slice = (900) -> [70, 177, 261, 314, 419, 581, 639, 713, 846, 28, 119, 212, 327, 454, 562, 671, 731, 805, 31, 139, 280, 374, 459, 507, 684, 793, 820, 19, 178, 249, 324, 453, 509, 643, 732, 831, 5, 145, 248, 337, 422, 598, 659, 780, 874, 75, 174, 287, 378, 420, 519, 670, 791, 844, 12, 144, 202, 385, 465, 588, 689, 721, 897, 26, 108, 298, 344, 403, 544, 641, 785, 801, 67, 162, 228, 360, 498, 513, 628, 725, 881, 14, 125, 236, 322, 482, 571, 638, 706, 857, 50, 105, 214, 320, 440, 559, 627, 737, 841, 25, 148, 229, 376, 423, 535, 679, 712, 826, 11, 196, 219, 397, 434, 552, 633, 714, 893, 51, 170, 257, 399, 417, 534, 607, 764, 888, 6, 199, 207, 301, 427, 583, 696, 781, 812, 4, 127, 273, 338, 450, 590, 602, 738, 827, 63, 141, 270, 302, 486, 586, 654, 716, 814, 62, 118, 276, 392, 435, 511, 680, 703, 829, 54, 194, 216, 336, 437, 569, 669, 701, 880, 73, 190, 251, 349, 411, 582, 631, 724, 885, 16, 168, 238, 312, 449, 597, 657, 787, 860, 76, 133, 292, 308, 436, 560, 606, 704, 843, 94, 191, 234, 307, 469, 566, 656, 752, 808, 21, 172, 253, 370, 461, 556, 667, 789, 863, 96, 176, 295, 388, 401, 578, 687, 794, 832, 97, 132, 275, 382, 475, 555, 624, 796, 878, 60, 173, 217, 325, 470, 514, 683, 763, 894, 9, 109, 272, 398, 402, 510, 619, 735, 869, 40, 154, 250, 303, 443, 524, 652, 799, 851, 72, 113, 240, 368, 431, 501, 663, 756, 899, 99, 156, 279, 381, 497, 540, 664, 759, 806, 44, 167, 220, 335, 489, 523, 661, 710, 866, 91, 104, 245, 357, 416, 533, 608, 777, 872, 92, 116, 297, 355, 412, 553, 647, 779, 855, 71, 166, 246, 351, 426, 536, 646, 745, 853, 13, 192, 203, 394, 410, 529, 697, 798, 828, 98, 129, 206, 331, 414, 537, 640, 743, 858, 79, 122, 281, 346, 448, 504, 682, 723, 879, 18, 137, 224, 371, 442, 549, 666, 782, 816, 48, 101, 289, 362, 487, 589, 695, 746, 835, 56, 175, 285, 350, 456, 516, 677, 775, 833, 22, 103, 242, 356, 408, 502, 693, 741, 882, 35, 124, 293, 361, 428, 577, 698, 707, 883, 81, 189, 262, 364, 460, 547, 691, 773, 807, 84, 187, 230, 342, 478, 557, 681, 795, 849, 37, 181, 208, 310, 418, 521, 673, 772, 867, 87, 120, 299, 359, 458, 530, 630, 768, 822, 77, 117, 237, 354, 462, 538, 668, 771, 854, 34, 115, 231, 379, 429, 525, 637, 727, 815, 65, 155, 205, 316, 495, 550, 690, 733, 875, 7, 121, 252, 319, 488, 508, 625, 748, 802, 41, 123, 264, 358, 499, 503, 672, 790, 852, 3, 182, 201, 353, 452, 531, 623, 786, 837, 59, 193, 290, 345, 439, 558, 653, 758, 850, 55, 186, 296, 372, 457, 546, 636, 766, 877, 43, 126, 241, 377, 463, 554, 699, 709, 809, 29, 161, 263, 395, 405, 551, 605, 749, 870, 8, 159, 221, 333, 471, 543, 658, 715, 817, 86, 158, 227, 347, 413, 592, 662, 722, 810, 46, 157, 274, 304, 424, 561, 613, 719, 896, 64, 112, 204, 332, 445, 585, 610, 753, 886, 78, 195, 211, 391, 430, 545, 676, 757, 868, 85, 198, 209, 340, 493, 575, 655, 740, 803, 15, 152, 282, 317, 433, 600, 688, 755, 818, 1, 149, 258, 400, 477, 595, 604, 765, 821, 42, 128, 254, 309, 464, 584, 615, 761, 813, 100, 130, 271, 326, 500, 573, 603, 744, 871, 30, 197, 267, 323, 425, 594, 635, 797, 864, 10, 140, 283, 393, 468, 542, 674, 788, 840, 89, 134, 218, 389, 441, 596, 634, 767, 839, 88, 114, 278, 318, 446, 532, 617, 728, 873, 49, 179, 277, 365, 467, 528, 620, 754, 865, 17, 160, 247, 383, 481, 568, 618, 792, 892, 23, 183, 223, 339, 479, 587, 629, 750, 898, 27, 142, 286, 311, 415, 570, 692, 776, 823, 20, 150, 259, 305, 421, 522, 651, 736, 884, 68, 171, 288, 329, 407, 526, 694, 729, 834, 69, 169, 243, 352, 494, 567, 644, 747, 804, 24, 106, 284, 384, 491, 520, 675, 730, 811, 74, 110, 235, 390, 473, 579, 650, 717, 887, 36, 163, 256, 373, 406, 515, 611, 720, 830, 57, 185, 266, 343, 480, 548, 601, 705, 856, 53, 180, 239, 306, 476, 527, 614, 734, 819, 95, 200, 255, 369, 404, 541, 626, 708, 842, 61, 107, 226, 348, 409, 518, 660, 702, 889, 66, 135, 265, 380, 484, 512, 649, 762, 890, 52, 111, 233, 328, 472, 565, 700, 800, 900, 58, 147, 210, 315, 447, 506, 642, 778, 862, 47, 153, 232, 367, 474, 517, 678, 742, 845, 83, 143, 268, 341, 432, 574, 632, 784, 891, 39, 146, 215, 313, 490, 572, 616, 739, 861, 93, 165, 244, 330, 466, 591, 612, 774, 838, 90, 138, 225, 363, 451, 539, 686, 718, 847, 33, 184, 291, 396, 455, 593, 648, 783, 825, 2, 151, 300, 334, 496, 505, 665, 770, 848, 38, 102, 260, 366, 492, 576, 622, 769, 859, 80, 131, 269, 375, 483, 580, 609, 751, 895, 82, 136, 222, 386, 485, 563, 645, 760, 836, 45, 188, 213, 321, 444, 599, 685, 726, 876, 32, 164, 294, 387, 438, 564, 621, 711, 824]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2849.75 MBs
     ├ fmd	202.31 MBs	(shape (3, 4, 3, 4, 720, 1020))
     ├ fmd_m	2647.44 MBs	(shape (3, 4, 3, 4, 720, 1020, 7), 647712240 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.1 MBs
     ├ domain shape	(3, 3, 102, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 06:21:33 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (322+398=720 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A6 ⫺₇₀ 6281), purity -1.52459141619631
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (161+161=322 samples) on frame 1 with decision: {1} A72 ⫺ 7274, purity -0.7265952870476866
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (159+239=398 samples) on frame 1 with decision: {1} ⟨PO⟩ (A73 ⫺ 17870), purity -1.0162869796632883
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+81=161 samples) on frame 1 with decision: {1} A19 ⫺ 2707, purity -0.033467395991037596
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (74+87=161 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114), purity -0.23163322964327934
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (77+82=159 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A29 ⫹₈₀ 11945), purity -0.19250250286066703
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (106+133=239 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A10 ⫹ 12049), purity -0.6929839854863775
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (62+25=87 samples) on frame 1 with decision: {1} ⟨TPP⟩ (A34 ⫹ 6385), purity -0.1801349016012718
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (29+77=106 samples) on frame 1 with decision: {1} ⟨EC⟩ (A78 ⫹ 22939), purity -0.44173105355302095
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (73+60=133 samples) on frame 1 with decision: {1} ⟨EC⟩ (A100 ⫹ 20629), purity -0.35456302362361275
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (9+16=25 samples) on frame 1 with decision: {1} ⟨EC⟩ (A15 ⫹ 2257), purity -0.1255795545034916
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (10+19=29 samples) on frame 1 with decision: {1} A1 ⫹₆₀ 12133, purity -0.24718892054985805
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (57+16=73 samples) on frame 1 with decision: {1} A56 ⫺₇₀ 21079, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (70+7=77 samples) on frame 1 with decision: {1} A6 ⫹ 8883, purity -0.2160362868247146
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A1 ⫺ 6511, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (4+6=10 samples) on frame 1 with decision: {1} A1 ⫺ 19386, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
1952.489465 seconds (12.32 G allocations: 641.372 GiB, 27.63% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 17
Tot nodes: 33
Height: 6
Modal height:  4
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A6 ⫺₇₀ 6281)
✔ {1} ⟨PO⟩ (A73 ⫺ 17870)
│✔ {1} ⟨T̅P̅P̅⟩ (A10 ⫹ 12049)
││✔ {1} ⟨EC⟩ (A100 ⫹ 20629)
│││✔ Meadows : 58/60 (conf: 0.9666666666666667)
│││✘ {1} A56 ⫺₇₀ 21079
│││ ✔ Meadows : 16/16 (conf: 1.0)
│││ ✘ Bitumen : 57/57 (conf: 1.0)
││✘ {1} ⟨EC⟩ (A78 ⫹ 22939)
││ ✔ {1} A6 ⫹ 8883
││ │✔ Self-Blocking Bricks : 3/7 (conf: 0.42857142857142855)
││ │✘ Self-Blocking Bricks : 68/70 (conf: 0.9714285714285714)
││ ✘ {1} A1 ⫹₆₀ 12133
││  ✔ Bitumen : 18/19 (conf: 0.9473684210526315)
││  ✘ {1} A1 ⫺ 19386
││   ✔ Self-Blocking Bricks : 6/6 (conf: 1.0)
││   ✘ Self-Blocking Bricks : 3/4 (conf: 0.75)
│✘ {1} ⟨T̅P̅P̅⟩ (A29 ⫹₈₀ 11945)
│ ✔ Tiles : 77/82 (conf: 0.9390243902439024)
│ ✘ Shadows : 75/77 (conf: 0.974025974025974)
✘ {1} A72 ⫺ 7274
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114)
 │✔ {1} ⟨TPP⟩ (A34 ⫹ 6385)
 ││✔ {1} ⟨EC⟩ (A15 ⫹ 2257)
 │││✔ Asphalt : 16/16 (conf: 1.0)
 │││✘ {1} A1 ⫺ 6511
 │││ ✔ Trees : 5/5 (conf: 1.0)
 │││ ✘ Trees : 3/4 (conf: 0.75)
 ││✘ Asphalt : 62/62 (conf: 1.0)
 │✘ Trees : 72/74 (conf: 0.972972972972973)
 ✘ {1} A19 ⫺ 2707
  ✔ Water : 80/81 (conf: 0.9876543209876543)
  ✘ Bare Soil : 80/80 (conf: 1.0)
● [ 23/07/2021 06:54:05 ] Saving tree to file ./gandalf/trees/tree_20a0bf1e7292eecc156dd5347bc4998e9a1bdb089d89f73187e9b5e62f4879ad.jld...
Test tree:
Decision Tree
Leaves: 17
Tot nodes: 33
Height: 6
Modal height:  4
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A6 ⫺₇₀ 6281)
✔ {1} ⟨PO⟩ (A73 ⫺ 17870)
│✔ {1} ⟨T̅P̅P̅⟩ (A10 ⫹ 12049)
││✔ {1} ⟨EC⟩ (A100 ⫹ 20629)
│││✔ Meadows : 12/13 (conf: 0.9230769230769231)
│││✘ {1} A56 ⫺₇₀ 21079
│││ ✔ Meadows : 6/7 (conf: 0.8571428571428571)
│││ ✘ Bitumen : 10/10 (conf: 1.0)
││✘ {1} ⟨EC⟩ (A78 ⫹ 22939)
││ ✔ {1} A6 ⫹ 8883
││ │✔ Self-Blocking Bricks : 0/0 (conf: NaN)
││ │✘ Self-Blocking Bricks : 17/22 (conf: 0.7727272727272727)
││ ✘ {1} A1 ⫹₆₀ 12133
││  ✔ Bitumen : 6/7 (conf: 0.8571428571428571)
││  ✘ {1} A1 ⫺ 19386
││   ✔ Self-Blocking Bricks : 2/2 (conf: 1.0)
││   ✘ Self-Blocking Bricks : 0/1 (conf: 0.0)
│✘ {1} ⟨T̅P̅P̅⟩ (A29 ⫹₈₀ 11945)
│ ✔ Tiles : 18/21 (conf: 0.8571428571428571)
│ ✘ Shadows : 15/16 (conf: 0.9375)
✘ {1} A72 ⫺ 7274
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114)
 │✔ {1} ⟨TPP⟩ (A34 ⫹ 6385)
 ││✔ {1} ⟨EC⟩ (A15 ⫹ 2257)
 │││✔ Asphalt : 3/3 (conf: 1.0)
 │││✘ {1} A1 ⫺ 6511
 │││ ✔ Trees : 1/1 (conf: 1.0)
 │││ ✘ Trees : 0/1 (conf: 0.0)
 ││✘ Asphalt : 16/17 (conf: 0.9411764705882353)
 │✘ Trees : 19/19 (conf: 1.0)
 ✘ {1} A19 ⫺ 2707
  ✔ Water : 20/20 (conf: 1.0)
  ✘ Bare Soil : 20/20 (conf: 1.0)
 test size = [(3, 3, 102, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,PaviaCentre	9	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	91.67%	95.0%	100.0%	80.0%	90.0%	95.0%	75.0%	90.0%	100.0%	100.0%	95.0%	100.0%	94.12%	90.0%	76.0%	93.75%	85.71%	95.24%	100.0%	||	90.63%	[95.0, 100.0, 86.49, 90.0, 84.44, 83.33, 87.8, 97.56, 100.0]%	|||	91.67%	98.96%	92.2%	98.97%	91.63%	
  accuracy: 91.67% kappa: 90.63% 
 19  0  0  0  0  0  0  1  0	95.0%		Asphalt
  0 20  0  0  0  0  0  0  0	100.0%		Bare Soil
  1  0 16  2  1  0  0  0  0	80.0%		Bitumen
  0  0  0 18  0  0  2  0  0	90.0%		Meadows
  0  0  1  0 19  0  0  0  0	95.0%		Self-Blocking Bricks
  0  0  0  0  4 15  1  0  0	75.0%		Shadows
  0  0  0  0  1  1 18  0  0	90.0%		Tiles
  0  0  0  0  0  0  0 20  0	100.0%		Trees
  0  0  0  0  0  0  0  0 20	100.0%		Water

overall_acc:	0.9166666666666666
κ =		0.9062500000000001
sensitivities:	[0.95, 1.0, 0.8, 0.9, 0.95, 0.75, 0.9, 1.0, 1.0]
specificities:	[0.99375, 1.0, 0.99375, 0.9875, 0.9625, 0.99375, 0.98125, 0.99375, 1.0]
PPVs:		[0.95, 1.0, 0.9411764705882353, 0.9, 0.76, 0.9375, 0.8571428571428571, 0.9523809523809523, 1.0]
NPVs:		[0.99375, 1.0, 0.9754601226993865, 0.9875, 0.9935483870967742, 0.9695121951219512, 0.9874213836477987, 1.0, 1.0]
F1s:		[0.95, 1.0, 0.8648648648648649, 0.9, 0.8444444444444444, 0.8333333333333334, 0.8780487804878049, 0.975609756097561, 1.0]
accuracies:	[0.9888888888888889, 1.0, 0.9722222222222222, 0.9777777777777777, 0.9611111111111111, 0.9666666666666667, 0.9722222222222222, 0.9944444444444445, 1.0]
mean_accuracy:	0.9814814814814815
Dataset_slice = (900) -> [21, 173, 279, 381, 499, 569, 691, 744, 847, 64, 138, 231, 310, 469, 582, 680, 764, 808, 10, 149, 269, 301, 481, 525, 602, 729, 862, 84, 168, 271, 334, 458, 600, 640, 775, 883, 13, 194, 289, 400, 497, 548, 626, 769, 896, 73, 107, 225, 375, 444, 512, 628, 755, 891, 20, 174, 213, 347, 441, 545, 677, 706, 849, 60, 159, 210, 398, 448, 505, 611, 742, 854, 22, 196, 237, 354, 492, 558, 667, 779, 832, 27, 187, 300, 345, 461, 572, 696, 704, 877, 3, 110, 264, 394, 498, 583, 655, 772, 813, 48, 125, 238, 341, 464, 565, 688, 721, 814, 24, 171, 293, 356, 470, 502, 631, 757, 836, 1, 123, 260, 339, 417, 519, 685, 712, 838, 95, 165, 224, 315, 422, 550, 652, 762, 880, 30, 190, 294, 327, 484, 589, 684, 713, 829, 29, 188, 211, 359, 429, 586, 645, 733, 889, 65, 176, 232, 305, 500, 559, 698, 780, 885, 85, 157, 282, 357, 472, 516, 647, 800, 898, 4, 179, 202, 362, 436, 585, 681, 752, 801, 50, 169, 261, 371, 460, 594, 694, 796, 815, 8, 131, 256, 343, 439, 590, 610, 785, 843, 89, 192, 240, 382, 447, 557, 606, 756, 804, 68, 144, 221, 342, 438, 560, 683, 751, 876, 23, 134, 277, 335, 419, 587, 635, 748, 895, 56, 116, 278, 364, 459, 581, 644, 797, 865, 70, 121, 292, 307, 440, 520, 633, 793, 866, 71, 155, 247, 324, 425, 508, 608, 724, 818, 62, 133, 204, 374, 405, 551, 604, 740, 824, 31, 129, 299, 368, 479, 501, 636, 741, 807, 49, 162, 227, 308, 401, 579, 692, 754, 855, 15, 119, 249, 361, 467, 546, 630, 795, 846, 77, 115, 265, 388, 426, 598, 646, 716, 894, 61, 126, 242, 396, 463, 517, 622, 735, 857, 52, 189, 275, 372, 491, 521, 660, 709, 872, 11, 195, 234, 365, 468, 544, 661, 777, 890, 75, 154, 222, 316, 480, 555, 675, 701, 856, 67, 105, 226, 393, 466, 593, 659, 731, 881, 81, 178, 267, 379, 477, 596, 656, 746, 886, 44, 153, 266, 366, 476, 542, 662, 720, 828, 38, 127, 245, 352, 452, 518, 648, 728, 848, 17, 147, 219, 340, 427, 515, 624, 771, 850, 96, 193, 229, 344, 457, 578, 663, 732, 817, 35, 128, 262, 325, 431, 543, 699, 737, 822, 36, 113, 230, 392, 414, 554, 620, 719, 812, 40, 139, 281, 314, 435, 561, 674, 749, 806, 93, 135, 268, 380, 430, 562, 682, 767, 863, 55, 132, 285, 312, 421, 528, 668, 776, 845, 90, 199, 212, 326, 486, 511, 616, 723, 816, 72, 151, 208, 331, 434, 536, 638, 781, 874, 19, 166, 283, 322, 403, 599, 625, 705, 864, 87, 180, 244, 351, 462, 513, 651, 794, 893, 74, 140, 254, 333, 490, 524, 621, 790, 830, 39, 141, 241, 391, 412, 580, 637, 798, 844, 18, 142, 207, 350, 485, 591, 687, 707, 882, 25, 148, 246, 383, 410, 573, 697, 789, 823, 2, 175, 239, 337, 495, 523, 673, 708, 873, 91, 197, 209, 378, 478, 529, 676, 773, 887, 83, 114, 274, 373, 474, 553, 650, 788, 834, 99, 182, 255, 360, 489, 533, 666, 787, 851, 43, 106, 258, 304, 454, 509, 623, 792, 803, 53, 170, 218, 353, 404, 503, 671, 727, 811, 6, 101, 235, 399, 445, 597, 612, 718, 871, 28, 145, 263, 309, 442, 510, 603, 739, 859, 79, 146, 257, 328, 456, 556, 601, 702, 861, 42, 200, 273, 319, 496, 574, 617, 791, 853, 66, 158, 206, 389, 493, 541, 695, 761, 884, 92, 143, 201, 397, 443, 568, 653, 738, 831, 76, 161, 290, 318, 424, 527, 693, 747, 820, 7, 102, 297, 311, 413, 547, 665, 715, 821, 14, 150, 216, 336, 415, 507, 669, 783, 840, 5, 137, 284, 348, 406, 564, 700, 760, 825, 57, 130, 296, 346, 402, 532, 686, 758, 842, 88, 177, 295, 384, 450, 506, 639, 736, 809, 86, 104, 203, 367, 423, 595, 609, 786, 868, 63, 191, 217, 349, 451, 514, 641, 717, 867, 16, 183, 250, 302, 420, 538, 658, 714, 888, 32, 185, 236, 355, 446, 537, 679, 766, 899, 100, 118, 287, 306, 473, 534, 654, 734, 860, 80, 136, 252, 330, 418, 530, 607, 759, 878, 33, 112, 286, 376, 407, 504, 618, 753, 805, 69, 117, 233, 370, 471, 571, 690, 782, 858, 37, 111, 223, 303, 433, 577, 678, 725, 841, 26, 164, 276, 317, 449, 588, 627, 743, 819, 59, 167, 251, 323, 408, 575, 615, 711, 879, 41, 160, 280, 358, 483, 567, 672, 765, 839, 12, 172, 228, 321, 455, 566, 657, 768, 897, 9, 108, 272, 386, 437, 584, 649, 722, 826, 47, 156, 253, 369, 482, 531, 643, 774, 900, 46, 103, 259, 313, 428, 576, 619, 745, 810, 51, 198, 220, 332, 487, 563, 664, 778, 833, 45, 181, 215, 329, 409, 526, 605, 784, 802, 98, 152, 291, 320, 453, 592, 629, 799, 827, 94, 184, 288, 363, 488, 535, 689, 726, 869, 34, 122, 205, 338, 411, 522, 614, 770, 875, 54, 163, 214, 385, 416, 570, 613, 763, 837, 78, 109, 298, 377, 494, 539, 642, 703, 870, 58, 124, 270, 387, 432, 549, 632, 750, 835, 97, 186, 248, 390, 475, 552, 670, 710, 892, 82, 120, 243, 395, 465, 540, 634, 730, 852]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	2849.75 MBs
     ├ fmd	202.31 MBs	(shape (3, 4, 3, 4, 720, 1020))
     ├ fmd_m	2647.44 MBs	(shape (3, 4, 3, 4, 720, 1020, 7), 639001440 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.1 MBs
     ├ domain shape	(3, 3, 102, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 06:54:13 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (322+398=720 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A6 ⫺₇₀ 6281), purity -1.52459141619631
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (161+161=322 samples) on frame 1 with decision: {1} A72 ⫺ 7817, purity -0.7265952870476866
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (164+234=398 samples) on frame 1 with decision: {1} ⟨PO⟩ (A73 ⫺₆₀ 18685), purity -1.0421155623578722
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (80+81=161 samples) on frame 1 with decision: {1} A19 ⫺ 2707, purity -0.033467395991037596
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (75+86=161 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114), purity -0.1681488913455742
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+86=164 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A18 ⫹₈₀ 11046), purity -0.2858472897596039
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (106+128=234 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A8 ⫹ 11610), purity -0.6949319672622207
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (77+9=86 samples) on frame 1 with decision: {1} ⟨NTPP⟩ (A72 ⫺ 12363), purity -0.06206143745316944
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (27+79=106 samples) on frame 1 with decision: {1} A97 ⫹₆₀ 23911, purity -0.41955899122669804
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (78+50=128 samples) on frame 1 with decision: {1} ⟨DC⟩ (A102 ⫹ 19960), purity -0.3383143647436588
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (20+7=27 samples) on frame 1 with decision: {1} A1 ⫺ 19386, purity -0.1470483284043502
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (61+17=78 samples) on frame 1 with decision: {1} ⟨TPP⟩ (A62 ⫺ 24099), purity -0.11285002773095684
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (7+72=79 samples) on frame 1 with decision: {1} A55 ⫺₆₀ 20661, purity -0.22221507515290348
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
874.037040 seconds (8.16 G allocations: 245.835 GiB, 20.77% gc time, 0.00% compilation time)
Train tree:
Decision Tree
Leaves: 14
Tot nodes: 27
Height: 5
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A6 ⫺₇₀ 6281)
✔ {1} ⟨PO⟩ (A73 ⫺₆₀ 18685)
│✔ {1} ⟨T̅P̅P̅⟩ (A8 ⫹ 11610)
││✔ {1} ⟨DC⟩ (A102 ⫹ 19960)
│││✔ Meadows : 50/50 (conf: 1.0)
│││✘ {1} ⟨TPP⟩ (A62 ⫺ 24099)
│││ ✔ Meadows : 17/17 (conf: 1.0)
│││ ✘ Bitumen : 59/61 (conf: 0.9672131147540983)
││✘ {1} A97 ⫹₆₀ 23911
││ ✔ {1} A55 ⫺₆₀ 20661
││ │✔ Self-Blocking Bricks : 70/72 (conf: 0.9722222222222222)
││ │✘ Self-Blocking Bricks : 3/7 (conf: 0.42857142857142855)
││ ✘ {1} A1 ⫺ 19386
││  ✔ Self-Blocking Bricks : 7/7 (conf: 1.0)
││  ✘ Bitumen : 19/20 (conf: 0.95)
│✘ {1} ⟨T̅P̅P̅⟩ (A18 ⫹₈₀ 11046)
│ ✔ {1} ⟨NTPP⟩ (A72 ⫺ 12363)
│ │✔ Meadows : 9/9 (conf: 1.0)
│ │✘ Tiles : 76/77 (conf: 0.987012987012987)
│ ✘ Shadows : 75/78 (conf: 0.9615384615384616)
✘ {1} A72 ⫺ 7817
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114)
 │✔ Asphalt : 80/86 (conf: 0.9302325581395349)
 │✘ Trees : 74/75 (conf: 0.9866666666666667)
 ✘ {1} A19 ⫺ 2707
  ✔ Water : 80/81 (conf: 0.9876543209876543)
  ✘ Bare Soil : 80/80 (conf: 1.0)
● [ 23/07/2021 07:08:47 ] Saving tree to file ./gandalf/trees/tree_93306ad40686e9ec920a58a2f36e17c22023f9ed394dfb4caeb30efee2b22077.jld...
Test tree:
Decision Tree
Leaves: 14
Tot nodes: 27
Height: 5
Modal height:  5
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A6 ⫺₇₀ 6281)
✔ {1} ⟨PO⟩ (A73 ⫺₆₀ 18685)
│✔ {1} ⟨T̅P̅P̅⟩ (A8 ⫹ 11610)
││✔ {1} ⟨DC⟩ (A102 ⫹ 19960)
│││✔ Meadows : 10/10 (conf: 1.0)
│││✘ {1} ⟨TPP⟩ (A62 ⫺ 24099)
│││ ✔ Meadows : 6/6 (conf: 1.0)
│││ ✘ Bitumen : 10/13 (conf: 0.7692307692307693)
││✘ {1} A97 ⫹₆₀ 23911
││ ✔ {1} A55 ⫺₆₀ 20661
││ │✔ Self-Blocking Bricks : 15/17 (conf: 0.8823529411764706)
││ │✘ Self-Blocking Bricks : 2/5 (conf: 0.4)
││ ✘ {1} A1 ⫺ 19386
││  ✔ Self-Blocking Bricks : 3/3 (conf: 1.0)
││  ✘ Bitumen : 7/7 (conf: 1.0)
│✘ {1} ⟨T̅P̅P̅⟩ (A18 ⫹₈₀ 11046)
│ ✔ {1} ⟨NTPP⟩ (A72 ⫺ 12363)
│ │✔ Meadows : 1/2 (conf: 0.5)
│ │✘ Tiles : 18/18 (conf: 1.0)
│ ✘ Shadows : 17/18 (conf: 0.9444444444444444)
✘ {1} A72 ⫺ 7817
 ✔ {1} ⟨N̅T̅P̅P̅⟩ (A30 ⫺₇₀ 6114)
 │✔ Asphalt : 19/23 (conf: 0.8260869565217391)
 │✘ Trees : 16/17 (conf: 0.9411764705882353)
 ✘ {1} A19 ⫺ 2707
  ✔ Water : 20/20 (conf: 1.0)
  ✘ Bare Soil : 20/21 (conf: 0.9523809523809523)
 test size = [(3, 3, 102, 180)]
 Purity threshold 1.0
RESULT:	((3,7),false,"o_RCC8","TestOpAll"),100,-1,PaviaCentre	10	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	91.11%	95.0%	100.0%	85.0%	85.0%	100.0%	85.0%	90.0%	80.0%	100.0%	82.61%	95.24%	85.0%	94.44%	80.0%	94.44%	100.0%	94.12%	100.0%	||	90.0%	[88.37, 97.56, 85.0, 89.47, 88.89, 89.47, 94.74, 86.49, 100.0]%	|||	91.11%	98.89%	91.76%	98.9%	91.11%	
  accuracy: 91.11% kappa: 90.0% 
 19  0  0  0  0  0  0  1  0	95.0%		Asphalt
  0 20  0  0  0  0  0  0  0	100.0%		Bare Soil
  1  0 17  0  2  0  0  0  0	85.0%		Bitumen
  0  0  3 17  0  0  0  0  0	85.0%		Meadows
  0  0  0  0 20  0  0  0  0	100.0%		Self-Blocking Bricks
  0  0  0  0  3 17  0  0  0	85.0%		Shadows
  0  0  0  1  0  1 18  0  0	90.0%		Tiles
  3  1  0  0  0  0  0 16  0	80.0%		Trees
  0  0  0  0  0  0  0  0 20	100.0%		Water

overall_acc:	0.9111111111111111
κ =		0.9000000000000001
sensitivities:	[0.95, 1.0, 0.85, 0.85, 1.0, 0.85, 0.9, 0.8, 1.0]
specificities:	[0.975, 0.99375, 0.98125, 0.99375, 0.96875, 0.99375, 1.0, 0.99375, 1.0]
PPVs:		[0.8260869565217391, 0.9523809523809523, 0.85, 0.9444444444444444, 0.8, 0.9444444444444444, 1.0, 0.9411764705882353, 1.0]
NPVs:		[0.9936305732484076, 1.0, 0.98125, 0.9814814814814815, 1.0, 0.9814814814814815, 0.9876543209876543, 0.9754601226993865, 1.0]
F1s:		[0.8837209302325582, 0.975609756097561, 0.85, 0.8947368421052632, 0.8888888888888888, 0.8947368421052632, 0.9473684210526315, 0.8648648648648649, 1.0]
accuracies:	[0.9722222222222222, 0.9944444444444445, 0.9666666666666667, 0.9777777777777777, 0.9722222222222222, 0.9777777777777777, 0.9888888888888889, 0.9722222222222222, 1.0]
mean_accuracy:	0.980246913580247
Iteration "((3,7),false,"o_RCC5","TestOpAll"),100,-1,PaviaCentre"...
● [ 23/07/2021 07:08:48 ] Loading dataset from file ./gandalf/cache/dataset_56da9f6b542121abacd9e677ae2c33727fe2869bc9b82400b5d7132395404f1f.jld...
Dataseeds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

executing run '((3,7),false,"o_RCC5","TestOpAll"),100,-1,PaviaCentre'...
dataset type = Tuple{Array{Int64, 4}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (test_operators = TestOperator[⫺, ⫹, ⫺₉₀, ⫹₉₀, ⫺₈₀, ⫹₈₀, ⫺₇₀, ⫹₇₀, ⫺₆₀, ⫹₆₀], ontology = Ontology{DecisionTree.ModalLogic.Interval2D}(RCC5))
dataset_slices    = (10 dataset_slices)

Frame 1/1
  0.002741 seconds (11.25 k allocations: 1.045 MiB)
Frame 1/1
┌ LogLevel(-500): OntologicalDataset -> FeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:11
┌ LogLevel(-500): Instance 1/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 723/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 542/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 361/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): Instance 180/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:26
┌ LogLevel(-500): FeatModalDataset -> StumpFeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:388
┌ LogLevel(-500): Instance 1/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 723/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 180/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 542/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
┌ LogLevel(-500): Instance 361/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:429
102.512846 seconds (1.15 G allocations: 64.809 GiB, 66.92% gc time)
Dataset_slice = (900) -> [10, 122, 267, 386, 478, 583, 633, 707, 810, 3, 166, 252, 331, 497, 503, 670, 754, 819, 27, 190, 228, 353, 403, 521, 606, 735, 887, 63, 130, 246, 366, 462, 566, 687, 712, 872, 50, 195, 235, 350, 474, 501, 671, 769, 829, 57, 186, 201, 397, 447, 511, 660, 778, 843, 36, 116, 254, 326, 457, 542, 622, 766, 867, 21, 123, 248, 340, 469, 593, 666, 720, 868, 75, 157, 258, 336, 417, 509, 634, 704, 854, 78, 183, 238, 394, 408, 596, 624, 759, 862, 35, 154, 264, 376, 477, 599, 697, 748, 865, 66, 191, 274, 307, 448, 548, 602, 787, 823, 20, 167, 215, 392, 467, 549, 650, 795, 875, 67, 188, 239, 310, 434, 568, 682, 775, 890, 25, 141, 231, 330, 490, 594, 678, 732, 871, 24, 117, 270, 400, 492, 592, 668, 750, 816, 82, 194, 226, 387, 455, 560, 690, 793, 825, 74, 197, 289, 378, 441, 565, 683, 788, 896, 69, 105, 227, 341, 461, 539, 636, 705, 822, 81, 187, 300, 388, 427, 585, 646, 776, 811, 28, 159, 210, 342, 405, 531, 675, 710, 856, 15, 179, 244, 323, 420, 554, 618, 714, 830, 59, 163, 223, 332, 416, 558, 661, 740, 878, 29, 124, 268, 351, 459, 564, 601, 786, 820, 18, 153, 232, 329, 500, 582, 673, 767, 847, 31, 162, 220, 319, 418, 535, 685, 791, 821, 43, 177, 288, 346, 465, 576, 681, 770, 876, 40, 155, 249, 325, 470, 575, 625, 784, 860, 12, 149, 205, 327, 496, 578, 651, 718, 848, 83, 192, 275, 305, 464, 597, 665, 774, 836, 100, 145, 247, 398, 415, 508, 688, 746, 888, 94, 178, 261, 322, 488, 519, 607, 717, 824, 16, 110, 291, 347, 485, 551, 680, 722, 849, 51, 119, 204, 337, 466, 590, 612, 796, 894, 73, 148, 297, 362, 449, 522, 611, 749, 885, 19, 103, 292, 358, 425, 533, 623, 800, 801, 8, 142, 213, 382, 499, 530, 684, 785, 846, 11, 134, 207, 345, 472, 598, 628, 761, 827, 95, 136, 296, 357, 407, 515, 652, 701, 881, 58, 169, 284, 339, 458, 595, 632, 709, 899, 72, 101, 241, 321, 491, 581, 603, 777, 898, 13, 127, 230, 349, 432, 550, 620, 723, 863, 53, 172, 240, 301, 435, 555, 657, 757, 813, 22, 200, 285, 335, 483, 532, 663, 744, 859, 71, 176, 260, 379, 437, 517, 643, 782, 869, 87, 139, 202, 399, 439, 514, 672, 702, 855, 33, 160, 299, 389, 451, 544, 674, 727, 828, 61, 168, 208, 343, 480, 540, 617, 781, 808, 90, 180, 233, 309, 428, 586, 629, 772, 897, 55, 175, 216, 348, 476, 518, 613, 731, 886, 60, 137, 290, 383, 443, 573, 637, 711, 900, 96, 198, 211, 308, 456, 552, 610, 706, 852, 68, 144, 214, 317, 431, 563, 692, 733, 806, 77, 189, 203, 315, 471, 507, 669, 789, 832, 9, 135, 279, 361, 473, 536, 621, 743, 858, 42, 147, 221, 352, 481, 553, 698, 762, 834, 64, 115, 287, 391, 423, 528, 604, 763, 835, 85, 196, 256, 390, 453, 516, 614, 752, 818, 54, 182, 280, 359, 442, 588, 689, 783, 837, 2, 140, 245, 320, 429, 541, 609, 726, 805, 23, 170, 272, 313, 402, 559, 656, 764, 839, 91, 104, 269, 324, 413, 538, 642, 737, 833, 65, 181, 257, 344, 414, 505, 619, 758, 857, 48, 132, 224, 367, 487, 523, 638, 742, 826, 70, 173, 271, 303, 444, 589, 658, 779, 804, 80, 118, 276, 338, 460, 570, 644, 794, 895, 49, 171, 265, 333, 454, 577, 677, 773, 817, 7, 120, 281, 360, 438, 572, 694, 768, 807, 88, 193, 218, 372, 482, 584, 635, 753, 873, 45, 121, 229, 381, 475, 510, 676, 771, 866, 14, 174, 236, 364, 450, 534, 645, 741, 844, 97, 128, 283, 304, 436, 562, 695, 751, 841, 26, 111, 243, 311, 463, 561, 653, 729, 883, 52, 112, 294, 302, 412, 506, 654, 797, 851, 4, 158, 234, 384, 410, 569, 648, 721, 861, 32, 150, 253, 371, 409, 512, 616, 780, 870, 34, 146, 277, 374, 493, 579, 699, 765, 893, 99, 125, 266, 380, 430, 504, 631, 798, 802, 93, 102, 206, 363, 422, 587, 659, 792, 842, 56, 152, 286, 375, 445, 513, 630, 715, 882, 46, 113, 250, 306, 498, 524, 627, 730, 812, 47, 185, 263, 373, 404, 525, 679, 716, 850, 84, 108, 242, 385, 419, 600, 691, 760, 877, 79, 129, 217, 318, 486, 546, 655, 734, 840, 39, 156, 282, 365, 494, 591, 640, 799, 815, 17, 114, 251, 312, 468, 574, 615, 756, 838, 38, 143, 225, 369, 452, 556, 700, 790, 880, 5, 151, 212, 368, 426, 502, 649, 736, 809, 44, 138, 278, 355, 433, 526, 641, 724, 831, 98, 126, 237, 395, 489, 529, 693, 713, 889, 86, 109, 273, 334, 421, 537, 608, 755, 853, 92, 199, 262, 354, 479, 527, 647, 725, 803, 41, 184, 209, 328, 446, 547, 605, 719, 814, 89, 107, 259, 370, 411, 567, 664, 703, 891, 6, 131, 222, 377, 495, 545, 639, 708, 845, 1, 106, 295, 314, 401, 557, 667, 747, 864, 76, 161, 255, 396, 406, 520, 686, 738, 879, 37, 164, 298, 393, 484, 543, 696, 739, 884, 30, 133, 219, 356, 440, 580, 626, 745, 874, 62, 165, 293, 316, 424, 571, 662, 728, 892]
train dataset:
  MultiFrameModalDataset
  └ [1] StumpFeatModalDatasetWithMemoization{UInt16, DecisionTree.ModalLogic.Interval2D}	1715.14 MBs
     ├ fmd	202.31 MBs	(shape (3, 4, 3, 4, 720, 1020))
     ├ fmd_m	1512.82 MBs	(shape (3, 4, 3, 4, 720, 1020, 4), 423014400 nothings)
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameModalDataset
  └ [1] OntologicalDataset{UInt16, 2, DecisionTree.ModalLogic.Interval2D, 4}	2.1 MBs
     ├ domain shape	(3, 3, 102, 180)
     ├ 4 relations	DecisionTree.ModalLogic._TopoRel[⟨DR⟩, ⟨PO⟩, ⟨PP⟩, ⟨P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 23/07/2021 07:10:36 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (321+399=720 samples) on frame 1 with decision: {1} ⟨P̅P̅⟩ (A9 ⫺₆₀ 5905), purity -1.517423304621683
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
┌ LogLevel(-500):  Branch (160+161=321 samples) on frame 1 with decision: {1} A71 ⫺ 6197, purity -0.7099233336581583
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:331
