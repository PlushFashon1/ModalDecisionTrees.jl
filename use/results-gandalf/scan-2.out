  Activating environment at `~/DecisionTree.jl/Project.toml`
 1 trees
 0 forests 
Loading history file "./results-gandalf/progress.json"...
Iteration "Pavia,(1,false,"o_None","TestOpGeq"),1": skipping
Iteration "Pavia,(3,:flattened,"o_None","TestOpGeq"),1": skipping
Iteration "Pavia,(3,:averaged,"o_None","TestOpGeq"),1": skipping
Iteration "Pavia,(3,false,"o_RCC8","TestOpAll"),1"...

executing run 'Pavia,(3,false,"o_RCC8","TestOpAll"),1'...
dataset type = Tuple{Array{Int64, 4}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (ontology = Ontology{DecisionTree.ModalLogic.Interval2D}(RCC8), test_operators = TestOperator[⫺, ⫹, ⫺₉₀, ⫹₉₀, ⫺₈₀, ⫹₈₀, ⫺₇₀, ⫹₇₀, ⫺₆₀, ⫹₆₀])
dataset_slice   = [10, 122, 267, 386, 478, 583, 633, 707, 810, 3, 166, 252, 331, 497, 503, 670, 754, 819, 27, 190, 228, 353, 403, 521, 606, 735, 887, 63, 130, 246, 366, 462, 566, 687, 712, 872, 50, 195, 235, 350, 474, 501, 671, 769, 829, 57, 186, 201, 397, 447, 511, 660, 778, 843, 36, 116, 254, 326, 457, 542, 622, 766, 867, 21, 123, 248, 340, 469, 593, 666, 720, 868, 75, 157, 258, 336, 417, 509, 634, 704, 854, 78, 183, 238, 394, 408, 596, 624, 759, 862, 35, 154, 264, 376, 477, 599, 697, 748, 865, 66, 191, 274, 307, 448, 548, 602, 787, 823, 20, 167, 215, 392, 467, 549, 650, 795, 875, 67, 188, 239, 310, 434, 568, 682, 775, 890, 25, 141, 231, 330, 490, 594, 678, 732, 871, 24, 117, 270, 400, 492, 592, 668, 750, 816, 82, 194, 226, 387, 455, 560, 690, 793, 825, 74, 197, 289, 378, 441, 565, 683, 788, 896, 69, 105, 227, 341, 461, 539, 636, 705, 822, 81, 187, 300, 388, 427, 585, 646, 776, 811, 28, 159, 210, 342, 405, 531, 675, 710, 856, 15, 179, 244, 323, 420, 554, 618, 714, 830, 59, 163, 223, 332, 416, 558, 661, 740, 878, 29, 124, 268, 351, 459, 564, 601, 786, 820, 18, 153, 232, 329, 500, 582, 673, 767, 847, 31, 162, 220, 319, 418, 535, 685, 791, 821, 43, 177, 288, 346, 465, 576, 681, 770, 876, 40, 155, 249, 325, 470, 575, 625, 784, 860, 12, 149, 205, 327, 496, 578, 651, 718, 848, 83, 192, 275, 305, 464, 597, 665, 774, 836, 100, 145, 247, 398, 415, 508, 688, 746, 888, 94, 178, 261, 322, 488, 519, 607, 717, 824, 16, 110, 291, 347, 485, 551, 680, 722, 849, 51, 119, 204, 337, 466, 590, 612, 796, 894, 73, 148, 297, 362, 449, 522, 611, 749, 885, 19, 103, 292, 358, 425, 533, 623, 800, 801, 8, 142, 213, 382, 499, 530, 684, 785, 846, 11, 134, 207, 345, 472, 598, 628, 761, 827, 95, 136, 296, 357, 407, 515, 652, 701, 881, 58, 169, 284, 339, 458, 595, 632, 709, 899, 72, 101, 241, 321, 491, 581, 603, 777, 898, 13, 127, 230, 349, 432, 550, 620, 723, 863, 53, 172, 240, 301, 435, 555, 657, 757, 813, 22, 200, 285, 335, 483, 532, 663, 744, 859, 71, 176, 260, 379, 437, 517, 643, 782, 869, 87, 139, 202, 399, 439, 514, 672, 702, 855, 33, 160, 299, 389, 451, 544, 674, 727, 828, 61, 168, 208, 343, 480, 540, 617, 781, 808, 90, 180, 233, 309, 428, 586, 629, 772, 897, 55, 175, 216, 348, 476, 518, 613, 731, 886, 60, 137, 290, 383, 443, 573, 637, 711, 900, 96, 198, 211, 308, 456, 552, 610, 706, 852, 68, 144, 214, 317, 431, 563, 692, 733, 806, 77, 189, 203, 315, 471, 507, 669, 789, 832, 9, 135, 279, 361, 473, 536, 621, 743, 858, 42, 147, 221, 352, 481, 553, 698, 762, 834, 64, 115, 287, 391, 423, 528, 604, 763, 835, 85, 196, 256, 390, 453, 516, 614, 752, 818, 54, 182, 280, 359, 442, 588, 689, 783, 837, 2, 140, 245, 320, 429, 541, 609, 726, 805, 23, 170, 272, 313, 402, 559, 656, 764, 839, 91, 104, 269, 324, 413, 538, 642, 737, 833, 65, 181, 257, 344, 414, 505, 619, 758, 857, 48, 132, 224, 367, 487, 523, 638, 742, 826, 70, 173, 271, 303, 444, 589, 658, 779, 804, 80, 118, 276, 338, 460, 570, 644, 794, 895, 49, 171, 265, 333, 454, 577, 677, 773, 817, 7, 120, 281, 360, 438, 572, 694, 768, 807, 88, 193, 218, 372, 482, 584, 635, 753, 873, 45, 121, 229, 381, 475, 510, 676, 771, 866, 14, 174, 236, 364, 450, 534, 645, 741, 844, 97, 128, 283, 304, 436, 562, 695, 751, 841, 26, 111, 243, 311, 463, 561, 653, 729, 883, 52, 112, 294, 302, 412, 506, 654, 797, 851, 4, 158, 234, 384, 410, 569, 648, 721, 861, 32, 150, 253, 371, 409, 512, 616, 780, 870, 34, 146, 277, 374, 493, 579, 699, 765, 893, 99, 125, 266, 380, 430, 504, 631, 798, 802, 93, 102, 206, 363, 422, 587, 659, 792, 842, 56, 152, 286, 375, 445, 513, 630, 715, 882, 46, 113, 250, 306, 498, 524, 627, 730, 812, 47, 185, 263, 373, 404, 525, 679, 716, 850, 84, 108, 242, 385, 419, 600, 691, 760, 877, 79, 129, 217, 318, 486, 546, 655, 734, 840, 39, 156, 282, 365, 494, 591, 640, 799, 815, 17, 114, 251, 312, 468, 574, 615, 756, 838, 38, 143, 225, 369, 452, 556, 700, 790, 880, 5, 151, 212, 368, 426, 502, 649, 736, 809, 44, 138, 278, 355, 433, 526, 641, 724, 831, 98, 126, 237, 395, 489, 529, 693, 713, 889, 86, 109, 273, 334, 421, 537, 608, 755, 853, 92, 199, 262, 354, 479, 527, 647, 725, 803, 41, 184, 209, 328, 446, 547, 605, 719, 814, 89, 107, 259, 370, 411, 567, 664, 703, 891, 6, 131, 222, 377, 495, 545, 639, 708, 845, 1, 106, 295, 314, 401, 557, 667, 747, 864, 76, 161, 255, 396, 406, 520, 686, 738, 879, 37, 164, 298, 393, 484, 543, 696, 739, 884, 30, 133, 219, 356, 440, 580, 626, 745, 874, 62, 165, 293, 316, 424, 571, 662, 728, 892]

Frame 1/1
● [ 27/06/2021 13:53:42 ] Loading stump_fmd from file "./results-gandalf/gammas/stump_fmd_b8a70cdeef933e871582734ac64b65caf745228a274a53b6f994239f3599ffb7.jld"...
X_train:
  MultiFrameFeatModalDataset
  └ [1] StumpFeatModalDataset{Float32, DecisionTree.ModalLogic.Interval2D}	16352.17 MBs
     ├ fmd	509.89 MBs	(shape (3, 4, 3, 4, 900, 1030))
     ├ fmd_m	15842.29 MBs	(shape (900, 1030, 7))
     └ fmd_g	0.0 MBs		−

train dataset:
  MultiFrameFeatModalDataset
  └ [1] StumpFeatModalDataset{Float32, DecisionTree.ModalLogic.Interval2D}	13081.84 MBs
     ├ fmd	408.01 MBs	(shape (3, 4, 3, 4, 720, 1030))
     ├ fmd_m	12673.83 MBs	(shape (720, 1030, 7))
     └ fmd_g	0.0 MBs		−

test  dataset:
  MultiFrameOntologicalDataset
  └ [1] OntologicalDataset{Float32, 2, DecisionTree.ModalLogic.Interval2D, 4}	0.64 MBs
     ├ domain shape	(3, 3, 103, 180)
     ├ 7 relations	DecisionTree.ModalLogic._TopoRelRCC8[⟨DC⟩, ⟨EC⟩, ⟨PO⟩, ⟨TPP⟩, ⟨T̅P̅P̅⟩, ⟨NTPP⟩, ⟨N̅T̅P̅P̅⟩]
     └ max_channel_size	(3, 3)

● [ 27/06/2021 15:18:10 ] Computing tree 1 / 1...
┌ LogLevel(-500):  Branch (462+258=720 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A103 ⫹₈₀ 1659.0), purity -1.6040117817824031
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (227+235=462 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A5 ⫺₇₀ 1131.0), purity -1.1715944754924754
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (133+94=227 samples) on frame 1 with decision: {1} ⟨EC⟩ (A66 ⫹ 545.0), purity -0.5803770560590781
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (108+25=133 samples) on frame 1 with decision: {1} ⟨EC⟩ (A28 ⫺ 1302.0), purity -0.5426378615621822
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (52+56=108 samples) on frame 1 with decision: {1} ⟨N̅T̅P̅P̅⟩ (A103 ⫺ 2242.0), purity -0.47374592241083796
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (25+27=52 samples) on frame 1 with decision: {1} ⟨EC⟩ (A83 ⫺ 2215.0), purity -0.31414336288158723
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (10+15=25 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A85 ⫺₈₀ 1922.0), purity -0.13003318935657937
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (6+4=10 samples) on frame 1 with decision: {1} A2 ⫺ 651.0, purity -0.22493405784752318
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (24+32=56 samples) on frame 1 with decision: {1} A77 ⫺₈₀ 2247.0, purity -0.24100077626520364
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (9+15=24 samples) on frame 1 with decision: {1} A82 ⫹ 2673.0, purity -0.23869281311055487
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (4+5=9 samples) on frame 1 with decision: {1} A5 ⫺ 416.0, purity -0.24992673094169257
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (24+70=94 samples) on frame 1 with decision: {1} A73 ⫹ 1727.0, purity -0.17341104663613427
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (14+10=24 samples) on frame 1 with decision: {1} ⟨DC⟩ (A25 ⫺ 696.0), purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (92+143=235 samples) on frame 1 with decision: {1} A35 ⫹₈₀ 2112.0, purity -0.5909185446706625
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (12+80=92 samples) on frame 1 with decision: {1} A2 ⫺₇₀ 2177.0, purity -0.0
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (110+33=143 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A24 ⫺₈₀ 1689.0), purity -0.5582801432139433
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (90+20=110 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A44 ⫺₈₀ 1955.0), purity -0.5653008894385779
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (66+24=90 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A83 ⫺₆₀ 1987.0), purity -0.5327309731015852
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (54+12=66 samples) on frame 1 with decision: {1} ⟨PO⟩ (A2 ⫹₆₀ 1052.0), purity -0.5203816595753591
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (33+21=54 samples) on frame 1 with decision: {1} ⟨PO⟩ (A63 ⫺ 1926.0), purity -0.41654826499292347
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (21+12=33 samples) on frame 1 with decision: {1} ⟨PO⟩ (A84 ⫺ 1896.0), purity -0.2001314008154434
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (17+4=21 samples) on frame 1 with decision: {1} A85 ⫹ 1785.0, purity -0.13202803439237054
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (178+80=258 samples) on frame 1 with decision: {1} A9 ⫹₇₀ 611.0, purity -0.6558392200079038
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (80+98=178 samples) on frame 1 with decision: {1} ⟨PO⟩ (A16 ⫹₆₀ 1219.0), purity -0.49973104348243885
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (5+75=80 samples) on frame 1 with decision: {1} A94 ⫹₈₀ 1665.0, purity -0.1084481244145111
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (21+77=98 samples) on frame 1 with decision: {1} ⟨EC⟩ (A76 ⫹ 1361.0), purity -0.34322296691553433
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
┌ LogLevel(-500):  Branch (15+6=21 samples) on frame 1 with decision: {1} ⟨T̅P̅P̅⟩ (A10 ⫺ 1137.0), purity 6.344131569286608e-17
└ @ DecisionTree.treeclassifier ~/DecisionTree.jl/src/modal-classification/tree.jl:322
1049.010473 seconds (8.19 G allocations: 185.445 GiB, 28.31% gc time, 1.57% compilation time)
Train tree:
Decision Tree
Leaves: 28
Tot nodes: 55
Height: 10
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A103 ⫹₈₀ 1659.0)
✔ {1} A9 ⫹₇₀ 611.0
│✔ Shadows : 80/80 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A16 ⫹₆₀ 1219.0)
│ ✔ {1} ⟨EC⟩ (A76 ⫹ 1361.0)
│ │✔ Asphalt : 71/77 (conf: 0.922077922077922)
│ │✘ {1} ⟨T̅P̅P̅⟩ (A10 ⫺ 1137.0)
│ │ ✔ Asphalt : 6/6 (conf: 1.0)
│ │ ✘ Gravel : 15/15 (conf: 1.0)
│ ✘ {1} A94 ⫹₈₀ 1665.0
│  ✔ Bitumen : 74/75 (conf: 0.9866666666666667)
│  ✘ Gravel : 3/5 (conf: 0.6)
✘ {1} ⟨T̅P̅P̅⟩ (A5 ⫺₇₀ 1131.0)
 ✔ {1} A35 ⫹₈₀ 2112.0
 │✔ {1} ⟨T̅P̅P̅⟩ (A24 ⫺₈₀ 1689.0)
 ││✔ Self-Blocking Bricks : 32/33 (conf: 0.9696969696969697)
 ││✘ {1} ⟨T̅P̅P̅⟩ (A44 ⫺₈₀ 1955.0)
 ││ ✔ Gravel : 20/20 (conf: 1.0)
 ││ ✘ {1} ⟨T̅P̅P̅⟩ (A83 ⫺₆₀ 1987.0)
 ││  ✔ Self-Blocking Bricks : 23/24 (conf: 0.9583333333333334)
 ││  ✘ {1} ⟨PO⟩ (A2 ⫹₆₀ 1052.0)
 ││   ✔ Self-Blocking Bricks : 11/12 (conf: 0.9166666666666666)
 ││   ✘ {1} ⟨PO⟩ (A63 ⫺ 1926.0)
 ││    ✔ Gravel : 21/21 (conf: 1.0)
 ││    ✘ {1} ⟨PO⟩ (A84 ⫺ 1896.0)
 ││     ✔ Self-Blocking Bricks : 12/12 (conf: 1.0)
 ││     ✘ {1} A85 ⫹ 1785.0
 ││      ✔ Self-Blocking Bricks : 2/4 (conf: 0.5)
 ││      ✘ Gravel : 17/17 (conf: 1.0)
 │✘ {1} A2 ⫺₇₀ 2177.0
 │ ✔ Painted metal sheets : 80/80 (conf: 1.0)
 │ ✘ Bare Soil : 12/12 (conf: 1.0)
 ✘ {1} ⟨EC⟩ (A66 ⫹ 545.0)
  ✔ {1} A73 ⫹ 1727.0
  │✔ Trees : 70/70 (conf: 1.0)
  │✘ {1} ⟨DC⟩ (A25 ⫺ 696.0)
  │ ✔ Trees : 10/10 (conf: 1.0)
  │ ✘ Meadows : 14/14 (conf: 1.0)
  ✘ {1} ⟨EC⟩ (A28 ⫺ 1302.0)
   ✔ Bare Soil : 25/25 (conf: 1.0)
   ✘ {1} ⟨N̅T̅P̅P̅⟩ (A103 ⫺ 2242.0)
    ✔ {1} A77 ⫺₈₀ 2247.0
    │✔ Meadows : 32/32 (conf: 1.0)
    │✘ {1} A82 ⫹ 2673.0
    │ ✔ Meadows : 15/15 (conf: 1.0)
    │ ✘ {1} A5 ⫺ 416.0
    │  ✔ Bare Soil : 5/5 (conf: 1.0)
    │  ✘ Meadows : 3/4 (conf: 0.75)
    ✘ {1} ⟨EC⟩ (A83 ⫺ 2215.0)
     ✔ Bare Soil : 27/27 (conf: 1.0)
     ✘ {1} ⟨T̅P̅P̅⟩ (A85 ⫺₈₀ 1922.0)
      ✔ Meadows : 15/15 (conf: 1.0)
      ✘ {1} A2 ⫺ 651.0
       ✔ Bare Soil : 3/4 (conf: 0.75)
       ✘ Bare Soil : 6/6 (conf: 1.0)
● [ 27/06/2021 15:35:41 ] Saving tree to file ./results-gandalf/trees/tree_4d9f552cd5713b4bd30c6ca776081cf914133f3279d1639653f1d0b562400ab2.jld...
Test tree:
Decision Tree
Leaves: 28
Tot nodes: 55
Height: 10
Modal height:  8
worldTypes: DataType[DecisionTree.ModalLogic.Interval2D]
initConditions: [DecisionTree._startAtCenter()]
{1} ⟨T̅P̅P̅⟩ (A103 ⫹₈₀ 1659.0)
✔ {1} A9 ⫹₇₀ 611.0
│✔ Shadows : 20/20 (conf: 1.0)
│✘ {1} ⟨PO⟩ (A16 ⫹₆₀ 1219.0)
│ ✔ {1} ⟨EC⟩ (A76 ⫹ 1361.0)
│ │✔ Asphalt : 18/23 (conf: 0.782608695652174)
│ │✘ {1} ⟨T̅P̅P̅⟩ (A10 ⫺ 1137.0)
│ │ ✔ Asphalt : 0/1 (conf: 0.0)
│ │ ✘ Gravel : 2/6 (conf: 0.3333333333333333)
│ ✘ {1} A94 ⫹₈₀ 1665.0
│  ✔ Bitumen : 12/13 (conf: 0.9230769230769231)
│  ✘ Gravel : 0/0 (conf: NaN)
✘ {1} ⟨T̅P̅P̅⟩ (A5 ⫺₇₀ 1131.0)
 ✔ {1} A35 ⫹₈₀ 2112.0
 │✔ {1} ⟨T̅P̅P̅⟩ (A24 ⫺₈₀ 1689.0)
 ││✔ Self-Blocking Bricks : 4/7 (conf: 0.5714285714285714)
 ││✘ {1} ⟨T̅P̅P̅⟩ (A44 ⫺₈₀ 1955.0)
 ││ ✔ Gravel : 6/7 (conf: 0.8571428571428571)
 ││ ✘ {1} ⟨T̅P̅P̅⟩ (A83 ⫺₆₀ 1987.0)
 ││  ✔ Self-Blocking Bricks : 3/5 (conf: 0.6)
 ││  ✘ {1} ⟨PO⟩ (A2 ⫹₆₀ 1052.0)
 ││   ✔ Self-Blocking Bricks : 7/10 (conf: 0.7)
 ││   ✘ {1} ⟨PO⟩ (A63 ⫺ 1926.0)
 ││    ✔ Gravel : 1/3 (conf: 0.3333333333333333)
 ││    ✘ {1} ⟨PO⟩ (A84 ⫺ 1896.0)
 ││     ✔ Self-Blocking Bricks : 2/2 (conf: 1.0)
 ││     ✘ {1} A85 ⫹ 1785.0
 ││      ✔ Self-Blocking Bricks : 0/0 (conf: NaN)
 ││      ✘ Gravel : 2/2 (conf: 1.0)
 │✘ {1} A2 ⫺₇₀ 2177.0
 │ ✔ Painted metal sheets : 20/21 (conf: 0.9523809523809523)
 │ ✘ Bare Soil : 2/3 (conf: 0.6666666666666666)
 ✘ {1} ⟨EC⟩ (A66 ⫹ 545.0)
  ✔ {1} A73 ⫹ 1727.0
  │✔ Trees : 19/19 (conf: 1.0)
  │✘ {1} ⟨DC⟩ (A25 ⫺ 696.0)
  │ ✔ Trees : 1/1 (conf: 1.0)
  │ ✘ Meadows : 5/5 (conf: 1.0)
  ✘ {1} ⟨EC⟩ (A28 ⫺ 1302.0)
   ✔ Bare Soil : 3/6 (conf: 0.5)
   ✘ {1} ⟨N̅T̅P̅P̅⟩ (A103 ⫺ 2242.0)
    ✔ {1} A77 ⫺₈₀ 2247.0
    │✔ Meadows : 4/5 (conf: 0.8)
    │✘ {1} A82 ⫹ 2673.0
    │ ✔ Meadows : 5/5 (conf: 1.0)
    │ ✘ {1} A5 ⫺ 416.0
    │  ✔ Bare Soil : 0/0 (conf: NaN)
    │  ✘ Meadows : 1/2 (conf: 0.5)
    ✘ {1} ⟨EC⟩ (A83 ⫺ 2215.0)
     ✔ Bare Soil : 7/8 (conf: 0.875)
     ✘ {1} ⟨T̅P̅P̅⟩ (A85 ⫺₈₀ 1922.0)
      ✔ Meadows : 3/3 (conf: 1.0)
      ✘ {1} A2 ⫺ 651.0
       ✔ Bare Soil : 1/1 (conf: 1.0)
       ✘ Bare Soil : 2/2 (conf: 1.0)
 test size = [(3, 3, 103, 180)]
 Purity threshold 1.0
RESULT:	Pavia,(3,false,"o_RCC8","TestOpAll"),1	(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)	1.0	|	83.33%	90.0%	75.0%	60.0%	55.0%	90.0%	100.0%	80.0%	100.0%	100.0%	75.0%	75.0%	92.31%	61.11%	90.0%	95.24%	66.67%	100.0%	100.0%	||	81.25%	[81.82, 75.0, 72.73, 57.89, 90.0, 97.56, 72.73, 100.0, 100.0]%	
  accuracy: 83.33% kappa: 81.25% 
 18  0  1  0  0  0  1  0  0	90.0%		Asphalt
  0 15  0  1  2  1  1  0  0	75.0%		Bare Soil
  4  0 12  4  0  0  0  0  0	60.0%		Bitumen
  2  1  0 11  0  0  6  0  0	55.0%		Gravel
  0  2  0  0 18  0  0  0  0	90.0%		Meadows
  0  0  0  0  0 20  0  0  0	100.0%		Painted metal sheets
  0  2  0  2  0  0 16  0  0	80.0%		Self-Blocking Bricks
  0  0  0  0  0  0  0 20  0	100.0%		Shadows
  0  0  0  0  0  0  0  0 20	100.0%		Trees

overall_acc:	0.8333333333333334
κ =		0.8125000000000001
sensitivities:	[0.9, 0.75, 0.6, 0.55, 0.9, 1.0, 0.8, 1.0, 1.0]
specificities:	[0.9625, 0.96875, 0.99375, 0.95625, 0.9875, 0.99375, 0.95, 1.0, 1.0]
PPVs:		[0.75, 0.75, 0.9230769230769231, 0.6111111111111112, 0.9, 0.9523809523809523, 0.6666666666666666, 1.0, 1.0]
NPVs:		[0.9871794871794872, 0.96875, 0.9520958083832335, 0.9444444444444444, 0.9875, 1.0, 0.9743589743589743, 1.0, 1.0]
F1s:		[0.8181818181818182, 0.75, 0.7272727272727273, 0.5789473684210527, 0.9, 0.975609756097561, 0.7272727272727273, 1.0, 1.0]
accuracies:	[0.9555555555555556, 0.9444444444444444, 0.95, 0.9111111111111111, 0.9777777777777777, 0.9944444444444445, 0.9333333333333333, 1.0, 1.0]
mean_accuracy:	0.9629629629629629
Iteration "Pavia,(3,false,"o_RCC5","TestOpAll"),1"...

executing run 'Pavia,(3,false,"o_RCC5","TestOpAll"),1'...
dataset type = Tuple{Array{Int64, 4}, Vector{String}}

train_seed   = 1
modal_args   = (initConditions = DecisionTree._startAtCenter(), useRelationGlob = false)
tree_args    = Any[(loss_function = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)]
forest_args  = Any[]
forest_runs  = 5

split_threshold   = 0.8
data_modal_args   = (ontology = Ontology{DecisionTree.ModalLogic.Interval2D}(RCC5), test_operators = TestOperator[⫺, ⫹, ⫺₉₀, ⫹₉₀, ⫺₈₀, ⫹₈₀, ⫺₇₀, ⫹₇₀, ⫺₆₀, ⫹₆₀])
dataset_slice   = [10, 122, 267, 386, 478, 583, 633, 707, 810, 3, 166, 252, 331, 497, 503, 670, 754, 819, 27, 190, 228, 353, 403, 521, 606, 735, 887, 63, 130, 246, 366, 462, 566, 687, 712, 872, 50, 195, 235, 350, 474, 501, 671, 769, 829, 57, 186, 201, 397, 447, 511, 660, 778, 843, 36, 116, 254, 326, 457, 542, 622, 766, 867, 21, 123, 248, 340, 469, 593, 666, 720, 868, 75, 157, 258, 336, 417, 509, 634, 704, 854, 78, 183, 238, 394, 408, 596, 624, 759, 862, 35, 154, 264, 376, 477, 599, 697, 748, 865, 66, 191, 274, 307, 448, 548, 602, 787, 823, 20, 167, 215, 392, 467, 549, 650, 795, 875, 67, 188, 239, 310, 434, 568, 682, 775, 890, 25, 141, 231, 330, 490, 594, 678, 732, 871, 24, 117, 270, 400, 492, 592, 668, 750, 816, 82, 194, 226, 387, 455, 560, 690, 793, 825, 74, 197, 289, 378, 441, 565, 683, 788, 896, 69, 105, 227, 341, 461, 539, 636, 705, 822, 81, 187, 300, 388, 427, 585, 646, 776, 811, 28, 159, 210, 342, 405, 531, 675, 710, 856, 15, 179, 244, 323, 420, 554, 618, 714, 830, 59, 163, 223, 332, 416, 558, 661, 740, 878, 29, 124, 268, 351, 459, 564, 601, 786, 820, 18, 153, 232, 329, 500, 582, 673, 767, 847, 31, 162, 220, 319, 418, 535, 685, 791, 821, 43, 177, 288, 346, 465, 576, 681, 770, 876, 40, 155, 249, 325, 470, 575, 625, 784, 860, 12, 149, 205, 327, 496, 578, 651, 718, 848, 83, 192, 275, 305, 464, 597, 665, 774, 836, 100, 145, 247, 398, 415, 508, 688, 746, 888, 94, 178, 261, 322, 488, 519, 607, 717, 824, 16, 110, 291, 347, 485, 551, 680, 722, 849, 51, 119, 204, 337, 466, 590, 612, 796, 894, 73, 148, 297, 362, 449, 522, 611, 749, 885, 19, 103, 292, 358, 425, 533, 623, 800, 801, 8, 142, 213, 382, 499, 530, 684, 785, 846, 11, 134, 207, 345, 472, 598, 628, 761, 827, 95, 136, 296, 357, 407, 515, 652, 701, 881, 58, 169, 284, 339, 458, 595, 632, 709, 899, 72, 101, 241, 321, 491, 581, 603, 777, 898, 13, 127, 230, 349, 432, 550, 620, 723, 863, 53, 172, 240, 301, 435, 555, 657, 757, 813, 22, 200, 285, 335, 483, 532, 663, 744, 859, 71, 176, 260, 379, 437, 517, 643, 782, 869, 87, 139, 202, 399, 439, 514, 672, 702, 855, 33, 160, 299, 389, 451, 544, 674, 727, 828, 61, 168, 208, 343, 480, 540, 617, 781, 808, 90, 180, 233, 309, 428, 586, 629, 772, 897, 55, 175, 216, 348, 476, 518, 613, 731, 886, 60, 137, 290, 383, 443, 573, 637, 711, 900, 96, 198, 211, 308, 456, 552, 610, 706, 852, 68, 144, 214, 317, 431, 563, 692, 733, 806, 77, 189, 203, 315, 471, 507, 669, 789, 832, 9, 135, 279, 361, 473, 536, 621, 743, 858, 42, 147, 221, 352, 481, 553, 698, 762, 834, 64, 115, 287, 391, 423, 528, 604, 763, 835, 85, 196, 256, 390, 453, 516, 614, 752, 818, 54, 182, 280, 359, 442, 588, 689, 783, 837, 2, 140, 245, 320, 429, 541, 609, 726, 805, 23, 170, 272, 313, 402, 559, 656, 764, 839, 91, 104, 269, 324, 413, 538, 642, 737, 833, 65, 181, 257, 344, 414, 505, 619, 758, 857, 48, 132, 224, 367, 487, 523, 638, 742, 826, 70, 173, 271, 303, 444, 589, 658, 779, 804, 80, 118, 276, 338, 460, 570, 644, 794, 895, 49, 171, 265, 333, 454, 577, 677, 773, 817, 7, 120, 281, 360, 438, 572, 694, 768, 807, 88, 193, 218, 372, 482, 584, 635, 753, 873, 45, 121, 229, 381, 475, 510, 676, 771, 866, 14, 174, 236, 364, 450, 534, 645, 741, 844, 97, 128, 283, 304, 436, 562, 695, 751, 841, 26, 111, 243, 311, 463, 561, 653, 729, 883, 52, 112, 294, 302, 412, 506, 654, 797, 851, 4, 158, 234, 384, 410, 569, 648, 721, 861, 32, 150, 253, 371, 409, 512, 616, 780, 870, 34, 146, 277, 374, 493, 579, 699, 765, 893, 99, 125, 266, 380, 430, 504, 631, 798, 802, 93, 102, 206, 363, 422, 587, 659, 792, 842, 56, 152, 286, 375, 445, 513, 630, 715, 882, 46, 113, 250, 306, 498, 524, 627, 730, 812, 47, 185, 263, 373, 404, 525, 679, 716, 850, 84, 108, 242, 385, 419, 600, 691, 760, 877, 79, 129, 217, 318, 486, 546, 655, 734, 840, 39, 156, 282, 365, 494, 591, 640, 799, 815, 17, 114, 251, 312, 468, 574, 615, 756, 838, 38, 143, 225, 369, 452, 556, 700, 790, 880, 5, 151, 212, 368, 426, 502, 649, 736, 809, 44, 138, 278, 355, 433, 526, 641, 724, 831, 98, 126, 237, 395, 489, 529, 693, 713, 889, 86, 109, 273, 334, 421, 537, 608, 755, 853, 92, 199, 262, 354, 479, 527, 647, 725, 803, 41, 184, 209, 328, 446, 547, 605, 719, 814, 89, 107, 259, 370, 411, 567, 664, 703, 891, 6, 131, 222, 377, 495, 545, 639, 708, 845, 1, 106, 295, 314, 401, 557, 667, 747, 864, 76, 161, 255, 396, 406, 520, 686, 738, 879, 37, 164, 298, 393, 484, 543, 696, 739, 884, 30, 133, 219, 356, 440, 580, 626, 745, 874, 62, 165, 293, 316, 424, 571, 662, 728, 892]

Frame 1/1
● [ 27/06/2021 15:35:58 ] Computing stump_fmd for 0a1d1c328fe50e8cca15b6968228610caba41cafd5a85819f7b0c2038a82f795...
┌ LogLevel(-500): OntologicalDataset -> FeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:12
┌ LogLevel(-500): Instance 1/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 361/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 723/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 180/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): Instance 542/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:25
┌ LogLevel(-500): FeatModalDataset -> StumpFeatModalDataset
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:358
┌ LogLevel(-500): Instance 1/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
┌ LogLevel(-500): Instance 361/900
└ @ DecisionTree.ModalLogic ~/DecisionTree.jl/src/ModalLogic/BuildStumpSupport.jl:401
